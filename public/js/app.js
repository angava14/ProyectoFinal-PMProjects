/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Router Page*/
	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _ComponentsLoginJsx = __webpack_require__(1);

	var _ComponentsLoginJsx2 = _interopRequireDefault(_ComponentsLoginJsx);

	var _ComponentsHomeJsx = __webpack_require__(558);

	var _ComponentsHomeJsx2 = _interopRequireDefault(_ComponentsHomeJsx);

	var _ComponentsRegistroJsx = __webpack_require__(576);

	var _ComponentsRegistroJsx2 = _interopRequireDefault(_ComponentsRegistroJsx);

	var _ComponentsPerfilJsx = __webpack_require__(600);

	var _ComponentsPerfilJsx2 = _interopRequireDefault(_ComponentsPerfilJsx);

	var _ComponentsUsuariosJsx = __webpack_require__(608);

	var _ComponentsUsuariosJsx2 = _interopRequireDefault(_ComponentsUsuariosJsx);

	var _ComponentsFormatosJsx = __webpack_require__(625);

	var _ComponentsFormatosJsx2 = _interopRequireDefault(_ComponentsFormatosJsx);

	var _ComponentsEditardocumentoJsx = __webpack_require__(635);

	var _ComponentsEditardocumentoJsx2 = _interopRequireDefault(_ComponentsEditardocumentoJsx);

	var _ComponentsEditartablaJsx = __webpack_require__(638);

	var _ComponentsEditartablaJsx2 = _interopRequireDefault(_ComponentsEditartablaJsx);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRouterDom = __webpack_require__(639);

	var Style = __webpack_require__(676);

	_reactDom2['default'].render(_react2['default'].createElement(
	  _reactRouterDom.BrowserRouter,
	  null,
	  _react2['default'].createElement(
	    'div',
	    null,
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/', component: _ComponentsHomeJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/login', component: _ComponentsLoginJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/perfil', component: _ComponentsPerfilJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/registro', component: _ComponentsRegistroJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/usuarios', component: _ComponentsUsuariosJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/formatos', component: _ComponentsFormatosJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/editardocumento', component: _ComponentsEditardocumentoJsx2['default'] }),
	    _react2['default'].createElement(_reactRouterDom.Route, { exact: true, path: '/editartabla', component: _ComponentsEditartablaJsx2['default'] })
	  )
	), document.getElementById('app'));

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "app.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _configJsx = __webpack_require__(2);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiCard = __webpack_require__(501);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	var React = __webpack_require__(241);
	var Nav = __webpack_require__(552);

	var card = {
	  display: 'flex',
	  'justifyContent': 'center',
	  padding: '0px',
	  'paddingTop': '16px'
	};

	var Login = (function (_React$Component) {
	  _inherits(Login, _React$Component);

	  function Login() {
	    _classCallCheck(this, Login);

	    _get(Object.getPrototypeOf(Login.prototype), 'constructor', this).call(this);

	    this.state = {
	      email: '',
	      password: '',
	      snackincorrecta: false,
	      snackemail: false
	    };
	    this.handleChange = this.handleChange.bind(this);
	    this.handleSubmit = this.handleSubmit.bind(this);
	    this.handleRequestClose = this.handleRequestClose.bind(this);
	  }

	  _createClass(Login, [{
	    key: 'handleSubmit',
	    value: function handleSubmit(e) {
	      var _this = this;

	      e.preventDefault();
	      var emailtemp = this.state.email;
	      var passwordtemp = this.state.password;
	      var redirect = this;
	      (0, _configJsx.login)(emailtemp, passwordtemp).then(function (userRecord) {
	        localStorage.setItem('idactivo', userRecord.uid);
	        redirect.props.history.push({ pathname: '/' });
	      })['catch'](function (error) {
	        // Handle Errors here.
	        var errorCode = error.code;
	        var errorMessage = error.message;

	        if (errorCode === 'auth/wrong-password') {
	          _this.setState({ snackincorrecta: true });
	        } else {
	          _this.setState({ snackemail: true });
	        }
	      });
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {

	      this.setState(_defineProperty({}, e.target.name, e.target.value));
	    }
	  }, {
	    key: 'handleRequestClose',
	    value: function handleRequestClose() {

	      this.setState({
	        snackincorrecta: false,
	        snackemail: false
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return React.createElement(
	        'section',
	        null,
	        React.createElement(Nav, { history: this.props.history }),
	        React.createElement(
	          _materialUiStylesMuiThemeProvider2['default'],
	          null,
	          React.createElement(
	            'div',
	            null,
	            React.createElement(
	              'form',
	              { className: 'cardloginregistro', onSubmit: this.handleSubmit },
	              React.createElement(
	                'div',
	                { className: 'login' },
	                React.createElement(
	                  _materialUiCard.Card,
	                  null,
	                  React.createElement(_materialUiCard.CardTitle, { style: card, titleStyle: card, title: 'Iniciar Sesión' }),
	                  React.createElement(
	                    _materialUiCard.CardActions,
	                    null,
	                    React.createElement(_materialUiTextField2['default'], {
	                      value: this.state.email, onChange: this.handleChange, name: 'email', type: 'email',
	                      floatingLabelText: 'Ingrese Correo Electrónico'
	                    }),
	                    React.createElement('br', null),
	                    React.createElement(_materialUiTextField2['default'], {
	                      value: this.state.password, onChange: this.handleChange, name: 'password', type: 'password',
	                      floatingLabelText: 'Ingrese Contraseña'
	                    }),
	                    React.createElement('br', null),
	                    React.createElement(
	                      'button',
	                      { className: 'botoncard' },
	                      'Aceptar'
	                    ),
	                    React.createElement('br', null)
	                  )
	                )
	              )
	            ),
	            React.createElement(_materialUiSnackbar2['default'], {
	              open: this.state.snackincorrecta,
	              message: 'Contraseña Incorrecta',
	              autoHideDuration: 2000,
	              onRequestClose: this.handleRequestClose
	            }),
	            React.createElement(_materialUiSnackbar2['default'], {
	              open: this.state.snackemail,
	              message: 'Credenciales Incorrectas',
	              autoHideDuration: 2000,
	              onRequestClose: this.handleRequestClose
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return Login;
	})(React.Component);

	exports['default'] = Login;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "login.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Firebase Functions Page*/
	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.auth = auth;
	exports.logout = logout;
	exports.login = login;
	exports.resetPassword = resetPassword;
	exports.saveUser = saveUser;
	exports.saveFotoDefault = saveFotoDefault;
	exports.saveUserEnOrg = saveUserEnOrg;
	exports.saveOrg = saveOrg;
	exports.savePort = savePort;
	exports.saveProy = saveProy;
	exports.saveDoc = saveDoc;
	exports.uploadImage = uploadImage;
	exports.updatepass = updatepass;
	exports.formatotabla = formatotabla;
	exports.getToken = getToken;
	exports.saveFormato = saveFormato;
	exports.CompAdd = CompAdd;
	exports.agregarnodo = agregarnodo;
	exports.saveTabla = saveTabla;
	exports.nodospropios = nodospropios;
	exports.guardarmatriz = guardarmatriz;
	exports.CrearDocumentoConFormato = CrearDocumentoConFormato;
	exports.CrearTablaConFormato = CrearTablaConFormato;
	exports.guardarmatrizdatos = guardarmatrizdatos;

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var config = {
	  apiKey: "AIzaSyCVdBLjFAKf_8oCItY0TDqaI9JKcG71R2I",
	  authDomain: "proyectofinal-a3139.firebaseapp.com",
	  databaseURL: "https://proyectofinal-a3139.firebaseio.com",
	  projectId: "proyectofinal-a3139",
	  storageBucket: "proyectofinal-a3139.appspot.com",
	  messagingSenderId: "76171043001"
	};
	firebase.initializeApp(config);

	var fire = firebase.storage();

	exports.fire = fire;
	var ref = firebase.database().ref();
	var firebaseAuth = firebase.auth;

	function auth(email, pw) {
	  return firebaseAuth().createUserWithEmailAndPassword(email, pw);
	}

	function logout() {
	  return firebaseAuth().signOut();
	}

	function login(email, pw) {
	  return firebaseAuth().signInWithEmailAndPassword(email, pw);
	}

	function resetPassword(email) {
	  return firebaseAuth().sendPasswordResetEmail(email);
	}

	function saveUser(user) {
	  return ref.child("usuarios/" + user.uid).set({
	    uid: user.uid,
	    correo: user.email,
	    nombre: user.name,
	    organizacion: user.org,
	    admin: user.admin,
	    password: user.password,
	    orgid: user.org
	  }).then(function () {
	    return user;
	  });
	}

	function saveFotoDefault(objeto) {
	  return ref.child('usuarios/' + objeto.uid + '/avatar').set({
	    link: objeto.link,
	    name: 'photo.jpg'
	  });
	}

	function saveUserEnOrg(orgid, user, name) {
	  return ref.child('organizacion/' + orgid + '/miembros').push({
	    uid: user.uid,
	    correo: user.email,
	    nombre: name
	  }).then(function () {
	    return user;
	  });
	}

	function saveOrg(object) {
	  var messagesRef = firebase.database().ref().child('organizacion');
	  var neworg = {
	    nombre: object.name,
	    descripcion: object.description
	  };

	  messagesRef.push(neworg);
	}

	function savePort(id, object) {
	  var messagesRef = firebase.database().ref().child('organizacion/' + id + "/portafolio");
	  var newport = {
	    nombre: object.name,
	    descripcion: object.description
	  };

	  messagesRef.push(newport);
	}

	function saveProy(id, idport, object) {
	  var messagesRef = firebase.database().ref().child('organizacion/' + id + "/portafolio/" + idport + '/proyecto');
	  var newport = {
	    nombre: object.name,
	    descripcion: object.description
	  };

	  messagesRef.push(newport);
	}

	function saveDoc(id, idport, idproy, object) {

	  var messagesRef = firebase.database().ref().child('organizacion/' + id + "/portafolio/" + idport + '/proyecto/' + idproy + "/documentos");
	  var newport = {
	    nombre: object.name,
	    descripcion: object.description,
	    formato: object.formato,
	    tipoformato: object.tipoformato
	  };

	  messagesRef.push(newport);
	  var ultimo = firebase.database().ref('organizacion/' + id + "/portafolio/" + idport + '/proyecto/' + idproy + "/documentos");
	  ultimo.limitToLast(1).on('child_added', function (childSnapshot) {
	    localStorage.setItem("keyagregada", childSnapshot.key);
	  });
	}

	function uploadImage(file, fileName, iduser) {

	  var fileName = file.name;
	  var storageRef = firebase.storage().ref(iduser + '/images/' + fileName);
	  var uploadTask = storageRef.put(file);

	  uploadTask.on('state_changed', function (snapshot) {}, function (error) {}, function () {
	    var downloadURL = uploadTask.snapshot.downloadURL;

	    var imageRef = firebase.database().ref().child('usuarios/' + iduser + '/avatar');
	    var newImage = {
	      link: downloadURL,
	      name: fileName
	    };

	    imageRef.set(newImage);
	  });
	}

	function updatepass(id, pass) {
	  /* NO ES UTILIZADA */

	  firebase.database().ref("usuarios/" + id).update({ password: pass });
	}

	function formatotabla(columna, fila, nombre) {

	  var data = new Array();
	  for (var i = 0; i <= fila; i++) {
	    data[i] = new Array();
	    for (var j = 0; j < columna; j++) {
	      data[i][j] = "";
	    }
	  }

	  firebase.database().ref("formatos/tablas/" + nombre).update({ columnas: columna, filas: fila, datos: data });
	}

	function getToken() {
	  var user = firebase.auth().currentUser;
	  return user;
	}

	function saveFormato(object) {
	  var messagesRef = firebase.database().ref().child('formatos/documentos/' + object);
	  var newformat = {
	    nombre: object
	  };

	  messagesRef.set(newformat);
	}

	function CompAdd(object) {
	  console.log(object);
	  var messagesRef = firebase.database().ref().child('formatos/documentos/' + object + '/componente');
	  var newformat = { nombre: 'componente' };

	  messagesRef.push(newformat);
	}

	function agregarnodo(nombreformato, id) {
	  var messagesRef = firebase.database().ref().child('formatos/documentos/' + nombreformato + '/componente/' + id + '/nodo');
	  var newnodo = { nombre: 'nodo' };
	  messagesRef.push(newnodo);
	}

	function saveTabla(object) {
	  var messagesRef = firebase.database().ref().child('formatos/tablas/' + object);
	  var newformat = {
	    nombre: object
	  };

	  messagesRef.set(newformat);
	}

	function nodospropios(idcomponente, objeto) {
	  var messagesRef = firebase.database().ref().child("documentos/" + objeto + "/componente/" + idcomponente + "/extras/");
	  var nodoextra = { nombre: 'extra' };
	  messagesRef.push(nodoextra);
	}

	function guardarmatriz(objeto) {
	  var messagesRef = firebase.database().ref().child("ejemplo/");
	  messagesRef.push(objeto);
	}

	function CrearDocumentoConFormato(key, formato, objeto, tipo) {

	  var update = {
	    formato: formato.nombre,
	    componente: formato.componente,
	    descripcion: objeto.description,
	    nombre: objeto.name,
	    tipoformato: tipo
	  };
	  var messagesRef = firebase.database().ref().child('documentos/' + key + "/");
	  messagesRef.update(update);
	}

	function CrearTablaConFormato(key, format, objeto, tipo) {

	  var messagesRef = firebase.database().ref().child('documentos/' + key + "/");
	  var update = {
	    formato: format.nombre,
	    nombre: objeto.name,
	    descripcion: objeto.description,
	    filas: format.filas,
	    columnas: format.columnas,
	    tipoformato: tipo,
	    datos: format.datos
	  };
	  messagesRef.update(update);
	}

	function guardarmatrizdatos(objeto, id) {
	  var messagesRef = firebase.database().ref().child("documentos/" + id + '/datos');
	  messagesRef.update(objeto);
	}

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "config.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	__webpack_require__(16);

	__webpack_require__(17);

	__webpack_require__(111);

	__webpack_require__(144);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Export the single instance of firebase
	exports.default = _app2.default; /**
	                                  * Copyright 2017 Google Inc.
	                                  *
	                                  * Licensed under the Apache License, Version 2.0 (the "License");
	                                  * you may not use this file except in compliance with the License.
	                                  * You may obtain a copy of the License at
	                                  *
	                                  *   http://www.apache.org/licenses/LICENSE-2.0
	                                  *
	                                  * Unless required by applicable law or agreed to in writing, software
	                                  * distributed under the License is distributed on an "AS IS" BASIS,
	                                  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                  * See the License for the specific language governing permissions and
	                                  * limitations under the License.
	                                  */

	module.exports = exports['default'];
	//# sourceMappingURL=firebase-browser.js.map


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(5);

	var _firebase_app = __webpack_require__(6);

	// Export a single instance of firebase app
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Import the needed shims
	var firebase = (0, _firebase_app.createFirebaseNamespace)();
	// Import the createFirebaseNamespace function
	exports.default = firebase;
	module.exports = exports['default'];
	//# sourceMappingURL=app.js.map


/***/ }),
/* 5 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * This is the Array.prototype.findIndex polyfill from MDN
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex
	 * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
	 */
	if (!Array.prototype.findIndex) {
	    Object.defineProperty(Array.prototype, 'findIndex', {
	        value: function value(predicate) {
	            // 1. Let O be ? ToObject(this value).
	            if (this == null) {
	                throw new TypeError('"this" is null or not defined');
	            }
	            var o = Object(this);
	            // 2. Let len be ? ToLength(? Get(O, "length")).
	            var len = o.length >>> 0;
	            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
	            if (typeof predicate !== 'function') {
	                throw new TypeError('predicate must be a function');
	            }
	            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
	            var thisArg = arguments[1];
	            // 5. Let k be 0.
	            var k = 0;
	            // 6. Repeat, while k < len
	            while (k < len) {
	                // a. Let Pk be ! ToString(k).
	                // b. Let kValue be ? Get(O, Pk).
	                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
	                // d. If testResult is true, return k.
	                var kValue = o[k];
	                if (predicate.call(thisArg, kValue, k, o)) {
	                    return k;
	                }
	                // e. Increase k by 1.
	                k++;
	            }
	            // 7. Return -1.
	            return -1;
	        }
	    });
	}
	/**
	 * This is the Array.prototype.find polyfill from MDN
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find
	 * https://tc39.github.io/ecma262/#sec-array.prototype.find
	 */
	if (!Array.prototype.find) {
	    Object.defineProperty(Array.prototype, 'find', {
	        value: function value(predicate) {
	            // 1. Let O be ? ToObject(this value).
	            if (this == null) {
	                throw new TypeError('"this" is null or not defined');
	            }
	            var o = Object(this);
	            // 2. Let len be ? ToLength(? Get(O, "length")).
	            var len = o.length >>> 0;
	            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
	            if (typeof predicate !== 'function') {
	                throw new TypeError('predicate must be a function');
	            }
	            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
	            var thisArg = arguments[1];
	            // 5. Let k be 0.
	            var k = 0;
	            // 6. Repeat, while k < len
	            while (k < len) {
	                // a. Let Pk be ! ToString(k).
	                // b. Let kValue be ? Get(O, Pk).
	                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
	                // d. If testResult is true, return kValue.
	                var kValue = o[k];
	                if (predicate.call(thisArg, kValue, k, o)) {
	                    return kValue;
	                }
	                // e. Increase k by 1.
	                k++;
	            }
	            // 7. Return undefined.
	            return undefined;
	        }
	    });
	}
	//# sourceMappingURL=shims.js.map


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.createFirebaseNamespace = createFirebaseNamespace;

	var _subscribe = __webpack_require__(7);

	var _errors = __webpack_require__(14);

	var _promise = __webpack_require__(8);

	var _deep_copy = __webpack_require__(15);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var contains = function contains(obj, key) {
	    return Object.prototype.hasOwnProperty.call(obj, key);
	};
	var DEFAULT_ENTRY_NAME = '[DEFAULT]';
	// An array to capture listeners before the true auth functions
	// exist
	var tokenListeners = [];
	/**
	 * Global context object for a collection of services using
	 * a shared authentication state.
	 */
	var FirebaseAppImpl = /** @class */function () {
	    function FirebaseAppImpl(options, name, firebase_) {
	        this.firebase_ = firebase_;
	        this.isDeleted_ = false;
	        this.services_ = {};
	        this.name_ = name;
	        this.options_ = (0, _deep_copy.deepCopy)(options);
	        this.INTERNAL = {
	            getUid: function getUid() {
	                return null;
	            },
	            getToken: function getToken() {
	                return _promise.PromiseImpl.resolve(null);
	            },
	            addAuthTokenListener: function addAuthTokenListener(callback) {
	                tokenListeners.push(callback);
	                // Make sure callback is called, asynchronously, in the absence of the auth module
	                setTimeout(function () {
	                    return callback(null);
	                }, 0);
	            },
	            removeAuthTokenListener: function removeAuthTokenListener(callback) {
	                tokenListeners = tokenListeners.filter(function (listener) {
	                    return listener !== callback;
	                });
	            }
	        };
	    }
	    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
	        get: function get() {
	            this.checkDestroyed_();
	            return this.name_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
	        get: function get() {
	            this.checkDestroyed_();
	            return this.options_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    FirebaseAppImpl.prototype.delete = function () {
	        var _this = this;
	        return new _promise.PromiseImpl(function (resolve) {
	            _this.checkDestroyed_();
	            resolve();
	        }).then(function () {
	            _this.firebase_.INTERNAL.removeApp(_this.name_);
	            var services = [];
	            Object.keys(_this.services_).forEach(function (serviceKey) {
	                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {
	                    services.push(_this.services_[serviceKey][instanceKey]);
	                });
	            });
	            return _promise.PromiseImpl.all(services.map(function (service) {
	                return service.INTERNAL.delete();
	            }));
	        }).then(function () {
	            _this.isDeleted_ = true;
	            _this.services_ = {};
	        });
	    };
	    /**
	     * Return a service instance associated with this app (creating it
	     * on demand), identified by the passed instanceIdentifier.
	     *
	     * NOTE: Currently storage is the only one that is leveraging this
	     * functionality. They invoke it by calling:
	     *
	     * ```javascript
	     * firebase.app().storage('STORAGE BUCKET ID')
	     * ```
	     *
	     * The service name is passed to this already
	     * @internal
	     */
	    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
	        if (instanceIdentifier === void 0) {
	            instanceIdentifier = DEFAULT_ENTRY_NAME;
	        }
	        this.checkDestroyed_();
	        if (!this.services_[name]) {
	            this.services_[name] = {};
	        }
	        if (!this.services_[name][instanceIdentifier]) {
	            /**
	             * If a custom instance has been defined (i.e. not '[DEFAULT]')
	             * then we will pass that instance on, otherwise we pass `null`
	             */
	            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME ? instanceIdentifier : undefined;
	            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
	            this.services_[name][instanceIdentifier] = service;
	        }
	        return this.services_[name][instanceIdentifier];
	    };
	    /**
	     * Callback function used to extend an App instance at the time
	     * of service instance creation.
	     */
	    FirebaseAppImpl.prototype.extendApp = function (props) {
	        var _this = this;
	        // Copy the object onto the FirebaseAppImpl prototype
	        (0, _deep_copy.deepExtend)(this, props);
	        /**
	         * If the app has overwritten the addAuthTokenListener stub, forward
	         * the active token listeners on to the true fxn.
	         *
	         * TODO: This function is required due to our current module
	         * structure. Once we are able to rely strictly upon a single module
	         * implementation, this code should be refactored and Auth should
	         * provide these stubs and the upgrade logic
	         */
	        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {
	            tokenListeners.forEach(function (listener) {
	                _this.INTERNAL.addAuthTokenListener(listener);
	            });
	            tokenListeners = [];
	        }
	    };
	    /**
	     * This function will throw an Error if the App has already been deleted -
	     * use before performing API actions on the App.
	     */
	    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
	        if (this.isDeleted_) {
	            error('app-deleted', { name: this.name_ });
	        }
	    };
	    return FirebaseAppImpl;
	}();
	// Prevent dead-code elimination of these methods w/o invalid property
	// copying.
	FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options || FirebaseAppImpl.prototype.delete || console.log('dc');
	/**
	 * Return a firebase namespace object.
	 *
	 * In production, this will be called exactly once and the result
	 * assigned to the 'firebase' global.  It may be called multiple times
	 * in unit tests.
	 */
	function createFirebaseNamespace() {
	    var apps_ = {};
	    var factories = {};
	    var appHooks = {};
	    // A namespace is a plain JavaScript Object.
	    var namespace = {
	        // Hack to prevent Babel from modifying the object returned
	        // as the firebase namespace.
	        __esModule: true,
	        initializeApp: initializeApp,
	        app: app,
	        apps: null,
	        Promise: _promise.PromiseImpl,
	        SDK_VERSION: '4.5.0',
	        INTERNAL: {
	            registerService: registerService,
	            createFirebaseNamespace: createFirebaseNamespace,
	            extendNamespace: extendNamespace,
	            createSubscribe: _subscribe.createSubscribe,
	            ErrorFactory: _errors.ErrorFactory,
	            removeApp: removeApp,
	            factories: factories,
	            useAsService: useAsService,
	            Promise: _promise.PromiseImpl,
	            deepExtend: _deep_copy.deepExtend
	        }
	    };
	    // Inject a circular default export to allow Babel users who were previously
	    // using:
	    //
	    //   import firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase').default;
	    //
	    // instead of
	    //
	    //   import * as firebase from 'firebase';
	    //   which becomes: var firebase = require('firebase');
	    (0, _deep_copy.patchProperty)(namespace, 'default', namespace);
	    // firebase.apps is a read-only getter.
	    Object.defineProperty(namespace, 'apps', {
	        get: getApps
	    });
	    /**
	     * Called by App.delete() - but before any services associated with the App
	     * are deleted.
	     */
	    function removeApp(name) {
	        var app = apps_[name];
	        callAppHooks(app, 'delete');
	        delete apps_[name];
	    }
	    /**
	     * Get the App object for a given name (or DEFAULT).
	     */
	    function app(name) {
	        name = name || DEFAULT_ENTRY_NAME;
	        if (!contains(apps_, name)) {
	            error('no-app', { name: name });
	        }
	        return apps_[name];
	    }
	    (0, _deep_copy.patchProperty)(app, 'App', FirebaseAppImpl);
	    /**
	     * Create a new App instance (name must be unique).
	     */
	    function initializeApp(options, name) {
	        if (name === undefined) {
	            name = DEFAULT_ENTRY_NAME;
	        } else {
	            if (typeof name !== 'string' || name === '') {
	                error('bad-app-name', { name: name + '' });
	            }
	        }
	        if (contains(apps_, name)) {
	            error('duplicate-app', { name: name });
	        }
	        var app = new FirebaseAppImpl(options, name, namespace);
	        apps_[name] = app;
	        callAppHooks(app, 'create');
	        return app;
	    }
	    /*
	     * Return an array of all the non-deleted FirebaseApps.
	     */
	    function getApps() {
	        // Make a copy so caller cannot mutate the apps list.
	        return Object.keys(apps_).map(function (name) {
	            return apps_[name];
	        });
	    }
	    /*
	     * Register a Firebase Service.
	     *
	     * firebase.INTERNAL.registerService()
	     *
	     * TODO: Implement serviceProperties.
	     */
	    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
	        // Cannot re-register a service that already exists
	        if (factories[name]) {
	            error('duplicate-service', { name: name });
	        }
	        // Capture the service factory for later service instantiation
	        factories[name] = createService;
	        // Capture the appHook, if passed
	        if (appHook) {
	            appHooks[name] = appHook;
	            // Run the **new** app hook on all existing apps
	            getApps().forEach(function (app) {
	                appHook('create', app);
	            });
	        }
	        // The Service namespace is an accessor function ...
	        var serviceNamespace = function serviceNamespace(appArg) {
	            if (appArg === void 0) {
	                appArg = app();
	            }
	            if (typeof appArg[name] !== 'function') {
	                // Invalid argument.
	                // This happens in the following case: firebase.storage('gs:/')
	                error('invalid-app-argument', { name: name });
	            }
	            // Forward service instance lookup to the FirebaseApp.
	            return appArg[name]();
	        };
	        // ... and a container for service-level properties.
	        if (serviceProperties !== undefined) {
	            (0, _deep_copy.deepExtend)(serviceNamespace, serviceProperties);
	        }
	        // Monkey-patch the serviceNamespace onto the firebase namespace
	        namespace[name] = serviceNamespace;
	        // Patch the FirebaseAppImpl prototype
	        FirebaseAppImpl.prototype[name] = function () {
	            var args = [];
	            for (var _i = 0; _i < arguments.length; _i++) {
	                args[_i] = arguments[_i];
	            }
	            var serviceFxn = this._getService.bind(this, name);
	            return serviceFxn.apply(this, allowMultipleInstances ? args : []);
	        };
	        return serviceNamespace;
	    }
	    /**
	     * Patch the top-level firebase namespace with additional properties.
	     *
	     * firebase.INTERNAL.extendNamespace()
	     */
	    function extendNamespace(props) {
	        (0, _deep_copy.deepExtend)(namespace, props);
	    }
	    function callAppHooks(app, eventName) {
	        Object.keys(factories).forEach(function (serviceName) {
	            // Ignore virtual services
	            var factoryName = useAsService(app, serviceName);
	            if (factoryName === null) {
	                return;
	            }
	            if (appHooks[factoryName]) {
	                appHooks[factoryName](eventName, app);
	            }
	        });
	    }
	    // Map the requested service to a registered service name
	    // (used to map auth to serverAuth service when needed).
	    function useAsService(app, name) {
	        if (name === 'serverAuth') {
	            return null;
	        }
	        var useService = name;
	        var options = app.options;
	        return useService;
	    }
	    return namespace;
	}
	function error(code, args) {
	    throw appErrors.create(code, args);
	}
	// TypeScript does not support non-string indexes!
	// let errors: {[code: AppError: string} = {
	var errors = {
	    'no-app': "No Firebase App '{$name}' has been created - " + 'call Firebase App.initializeApp()',
	    'bad-app-name': "Illegal App name: '{$name}",
	    'duplicate-app': "Firebase App named '{$name}' already exists",
	    'app-deleted': "Firebase App named '{$name}' already deleted",
	    'duplicate-service': "Firebase service named '{$name}' already registered",
	    'sa-not-supported': 'Initializing the Firebase SDK with a service ' + 'account is only allowed in a Node.js environment. On client ' + 'devices, you should instead initialize the SDK with an api key and ' + 'auth domain',
	    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' + 'Firebase App instance.'
	};
	var appErrors = new _errors.ErrorFactory('app', 'Firebase', errors);
	//# sourceMappingURL=firebase_app.js.map


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.createSubscribe = createSubscribe;
	exports.async = async;

	var _promise = __webpack_require__(8);

	/**
	 * Helper to make a Subscribe function (just like Promise helps make a
	 * Thenable).
	 *
	 * @param executor Function which can make calls to a single Observer
	 *     as a proxy.
	 * @param onNoObservers Callback when count of Observers goes to zero.
	 */
	function createSubscribe(executor, onNoObservers) {
	    var proxy = new ObserverProxy(executor, onNoObservers);
	    return proxy.subscribe.bind(proxy);
	}
	/**
	 * Implement fan-out for any number of Observers attached via a subscribe
	 * function.
	 */
	var ObserverProxy = /** @class */function () {
	    /**
	     * @param executor Function which can make calls to a single Observer
	     *     as a proxy.
	     * @param onNoObservers Callback when count of Observers goes to zero.
	     */
	    function ObserverProxy(executor, onNoObservers) {
	        var _this = this;
	        this.observers = [];
	        this.unsubscribes = [];
	        this.observerCount = 0;
	        // Micro-task scheduling by calling task.then().
	        this.task = _promise.PromiseImpl.resolve();
	        this.finalized = false;
	        this.onNoObservers = onNoObservers;
	        // Call the executor asynchronously so subscribers that are called
	        // synchronously after the creation of the subscribe function
	        // can still receive the very first value generated in the executor.
	        this.task.then(function () {
	            executor(_this);
	        }).catch(function (e) {
	            _this.error(e);
	        });
	    }
	    ObserverProxy.prototype.next = function (value) {
	        this.forEachObserver(function (observer) {
	            observer.next(value);
	        });
	    };
	    ObserverProxy.prototype.error = function (error) {
	        this.forEachObserver(function (observer) {
	            observer.error(error);
	        });
	        this.close(error);
	    };
	    ObserverProxy.prototype.complete = function () {
	        this.forEachObserver(function (observer) {
	            observer.complete();
	        });
	        this.close();
	    };
	    /**
	     * Subscribe function that can be used to add an Observer to the fan-out list.
	     *
	     * - We require that no event is sent to a subscriber sychronously to their
	     *   call to subscribe().
	     */
	    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
	        var _this = this;
	        var observer;
	        if (nextOrObserver === undefined && error === undefined && complete === undefined) {
	            throw new Error('Missing Observer.');
	        }
	        // Assemble an Observer object when passed as callback functions.
	        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
	            observer = nextOrObserver;
	        } else {
	            observer = {
	                next: nextOrObserver,
	                error: error,
	                complete: complete
	            };
	        }
	        if (observer.next === undefined) {
	            observer.next = noop;
	        }
	        if (observer.error === undefined) {
	            observer.error = noop;
	        }
	        if (observer.complete === undefined) {
	            observer.complete = noop;
	        }
	        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
	        // Attempt to subscribe to a terminated Observable - we
	        // just respond to the Observer with the final error or complete
	        // event.
	        if (this.finalized) {
	            this.task.then(function () {
	                try {
	                    if (_this.finalError) {
	                        observer.error(_this.finalError);
	                    } else {
	                        observer.complete();
	                    }
	                } catch (e) {
	                    // nothing
	                }
	                return;
	            });
	        }
	        this.observers.push(observer);
	        return unsub;
	    };
	    // Unsubscribe is synchronous - we guarantee that no events are sent to
	    // any unsubscribed Observer.
	    ObserverProxy.prototype.unsubscribeOne = function (i) {
	        if (this.observers === undefined || this.observers[i] === undefined) {
	            return;
	        }
	        delete this.observers[i];
	        this.observerCount -= 1;
	        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
	            this.onNoObservers(this);
	        }
	    };
	    ObserverProxy.prototype.forEachObserver = function (fn) {
	        if (this.finalized) {
	            // Already closed by previous event....just eat the additional values.
	            return;
	        }
	        // Since sendOne calls asynchronously - there is no chance that
	        // this.observers will become undefined.
	        for (var i = 0; i < this.observers.length; i++) {
	            this.sendOne(i, fn);
	        }
	    };
	    // Call the Observer via one of it's callback function. We are careful to
	    // confirm that the observe has not been unsubscribed since this asynchronous
	    // function had been queued.
	    ObserverProxy.prototype.sendOne = function (i, fn) {
	        var _this = this;
	        // Execute the callback asynchronously
	        this.task.then(function () {
	            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
	                try {
	                    fn(_this.observers[i]);
	                } catch (e) {
	                    // Ignore exceptions raised in Observers or missing methods of an
	                    // Observer.
	                    // Log error to console. b/31404806
	                    if (typeof console !== 'undefined' && console.error) {
	                        console.error(e);
	                    }
	                }
	            }
	        });
	    };
	    ObserverProxy.prototype.close = function (err) {
	        var _this = this;
	        if (this.finalized) {
	            return;
	        }
	        this.finalized = true;
	        if (err !== undefined) {
	            this.finalError = err;
	        }
	        // Proxy is no longer needed - garbage collect references
	        this.task.then(function () {
	            _this.observers = undefined;
	            _this.onNoObservers = undefined;
	        });
	    };
	    return ObserverProxy;
	}();
	/** Turn synchronous function into one called asynchronously. */
	function async(fn, onError) {
	    return function () {
	        var args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            args[_i] = arguments[_i];
	        }
	        _promise.PromiseImpl.resolve(true).then(function () {
	            fn.apply(void 0, args);
	        }).catch(function (error) {
	            if (onError) {
	                onError(error);
	            }
	        });
	    };
	}
	/**
	 * Return true if the object passed in implements any of the named methods.
	 */
	function implementsAnyMethods(obj, methods) {
	    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) {
	        return false;
	    }
	    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
	        var method = methods_1[_i];
	        if (method in obj && typeof obj[method] === 'function') {
	            return true;
	        }
	    }
	    return false;
	}
	function noop() {
	    // do nothing
	}
	//# sourceMappingURL=subscribe.js.map


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.attachDummyErrorHandler = exports.Deferred = exports.PromiseImpl = undefined;

	var _globalScope = __webpack_require__(9);

	var PromiseImpl = exports.PromiseImpl = _globalScope.globalScope.Promise || __webpack_require__(10);
	/**
	 * A deferred promise implementation.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Deferred = /** @class */function () {
	    /** @constructor */
	    function Deferred() {
	        var self = this;
	        this.resolve = null;
	        this.reject = null;
	        this.promise = new PromiseImpl(function (resolve, reject) {
	            self.resolve = resolve;
	            self.reject = reject;
	        });
	    }
	    /**
	     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
	     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
	     * and returns a node-style callback which will resolve or reject the Deferred's promise.
	     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} opt_nodeCallback
	     * @return {!function(?(Error), ?=)}
	     */
	    Deferred.prototype.wrapCallback = function (opt_nodeCallback) {
	        var self = this;
	        /**
	           * @param {?Error} error
	           * @param {?=} opt_value
	           */
	        function meta(error, opt_value) {
	            if (error) {
	                self.reject(error);
	            } else {
	                self.resolve(opt_value);
	            }
	            if (typeof opt_nodeCallback === 'function') {
	                attachDummyErrorHandler(self.promise);
	                // Some of our callbacks don't expect a value and our own tests
	                // assert that the parameter length is 1
	                if (opt_nodeCallback.length === 1) {
	                    opt_nodeCallback(error);
	                } else {
	                    opt_nodeCallback(error, opt_value);
	                }
	            }
	        }
	        return meta;
	    };
	    return Deferred;
	}();
	exports.Deferred = Deferred;
	/**
	 * Chrome (and maybe other browsers) report an Error in the console if you reject a promise
	 * and nobody handles the error. This is normally a good thing, but this will confuse devs who
	 * never intended to use promises in the first place. So in some cases (in particular, if the
	 * developer attached a callback), we should attach a dummy resolver to the promise to suppress
	 * this error.
	 *
	 * Note: We can't do this all the time, since it breaks the Promise spec (though in the obscure
	 * 3.3.3 section related to upgrading non-compliant promises).
	 * @param {!firebase.Promise} promise
	 */

	var attachDummyErrorHandler = exports.attachDummyErrorHandler = function attachDummyErrorHandler(promise) {
	    promise.catch(function () {});
	};
	//# sourceMappingURL=promise.js.map


/***/ }),
/* 9 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var scope;
	if (typeof global !== 'undefined') {
	    scope = global;
	} else if (typeof self !== 'undefined') {
	    scope = self;
	} else {
	    try {
	        scope = Function('return this')();
	    } catch (e) {
	        throw new Error('polyfill failed because global object is unavailable in this environment');
	    }
	}
	var globalScope = exports.globalScope = scope;
	//# sourceMappingURL=globalScope.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {

	  // Store setTimeout reference so promise-polyfill will be unaffected by
	  // other code modifying setTimeout (like sinon.useFakeTimers())
	  var setTimeoutFunc = setTimeout;

	  function noop() {}
	  
	  // Polyfill for Function.prototype.bind
	  function bind(fn, thisArg) {
	    return function () {
	      fn.apply(thisArg, arguments);
	    };
	  }

	  function Promise(fn) {
	    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');
	    if (typeof fn !== 'function') throw new TypeError('not a function');
	    this._state = 0;
	    this._handled = false;
	    this._value = undefined;
	    this._deferreds = [];

	    doResolve(fn, this);
	  }

	  function handle(self, deferred) {
	    while (self._state === 3) {
	      self = self._value;
	    }
	    if (self._state === 0) {
	      self._deferreds.push(deferred);
	      return;
	    }
	    self._handled = true;
	    Promise._immediateFn(function () {
	      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
	      if (cb === null) {
	        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
	        return;
	      }
	      var ret;
	      try {
	        ret = cb(self._value);
	      } catch (e) {
	        reject(deferred.promise, e);
	        return;
	      }
	      resolve(deferred.promise, ret);
	    });
	  }

	  function resolve(self, newValue) {
	    try {
	      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
	      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
	      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
	        var then = newValue.then;
	        if (newValue instanceof Promise) {
	          self._state = 3;
	          self._value = newValue;
	          finale(self);
	          return;
	        } else if (typeof then === 'function') {
	          doResolve(bind(then, newValue), self);
	          return;
	        }
	      }
	      self._state = 1;
	      self._value = newValue;
	      finale(self);
	    } catch (e) {
	      reject(self, e);
	    }
	  }

	  function reject(self, newValue) {
	    self._state = 2;
	    self._value = newValue;
	    finale(self);
	  }

	  function finale(self) {
	    if (self._state === 2 && self._deferreds.length === 0) {
	      Promise._immediateFn(function() {
	        if (!self._handled) {
	          Promise._unhandledRejectionFn(self._value);
	        }
	      });
	    }

	    for (var i = 0, len = self._deferreds.length; i < len; i++) {
	      handle(self, self._deferreds[i]);
	    }
	    self._deferreds = null;
	  }

	  function Handler(onFulfilled, onRejected, promise) {
	    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
	    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
	    this.promise = promise;
	  }

	  /**
	   * Take a potentially misbehaving resolver function and make sure
	   * onFulfilled and onRejected are only called once.
	   *
	   * Makes no guarantees about asynchrony.
	   */
	  function doResolve(fn, self) {
	    var done = false;
	    try {
	      fn(function (value) {
	        if (done) return;
	        done = true;
	        resolve(self, value);
	      }, function (reason) {
	        if (done) return;
	        done = true;
	        reject(self, reason);
	      });
	    } catch (ex) {
	      if (done) return;
	      done = true;
	      reject(self, ex);
	    }
	  }

	  Promise.prototype['catch'] = function (onRejected) {
	    return this.then(null, onRejected);
	  };

	  Promise.prototype.then = function (onFulfilled, onRejected) {
	    var prom = new (this.constructor)(noop);

	    handle(this, new Handler(onFulfilled, onRejected, prom));
	    return prom;
	  };

	  Promise.all = function (arr) {
	    var args = Array.prototype.slice.call(arr);

	    return new Promise(function (resolve, reject) {
	      if (args.length === 0) return resolve([]);
	      var remaining = args.length;

	      function res(i, val) {
	        try {
	          if (val && (typeof val === 'object' || typeof val === 'function')) {
	            var then = val.then;
	            if (typeof then === 'function') {
	              then.call(val, function (val) {
	                res(i, val);
	              }, reject);
	              return;
	            }
	          }
	          args[i] = val;
	          if (--remaining === 0) {
	            resolve(args);
	          }
	        } catch (ex) {
	          reject(ex);
	        }
	      }

	      for (var i = 0; i < args.length; i++) {
	        res(i, args[i]);
	      }
	    });
	  };

	  Promise.resolve = function (value) {
	    if (value && typeof value === 'object' && value.constructor === Promise) {
	      return value;
	    }

	    return new Promise(function (resolve) {
	      resolve(value);
	    });
	  };

	  Promise.reject = function (value) {
	    return new Promise(function (resolve, reject) {
	      reject(value);
	    });
	  };

	  Promise.race = function (values) {
	    return new Promise(function (resolve, reject) {
	      for (var i = 0, len = values.length; i < len; i++) {
	        values[i].then(resolve, reject);
	      }
	    });
	  };

	  // Use polyfill for setImmediate for performance gains
	  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
	    function (fn) {
	      setTimeoutFunc(fn, 0);
	    };

	  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
	    if (typeof console !== 'undefined' && console) {
	      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
	    }
	  };

	  /**
	   * Set the immediate function to execute callbacks
	   * @param fn {function} Function to execute
	   * @deprecated
	   */
	  Promise._setImmediateFn = function _setImmediateFn(fn) {
	    Promise._immediateFn = fn;
	  };

	  /**
	   * Change the function to execute on unhandled rejection
	   * @param {function} fn Function to execute on unhandled rejection
	   * @deprecated
	   */
	  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
	    Promise._unhandledRejectionFn = fn;
	  };
	  
	  if (typeof module !== 'undefined' && module.exports) {
	    module.exports = Promise;
	  } else if (!root.Promise) {
	    root.Promise = Promise;
	  }

	})(this);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11).setImmediate))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = Function.prototype.apply;

	// DOM APIs, for completeness

	exports.setTimeout = function() {
	  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
	};
	exports.setInterval = function() {
	  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
	};
	exports.clearTimeout =
	exports.clearInterval = function(timeout) {
	  if (timeout) {
	    timeout.close();
	  }
	};

	function Timeout(id, clearFn) {
	  this._id = id;
	  this._clearFn = clearFn;
	}
	Timeout.prototype.unref = Timeout.prototype.ref = function() {};
	Timeout.prototype.close = function() {
	  this._clearFn.call(window, this._id);
	};

	// Does not start the time, just sets up the members needed.
	exports.enroll = function(item, msecs) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = msecs;
	};

	exports.unenroll = function(item) {
	  clearTimeout(item._idleTimeoutId);
	  item._idleTimeout = -1;
	};

	exports._unrefActive = exports.active = function(item) {
	  clearTimeout(item._idleTimeoutId);

	  var msecs = item._idleTimeout;
	  if (msecs >= 0) {
	    item._idleTimeoutId = setTimeout(function onTimeout() {
	      if (item._onTimeout)
	        item._onTimeout();
	    }, msecs);
	  }
	};

	// setimmediate attaches itself to the global object
	__webpack_require__(12);
	exports.setImmediate = setImmediate;
	exports.clearImmediate = clearImmediate;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
	    "use strict";

	    if (global.setImmediate) {
	        return;
	    }

	    var nextHandle = 1; // Spec says greater than zero
	    var tasksByHandle = {};
	    var currentlyRunningATask = false;
	    var doc = global.document;
	    var registerImmediate;

	    function setImmediate(callback) {
	      // Callback can either be a function or a string
	      if (typeof callback !== "function") {
	        callback = new Function("" + callback);
	      }
	      // Copy function arguments
	      var args = new Array(arguments.length - 1);
	      for (var i = 0; i < args.length; i++) {
	          args[i] = arguments[i + 1];
	      }
	      // Store and register the task
	      var task = { callback: callback, args: args };
	      tasksByHandle[nextHandle] = task;
	      registerImmediate(nextHandle);
	      return nextHandle++;
	    }

	    function clearImmediate(handle) {
	        delete tasksByHandle[handle];
	    }

	    function run(task) {
	        var callback = task.callback;
	        var args = task.args;
	        switch (args.length) {
	        case 0:
	            callback();
	            break;
	        case 1:
	            callback(args[0]);
	            break;
	        case 2:
	            callback(args[0], args[1]);
	            break;
	        case 3:
	            callback(args[0], args[1], args[2]);
	            break;
	        default:
	            callback.apply(undefined, args);
	            break;
	        }
	    }

	    function runIfPresent(handle) {
	        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
	        // So if we're currently running a task, we'll need to delay this invocation.
	        if (currentlyRunningATask) {
	            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
	            // "too much recursion" error.
	            setTimeout(runIfPresent, 0, handle);
	        } else {
	            var task = tasksByHandle[handle];
	            if (task) {
	                currentlyRunningATask = true;
	                try {
	                    run(task);
	                } finally {
	                    clearImmediate(handle);
	                    currentlyRunningATask = false;
	                }
	            }
	        }
	    }

	    function installNextTickImplementation() {
	        registerImmediate = function(handle) {
	            process.nextTick(function () { runIfPresent(handle); });
	        };
	    }

	    function canUsePostMessage() {
	        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
	        // where `global.postMessage` means something completely different and can't be used for this purpose.
	        if (global.postMessage && !global.importScripts) {
	            var postMessageIsAsynchronous = true;
	            var oldOnMessage = global.onmessage;
	            global.onmessage = function() {
	                postMessageIsAsynchronous = false;
	            };
	            global.postMessage("", "*");
	            global.onmessage = oldOnMessage;
	            return postMessageIsAsynchronous;
	        }
	    }

	    function installPostMessageImplementation() {
	        // Installs an event handler on `global` for the `message` event: see
	        // * https://developer.mozilla.org/en/DOM/window.postMessage
	        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

	        var messagePrefix = "setImmediate$" + Math.random() + "$";
	        var onGlobalMessage = function(event) {
	            if (event.source === global &&
	                typeof event.data === "string" &&
	                event.data.indexOf(messagePrefix) === 0) {
	                runIfPresent(+event.data.slice(messagePrefix.length));
	            }
	        };

	        if (global.addEventListener) {
	            global.addEventListener("message", onGlobalMessage, false);
	        } else {
	            global.attachEvent("onmessage", onGlobalMessage);
	        }

	        registerImmediate = function(handle) {
	            global.postMessage(messagePrefix + handle, "*");
	        };
	    }

	    function installMessageChannelImplementation() {
	        var channel = new MessageChannel();
	        channel.port1.onmessage = function(event) {
	            var handle = event.data;
	            runIfPresent(handle);
	        };

	        registerImmediate = function(handle) {
	            channel.port2.postMessage(handle);
	        };
	    }

	    function installReadyStateChangeImplementation() {
	        var html = doc.documentElement;
	        registerImmediate = function(handle) {
	            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
	            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
	            var script = doc.createElement("script");
	            script.onreadystatechange = function () {
	                runIfPresent(handle);
	                script.onreadystatechange = null;
	                html.removeChild(script);
	                script = null;
	            };
	            html.appendChild(script);
	        };
	    }

	    function installSetTimeoutImplementation() {
	        registerImmediate = function(handle) {
	            setTimeout(runIfPresent, 0, handle);
	        };
	    }

	    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
	    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
	    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

	    // Don't get fooled by e.g. browserify environments.
	    if ({}.toString.call(global.process) === "[object process]") {
	        // For Node.js before 0.9
	        installNextTickImplementation();

	    } else if (canUsePostMessage()) {
	        // For non-IE10 modern browsers
	        installPostMessageImplementation();

	    } else if (global.MessageChannel) {
	        // For web workers, where supported
	        installMessageChannelImplementation();

	    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
	        // For IE 6–8
	        installReadyStateChangeImplementation();

	    } else {
	        // For older browsers
	        installSetTimeoutImplementation();
	    }

	    attachTo.setImmediate = setImmediate;
	    attachTo.clearImmediate = clearImmediate;
	}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(13)))

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 14 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.patchCapture = patchCapture;
	var ERROR_NAME = 'FirebaseError';
	var captureStackTrace = Error.captureStackTrace;
	// Export for faking in tests
	function patchCapture(captureFake) {
	    var result = captureStackTrace;
	    captureStackTrace = captureFake;
	    return result;
	}
	var FirebaseError = /** @class */function () {
	    function FirebaseError(code, message) {
	        this.code = code;
	        this.message = message;
	        var stack;
	        // We want the stack value, if implemented by Error
	        if (captureStackTrace) {
	            // Patches this.stack, omitted calls above ErrorFactory#create
	            captureStackTrace(this, ErrorFactory.prototype.create);
	        } else {
	            var err_1 = Error.apply(this, arguments);
	            this.name = ERROR_NAME;
	            // Make non-enumerable getter for the property.
	            Object.defineProperty(this, 'stack', {
	                get: function get() {
	                    return err_1.stack;
	                }
	            });
	        }
	    }
	    return FirebaseError;
	}();
	exports.FirebaseError = FirebaseError;
	// Back-door inheritance

	FirebaseError.prototype = Object.create(Error.prototype);
	FirebaseError.prototype.constructor = FirebaseError;
	FirebaseError.prototype.name = ERROR_NAME;
	var ErrorFactory = /** @class */function () {
	    function ErrorFactory(service, serviceName, errors) {
	        this.service = service;
	        this.serviceName = serviceName;
	        this.errors = errors;
	        // Matches {$name}, by default.
	        this.pattern = /\{\$([^}]+)}/g;
	        // empty
	    }
	    ErrorFactory.prototype.create = function (code, data) {
	        if (data === undefined) {
	            data = {};
	        }
	        var template = this.errors[code];
	        var fullCode = this.service + '/' + code;
	        var message;
	        if (template === undefined) {
	            message = 'Error';
	        } else {
	            message = template.replace(this.pattern, function (match, key) {
	                var value = data[key];
	                return value !== undefined ? value.toString() : '<' + key + '?>';
	            });
	        }
	        // Service: Error message (service/code).
	        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';
	        var err = new FirebaseError(fullCode, message);
	        // Populate the Error object with message parts for programmatic
	        // accesses (e.g., e.file).
	        for (var prop in data) {
	            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {
	                continue;
	            }
	            err[prop] = data[prop];
	        }
	        return err;
	    };
	    return ErrorFactory;
	}();
	exports.ErrorFactory = ErrorFactory;
	//# sourceMappingURL=errors.js.map


/***/ }),
/* 15 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.deepCopy = deepCopy;
	exports.deepExtend = deepExtend;
	exports.patchProperty = patchProperty;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Do a deep-copy of basic JavaScript Objects or Arrays.
	 */
	function deepCopy(value) {
	    return deepExtend(undefined, value);
	}
	/**
	 * Copy properties from source to target (recursively allows extension
	 * of Objects and Arrays).  Scalar values in the target are over-written.
	 * If target is undefined, an object of the appropriate type will be created
	 * (and returned).
	 *
	 * We recursively copy all child properties of plain Objects in the source- so
	 * that namespace- like dictionaries are merged.
	 *
	 * Note that the target can be a function, in which case the properties in
	 * the source Object are copied onto it as static properties of the Function.
	 */
	function deepExtend(target, source) {
	    if (!(source instanceof Object)) {
	        return source;
	    }
	    switch (source.constructor) {
	        case Date:
	            // Treat Dates like scalars; if the target date object had any child
	            // properties - they will be lost!
	            var dateValue = source;
	            return new Date(dateValue.getTime());
	        case Object:
	            if (target === undefined) {
	                target = {};
	            }
	            break;
	        case Array:
	            // Always copy the array source and overwrite the target.
	            target = [];
	            break;
	        default:
	            // Not a plain Object - treat it as a scalar.
	            return source;
	    }
	    for (var prop in source) {
	        if (!source.hasOwnProperty(prop)) {
	            continue;
	        }
	        target[prop] = deepExtend(target[prop], source[prop]);
	    }
	    return target;
	}
	// TODO: Really needed (for JSCompiler type checking)?
	function patchProperty(obj, prop, value) {
	    obj[prop] = value;
	}
	//# sourceMappingURL=deep_copy.js.map


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	var firebase = __webpack_require__(4);
	(function(){(function(){var h,aa=aa||{},k=this,ba=function(a){return void 0!==a},m=function(a){return"string"==typeof a},ca=function(a){return"boolean"==typeof a},da=function(){},ea=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";
	if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";else if("function"==b&&"undefined"==typeof a.call)return"object";return b},fa=function(a){return null===a},ha=function(a){return"array"==ea(a)},ia=function(a){var b=ea(a);return"array"==b||"object"==b&&"number"==typeof a.length},p=function(a){return"function"==ea(a)},q=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==
	b},ja=function(a,b,c){return a.call.apply(a.bind,arguments)},ka=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}},r=function(a,b,c){r=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?ja:ka;return r.apply(null,arguments)},la=function(a,b){var c=
	Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}},ma=Date.now||function(){return+new Date},t=function(a,b){function c(){}c.prototype=b.prototype;a.Vc=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Ng=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)}};var u=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,u);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a))};t(u,Error);u.prototype.name="CustomError";var na=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")},oa=String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},wa=function(a){if(!pa.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(qa,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(ra,"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(sa,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(ta,"&quot;"));-1!=a.indexOf("'")&&
	(a=a.replace(ua,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(va,"&#0;"));return a},qa=/&/g,ra=/</g,sa=/>/g,ta=/"/g,ua=/'/g,va=/\x00/g,pa=/[\x00&<>"']/,v=function(a,b){return-1!=a.indexOf(b)},xa=function(a,b){return a<b?-1:a>b?1:0};var ya=function(a,b){b.unshift(a);u.call(this,na.apply(null,b));b.shift()};t(ya,u);ya.prototype.name="AssertionError";
	var za=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);throw new ya(""+e,f||[]);},w=function(a,b,c){a||za("",null,b,Array.prototype.slice.call(arguments,2));return a},Aa=function(a,b){throw new ya("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));},Ba=function(a,b,c){"number"==typeof a||za("Expected number but got %s: %s.",[ea(a),a],b,Array.prototype.slice.call(arguments,2));return a},Ca=function(a,b,c){m(a)||za("Expected string but got %s: %s.",
	[ea(a),a],b,Array.prototype.slice.call(arguments,2))},Da=function(a,b,c){p(a)||za("Expected function but got %s: %s.",[ea(a),a],b,Array.prototype.slice.call(arguments,2))};var Fa=function(){this.Uc="";this.gf=Ea};Fa.prototype.qb=!0;Fa.prototype.ob=function(){return this.Uc};Fa.prototype.toString=function(){return"Const{"+this.Uc+"}"};var Ga=function(a){if(a instanceof Fa&&a.constructor===Fa&&a.gf===Ea)return a.Uc;Aa("expected object of type Const, got '"+a+"'");return"type_error:Const"},Ea={},Ha=function(a){var b=new Fa;b.Uc=a;return b};Ha("");var Ja=function(){this.Mc="";this.hf=Ia};Ja.prototype.qb=!0;Ja.prototype.ob=function(){return this.Mc};Ja.prototype.toString=function(){return"TrustedResourceUrl{"+this.Mc+"}"};
	var Ka=function(a){if(a instanceof Ja&&a.constructor===Ja&&a.hf===Ia)return a.Mc;Aa("expected object of type TrustedResourceUrl, got '"+a+"' of type "+ea(a));return"type_error:TrustedResourceUrl"},Ma=function(a,b){a=La(a,b);b=new Ja;b.Mc=a;return b},La=function(a,b){var c=Ga(a);if(!Na.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);return c.replace(Oa,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+
	JSON.stringify(b));a=b[e];return a instanceof Fa?Ga(a):encodeURIComponent(String(a))})},Oa=/%{(\w+)}/g,Na=/^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank(#|$)/i,Ia={};var Pa=Array.prototype.indexOf?function(a,b,c){w(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(m(a))return m(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1},x=Array.prototype.forEach?function(a,b,c){w(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)},Qa=function(a,b){for(var c=m(a)?
	a.split(""):a,d=a.length-1;0<=d;--d)d in c&&b.call(void 0,c[d],d,a)},Ra=Array.prototype.map?function(a,b,c){w(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=m(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e},Sa=Array.prototype.some?function(a,b,c){w(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=m(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1},
	Ua=function(a){a:{var b=Ta;for(var c=a.length,d=m(a)?a.split(""):a,e=0;e<c;e++)if(e in d&&b.call(void 0,d[e],e,a)){b=e;break a}b=-1}return 0>b?null:m(a)?a.charAt(b):a[b]},Va=function(a,b){return 0<=Pa(a,b)},Xa=function(a,b){b=Pa(a,b);var c;(c=0<=b)&&Wa(a,b);return c},Wa=function(a,b){w(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length},Ya=function(a,b){var c=0;Qa(a,function(d,e){b.call(void 0,d,e,a)&&Wa(a,e)&&c++})},Za=function(a){return Array.prototype.concat.apply([],arguments)},
	$a=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};var ab=function(a){return Ra(a,function(a){a=a.toString(16);return 1<a.length?a:"0"+a}).join("")};var bb;a:{var cb=k.navigator;if(cb){var db=cb.userAgent;if(db){bb=db;break a}}bb=""}var y=function(a){return v(bb,a)};var eb=function(a,b){for(var c in a)b.call(void 0,a[c],c,a)},fb=function(a,b){for(var c in a)if(b.call(void 0,a[c],c,a))return!0;return!1},gb=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b},hb=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b},ib=function(a){for(var b in a)return!1;return!0},jb=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0},kb=function(a){var b={},c;for(c in a)b[c]=a[c];return b},lb="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),
	mb=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<lb.length;f++)c=lb[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};var nb=function(a){nb[" "](a);return a};nb[" "]=da;var pb=function(a,b){var c=ob;return Object.prototype.hasOwnProperty.call(c,a)?c[a]:c[a]=b(a)};var qb=y("Opera"),z=y("Trident")||y("MSIE"),rb=y("Edge"),sb=rb||z,tb=y("Gecko")&&!(v(bb.toLowerCase(),"webkit")&&!y("Edge"))&&!(y("Trident")||y("MSIE"))&&!y("Edge"),ub=v(bb.toLowerCase(),"webkit")&&!y("Edge"),vb=function(){var a=k.document;return a?a.documentMode:void 0},wb;
	a:{var xb="",yb=function(){var a=bb;if(tb)return/rv\:([^\);]+)(\)|;)/.exec(a);if(rb)return/Edge\/([\d\.]+)/.exec(a);if(z)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(ub)return/WebKit\/(\S+)/.exec(a);if(qb)return/(?:Version)[ \/]?(\S+)/.exec(a)}();yb&&(xb=yb?yb[1]:"");if(z){var Ab=vb();if(null!=Ab&&Ab>parseFloat(xb)){wb=String(Ab);break a}}wb=xb}
	var Bb=wb,ob={},A=function(a){return pb(a,function(){for(var b=0,c=oa(String(Bb)).split("."),d=oa(String(a)).split("."),e=Math.max(c.length,d.length),f=0;0==b&&f<e;f++){var g=c[f]||"",l=d[f]||"";do{g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];l=/(\d*)(\D*)(.*)/.exec(l)||["","","",""];if(0==g[0].length&&0==l[0].length)break;b=xa(0==g[1].length?0:parseInt(g[1],10),0==l[1].length?0:parseInt(l[1],10))||xa(0==g[2].length,0==l[2].length)||xa(g[2],l[2]);g=g[3];l=l[3]}while(0==b)}return 0<=b})},Cb;var Db=k.document;
	Cb=Db&&z?vb()||("CSS1Compat"==Db.compatMode?parseInt(Bb,10):5):void 0;var Eb=null,Fb=null,Hb=function(a){var b="";Gb(a,function(a){b+=String.fromCharCode(a)});return b},Gb=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=Fb[c];if(null!=e)return e;if(!/^[\s\xa0]*$/.test(c))throw Error("Unknown base64 encoding at char: "+c);}return b}Ib();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),l=c(64);if(64===l&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=l&&b(g<<6&192|l))}},Ib=function(){if(!Eb){Eb={};Fb={};for(var a=0;65>a;a++)Eb[a]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a),
	Fb[Eb[a]]=a,62<=a&&(Fb["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a)]=a)}};var Jb=function(){this.Da=-1};var Mb=function(a,b){this.Da=-1;this.Da=64;this.rc=k.Uint8Array?new Uint8Array(this.Da):Array(this.Da);this.Yc=this.rb=0;this.l=[];this.$f=a;this.Ee=b;this.Bg=k.Int32Array?new Int32Array(64):Array(64);ba(Kb)||(Kb=k.Int32Array?new Int32Array(Lb):Lb);this.reset()},Kb;t(Mb,Jb);for(var Nb=[],Ob=0;63>Ob;Ob++)Nb[Ob]=0;var Pb=Za(128,Nb);Mb.prototype.reset=function(){this.Yc=this.rb=0;this.l=k.Int32Array?new Int32Array(this.Ee):$a(this.Ee)};
	var Qb=function(a){var b=a.rc;w(b.length==a.Da);for(var c=a.Bg,d=0,e=0;e<b.length;)c[d++]=b[e]<<24|b[e+1]<<16|b[e+2]<<8|b[e+3],e=4*d;for(b=16;64>b;b++){e=c[b-15]|0;d=c[b-2]|0;var f=(c[b-16]|0)+((e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3)|0,g=(c[b-7]|0)+((d>>>17|d<<15)^(d>>>19|d<<13)^d>>>10)|0;c[b]=f+g|0}d=a.l[0]|0;e=a.l[1]|0;var l=a.l[2]|0,n=a.l[3]|0,F=a.l[4]|0,zb=a.l[5]|0,hc=a.l[6]|0;f=a.l[7]|0;for(b=0;64>b;b++){var vi=((d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10))+(d&e^d&l^e&l)|0;g=F&zb^~F&hc;f=f+((F>>>
	6|F<<26)^(F>>>11|F<<21)^(F>>>25|F<<7))|0;g=g+(Kb[b]|0)|0;g=f+(g+(c[b]|0)|0)|0;f=hc;hc=zb;zb=F;F=n+g|0;n=l;l=e;e=d;d=g+vi|0}a.l[0]=a.l[0]+d|0;a.l[1]=a.l[1]+e|0;a.l[2]=a.l[2]+l|0;a.l[3]=a.l[3]+n|0;a.l[4]=a.l[4]+F|0;a.l[5]=a.l[5]+zb|0;a.l[6]=a.l[6]+hc|0;a.l[7]=a.l[7]+f|0};
	Mb.prototype.update=function(a,b){ba(b)||(b=a.length);var c=0,d=this.rb;if(m(a))for(;c<b;)this.rc[d++]=a.charCodeAt(c++),d==this.Da&&(Qb(this),d=0);else if(ia(a))for(;c<b;){var e=a[c++];if(!("number"==typeof e&&0<=e&&255>=e&&e==(e|0)))throw Error("message must be a byte array");this.rc[d++]=e;d==this.Da&&(Qb(this),d=0)}else throw Error("message must be string or array");this.rb=d;this.Yc+=b};
	Mb.prototype.digest=function(){var a=[],b=8*this.Yc;56>this.rb?this.update(Pb,56-this.rb):this.update(Pb,this.Da-(this.rb-56));for(var c=63;56<=c;c--)this.rc[c]=b&255,b/=256;Qb(this);for(c=b=0;c<this.$f;c++)for(var d=24;0<=d;d-=8)a[b++]=this.l[c]>>d&255;return a};
	var Lb=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,
	4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var Sb=function(){Mb.call(this,8,Rb)};t(Sb,Mb);var Rb=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];var Tb=Object.freeze||function(a){return a};var Ub=function(){this.Ma=this.Ma;this.Jc=this.Jc};Ub.prototype.Ma=!1;Ub.prototype.isDisposed=function(){return this.Ma};Ub.prototype.lb=function(){if(this.Jc)for(;this.Jc.length;)this.Jc.shift()()};var Vb=!z||9<=Number(Cb),Wb=z&&!A("9");!ub||A("528");tb&&A("1.9b")||z&&A("8")||qb&&A("9.5")||ub&&A("528");tb&&!A("8")||z&&A("9");var Xb=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0}});k.addEventListener("test",da,b);k.removeEventListener("test",da,b);return a}();var B=function(a,b){this.type=a;this.currentTarget=this.target=b;this.defaultPrevented=this.Wa=!1;this.Se=!0};B.prototype.stopPropagation=function(){this.Wa=!0};B.prototype.preventDefault=function(){this.defaultPrevented=!0;this.Se=!1};var Yb=function(a,b){B.call(this,a?a.type:"");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key="";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType="";this.P=null;a&&this.init(a,b)};t(Yb,B);var Zb=Tb({2:"touch",3:"pen",4:"mouse"});
	Yb.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;if(b=a.relatedTarget){if(tb){a:{try{nb(b.nodeName);var e=!0;break a}catch(f){}e=!1}e||(b=null)}}else"mouseover"==c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;null===d?(this.offsetX=ub||void 0!==a.offsetX?a.offsetX:a.layerX,this.offsetY=ub||void 0!==a.offsetY?a.offsetY:a.layerY,this.clientX=void 0!==a.clientX?a.clientX:a.pageX,
	this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0):(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||"";this.charCode=a.charCode||("keypress"==c?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=
	m(a.pointerType)?a.pointerType:Zb[a.pointerType]||"";this.state=a.state;this.P=a;a.defaultPrevented&&this.preventDefault()};Yb.prototype.stopPropagation=function(){Yb.Vc.stopPropagation.call(this);this.P.stopPropagation?this.P.stopPropagation():this.P.cancelBubble=!0};Yb.prototype.preventDefault=function(){Yb.Vc.preventDefault.call(this);var a=this.P;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,Wb)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};
	Yb.prototype.Ef=function(){return this.P};var $b="closure_listenable_"+(1E6*Math.random()|0),ac=0;var bc=function(a,b,c,d,e){this.listener=a;this.Nc=null;this.src=b;this.type=c;this.capture=!!d;this.wc=e;this.key=++ac;this.Bb=this.qc=!1},cc=function(a){a.Bb=!0;a.listener=null;a.Nc=null;a.src=null;a.wc=null};var dc=function(a){this.src=a;this.I={};this.kc=0};dc.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.I[f];a||(a=this.I[f]=[],this.kc++);var g=ec(a,b,d,e);-1<g?(b=a[g],c||(b.qc=!1)):(b=new bc(b,this.src,f,!!d,e),b.qc=c,a.push(b));return b};dc.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.I))return!1;var e=this.I[a];b=ec(e,b,c,d);return-1<b?(cc(e[b]),Wa(e,b),0==e.length&&(delete this.I[a],this.kc--),!0):!1};
	var fc=function(a,b){var c=b.type;c in a.I&&Xa(a.I[c],b)&&(cc(b),0==a.I[c].length&&(delete a.I[c],a.kc--))};dc.prototype.td=function(a,b,c,d){a=this.I[a.toString()];var e=-1;a&&(e=ec(a,b,c,d));return-1<e?a[e]:null};dc.prototype.hasListener=function(a,b){var c=ba(a),d=c?a.toString():"",e=ba(b);return fb(this.I,function(a){for(var f=0;f<a.length;++f)if(!(c&&a[f].type!=d||e&&a[f].capture!=b))return!0;return!1})};
	var ec=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.Bb&&f.listener==b&&f.capture==!!c&&f.wc==d)return e}return-1};var gc="closure_lm_"+(1E6*Math.random()|0),ic={},jc=0,lc=function(a,b,c,d,e){if(d&&d.once)kc(a,b,c,d,e);else if(ha(b))for(var f=0;f<b.length;f++)lc(a,b[f],c,d,e);else c=mc(c),a&&a[$b]?a.listen(b,c,q(d)?!!d.capture:!!d,e):nc(a,b,c,!1,d,e)},nc=function(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=q(e)?!!e.capture:!!e,l=oc(a);l||(a[gc]=l=new dc(a));c=l.add(b,c,d,g,f);if(!c.Nc){d=pc();c.Nc=d;d.src=a;d.listener=c;if(a.addEventListener)Xb||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),
	d,e);else if(a.attachEvent)a.attachEvent(qc(b.toString()),d);else throw Error("addEventListener and attachEvent are unavailable.");jc++}},pc=function(){var a=rc,b=Vb?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b},kc=function(a,b,c,d,e){if(ha(b))for(var f=0;f<b.length;f++)kc(a,b[f],c,d,e);else c=mc(c),a&&a[$b]?sc(a,b,c,q(d)?!!d.capture:!!d,e):nc(a,b,c,!0,d,e)},tc=function(a,b,c,d,e){if(ha(b))for(var f=0;f<b.length;f++)tc(a,b[f],c,d,
	e);else d=q(d)?!!d.capture:!!d,c=mc(c),a&&a[$b]?a.ga.remove(String(b),c,d,e):a&&(a=oc(a))&&(b=a.td(b,c,d,e))&&uc(b)},uc=function(a){if("number"!=typeof a&&a&&!a.Bb){var b=a.src;if(b&&b[$b])fc(b.ga,a);else{var c=a.type,d=a.Nc;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent&&b.detachEvent(qc(c),d);jc--;(c=oc(b))?(fc(c,a),0==c.kc&&(c.src=null,b[gc]=null)):cc(a)}}},qc=function(a){return a in ic?ic[a]:ic[a]="on"+a},wc=function(a,b,c,d){var e=!0;if(a=oc(a))if(b=a.I[b.toString()])for(b=
	b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.Bb&&(f=vc(f,d),e=e&&!1!==f)}return e},vc=function(a,b){var c=a.listener,d=a.wc||a.src;a.qc&&uc(a);return c.call(d,b)},rc=function(a,b){if(a.Bb)return!0;if(!Vb){if(!b)a:{b=["window","event"];for(var c=k,d=0;d<b.length;d++)if(c=c[b[d]],null==c){b=null;break a}b=c}d=b;b=new Yb(d,this);c=!0;if(!(0>d.keyCode||void 0!=d.returnValue)){a:{var e=!1;if(0==d.keyCode)try{d.keyCode=-1;break a}catch(g){e=!0}if(e||void 0==d.returnValue)d.returnValue=
	!0}d=[];for(e=b.currentTarget;e;e=e.parentNode)d.push(e);a=a.type;for(e=d.length-1;!b.Wa&&0<=e;e--){b.currentTarget=d[e];var f=wc(d[e],a,!0,b);c=c&&f}for(e=0;!b.Wa&&e<d.length;e++)b.currentTarget=d[e],f=wc(d[e],a,!1,b),c=c&&f}return c}return vc(a,new Yb(b,this))},oc=function(a){a=a[gc];return a instanceof dc?a:null},xc="__closure_events_fn_"+(1E9*Math.random()>>>0),mc=function(a){w(a,"Listener can not be null.");if(p(a))return a;w(a.handleEvent,"An object listener must have handleEvent method.");
	a[xc]||(a[xc]=function(b){return a.handleEvent(b)});return a[xc]};var yc=/^[+a-zA-Z0-9_.!#$%&'*\/=?^`{|}~-]+@([a-zA-Z0-9-]+\.)+[a-zA-Z0-9]{2,63}$/;var Ac=function(){this.xa="";this.ff=zc};Ac.prototype.qb=!0;Ac.prototype.ob=function(){return this.xa};Ac.prototype.toString=function(){return"SafeUrl{"+this.xa+"}"};
	var Bc=function(a){if(a instanceof Ac&&a.constructor===Ac&&a.ff===zc)return a.xa;Aa("expected object of type SafeUrl, got '"+a+"' of type "+ea(a));return"type_error:SafeUrl"},Cc=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i,Ec=function(a){if(a instanceof Ac)return a;a=a.qb?a.ob():String(a);Cc.test(a)||(a="about:invalid#zClosurez");return Dc(a)},zc={},Dc=function(a){var b=new Ac;b.xa=a;return b};Dc("about:blank");var Hc=function(a){var b=[];Fc(new Gc,a,b);return b.join("")},Gc=function(){this.Oc=void 0},Fc=function(a,b,c){if(null==b)c.push("null");else{if("object"==typeof b){if(ha(b)){var d=b;b=d.length;c.push("[");for(var e="",f=0;f<b;f++)c.push(e),e=d[f],Fc(a,a.Oc?a.Oc.call(d,String(f),e):e,c),e=",";c.push("]");return}if(b instanceof String||b instanceof Number||b instanceof Boolean)b=b.valueOf();else{c.push("{");f="";for(d in b)Object.prototype.hasOwnProperty.call(b,d)&&(e=b[d],"function"!=typeof e&&(c.push(f),
	Ic(d,c),c.push(":"),Fc(a,a.Oc?a.Oc.call(b,d,e):e,c),f=","));c.push("}");return}}switch(typeof b){case "string":Ic(b,c);break;case "number":c.push(isFinite(b)&&!isNaN(b)?String(b):"null");break;case "boolean":c.push(String(b));break;case "function":c.push("null");break;default:throw Error("Unknown type: "+typeof b);}}},Jc={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\u000b"},Kc=/\uffff/.test("\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,
	Ic=function(a,b){b.push('"',a.replace(Kc,function(a){var b=Jc[a];b||(b="\\u"+(a.charCodeAt(0)|65536).toString(16).substr(1),Jc[a]=b);return b}),'"')};var Lc=function(){};Lc.prototype.ie=null;var Mc=function(a){return a.ie||(a.ie=a.Cd())};var Nc,Oc=function(){};t(Oc,Lc);Oc.prototype.sc=function(){var a=Pc(this);return a?new ActiveXObject(a):new XMLHttpRequest};Oc.prototype.Cd=function(){var a={};Pc(this)&&(a[0]=!0,a[1]=!0);return a};
	var Pc=function(a){if(!a.De&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.De=d}catch(e){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.De};Nc=new Oc;var Qc=function(){};t(Qc,Lc);Qc.prototype.sc=function(){var a=new XMLHttpRequest;if("withCredentials"in a)return a;if("undefined"!=typeof XDomainRequest)return new Rc;throw Error("Unsupported browser");};Qc.prototype.Cd=function(){return{}};
	var Rc=function(){this.oa=new XDomainRequest;this.readyState=0;this.onreadystatechange=null;this.responseText="";this.status=-1;this.statusText=this.responseXML=null;this.oa.onload=r(this.If,this);this.oa.onerror=r(this.ye,this);this.oa.onprogress=r(this.Jf,this);this.oa.ontimeout=r(this.Kf,this)};h=Rc.prototype;h.open=function(a,b,c){if(null!=c&&!c)throw Error("Only async requests are supported.");this.oa.open(a,b)};
	h.send=function(a){if(a)if("string"==typeof a)this.oa.send(a);else throw Error("Only string data is supported");else this.oa.send()};h.abort=function(){this.oa.abort()};h.setRequestHeader=function(){};h.getResponseHeader=function(a){return"content-type"==a.toLowerCase()?this.oa.contentType:""};h.If=function(){this.status=200;this.responseText=this.oa.responseText;Sc(this,4)};h.ye=function(){this.status=500;this.responseText="";Sc(this,4)};h.Kf=function(){this.ye()};
	h.Jf=function(){this.status=200;Sc(this,1)};var Sc=function(a,b){a.readyState=b;if(a.onreadystatechange)a.onreadystatechange()};Rc.prototype.getAllResponseHeaders=function(){return"content-type: "+this.oa.contentType};var Tc=function(a,b,c){this.Vf=c;this.tf=a;this.kg=b;this.Ic=0;this.xc=null};Tc.prototype.get=function(){if(0<this.Ic){this.Ic--;var a=this.xc;this.xc=a.next;a.next=null}else a=this.tf();return a};Tc.prototype.put=function(a){this.kg(a);this.Ic<this.Vf&&(this.Ic++,a.next=this.xc,this.xc=a)};var Uc=function(a){k.setTimeout(function(){throw a;},0)},Vc,Wc=function(){var a=k.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!y("Presto")&&(a=function(){var a=document.createElement("IFRAME");a.style.display="none";a.src="";document.documentElement.appendChild(a);var b=a.contentWindow;a=b.document;a.open();a.write("");a.close();var c="callImmediate"+Math.random(),d="file:"==b.location.protocol?"*":b.location.protocol+"//"+b.location.host;
	a=r(function(a){if(("*"==d||a.origin==d)&&a.data==c)this.port1.onmessage()},this);b.addEventListener("message",a,!1);this.port1={};this.port2={postMessage:function(){b.postMessage(c,d)}}});if("undefined"!==typeof a&&!y("Trident")&&!y("MSIE")){var b=new a,c={},d=c;b.port1.onmessage=function(){if(ba(c.next)){c=c.next;var a=c.me;c.me=null;a()}};return function(a){d.next={me:a};d=d.next;b.port2.postMessage(0)}}return"undefined"!==typeof document&&"onreadystatechange"in document.createElement("SCRIPT")?
	function(a){var b=document.createElement("SCRIPT");b.onreadystatechange=function(){b.onreadystatechange=null;b.parentNode.removeChild(b);b=null;a();a=null};document.documentElement.appendChild(b)}:function(a){k.setTimeout(a,0)}};var Xc=function(){this.cd=this.hb=null},Zc=new Tc(function(){return new Yc},function(a){a.reset()},100);Xc.prototype.add=function(a,b){var c=Zc.get();c.set(a,b);this.cd?this.cd.next=c:(w(!this.hb),this.hb=c);this.cd=c};Xc.prototype.remove=function(){var a=null;this.hb&&(a=this.hb,this.hb=this.hb.next,this.hb||(this.cd=null),a.next=null);return a};var Yc=function(){this.next=this.scope=this.rd=null};Yc.prototype.set=function(a,b){this.rd=a;this.scope=b;this.next=null};
	Yc.prototype.reset=function(){this.next=this.scope=this.rd=null};var dd=function(a,b){$c||ad();bd||($c(),bd=!0);cd.add(a,b)},$c,ad=function(){if(-1!=String(k.Promise).indexOf("[native code]")){var a=k.Promise.resolve(void 0);$c=function(){a.then(ed)}}else $c=function(){var a=ed;!p(k.setImmediate)||k.Window&&k.Window.prototype&&!y("Edge")&&k.Window.prototype.setImmediate==k.setImmediate?(Vc||(Vc=Wc()),Vc(a)):k.setImmediate(a)}},bd=!1,cd=new Xc,ed=function(){for(var a;a=cd.remove();){try{a.rd.call(a.scope)}catch(b){Uc(b)}Zc.put(a)}bd=!1};var fd=function(a){return q(a)?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):void 0===a?"undefined":null===a?"null":typeof a},gd=function(a){return(a=a&&a.ownerDocument)&&(a.defaultView||a.parentWindow)||k};var hd=!z||9<=Number(Cb);!tb&&!z||z&&9<=Number(Cb)||tb&&A("1.9.1");z&&A("9");var jd=function(){this.xa="";this.ef=id};jd.prototype.qb=!0;jd.prototype.ob=function(){return this.xa};jd.prototype.toString=function(){return"SafeHtml{"+this.xa+"}"};var kd=function(a){if(a instanceof jd&&a.constructor===jd&&a.ef===id)return a.xa;Aa("expected object of type SafeHtml, got '"+a+"' of type "+ea(a));return"type_error:SafeHtml"},id={};jd.prototype.Qf=function(a){this.xa=a;return this};var ld=function(a,b){var c=gd(a);"undefined"!=typeof c.HTMLScriptElement&&"undefined"!=typeof c.Element&&w(a&&(a instanceof c.HTMLScriptElement||!(a instanceof c.Element)),"Argument is not a HTMLScriptElement (or a non-Element mock); got: %s",fd(a));a.src=Ka(b)};var md=function(a){var b=document;return m(a)?b.getElementById(a):a},od=function(a,b){eb(b,function(b,d){b&&b.qb&&(b=b.ob());"style"==d?a.style.cssText=b:"class"==d?a.className=b:"for"==d?a.htmlFor=b:nd.hasOwnProperty(d)?a.setAttribute(nd[d],b):0==d.lastIndexOf("aria-",0)||0==d.lastIndexOf("data-",0)?a.setAttribute(d,b):a[d]=b})},nd={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",
	type:"type",usemap:"useMap",valign:"vAlign",width:"width"},qd=function(a,b,c){var d=arguments,e=document,f=String(d[0]),g=d[1];if(!hd&&g&&(g.name||g.type)){f=["<",f];g.name&&f.push(' name="',wa(g.name),'"');if(g.type){f.push(' type="',wa(g.type),'"');var l={};mb(l,g);delete l.type;g=l}f.push(">");f=f.join("")}f=e.createElement(f);g&&(m(g)?f.className=g:ha(g)?f.className=g.join(" "):od(f,g));2<d.length&&pd(e,f,d);return f},pd=function(a,b,c){function d(c){c&&b.appendChild(m(c)?a.createTextNode(c):
	c)}for(var e=2;e<c.length;e++){var f=c[e];!ia(f)||q(f)&&0<f.nodeType?d(f):x(rd(f)?$a(f):f,d)}},rd=function(a){if(a&&"number"==typeof a.length){if(q(a))return"function"==typeof a.item||"string"==typeof a.item;if(p(a))return"function"==typeof a.item}return!1};var sd=function(a){a.prototype.then=a.prototype.then;a.prototype.$goog_Thenable=!0},td=function(a){if(!a)return!1;try{return!!a.$goog_Thenable}catch(b){return!1}};var C=function(a,b){this.aa=0;this.za=void 0;this.kb=this.ua=this.w=null;this.vc=this.pd=!1;if(a!=da)try{var c=this;a.call(b,function(a){ud(c,2,a)},function(a){if(!(a instanceof vd))try{if(a instanceof Error)throw a;throw Error("Promise rejected.");}catch(e){}ud(c,3,a)})}catch(d){ud(this,3,d)}},wd=function(){this.next=this.context=this.tb=this.Ua=this.child=null;this.Hb=!1};wd.prototype.reset=function(){this.context=this.tb=this.Ua=this.child=null;this.Hb=!1};
	var xd=new Tc(function(){return new wd},function(a){a.reset()},100),yd=function(a,b,c){var d=xd.get();d.Ua=a;d.tb=b;d.context=c;return d},D=function(a){if(a instanceof C)return a;var b=new C(da);ud(b,2,a);return b},E=function(a){return new C(function(b,c){c(a)})},Ad=function(a,b,c){zd(a,b,c,null)||dd(la(b,a))},Bd=function(a){return new C(function(b,c){var d=a.length,e=[];if(d)for(var f=function(a,c){d--;e[a]=c;0==d&&b(e)},g=function(a){c(a)},l=0,n;l<a.length;l++)n=a[l],Ad(n,la(f,l),g);else b(e)})},
	Cd=function(a){return new C(function(b){var c=a.length,d=[];if(c)for(var e=function(a,e,f){c--;d[a]=e?{Df:!0,value:f}:{Df:!1,reason:f};0==c&&b(d)},f=0,g;f<a.length;f++)g=a[f],Ad(g,la(e,f,!0),la(e,f,!1));else b(d)})};C.prototype.then=function(a,b,c){null!=a&&Da(a,"opt_onFulfilled should be a function.");null!=b&&Da(b,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");return Dd(this,p(a)?a:null,p(b)?b:null,c)};sd(C);
	var Fd=function(a,b){b=yd(b,b,void 0);b.Hb=!0;Ed(a,b);return a};C.prototype.g=function(a,b){return Dd(this,null,a,b)};C.prototype.cancel=function(a){0==this.aa&&dd(function(){var b=new vd(a);Gd(this,b)},this)};
	var Gd=function(a,b){if(0==a.aa)if(a.w){var c=a.w;if(c.ua){for(var d=0,e=null,f=null,g=c.ua;g&&(g.Hb||(d++,g.child==a&&(e=g),!(e&&1<d)));g=g.next)e||(f=g);e&&(0==c.aa&&1==d?Gd(c,b):(f?(d=f,w(c.ua),w(null!=d),d.next==c.kb&&(c.kb=d),d.next=d.next.next):Hd(c),Id(c,e,3,b)))}a.w=null}else ud(a,3,b)},Ed=function(a,b){a.ua||2!=a.aa&&3!=a.aa||Jd(a);w(null!=b.Ua);a.kb?a.kb.next=b:a.ua=b;a.kb=b},Dd=function(a,b,c,d){var e=yd(null,null,null);e.child=new C(function(a,g){e.Ua=b?function(c){try{var e=b.call(d,
	c);a(e)}catch(F){g(F)}}:a;e.tb=c?function(b){try{var e=c.call(d,b);!ba(e)&&b instanceof vd?g(b):a(e)}catch(F){g(F)}}:g});e.child.w=a;Ed(a,e);return e.child};C.prototype.yg=function(a){w(1==this.aa);this.aa=0;ud(this,2,a)};C.prototype.zg=function(a){w(1==this.aa);this.aa=0;ud(this,3,a)};
	var ud=function(a,b,c){0==a.aa&&(a===c&&(b=3,c=new TypeError("Promise cannot resolve to itself")),a.aa=1,zd(c,a.yg,a.zg,a)||(a.za=c,a.aa=b,a.w=null,Jd(a),3!=b||c instanceof vd||Kd(a,c)))},zd=function(a,b,c,d){if(a instanceof C)return null!=b&&Da(b,"opt_onFulfilled should be a function."),null!=c&&Da(c,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?"),Ed(a,yd(b||da,c||null,d)),!0;if(td(a))return a.then(b,c,d),!0;if(q(a))try{var e=a.then;if(p(e))return Ld(a,
	e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1},Ld=function(a,b,c,d,e){var f=!1,g=function(a){f||(f=!0,c.call(e,a))},l=function(a){f||(f=!0,d.call(e,a))};try{b.call(a,g,l)}catch(n){l(n)}},Jd=function(a){a.pd||(a.pd=!0,dd(a.yf,a))},Hd=function(a){var b=null;a.ua&&(b=a.ua,a.ua=b.next,b.next=null);a.ua||(a.kb=null);null!=b&&w(null!=b.Ua);return b};C.prototype.yf=function(){for(var a;a=Hd(this);)Id(this,a,this.aa,this.za);this.pd=!1};
	var Id=function(a,b,c,d){if(3==c&&b.tb&&!b.Hb)for(;a&&a.vc;a=a.w)a.vc=!1;if(b.child)b.child.w=null,Md(b,c,d);else try{b.Hb?b.Ua.call(b.context):Md(b,c,d)}catch(e){Nd.call(null,e)}xd.put(b)},Md=function(a,b,c){2==b?a.Ua.call(a.context,c):a.tb&&a.tb.call(a.context,c)},Kd=function(a,b){a.vc=!0;dd(function(){a.vc&&Nd.call(null,b)})},Nd=Uc,vd=function(a){u.call(this,a)};t(vd,u);vd.prototype.name="cancel";
	var Od=function(a,b){this.Rc=[];this.Le=a;this.qe=b||null;this.Pb=this.nb=!1;this.za=void 0;this.ae=this.ge=this.gd=!1;this.Zc=0;this.w=null;this.hd=0};Od.prototype.cancel=function(a){if(this.nb)this.za instanceof Od&&this.za.cancel();else{if(this.w){var b=this.w;delete this.w;a?b.cancel(a):(b.hd--,0>=b.hd&&b.cancel())}this.Le?this.Le.call(this.qe,this):this.ae=!0;this.nb||Pd(this,new Qd)}};Od.prototype.oe=function(a,b){this.gd=!1;Rd(this,a,b)};
	var Rd=function(a,b,c){a.nb=!0;a.za=c;a.Pb=!b;Sd(a)},Ud=function(a){if(a.nb){if(!a.ae)throw new Td;a.ae=!1}};Od.prototype.callback=function(a){Ud(this);Vd(a);Rd(this,!0,a)};var Pd=function(a,b){Ud(a);Vd(b);Rd(a,!1,b)},Vd=function(a){w(!(a instanceof Od),"An execution sequence may not be initiated with a blocking Deferred.")},Xd=function(a,b){Wd(a,null,b,void 0)},Wd=function(a,b,c,d){w(!a.ge,"Blocking Deferreds can not be re-used");a.Rc.push([b,c,d]);a.nb&&Sd(a)};
	Od.prototype.then=function(a,b,c){var d,e,f=new C(function(a,b){d=a;e=b});Wd(this,d,function(a){a instanceof Qd?f.cancel():e(a)});return f.then(a,b,c)};sd(Od);
	var Yd=function(a){return Sa(a.Rc,function(a){return p(a[1])})},Sd=function(a){if(a.Zc&&a.nb&&Yd(a)){var b=a.Zc,c=Zd[b];c&&(k.clearTimeout(c.Qb),delete Zd[b]);a.Zc=0}a.w&&(a.w.hd--,delete a.w);b=a.za;for(var d=c=!1;a.Rc.length&&!a.gd;){var e=a.Rc.shift(),f=e[0],g=e[1];e=e[2];if(f=a.Pb?g:f)try{var l=f.call(e||a.qe,b);ba(l)&&(a.Pb=a.Pb&&(l==b||l instanceof Error),a.za=b=l);if(td(b)||"function"===typeof k.Promise&&b instanceof k.Promise)d=!0,a.gd=!0}catch(n){b=n,a.Pb=!0,Yd(a)||(c=!0)}}a.za=b;d&&(l=r(a.oe,
	a,!0),d=r(a.oe,a,!1),b instanceof Od?(Wd(b,l,d),b.ge=!0):b.then(l,d));c&&(b=new $d(b),Zd[b.Qb]=b,a.Zc=b.Qb)},Td=function(){u.call(this)};t(Td,u);Td.prototype.message="Deferred has already fired";Td.prototype.name="AlreadyCalledError";var Qd=function(){u.call(this)};t(Qd,u);Qd.prototype.message="Deferred was canceled";Qd.prototype.name="CanceledError";var $d=function(a){this.Qb=k.setTimeout(r(this.xg,this),0);this.ba=a};
	$d.prototype.xg=function(){w(Zd[this.Qb],"Cannot throw an error that is not scheduled.");delete Zd[this.Qb];throw this.ba;};var Zd={};var ee=function(a){var b={},c=b.document||document,d=Ka(a),e=document.createElement("SCRIPT"),f={Te:e,jc:void 0},g=new Od(ae,f),l=null,n=null!=b.timeout?b.timeout:5E3;0<n&&(l=window.setTimeout(function(){be(e,!0);Pd(g,new ce(1,"Timeout reached for loading script "+d))},n),f.jc=l);e.onload=e.onreadystatechange=function(){e.readyState&&"loaded"!=e.readyState&&"complete"!=e.readyState||(be(e,b.Og||!1,l),g.callback(null))};e.onerror=function(){be(e,!0,l);Pd(g,new ce(0,"Error while loading script "+d))};
	f=b.attributes||{};mb(f,{type:"text/javascript",charset:"UTF-8"});od(e,f);ld(e,a);de(c).appendChild(e);return g},de=function(a){var b;return(b=(a||document).getElementsByTagName("HEAD"))&&0!=b.length?b[0]:a.documentElement},ae=function(){if(this&&this.Te){var a=this.Te;a&&"SCRIPT"==a.tagName&&be(a,!0,this.jc)}},be=function(a,b,c){null!=c&&k.clearTimeout(c);a.onload=da;a.onerror=da;a.onreadystatechange=da;b&&window.setTimeout(function(){a&&a.parentNode&&a.parentNode.removeChild(a)},0)},ce=function(a,
	b){var c="Jsloader error (code #"+a+")";b&&(c+=": "+b);u.call(this,c);this.code=a};t(ce,u);var fe=function(a,b,c,d,e){this.reset(a,b,c,d,e)};fe.prototype.se=null;var ge=0;fe.prototype.reset=function(a,b,c,d,e){"number"==typeof e||ge++;d||ma();this.Vb=a;this.Zf=b;delete this.se};fe.prototype.Ue=function(a){this.Vb=a};var he=function(a){this.Je=a;this.ze=this.kd=this.Vb=this.w=null},ie=function(a,b){this.name=a;this.value=b};ie.prototype.toString=function(){return this.name};var je=new ie("SEVERE",1E3),ke=new ie("INFO",800),le=new ie("CONFIG",700),me=new ie("FINE",500);he.prototype.getName=function(){return this.Je};he.prototype.getParent=function(){return this.w};he.prototype.Ue=function(a){this.Vb=a};var ne=function(a){if(a.Vb)return a.Vb;if(a.w)return ne(a.w);Aa("Root logger has no level set.");return null};
	he.prototype.log=function(a,b,c){if(a.value>=ne(this).value)for(p(b)&&(b=b()),a=new fe(a,String(b),this.Je),c&&(a.se=c),c="log:"+a.Zf,(b=k.console)&&b.timeStamp&&b.timeStamp(c),(b=k.msWriteProfilerMark)&&b(c),c=this;c;){var d=c,e=a;if(d.ze)for(var f=0;b=d.ze[f];f++)b(e);c=c.getParent()}};he.prototype.info=function(a,b){this.log(ke,a,b)};he.prototype.config=function(a,b){this.log(le,a,b)};
	var oe={},pe=null,qe=function(a){pe||(pe=new he(""),oe[""]=pe,pe.Ue(le));var b;if(!(b=oe[a])){b=new he(a);var c=a.lastIndexOf("."),d=a.substr(c+1);c=qe(a.substr(0,c));c.kd||(c.kd={});c.kd[d]=b;b.w=c;oe[a]=b}return b};var G=function(){Ub.call(this);this.ga=new dc(this);this.kf=this;this.Kd=null};t(G,Ub);G.prototype[$b]=!0;h=G.prototype;h.addEventListener=function(a,b,c,d){lc(this,a,b,c,d)};h.removeEventListener=function(a,b,c,d){tc(this,a,b,c,d)};
	h.dispatchEvent=function(a){re(this);var b=this.Kd;if(b){var c=[];for(var d=1;b;b=b.Kd)c.push(b),w(1E3>++d,"infinite loop")}b=this.kf;d=a.type||a;if(m(a))a=new B(a,b);else if(a instanceof B)a.target=a.target||b;else{var e=a;a=new B(d,b);mb(a,e)}e=!0;if(c)for(var f=c.length-1;!a.Wa&&0<=f;f--){var g=a.currentTarget=c[f];e=se(g,d,!0,a)&&e}a.Wa||(g=a.currentTarget=b,e=se(g,d,!0,a)&&e,a.Wa||(e=se(g,d,!1,a)&&e));if(c)for(f=0;!a.Wa&&f<c.length;f++)g=a.currentTarget=c[f],e=se(g,d,!1,a)&&e;return e};
	h.lb=function(){G.Vc.lb.call(this);if(this.ga){var a=this.ga,b=0,c;for(c in a.I){for(var d=a.I[c],e=0;e<d.length;e++)++b,cc(d[e]);delete a.I[c];a.kc--}}this.Kd=null};h.listen=function(a,b,c,d){re(this);return this.ga.add(String(a),b,!1,c,d)};
	var sc=function(a,b,c,d,e){a.ga.add(String(b),c,!0,d,e)},se=function(a,b,c,d){b=a.ga.I[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.Bb&&g.capture==c){var l=g.listener,n=g.wc||g.src;g.qc&&fc(a.ga,g);e=!1!==l.call(n,d)&&e}}return e&&0!=d.Se};G.prototype.td=function(a,b,c,d){return this.ga.td(String(a),b,c,d)};G.prototype.hasListener=function(a,b){return this.ga.hasListener(ba(a)?String(a):void 0,b)};var re=function(a){w(a.ga,"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?")};var te="StopIteration"in k?k.StopIteration:{message:"StopIteration",stack:""},ue=function(){};ue.prototype.next=function(){throw te;};ue.prototype.jf=function(){return this};var H=function(a,b){a&&a.log(me,b,void 0)};var ve=function(a,b){this.ja={};this.B=[];this.gb=this.u=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1])}else a&&this.addAll(a)};h=ve.prototype;h.ha=function(){we(this);for(var a=[],b=0;b<this.B.length;b++)a.push(this.ja[this.B[b]]);return a};h.va=function(){we(this);return this.B.concat()};h.Jb=function(a){return xe(this.ja,a)};h.clear=function(){this.ja={};this.gb=this.u=this.B.length=0};
	h.remove=function(a){return xe(this.ja,a)?(delete this.ja[a],this.u--,this.gb++,this.B.length>2*this.u&&we(this),!0):!1};var we=function(a){if(a.u!=a.B.length){for(var b=0,c=0;b<a.B.length;){var d=a.B[b];xe(a.ja,d)&&(a.B[c++]=d);b++}a.B.length=c}if(a.u!=a.B.length){var e={};for(c=b=0;b<a.B.length;)d=a.B[b],xe(e,d)||(a.B[c++]=d,e[d]=1),b++;a.B.length=c}};h=ve.prototype;h.get=function(a,b){return xe(this.ja,a)?this.ja[a]:b};
	h.set=function(a,b){xe(this.ja,a)||(this.u++,this.B.push(a),this.gb++);this.ja[a]=b};h.addAll=function(a){if(a instanceof ve){var b=a.va();a=a.ha()}else b=hb(a),a=gb(a);for(var c=0;c<b.length;c++)this.set(b[c],a[c])};h.forEach=function(a,b){for(var c=this.va(),d=0;d<c.length;d++){var e=c[d],f=this.get(e);a.call(b,f,e,this)}};h.clone=function(){return new ve(this)};
	h.jf=function(a){we(this);var b=0,c=this.gb,d=this,e=new ue;e.next=function(){if(c!=d.gb)throw Error("The map has changed since the iterator was created");if(b>=d.B.length)throw te;var e=d.B[b++];return a?e:d.ja[e]};return e};var xe=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};var ye=function(a){if(a.ha&&"function"==typeof a.ha)return a.ha();if(m(a))return a.split("");if(ia(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}return gb(a)},ze=function(a){if(a.va&&"function"==typeof a.va)return a.va();if(!a.ha||"function"!=typeof a.ha){if(ia(a)||m(a)){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}return hb(a)}},Ae=function(a,b,c){if(a.forEach&&"function"==typeof a.forEach)a.forEach(b,c);else if(ia(a)||m(a))x(a,b,c);else for(var d=ze(a),e=ye(a),f=e.length,
	g=0;g<f;g++)b.call(c,e[g],d&&d[g],a)};var Be=function(a,b,c){if(p(a))c&&(a=r(a,c));else if(a&&"function"==typeof a.handleEvent)a=r(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)},Ce=function(a){var b=null;return(new C(function(c,d){b=Be(function(){c(void 0)},a);-1==b&&d(Error("Failed to schedule timer."))})).g(function(a){k.clearTimeout(b);throw a;})};var De=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/,Ee=function(a,b){if(a){a=a.split("&");for(var c=0;c<a.length;c++){var d=a[c].indexOf("="),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\+/g," ")):"")}}};var I=function(a){G.call(this);this.headers=new ve;this.ed=a||null;this.Ca=!1;this.dd=this.b=null;this.Ub=this.Ie=this.Fc="";this.Qa=this.zd=this.Ac=this.od=!1;this.Db=0;this.Wc=null;this.Pc="";this.$c=this.fg=this.df=!1};t(I,G);var Fe=I.prototype,Ge=qe("goog.net.XhrIo");Fe.R=Ge;var He=/^https?$/i,Ie=["POST","PUT"];
	I.prototype.send=function(a,b,c,d){if(this.b)throw Error("[goog.net.XhrIo] Object is active with another request="+this.Fc+"; newUri="+a);b=b?b.toUpperCase():"GET";this.Fc=a;this.Ub="";this.Ie=b;this.od=!1;this.Ca=!0;this.b=this.ed?this.ed.sc():Nc.sc();this.dd=this.ed?Mc(this.ed):Mc(Nc);this.b.onreadystatechange=r(this.Pe,this);this.fg&&"onprogress"in this.b&&(this.b.onprogress=r(function(a){this.Oe(a,!0)},this),this.b.upload&&(this.b.upload.onprogress=r(this.Oe,this)));try{H(this.R,Je(this,"Opening Xhr")),
	this.zd=!0,this.b.open(b,String(a),!0),this.zd=!1}catch(f){H(this.R,Je(this,"Error opening Xhr: "+f.message));this.ba(5,f);return}a=c||"";var e=this.headers.clone();d&&Ae(d,function(a,b){e.set(b,a)});d=Ua(e.va());c=k.FormData&&a instanceof k.FormData;!Va(Ie,b)||d||c||e.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");e.forEach(function(a,b){this.b.setRequestHeader(b,a)},this);this.Pc&&(this.b.responseType=this.Pc);"withCredentials"in this.b&&this.b.withCredentials!==this.df&&
	(this.b.withCredentials=this.df);try{Ke(this),0<this.Db&&(this.$c=Le(this.b),H(this.R,Je(this,"Will abort after "+this.Db+"ms if incomplete, xhr2 "+this.$c)),this.$c?(this.b.timeout=this.Db,this.b.ontimeout=r(this.jc,this)):this.Wc=Be(this.jc,this.Db,this)),H(this.R,Je(this,"Sending request")),this.Ac=!0,this.b.send(a),this.Ac=!1}catch(f){H(this.R,Je(this,"Send error: "+f.message)),this.ba(5,f)}};
	var Le=function(a){return z&&A(9)&&"number"==typeof a.timeout&&ba(a.ontimeout)},Ta=function(a){return"content-type"==a.toLowerCase()};I.prototype.jc=function(){"undefined"!=typeof aa&&this.b&&(this.Ub="Timed out after "+this.Db+"ms, aborting",H(this.R,Je(this,this.Ub)),this.dispatchEvent("timeout"),this.abort(8))};I.prototype.ba=function(a,b){this.Ca=!1;this.b&&(this.Qa=!0,this.b.abort(),this.Qa=!1);this.Ub=b;Me(this);Ne(this)};var Me=function(a){a.od||(a.od=!0,a.dispatchEvent("complete"),a.dispatchEvent("error"))};
	I.prototype.abort=function(){this.b&&this.Ca&&(H(this.R,Je(this,"Aborting")),this.Ca=!1,this.Qa=!0,this.b.abort(),this.Qa=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),Ne(this))};I.prototype.lb=function(){this.b&&(this.Ca&&(this.Ca=!1,this.Qa=!0,this.b.abort(),this.Qa=!1),Ne(this,!0));I.Vc.lb.call(this)};I.prototype.Pe=function(){this.isDisposed()||(this.zd||this.Ac||this.Qa?Oe(this):this.bg())};I.prototype.bg=function(){Oe(this)};
	var Oe=function(a){if(a.Ca&&"undefined"!=typeof aa)if(a.dd[1]&&4==Pe(a)&&2==Qe(a))H(a.R,Je(a,"Local request error detected and ignored"));else if(a.Ac&&4==Pe(a))Be(a.Pe,0,a);else if(a.dispatchEvent("readystatechange"),4==Pe(a)){H(a.R,Je(a,"Request complete"));a.Ca=!1;try{var b=Qe(a);a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1}var d;if(!(d=c)){var e;if(e=0===b){var f=String(a.Fc).match(De)[1]||null;if(!f&&k.self&&k.self.location){var g=
	k.self.location.protocol;f=g.substr(0,g.length-1)}e=!He.test(f?f.toLowerCase():"")}d=e}if(d)a.dispatchEvent("complete"),a.dispatchEvent("success");else{try{var l=2<Pe(a)?a.b.statusText:""}catch(n){H(a.R,"Can not get status: "+n.message),l=""}a.Ub=l+" ["+Qe(a)+"]";Me(a)}}finally{Ne(a)}}};I.prototype.Oe=function(a,b){w("progress"===a.type,"goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");this.dispatchEvent(Re(a,"progress"));this.dispatchEvent(Re(a,b?"downloadprogress":"uploadprogress"))};
	var Re=function(a,b){return{type:b,lengthComputable:a.lengthComputable,loaded:a.loaded,total:a.total}},Ne=function(a,b){if(a.b){Ke(a);var c=a.b,d=a.dd[0]?da:null;a.b=null;a.dd=null;b||a.dispatchEvent("ready");try{c.onreadystatechange=d}catch(e){(a=a.R)&&a.log(je,"Problem encountered resetting onreadystatechange: "+e.message,void 0)}}},Ke=function(a){a.b&&a.$c&&(a.b.ontimeout=null);a.Wc&&(k.clearTimeout(a.Wc),a.Wc=null)},Pe=function(a){return a.b?a.b.readyState:0},Qe=function(a){try{return 2<Pe(a)?
	a.b.status:-1}catch(b){return-1}},Se=function(a){try{return a.b?a.b.responseText:""}catch(b){return H(a.R,"Can not get responseText: "+b.message),""}};
	I.prototype.getResponse=function(){try{if(!this.b)return null;if("response"in this.b)return this.b.response;switch(this.Pc){case "":case "text":return this.b.responseText;case "arraybuffer":if("mozResponseArrayBuffer"in this.b)return this.b.mozResponseArrayBuffer}var a=this.R;a&&a.log(je,"Response type "+this.Pc+" is not supported on this browser",void 0);return null}catch(b){return H(this.R,"Can not get response: "+b.message),null}};
	I.prototype.getResponseHeader=function(a){if(this.b&&4==Pe(this))return a=this.b.getResponseHeader(a),null===a?void 0:a};I.prototype.getAllResponseHeaders=function(){return this.b&&4==Pe(this)?this.b.getAllResponseHeaders():""};var Je=function(a,b){return b+" ["+a.Ie+" "+a.Fc+" "+Qe(a)+"]"};var Te=function(a,b){this.pa=this.eb=this.qa="";this.vb=null;this.Pa=this.Ga="";this.da=this.Uf=!1;if(a instanceof Te){this.da=ba(b)?b:a.da;Ue(this,a.qa);var c=a.eb;J(this);this.eb=c;Ve(this,a.pa);We(this,a.vb);Xe(this,a.Ga);Ye(this,a.ea.clone());a=a.Pa;J(this);this.Pa=a}else a&&(c=String(a).match(De))?(this.da=!!b,Ue(this,c[1]||"",!0),a=c[2]||"",J(this),this.eb=Ze(a),Ve(this,c[3]||"",!0),We(this,c[4]),Xe(this,c[5]||"",!0),Ye(this,c[6]||"",!0),a=c[7]||"",J(this),this.Pa=Ze(a)):(this.da=!!b,this.ea=
	new $e(null,0,this.da))};Te.prototype.toString=function(){var a=[],b=this.qa;b&&a.push(af(b,bf,!0),":");var c=this.pa;if(c||"file"==b)a.push("//"),(b=this.eb)&&a.push(af(b,bf,!0),"@"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),c=this.vb,null!=c&&a.push(":",String(c));if(c=this.Ga)this.pa&&"/"!=c.charAt(0)&&a.push("/"),a.push(af(c,"/"==c.charAt(0)?cf:df,!0));(c=this.ea.toString())&&a.push("?",c);(c=this.Pa)&&a.push("#",af(c,ef));return a.join("")};
	Te.prototype.resolve=function(a){var b=this.clone(),c=!!a.qa;c?Ue(b,a.qa):c=!!a.eb;if(c){var d=a.eb;J(b);b.eb=d}else c=!!a.pa;c?Ve(b,a.pa):c=null!=a.vb;d=a.Ga;if(c)We(b,a.vb);else if(c=!!a.Ga){if("/"!=d.charAt(0))if(this.pa&&!this.Ga)d="/"+d;else{var e=b.Ga.lastIndexOf("/");-1!=e&&(d=b.Ga.substr(0,e+1)+d)}e=d;if(".."==e||"."==e)d="";else if(v(e,"./")||v(e,"/.")){d=0==e.lastIndexOf("/",0);e=e.split("/");for(var f=[],g=0;g<e.length;){var l=e[g++];"."==l?d&&g==e.length&&f.push(""):".."==l?((1<f.length||
	1==f.length&&""!=f[0])&&f.pop(),d&&g==e.length&&f.push("")):(f.push(l),d=!0)}d=f.join("/")}else d=e}c?Xe(b,d):c=""!==a.ea.toString();c?Ye(b,a.ea.clone()):c=!!a.Pa;c&&(a=a.Pa,J(b),b.Pa=a);return b};Te.prototype.clone=function(){return new Te(this)};
	var Ue=function(a,b,c){J(a);a.qa=c?Ze(b,!0):b;a.qa&&(a.qa=a.qa.replace(/:$/,""))},Ve=function(a,b,c){J(a);a.pa=c?Ze(b,!0):b},We=function(a,b){J(a);if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.vb=b}else a.vb=null},Xe=function(a,b,c){J(a);a.Ga=c?Ze(b,!0):b},Ye=function(a,b,c){J(a);b instanceof $e?(a.ea=b,a.ea.Zd(a.da)):(c||(b=af(b,ff)),a.ea=new $e(b,0,a.da))},K=function(a,b,c){J(a);a.ea.set(b,c)},gf=function(a,b){return a.ea.get(b)};
	Te.prototype.removeParameter=function(a){J(this);this.ea.remove(a);return this};var J=function(a){if(a.Uf)throw Error("Tried to modify a read-only Uri");};Te.prototype.Zd=function(a){this.da=a;this.ea&&this.ea.Zd(a);return this};
	var hf=function(a){return a instanceof Te?a.clone():new Te(a,void 0)},jf=function(a,b){var c=new Te(null,void 0);Ue(c,"https");a&&Ve(c,a);b&&Xe(c,b);return c},Ze=function(a,b){return a?b?decodeURI(a.replace(/%25/g,"%2525")):decodeURIComponent(a):""},af=function(a,b,c){return m(a)?(a=encodeURI(a).replace(b,kf),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),a):null},kf=function(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)},bf=/[#\/\?@]/g,df=/[\#\?:]/g,cf=/[\#\?]/g,ff=/[\#\?@]/g,
	ef=/#/g,$e=function(a,b,c){this.u=this.s=null;this.V=a||null;this.da=!!c},lf=function(a){a.s||(a.s=new ve,a.u=0,a.V&&Ee(a.V,function(b,c){a.add(decodeURIComponent(b.replace(/\+/g," ")),c)}))},nf=function(a){var b=ze(a);if("undefined"==typeof b)throw Error("Keys are undefined");var c=new $e(null,0,void 0);a=ye(a);for(var d=0;d<b.length;d++){var e=b[d],f=a[d];ha(f)?mf(c,e,f):c.add(e,f)}return c};h=$e.prototype;
	h.add=function(a,b){lf(this);this.V=null;a=this.ca(a);var c=this.s.get(a);c||this.s.set(a,c=[]);c.push(b);this.u=Ba(this.u)+1;return this};h.remove=function(a){lf(this);a=this.ca(a);return this.s.Jb(a)?(this.V=null,this.u=Ba(this.u)-this.s.get(a).length,this.s.remove(a)):!1};h.clear=function(){this.s=this.V=null;this.u=0};h.Jb=function(a){lf(this);a=this.ca(a);return this.s.Jb(a)};h.forEach=function(a,b){lf(this);this.s.forEach(function(c,d){x(c,function(c){a.call(b,c,d,this)},this)},this)};
	h.va=function(){lf(this);for(var a=this.s.ha(),b=this.s.va(),c=[],d=0;d<b.length;d++)for(var e=a[d],f=0;f<e.length;f++)c.push(b[d]);return c};h.ha=function(a){lf(this);var b=[];if(m(a))this.Jb(a)&&(b=Za(b,this.s.get(this.ca(a))));else{a=this.s.ha();for(var c=0;c<a.length;c++)b=Za(b,a[c])}return b};h.set=function(a,b){lf(this);this.V=null;a=this.ca(a);this.Jb(a)&&(this.u=Ba(this.u)-this.s.get(a).length);this.s.set(a,[b]);this.u=Ba(this.u)+1;return this};
	h.get=function(a,b){a=a?this.ha(a):[];return 0<a.length?String(a[0]):b};var mf=function(a,b,c){a.remove(b);0<c.length&&(a.V=null,a.s.set(a.ca(b),$a(c)),a.u=Ba(a.u)+c.length)};h=$e.prototype;h.toString=function(){if(this.V)return this.V;if(!this.s)return"";for(var a=[],b=this.s.va(),c=0;c<b.length;c++){var d=b[c],e=encodeURIComponent(String(d));d=this.ha(d);for(var f=0;f<d.length;f++){var g=e;""!==d[f]&&(g+="="+encodeURIComponent(String(d[f])));a.push(g)}}return this.V=a.join("&")};
	h.clone=function(){var a=new $e;a.V=this.V;this.s&&(a.s=this.s.clone(),a.u=this.u);return a};h.ca=function(a){a=String(a);this.da&&(a=a.toLowerCase());return a};h.Zd=function(a){a&&!this.da&&(lf(this),this.V=null,this.s.forEach(function(a,c){var b=c.toLowerCase();c!=b&&(this.remove(c),mf(this,b,a))},this));this.da=a};h.extend=function(a){for(var b=0;b<arguments.length;b++)Ae(arguments[b],function(a,b){this.add(b,a)},this)};var of={Jg:{qd:"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",Vd:"https://securetoken.googleapis.com/v1/token",id:"p"},Kg:{qd:"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",Vd:"https://staging-securetoken.sandbox.googleapis.com/v1/token",id:"s"},Lg:{qd:"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",Vd:"https://test-securetoken.sandbox.googleapis.com/v1/token",id:"t"}},pf=function(a){for(var b in of)if(of[b].id===a)return a=
	of[b],{firebaseEndpoint:a.qd,secureTokenEndpoint:a.Vd};return null},qf;qf=pf("__EID__")?"__EID__":void 0;var rf=function(){var a=L();return z&&!!Cb&&11==Cb||/Edge\/\d+/.test(a)},sf=function(){return k.window&&k.window.location.href||""},tf=function(a,b){b=b||k.window;var c="about:blank";a&&(c=Bc(Ec(a)));b.location.href=c},uf=function(a,b){var c=[],d;for(d in a)d in b?typeof a[d]!=typeof b[d]?c.push(d):ha(a[d])?jb(a[d],b[d])||c.push(d):"object"==typeof a[d]&&null!=a[d]&&null!=b[d]?0<uf(a[d],b[d]).length&&c.push(d):a[d]!==b[d]&&c.push(d):c.push(d);for(d in b)d in a||c.push(d);return c},wf=function(){var a=
	L();a="Chrome"!=vf(a)?null:(a=a.match(/\sChrome\/(\d+)/i))&&2==a.length?parseInt(a[1],10):null;return a&&30>a?!1:!z||!Cb||9<Cb},xf=function(a){a=(a||L()).toLowerCase();return a.match(/android/)||a.match(/webos/)||a.match(/iphone|ipad|ipod/)||a.match(/blackberry/)||a.match(/windows phone/)||a.match(/iemobile/)?!0:!1},yf=function(a){a=a||k.window;try{a.close()}catch(b){}},zf=function(a,b,c){var d=Math.floor(1E9*Math.random()).toString();b=b||500;c=c||600;var e=(window.screen.availHeight-c)/2,f=(window.screen.availWidth-
	b)/2;b={width:b,height:c,top:0<e?e:0,left:0<f?f:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1};c=L().toLowerCase();d&&(b.target=d,v(c,"crios/")&&(b.target="_blank"));"Firefox"==vf(L())&&(a=a||"http://localhost",b.scrollbars=!0);c=a||"";(d=b)||(d={});a=window;b=c instanceof Ac?c:Ec("undefined"!=typeof c.href?c.href:String(c));c=d.target||c.target;e=[];for(g in d)switch(g){case "width":case "height":case "top":case "left":e.push(g+"="+d[g]);break;case "target":case "noreferrer":break;default:e.push(g+
	"="+(d[g]?1:0))}var g=e.join(",");(y("iPhone")&&!y("iPod")&&!y("iPad")||y("iPad")||y("iPod"))&&a.navigator&&a.navigator.standalone&&c&&"_self"!=c?(g=a.document.createElement("A"),e=gd(g),"undefined"!=typeof e.HTMLAnchorElement&&"undefined"!=typeof e.Location&&"undefined"!=typeof e.Element&&w(g&&(g instanceof e.HTMLAnchorElement||!(g instanceof e.Location||g instanceof e.Element)),"Argument is not a HTMLAnchorElement (or a non-Element mock); got: %s",fd(g)),b instanceof Ac||b instanceof Ac||(b=b.qb?
	b.ob():String(b),w(Cc.test(b))||(b="about:invalid#zClosurez"),b=Dc(b)),g.href=Bc(b),g.setAttribute("target",c),d.noreferrer&&g.setAttribute("rel","noreferrer"),d=document.createEvent("MouseEvent"),d.initMouseEvent("click",!0,!0,a,1),g.dispatchEvent(d),g={}):d.noreferrer?(g=a.open("",c,g),d=Bc(b),g&&(sb&&v(d,";")&&(d="'"+d.replace(/'/g,"%27")+"'"),g.opener=null,a=Ha("b/12014412, meta tag with sanitized URL"),d='<META HTTP-EQUIV="refresh" content="0; url='+wa(d)+'">',Ca(Ga(a),"must provide justification"),
	w(!/^[\s\xa0]*$/.test(Ga(a)),"must provide non-empty justification"),g.document.write(kd((new jd).Qf(d))),g.document.close())):g=a.open(Bc(b),c,g);if(g)try{g.focus()}catch(l){}return g},Af=function(a){return new C(function(b){var c=function(){Ce(2E3).then(function(){if(!a||a.closed)b();else return c()})};return c()})},Bf=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,Cf=function(){var a=null;return(new C(function(b){"complete"==k.document.readyState?b():(a=function(){b()},kc(window,"load",a))})).g(function(b){tc(window,
	"load",a);throw b;})},Ef=function(){return Df(void 0)?Cf().then(function(){return new C(function(a,b){var c=k.document,d=setTimeout(function(){b(Error("Cordova framework is not ready."))},1E3);c.addEventListener("deviceready",function(){clearTimeout(d);a()},!1)})}):E(Error("Cordova must run in an Android or iOS file scheme."))},Df=function(a){a=a||L();return!("file:"!==Ff()||!a.toLowerCase().match(/iphone|ipad|ipod|android/))},Gf=function(){var a=k.window;try{return!(!a||a==a.top)}catch(b){return!1}},
	Hf=function(){return firebase.INTERNAL.hasOwnProperty("reactNative")?"ReactNative":firebase.INTERNAL.hasOwnProperty("node")?"Node":"Browser"},If=function(){var a=Hf();return"ReactNative"===a||"Node"===a},vf=function(a){var b=a.toLowerCase();if(v(b,"opera/")||v(b,"opr/")||v(b,"opios/"))return"Opera";if(v(b,"iemobile"))return"IEMobile";if(v(b,"msie")||v(b,"trident/"))return"IE";if(v(b,"edge/"))return"Edge";if(v(b,"firefox/"))return"Firefox";if(v(b,"silk/"))return"Silk";if(v(b,"blackberry"))return"Blackberry";
	if(v(b,"webos"))return"Webos";if(!v(b,"safari/")||v(b,"chrome/")||v(b,"crios/")||v(b,"android"))if(!v(b,"chrome/")&&!v(b,"crios/")||v(b,"edge/")){if(v(b,"android"))return"Android";if((a=a.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&2==a.length)return a[1]}else return"Chrome";else return"Safari";return"Other"},Jf={Eg:"FirebaseCore-web",Gg:"FirebaseUI-web"},Kf=function(a,b){b=b||[];var c=[],d={},e;for(e in Jf)d[Jf[e]]=!0;for(e=0;e<b.length;e++)"undefined"!==typeof d[b[e]]&&(delete d[b[e]],c.push(b[e]));
	c.sort();b=c;b.length||(b=["FirebaseCore-web"]);c=Hf();return("Browser"===c?vf(L()):c)+"/JsCore/"+a+"/"+b.join(",")},L=function(){return k.navigator&&k.navigator.userAgent||""},M=function(a,b){a=a.split(".");b=b||k;for(var c=0;c<a.length&&"object"==typeof b&&null!=b;c++)b=b[a[c]];c!=a.length&&(b=void 0);return b},Mf=function(){try{var a=k.localStorage,b=Lf();if(a)return a.setItem(b,"1"),a.removeItem(b),rf()?!!k.indexedDB:!0}catch(c){}return!1},Of=function(){return(Nf()||"chrome-extension:"===Ff()||
	Df())&&!If()&&Mf()},Nf=function(){return"http:"===Ff()||"https:"===Ff()},Ff=function(){return k.location&&k.location.protocol||null},Pf=function(a){a=a||L();return xf(a)||"Firefox"==vf(a)?!1:!0},Qf=function(a){return"undefined"===typeof a?null:Hc(a)},Rf=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&null!==a[c]&&void 0!==a[c]&&(b[c]=a[c]);return b},Sf=function(a){if(null!==a)return JSON.parse(a)},Lf=function(a){return a?a:""+Math.floor(1E9*Math.random()).toString()},Tf=function(a){a=a||L();
	return"Safari"==vf(a)||a.toLowerCase().match(/iphone|ipad|ipod/)?!1:!0},Uf=function(){var a=k.___jsl;if(a&&a.H)for(var b in a.H)if(a.H[b].r=a.H[b].r||[],a.H[b].L=a.H[b].L||[],a.H[b].r=a.H[b].L.concat(),a.CP)for(var c=0;c<a.CP.length;c++)a.CP[c]=null},Vf=function(){var a=k.navigator;return a&&"boolean"===typeof a.onLine&&(Nf()||"chrome-extension:"===Ff()||"undefined"!==typeof a.connection)?a.onLine:!0},Wf=function(a,b,c,d){if(a>b)throw Error("Short delay should be less than long delay!");this.tg=a;
	this.Yf=b;a=c||L();d=d||Hf();this.Tf=xf(a)||"ReactNative"===d};Wf.prototype.get=function(){return this.Tf?this.Yf:this.tg};
	var Xf=function(){var a=k.document;return a&&"undefined"!==typeof a.visibilityState?"visible"==a.visibilityState:!0},Yf=function(){var a=k.document,b=null;return Xf()||!a?D():(new C(function(c){b=function(){Xf()&&(a.removeEventListener("visibilitychange",b,!1),c())};a.addEventListener("visibilitychange",b,!1)})).g(function(c){a.removeEventListener("visibilitychange",b,!1);throw c;})};var Zf={};var $f;try{var ag={};Object.defineProperty(ag,"abcd",{configurable:!0,enumerable:!0,value:1});Object.defineProperty(ag,"abcd",{configurable:!0,enumerable:!0,value:2});$f=2==ag.abcd}catch(a){$f=!1}
	var N=function(a,b,c){$f?Object.defineProperty(a,b,{configurable:!0,enumerable:!0,value:c}):a[b]=c},bg=function(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&N(a,c,b[c])},cg=function(a){var b={};bg(b,a);return b},dg=function(a){var b={},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},eg=function(a,b){if(!b||!b.length)return!0;if(!a)return!1;for(var c=0;c<b.length;c++){var d=a[b[c]];if(void 0===d||null===d||""===d)return!1}return!0},fg=function(a){var b=a;if("object"==typeof a&&null!=a){b=
	"length"in a?[]:{};for(var c in a)N(b,c,fg(a[c]))}return b};var gg="oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),hg=["client_id","response_type","scope","redirect_uri","state"],ig={Fg:{Ec:"locale",Zb:500,Yb:600,providerId:"facebook.com",Td:hg},Hg:{Ec:null,Zb:500,Yb:620,providerId:"github.com",Td:hg},Ig:{Ec:"hl",Zb:515,Yb:680,providerId:"google.com",Td:hg},Mg:{Ec:"lang",Zb:485,Yb:705,providerId:"twitter.com",Td:gg}},jg=function(a){for(var b in ig)if(ig[b].providerId==a)return ig[b];
	return null};var O=function(a,b){this.code="auth/"+a;this.message=b||kg[a]||""};t(O,Error);O.prototype.G=function(){return{code:this.code,message:this.message}};O.prototype.toJSON=function(){return this.G()};
	var lg=function(a){var b=a&&a.code;return b?new O(b.substring(5),a.message):null},kg={"argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","app-not-installed":"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.","captcha-check-failed":"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
	"code-expired":"The SMS code has expired. Please re-send the verification code to try again.","cordova-not-ready":"Cordova framework is not ready.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.","requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
	"dynamic-link-not-activated":"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.","internal-error":"An internal error has occurred.","invalid-app-credential":"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
	"invalid-app-id":"The mobile app identifier is not registed for the current project.","invalid-user-token":"The user's credential is no longer valid. The user must sign in again.","invalid-auth-event":"An internal error has occurred.","invalid-verification-code":"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.","invalid-continue-uri":"The continue URL provided in the request is invalid.",
	"invalid-cordova-configuration":"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.","invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-credential":"The supplied auth credential is malformed or has expired.",
	"invalid-persistence-type":"The specified persistence type is invalid. It can only be local, session or none.","invalid-message-payload":"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","invalid-oauth-client-id":"The OAuth client ID provided is either invalid or does not match the specified API key.",
	"unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.","invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","invalid-phone-number":"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
	"invalid-recipient-email":"The email corresponding to this action failed to send as the provided recipient email address is invalid.","invalid-sender":"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-verification-id":"The verification ID used to create the phone auth credential is invalid.","missing-android-pkg-name":"An Android Package Name must be provided if the Android App is required to be installed.",
	"auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","missing-app-credential":"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.","missing-verification-code":"The phone auth credential was created with an empty SMS verification code.","missing-continue-uri":"A continue URL must be provided in the request.","missing-iframe-start":"An internal error has occurred.",
	"missing-ios-bundle-id":"An iOS Bundle ID must be provided if an App Store ID is provided.","missing-phone-number":"To send verification codes, provide a phone number for the recipient.","missing-verification-id":"The phone auth credential was created with an empty verification ID.","app-deleted":"This instance of FirebaseApp has been deleted.","account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
	"network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.","no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
	"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.","popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.","quota-exceeded":"The SMS quota for this project has been exceeded.","redirect-cancelled-by-user":"The redirect operation has been cancelled by the user before finalizing.","redirect-operation-pending":"A redirect sign-in operation is already pending.",
	timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.","too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","unauthorized-continue-uri":"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.","unsupported-persistence-type":"The current environment does not support the specified persistence type.","user-cancelled":"User did not grant your application the permissions it requested.",
	"user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.","web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."};var mg=function(a,b,c,d,e){this.ma=a;this.W=b||null;this.Eb=c||null;this.Xd=d||null;this.ba=e||null;if(this.Eb||this.ba){if(this.Eb&&this.ba)throw new O("invalid-auth-event");if(this.Eb&&!this.Xd)throw new O("invalid-auth-event");}else throw new O("invalid-auth-event");};mg.prototype.uc=function(){return this.Xd};mg.prototype.getError=function(){return this.ba};mg.prototype.G=function(){return{type:this.ma,eventId:this.W,urlResponse:this.Eb,sessionId:this.Xd,error:this.ba&&this.ba.G()}};
	var ng=function(a){a=a||{};return a.type?new mg(a.type,a.eventId,a.urlResponse,a.sessionId,a.error&&lg(a.error)):null};var og=function(a){var b="unauthorized-domain",c=void 0,d=hf(a);a=d.pa;d=d.qa;"chrome-extension"==d?c=na("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):"http"==d||"https"==d?c=na("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",a):b=
	"operation-not-supported-in-this-environment";O.call(this,b,c)};t(og,O);var pg=function(a){this.Wf=a.sub;ma();this.Mb=a.email||null;this.gg=a.provider_id||null;this.mf=!!a.is_anonymous||"anonymous"==this.gg};pg.prototype.getEmail=function(){return this.Mb};pg.prototype.isAnonymous=function(){return this.mf};var qg=function(a,b){return a.then(function(a){if(a.idToken){a:{var c=a.idToken.split(".");if(3==c.length){c=c[1];for(var e=(4-c.length%4)%4,f=0;f<e;f++)c+=".";try{var g=JSON.parse(Hb(c));if(g.sub&&g.iss&&g.aud&&g.exp){var l=new pg(g);break a}}catch(n){}}l=null}if(!l||b!=l.Wf)throw new O("user-mismatch");return a}throw new O("user-mismatch");}).g(function(a){throw a&&a.code&&"auth/user-not-found"==a.code?new O("user-mismatch"):a;})},rg=function(a,b){if(b.idToken||b.accessToken)b.idToken&&N(this,"idToken",
	b.idToken),b.accessToken&&N(this,"accessToken",b.accessToken);else if(b.oauthToken&&b.oauthTokenSecret)N(this,"accessToken",b.oauthToken),N(this,"secret",b.oauthTokenSecret);else throw new O("internal-error","failed to construct a credential");N(this,"providerId",a)};rg.prototype.Ob=function(a){return sg(a,tg(this))};rg.prototype.Gc=function(a,b){var c=tg(this);c.idToken=b;return ug(a,c)};rg.prototype.Gd=function(a,b){var c=tg(this);return qg(vg(a,c),b)};
	var tg=function(a){var b={};a.idToken&&(b.id_token=a.idToken);a.accessToken&&(b.access_token=a.accessToken);a.secret&&(b.oauth_token_secret=a.secret);b.providerId=a.providerId;return{postBody:nf(b).toString(),requestUri:"http://localhost"}};rg.prototype.G=function(){var a={providerId:this.providerId};this.idToken&&(a.oauthIdToken=this.idToken);this.accessToken&&(a.oauthAccessToken=this.accessToken);this.secret&&(a.oauthTokenSecret=this.secret);return a};
	var wg=function(a,b){this.jg=b||[];bg(this,{providerId:a,isOAuthProvider:!0});this.pe={};this.Ed=(jg(a)||{}).Ec||null;this.nd=null};wg.prototype.setCustomParameters=function(a){this.pe=kb(a);return this};var P=function(a){wg.call(this,a,hg);this.Ud=[]};t(P,wg);P.prototype.addScope=function(a){Va(this.Ud,a)||this.Ud.push(a);return this};P.prototype.xe=function(){return $a(this.Ud)};
	P.prototype.credential=function(a,b){if(!a&&!b)throw new O("argument-error","credential failed: must provide the ID token and/or the access token.");return new rg(this.providerId,{idToken:a||null,accessToken:b||null})};var xg=function(){P.call(this,"facebook.com")};t(xg,P);N(xg,"PROVIDER_ID","facebook.com");
	var yg=function(a){if(!a)throw new O("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;q(a)&&(b=a.accessToken);return(new xg).credential(null,b)},zg=function(){P.call(this,"github.com")};t(zg,P);N(zg,"PROVIDER_ID","github.com");var Ag=function(a){if(!a)throw new O("argument-error","credential failed: expected 1 argument (the OAuth access token).");var b=a;q(a)&&(b=a.accessToken);return(new zg).credential(null,b)},Bg=function(){P.call(this,"google.com");this.addScope("profile")};
	t(Bg,P);N(Bg,"PROVIDER_ID","google.com");var Cg=function(a,b){var c=a;q(a)&&(c=a.idToken,b=a.accessToken);return(new Bg).credential(c,b)},Dg=function(){wg.call(this,"twitter.com",gg)};t(Dg,wg);N(Dg,"PROVIDER_ID","twitter.com");
	var Eg=function(a,b){var c=a;q(c)||(c={oauthToken:a,oauthTokenSecret:b});if(!c.oauthToken||!c.oauthTokenSecret)throw new O("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");return new rg("twitter.com",c)},Fg=function(a,b){this.Mb=a;this.Ld=b;N(this,"providerId","password")};Fg.prototype.Ob=function(a){return Q(a,Gg,{email:this.Mb,password:this.Ld})};Fg.prototype.Gc=function(a,b){return Q(a,Hg,{idToken:b,email:this.Mb,password:this.Ld})};
	Fg.prototype.Gd=function(a,b){return qg(this.Ob(a),b)};Fg.prototype.G=function(){return{email:this.Mb,password:this.Ld}};var Ig=function(){bg(this,{providerId:"password",isOAuthProvider:!1})};bg(Ig,{PROVIDER_ID:"password"});var Jg=function(a){if(!(a.verificationId&&a.ad||a.ic&&a.phoneNumber))throw new O("internal-error");this.S=a;N(this,"providerId","phone")};Jg.prototype.Ob=function(a){return a.verifyPhoneNumber(Kg(this))};Jg.prototype.Gc=function(a,b){var c=Kg(this);c.idToken=b;return Q(a,Lg,c)};
	Jg.prototype.Gd=function(a,b){var c=Kg(this);c.operation="REAUTH";a=Q(a,Mg,c);return qg(a,b)};Jg.prototype.G=function(){var a={providerId:"phone"};this.S.verificationId&&(a.verificationId=this.S.verificationId);this.S.ad&&(a.verificationCode=this.S.ad);this.S.ic&&(a.temporaryProof=this.S.ic);this.S.phoneNumber&&(a.phoneNumber=this.S.phoneNumber);return a};
	var Kg=function(a){return a.S.ic&&a.S.phoneNumber?{temporaryProof:a.S.ic,phoneNumber:a.S.phoneNumber}:{sessionInfo:a.S.verificationId,code:a.S.ad}},Ng=function(a){try{this.qf=a||firebase.auth()}catch(b){throw new O("argument-error","Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");}bg(this,{providerId:"phone",isOAuthProvider:!1})};
	Ng.prototype.verifyPhoneNumber=function(a,b){var c=this.qf.f;return D(b.verify()).then(function(d){if(!m(d))throw new O("argument-error","An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");switch(b.type){case "recaptcha":return Q(c,Og,{phoneNumber:a,recaptchaToken:d});default:throw new O("argument-error",'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');}})};
	var Pg=function(a,b){if(!a)throw new O("missing-verification-id");if(!b)throw new O("missing-verification-code");return new Jg({verificationId:a,ad:b})};bg(Ng,{PROVIDER_ID:"phone"});
	var Qg=function(a){if(a.temporaryProof&&a.phoneNumber)return new Jg({ic:a.temporaryProof,phoneNumber:a.phoneNumber});var b=a&&a.providerId;if(!b||"password"===b)return null;var c=a&&a.oauthAccessToken,d=a&&a.oauthTokenSecret;a=a&&a.oauthIdToken;try{switch(b){case "google.com":return Cg(a,c);case "facebook.com":return yg(c);case "github.com":return Ag(c);case "twitter.com":return Eg(c,d);default:return(new P(b)).credential(a,c)}}catch(e){return null}},Rg=function(a){if(!a.isOAuthProvider)throw new O("invalid-oauth-provider");
	};var Sg=function(a,b,c){O.call(this,a,c);a=b||{};a.email&&N(this,"email",a.email);a.phoneNumber&&N(this,"phoneNumber",a.phoneNumber);a.credential&&N(this,"credential",a.credential)};t(Sg,O);Sg.prototype.G=function(){var a={code:this.code,message:this.message};this.email&&(a.email=this.email);this.phoneNumber&&(a.phoneNumber=this.phoneNumber);var b=this.credential&&this.credential.G();b&&mb(a,b);return a};Sg.prototype.toJSON=function(){return this.G()};
	var Tg=function(a){if(a.code){var b=a.code||"";0==b.indexOf("auth/")&&(b=b.substring(5));var c={credential:Qg(a)};if(a.email)c.email=a.email;else if(a.phoneNumber)c.phoneNumber=a.phoneNumber;else return new O(b,a.message||void 0);return new Sg(b,c,a.message)}return null};var Ug=function(a){this.Dg=a};t(Ug,Lc);Ug.prototype.sc=function(){return new this.Dg};Ug.prototype.Cd=function(){return{}};
	var R=function(a,b,c){var d="Node"==Hf();d=k.XMLHttpRequest||d&&firebase.INTERNAL.node&&firebase.INTERNAL.node.XMLHttpRequest;if(!d)throw new O("internal-error","The XMLHttpRequest compatibility library was not found.");this.m=a;a=b||{};this.pg=a.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token";this.qg=a.secureTokenTimeout||Vg;this.Qc=kb(a.secureTokenHeaders||Wg);this.Af=a.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/";this.Bf=a.firebaseTimeout||
	Xg;this.mb=kb(a.firebaseHeaders||Yg);c&&(this.mb["X-Client-Version"]=c,this.Qc["X-Client-Version"]=c);this.sf=new Qc;this.Cg=new Ug(d)},Zg,Vg=new Wf(3E4,6E4),Wg={"Content-Type":"application/x-www-form-urlencoded"},Xg=new Wf(3E4,6E4),Yg={"Content-Type":"application/json"},$g=function(a,b){b?a.mb["X-Firebase-Locale"]=b:delete a.mb["X-Firebase-Locale"]},ah=function(a,b){b?(a.mb["X-Client-Version"]=b,a.Qc["X-Client-Version"]=b):(delete a.mb["X-Client-Version"],delete a.Qc["X-Client-Version"])},ch=function(a,
	b,c,d,e,f,g){Vf()?(wf()?a=r(a.sg,a):(Zg||(Zg=new C(function(a,b){bh(a,b)})),a=r(a.rg,a)),a(b,c,d,e,f,g)):c&&c(null)};
	R.prototype.sg=function(a,b,c,d,e,f){var g="Node"==Hf(),l=If()?g?new I(this.Cg):new I:new I(this.sf);if(f){l.Db=Math.max(0,f);var n=setTimeout(function(){l.dispatchEvent("timeout")},f)}l.listen("complete",function(){n&&clearTimeout(n);var a=null;try{a=JSON.parse(Se(this))||null}catch(zb){a=null}b&&b(a)});sc(l,"ready",function(){n&&clearTimeout(n);this.Ma||(this.Ma=!0,this.lb())});sc(l,"timeout",function(){n&&clearTimeout(n);this.Ma||(this.Ma=!0,this.lb());b&&b(null)});l.send(a,c,d,e)};
	var dh=Ha("https://apis.google.com/js/client.js?onload=%{onload}"),eh="__fcb"+Math.floor(1E6*Math.random()).toString(),bh=function(a,b){if(((window.gapi||{}).client||{}).request)a();else{k[eh]=function(){((window.gapi||{}).client||{}).request?a():b(Error("CORS_UNSUPPORTED"))};var c=Ma(dh,{onload:eh});Xd(ee(c),function(){b(Error("CORS_UNSUPPORTED"))})}};
	R.prototype.rg=function(a,b,c,d,e){var f=this;Zg.then(function(){window.gapi.client.setApiKey(f.m);var g=window.gapi.auth.getToken();window.gapi.auth.setToken(null);window.gapi.client.request({path:a,method:c,body:d,headers:e,authType:"none",callback:function(a){window.gapi.auth.setToken(g);b&&b(a)}})}).g(function(a){b&&b({error:{message:a&&a.message||"CORS_UNSUPPORTED"}})})};
	var gh=function(a,b){return new C(function(c,d){"refresh_token"==b.grant_type&&b.refresh_token||"authorization_code"==b.grant_type&&b.code?ch(a,a.pg+"?key="+encodeURIComponent(a.m),function(a){a?a.error?d(fh(a)):a.access_token&&a.refresh_token?c(a):d(new O("internal-error")):d(new O("network-request-failed"))},"POST",nf(b).toString(),a.Qc,a.qg.get()):d(new O("internal-error"))})},hh=function(a,b,c,d,e,f){var g=hf(a.Af+b);K(g,"key",a.m);f&&K(g,"cb",ma().toString());var l="GET"==c;if(l)for(var n in d)d.hasOwnProperty(n)&&
	K(g,n,d[n]);return new C(function(b,f){ch(a,g.toString(),function(a){a?a.error?f(fh(a,e||{})):b(a):f(new O("network-request-failed"))},c,l?void 0:Hc(Rf(d)),a.mb,a.Bf.get())})},ih=function(a){if(!yc.test(a.email))throw new O("invalid-email");},jh=function(a){"email"in a&&ih(a)},lh=function(a,b){return Q(a,kh,{identifier:b,continueUri:Nf()?sf():"http://localhost"}).then(function(a){return a.allProviders||[]})},nh=function(a){return Q(a,mh,{}).then(function(a){return a.authorizedDomains||[]})},oh=function(a){if(!a.idToken)throw new O("internal-error");
	},ph=function(a){if(a.phoneNumber||a.temporaryProof){if(!a.phoneNumber||!a.temporaryProof)throw new O("internal-error");}else{if(!a.sessionInfo)throw new O("missing-verification-id");if(!a.code)throw new O("missing-verification-code");}};R.prototype.signInAnonymously=function(){return Q(this,qh,{})};R.prototype.updateEmail=function(a,b){return Q(this,rh,{idToken:a,email:b})};R.prototype.updatePassword=function(a,b){return Q(this,Hg,{idToken:a,password:b})};var sh={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};
	R.prototype.updateProfile=function(a,b){var c={idToken:a},d=[];eb(sh,function(a,f){var e=b[f];null===e?d.push(a):f in b&&(c[f]=e)});d.length&&(c.deleteAttribute=d);return Q(this,rh,c)};R.prototype.sendPasswordResetEmail=function(a,b){a={requestType:"PASSWORD_RESET",email:a};mb(a,b);return Q(this,th,a)};R.prototype.sendEmailVerification=function(a,b){a={requestType:"VERIFY_EMAIL",idToken:a};mb(a,b);return Q(this,uh,a)};R.prototype.verifyPhoneNumber=function(a){return Q(this,vh,a)};
	var xh=function(a,b,c){return Q(a,wh,{idToken:b,deleteProvider:c})},yh=function(a){if(!a.requestUri||!a.sessionId&&!a.postBody)throw new O("internal-error");},zh=function(a){var b=null;a.needConfirmation?(a.code="account-exists-with-different-credential",b=Tg(a)):"FEDERATED_USER_ID_ALREADY_LINKED"==a.errorMessage?(a.code="credential-already-in-use",b=Tg(a)):"EMAIL_EXISTS"==a.errorMessage&&(a.code="email-already-in-use",b=Tg(a));if(b)throw b;if(!a.idToken)throw new O("internal-error");},sg=function(a,
	b){b.returnIdpCredential=!0;return Q(a,Ah,b)},ug=function(a,b){b.returnIdpCredential=!0;return Q(a,Bh,b)},vg=function(a,b){b.returnIdpCredential=!0;b.autoCreate=!1;return Q(a,Ch,b)},Dh=function(a){if(!a.oobCode)throw new O("invalid-action-code");};R.prototype.confirmPasswordReset=function(a,b){return Q(this,Eh,{oobCode:a,newPassword:b})};R.prototype.checkActionCode=function(a){return Q(this,Fh,{oobCode:a})};R.prototype.applyActionCode=function(a){return Q(this,Gh,{oobCode:a})};
	var Gh={endpoint:"setAccountInfo",D:Dh,cb:"email"},Fh={endpoint:"resetPassword",D:Dh,$:function(a){if(!a.email||!a.requestType)throw new O("internal-error");}},Hh={endpoint:"signupNewUser",D:function(a){ih(a);if(!a.password)throw new O("weak-password");},$:oh,Aa:!0},kh={endpoint:"createAuthUri"},Ih={endpoint:"deleteAccount",ab:["idToken"]},wh={endpoint:"setAccountInfo",ab:["idToken","deleteProvider"],D:function(a){if(!ha(a.deleteProvider))throw new O("internal-error");}},Jh={endpoint:"getAccountInfo"},
	uh={endpoint:"getOobConfirmationCode",ab:["idToken","requestType"],D:function(a){if("VERIFY_EMAIL"!=a.requestType)throw new O("internal-error");},cb:"email"},th={endpoint:"getOobConfirmationCode",ab:["requestType"],D:function(a){if("PASSWORD_RESET"!=a.requestType)throw new O("internal-error");ih(a)},cb:"email"},mh={he:!0,endpoint:"getProjectConfig",Ce:"GET"},Kh={he:!0,endpoint:"getRecaptchaParam",Ce:"GET",$:function(a){if(!a.recaptchaSiteKey)throw new O("internal-error");}},Eh={endpoint:"resetPassword",
	D:Dh,cb:"email"},Og={endpoint:"sendVerificationCode",ab:["phoneNumber","recaptchaToken"],cb:"sessionInfo"},rh={endpoint:"setAccountInfo",ab:["idToken"],D:jh,Aa:!0},Hg={endpoint:"setAccountInfo",ab:["idToken"],D:function(a){jh(a);if(!a.password)throw new O("weak-password");},$:oh,Aa:!0},qh={endpoint:"signupNewUser",$:oh,Aa:!0},Ah={endpoint:"verifyAssertion",D:yh,$:zh,Aa:!0},Ch={endpoint:"verifyAssertion",D:yh,$:function(a){if(a.errorMessage&&"USER_NOT_FOUND"==a.errorMessage)throw new O("user-not-found");
	if(!a.idToken)throw new O("internal-error");},Aa:!0},Bh={endpoint:"verifyAssertion",D:function(a){yh(a);if(!a.idToken)throw new O("internal-error");},$:zh,Aa:!0},Lh={endpoint:"verifyCustomToken",D:function(a){if(!a.token)throw new O("invalid-custom-token");},$:oh,Aa:!0},Gg={endpoint:"verifyPassword",D:function(a){ih(a);if(!a.password)throw new O("wrong-password");},$:oh,Aa:!0},vh={endpoint:"verifyPhoneNumber",D:ph,$:oh},Lg={endpoint:"verifyPhoneNumber",D:function(a){if(!a.idToken)throw new O("internal-error");
	ph(a)},$:function(a){if(a.temporaryProof)throw a.code="credential-already-in-use",Tg(a);oh(a)}},Mg={vf:{USER_NOT_FOUND:"user-not-found"},endpoint:"verifyPhoneNumber",D:ph,$:oh},Q=function(a,b,c){if(!eg(c,b.ab))return E(new O("internal-error"));var d=b.Ce||"POST",e;return D(c).then(b.D).then(function(){b.Aa&&(c.returnSecureToken=!0);return hh(a,b.endpoint,d,c,b.vf,b.he||!1)}).then(function(a){return e=a}).then(b.$).then(function(){if(!b.cb)return e;if(!(b.cb in e))throw new O("internal-error");return e[b.cb]})},
	fh=function(a,b){var c=(a.error&&a.error.errors&&a.error.errors[0]||{}).reason||"";var d={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(c=d[c]?new O(d[c]):null)return c;c=a.error&&a.error.message||"";d={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",
	MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",EMAIL_NOT_FOUND:"user-not-found",EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",
	INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",INVALID_APP_ID:"invalid-app-id",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled",CAPTCHA_CHECK_FAILED:"captcha-check-failed",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_CODE:"invalid-verification-code",
	INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_CODE:"missing-verification-code",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",QUOTA_EXCEEDED:"quota-exceeded",SESSION_EXPIRED:"code-expired",INVALID_CONTINUE_URI:"invalid-continue-uri",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",
	UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id"};mb(d,b||{});b=(b=c.match(/^[^\s]+\s*:\s*(.*)$/))&&1<b.length?b[1]:void 0;for(var e in d)if(0===c.indexOf(e))return new O(d[e],b);!b&&a&&(b=Qf(a));return new O("internal-error",b)};var Nh=function(a){this.Ag=a;this.zc=null;this.Id=Mh(this)},Mh=function(a){return Oh().then(function(){return new C(function(b,c){M("gapi.iframes.getContext")().open({where:document.body,url:a.Ag,messageHandlersFilter:M("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),attributes:{style:{position:"absolute",top:"-100px",width:"1px",height:"1px"}},dontclear:!0},function(d){a.zc=d;a.zc.restyle({setHideOnLeave:!1});var e=setTimeout(function(){c(Error("Network Error"))},Ph.get()),f=function(){clearTimeout(e);
	b()};d.ping(f).then(f,function(){c(Error("Network Error"))})})})})};Nh.prototype.sendMessage=function(a){var b=this;return this.Id.then(function(){return new C(function(c){b.zc.send(a.type,a,c,M("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})})};
	var Qh=function(a,b){a.Id.then(function(){a.zc.register("authEvent",b,M("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})},Rh=Ha("https://apis.google.com/js/api.js?onload=%{onload}"),Sh=new Wf(3E4,6E4),Ph=new Wf(5E3,15E3),Th=null,Oh=function(){return Th?Th:Th=(new C(function(a,b){if(Vf()){var c=function(){Uf();M("gapi.load")("gapi.iframes",{callback:a,ontimeout:function(){Uf();b(Error("Network Error"))},timeout:Sh.get()})};if(M("gapi.iframes.Iframe"))a();else if(M("gapi.load"))c();else{var d="__iframefcb"+
	Math.floor(1E6*Math.random()).toString();k[d]=function(){M("gapi.load")?c():b(Error("Network Error"))};d=Ma(Rh,{onload:d});D(ee(d)).g(function(){b(Error("Network Error"))})}}else b(Error("Network Error"))})).g(function(a){Th=null;throw a;})};var Uh=function(a,b,c){this.A=a;this.m=b;this.o=c;this.fb=null;this.Ba=jf(this.A,"/__/auth/iframe");K(this.Ba,"apiKey",this.m);K(this.Ba,"appName",this.o);this.O=null;this.M=[]};Uh.prototype.$d=function(a){this.fb=a;return this};Uh.prototype.Yd=function(a){this.O=a;return this};
	Uh.prototype.toString=function(){this.fb?K(this.Ba,"v",this.fb):this.Ba.removeParameter("v");this.O?K(this.Ba,"eid",this.O):this.Ba.removeParameter("eid");this.M.length?K(this.Ba,"fw",this.M.join(",")):this.Ba.removeParameter("fw");return this.Ba.toString()};var Vh=function(a,b,c,d,e){this.A=a;this.m=b;this.o=c;this.pf=d;this.fb=this.W=this.Sd=null;this.xb=e;this.O=null};Vh.prototype.$d=function(a){this.fb=a;return this};Vh.prototype.Yd=function(a){this.O=a;return this};
	Vh.prototype.toString=function(){var a=jf(this.A,"/__/auth/handler");K(a,"apiKey",this.m);K(a,"appName",this.o);K(a,"authType",this.pf);if(this.xb.isOAuthProvider){var b=this.xb;try{var c=firebase.app(this.o).auth().ia}catch(l){c=null}b.nd=c;K(a,"providerId",this.xb.providerId);b=this.xb;c=Rf(b.pe);for(var d in c)c[d]=c[d].toString();d=b.jg;c=kb(c);for(var e=0;e<d.length;e++){var f=d[e];f in c&&delete c[f]}b.Ed&&b.nd&&!c[b.Ed]&&(c[b.Ed]=b.nd);ib(c)||K(a,"customParameters",Qf(c))}"function"===typeof this.xb.xe&&
	(b=this.xb.xe(),b.length&&K(a,"scopes",b.join(",")));this.Sd?K(a,"redirectUrl",this.Sd):a.removeParameter("redirectUrl");this.W?K(a,"eventId",this.W):a.removeParameter("eventId");this.fb?K(a,"v",this.fb):a.removeParameter("v");if(this.nc)for(var g in this.nc)this.nc.hasOwnProperty(g)&&!gf(a,g)&&K(a,g,this.nc[g]);this.O?K(a,"eid",this.O):a.removeParameter("eid");g=Wh(this.o);g.length&&K(a,"fw",g.join(","));return a.toString()};
	var Wh=function(a){try{return $a(firebase.app(a).auth().M)}catch(b){return[]}},Xh=function(a,b,c,d,e){this.A=a;this.m=b;this.o=c;this.La=d||null;this.O=e||null;this.f=this.yd=this.ve=null;this.ta=[];this.Bc=this.wa=null},Yh=function(a){var b=sf();return nh(a).then(function(a){a:{var c=hf(b),e=c.qa;c=c.pa;for(var f=0;f<a.length;f++){var g=a[f];var l=c;var n=e;0==g.indexOf("chrome-extension://")?l=hf(g).pa==l&&"chrome-extension"==n:"http"!=n&&"https"!=n?l=!1:Bf.test(g)?l=l==g:(g=g.split(".").join("\\."),
	l=(new RegExp("^(.+\\."+g+"|"+g+")$","i")).test(l));if(l){a=!0;break a}}a=!1}if(!a)throw new og(sf());})};h=Xh.prototype;h.Sb=function(){if(this.Bc)return this.Bc;var a=this;return this.Bc=Cf().then(function(){if(!a.yd){var b=a.La,c=a.O,d=Wh(a.o);b=(new Uh(a.A,a.m,a.o)).$d(b).Yd(c);b.M=$a(d||[]);a.yd=b.toString()}a.yc=new Nh(a.yd);Zh(a)})};
	h.fc=function(a,b,c){var d=new O("popup-closed-by-user"),e=new O("web-storage-unsupported"),f=this,g=!1;return this.Ra().then(function(){$h(f).then(function(c){c||(a&&yf(a),b(e),g=!0)})}).g(function(){}).then(function(){if(!g)return Af(a)}).then(function(){if(!g)return Ce(c).then(function(){b(d)})})};h.Ve=function(){var a=L();return!Pf(a)&&!Tf(a)};h.Ae=function(){return!1};
	h.$b=function(a,b,c,d,e,f,g){if(!a)return E(new O("popup-blocked"));if(g&&!Pf())return this.Ra().g(function(b){yf(a);e(b)}),d(),D();this.wa||(this.wa=Yh(ai(this)));var l=this;return this.wa.then(function(){var b=l.Ra().g(function(b){yf(a);e(b);throw b;});d();return b}).then(function(){Rg(c);if(!g){var d=bi(l.A,l.m,l.o,b,c,null,f,l.La,void 0,l.O);tf(d,a)}}).g(function(a){"auth/network-request-failed"==a.code&&(l.wa=null);throw a;})};
	var ai=function(a){a.f||(a.ve=a.La?Kf(a.La,Wh(a.o)):null,a.f=new R(a.m,pf(a.O),a.ve));return a.f};Xh.prototype.ac=function(a,b,c){this.wa||(this.wa=Yh(ai(this)));var d=this;return this.wa.then(function(){Rg(b);var e=bi(d.A,d.m,d.o,a,b,sf(),c,d.La,void 0,d.O);tf(e)}).g(function(a){"auth/network-request-failed"==a.code&&(d.wa=null);throw a;})};Xh.prototype.Ra=function(){var a=this;return this.Sb().then(function(){return a.yc.Id}).g(function(){a.wa=null;throw new O("network-request-failed");})};
	Xh.prototype.Ze=function(){return!0};
	var bi=function(a,b,c,d,e,f,g,l,n,F){a=new Vh(a,b,c,d,e);a.Sd=f;a.W=g;f=a.$d(l);f.nc=kb(n||null);return f.Yd(F).toString()},Zh=function(a){if(!a.yc)throw Error("IfcHandler must be initialized!");Qh(a.yc,function(b){var c={};if(b&&b.authEvent){var d=!1;b=ng(b.authEvent);for(c=0;c<a.ta.length;c++)d=a.ta[c](b)||d;c={};c.status=d?"ACK":"ERROR";return D(c)}c.status="ERROR";return D(c)})},$h=function(a){var b={type:"webStorageSupport"};return a.Sb().then(function(){return a.yc.sendMessage(b)}).then(function(a){if(a&&a.length&&
	"undefined"!==typeof a[0].webStorageSupport)return a[0].webStorageSupport;throw Error();})};Xh.prototype.ib=function(a){this.ta.push(a)};Xh.prototype.dc=function(a){Ya(this.ta,function(b){return b==a})};var ci=function(a,b,c,d,e,f){N(this,"type","recaptcha");this.bd=this.Ib=null;this.Kb=!1;this.ne=b;this.Fa=c||{theme:"light",type:"image"};this.J=[];if(this.Fa.sitekey)throw new O("argument-error","sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");this.Cc="invisible"===this.Fa.size;if(!md(b)||!this.Cc&&md(b).hasChildNodes())throw new O("argument-error","reCAPTCHA container is either not found or already contains inner elements!");this.f=new R(a,
	f||null,e||null);this.Gf=d||function(){return null};var g=this;this.Xc=[];var l=this.Fa.callback;this.Fa.callback=function(a){g.Lb(a);if("function"===typeof l)l(a);else if("string"===typeof l){var b=M(l,k);"function"===typeof b&&b(a)}};var n=this.Fa["expired-callback"];this.Fa["expired-callback"]=function(){g.Lb(null);if("function"===typeof n)n();else if("string"===typeof n){var a=M(n,k);"function"===typeof a&&a()}}};ci.prototype.Lb=function(a){for(var b=0;b<this.Xc.length;b++)try{this.Xc[b](a)}catch(c){}};
	var di=function(a,b){Ya(a.Xc,function(a){return a==b})};ci.prototype.c=function(a){var b=this;this.J.push(a);Fd(a,function(){Xa(b.J,a)});return a};
	ci.prototype.Tb=function(){var a=this;return this.Ib?this.Ib:this.Ib=this.c(D().then(function(){if(Nf())return Cf();throw new O("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");}).then(function(){return ei(fi(),a.Gf())}).then(function(){return Q(a.f,Kh,{})}).then(function(b){a.Fa.sitekey=b.recaptchaSiteKey}).g(function(b){a.Ib=null;throw b;}))};
	ci.prototype.render=function(){gi(this);var a=this;return this.c(this.Tb().then(function(){if(null===a.bd){var b=a.ne;if(!a.Cc){var c=md(b);b=qd("DIV");c.appendChild(b)}a.bd=grecaptcha.render(b,a.Fa)}return a.bd}))};ci.prototype.verify=function(){gi(this);var a=this;return this.c(this.render().then(function(b){return new C(function(c){var d=grecaptcha.getResponse(b);if(d)c(d);else{var e=function(b){b&&(di(a,e),c(b))};a.Xc.push(e);a.Cc&&grecaptcha.execute(a.bd)}})}))};
	var gi=function(a){if(a.Kb)throw new O("internal-error","RecaptchaVerifier instance has been destroyed.");};ci.prototype.clear=function(){gi(this);this.Kb=!0;fi().ld--;for(var a=0;a<this.J.length;a++)this.J[a].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.Cc){a=md(this.ne);for(var b;b=a.firstChild;)a.removeChild(b)}};
	var hi=Ha("https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),ii=function(){this.ld=k.grecaptcha?Infinity:0;this.Be=null;this.jd="__rcb"+Math.floor(1E6*Math.random()).toString()},ei=function(a,b){return new C(function(c,d){if(Vf())if(!k.grecaptcha||b!==a.Be&&!a.ld){k[a.jd]=function(){if(k.grecaptcha){a.Be=b;var e=k.grecaptcha.render;k.grecaptcha.render=function(b,c){b=e(b,c);a.ld++;return b};c()}else d(new O("internal-error"));delete k[a.jd]};var e=Ma(hi,{onload:a.jd,
	hl:b||""});D(ee(e)).g(function(){d(new O("internal-error","Unable to load external reCAPTCHA dependencies!"))})}else c();else d(new O("network-request-failed"))})},ji=null,fi=function(){ji||(ji=new ii);return ji},ki=function(a,b,c){try{this.i=c||firebase.app()}catch(f){throw new O("argument-error","No firebase.app.App instance is currently initialized.");}if(this.i.options&&this.i.options.apiKey)c=this.i.options.apiKey;else throw new O("invalid-api-key");var d=this,e=null;try{e=$a(this.i.auth().M)}catch(f){}e=
	firebase.SDK_VERSION?Kf(firebase.SDK_VERSION,e):null;ci.call(this,c,a,b,function(){try{var a=d.i.auth().ia}catch(g){a=null}return a},e,pf(qf))};t(ki,ci);var li=function(a){this.F=a||firebase.INTERNAL.reactNative&&firebase.INTERNAL.reactNative.AsyncStorage;if(!this.F)throw new O("internal-error","The React Native compatibility library was not found.");};h=li.prototype;h.get=function(a){return D(this.F.getItem(a)).then(function(a){return a&&Sf(a)})};h.set=function(a,b){return D(this.F.setItem(a,Qf(b)))};h.remove=function(a){return D(this.F.removeItem(a))};h.jb=function(){};h.$a=function(){};var mi=function(){this.F={}};h=mi.prototype;h.get=function(a){return D(this.F[a])};h.set=function(a,b){this.F[a]=b;return D()};h.remove=function(a){delete this.F[a];return D()};h.jb=function(){};h.$a=function(){};var oi=function(){if(!ni()){if("Node"==Hf())throw new O("internal-error","The LocalStorage compatibility library was not found.");throw new O("web-storage-unsupported");}this.F=k.localStorage||firebase.INTERNAL.node.localStorage},ni=function(){var a="Node"==Hf();a=k.localStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.localStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}};h=oi.prototype;
	h.get=function(a){var b=this;return D().then(function(){var c=b.F.getItem(a);return Sf(c)})};h.set=function(a,b){var c=this;return D().then(function(){var d=Qf(b);null===d?c.remove(a):c.F.setItem(a,d)})};h.remove=function(a){var b=this;return D().then(function(){b.F.removeItem(a)})};h.jb=function(a){k.window&&lc(k.window,"storage",a)};h.$a=function(a){k.window&&tc(k.window,"storage",a)};var pi=function(){this.F={}};h=pi.prototype;h.get=function(){return D(null)};h.set=function(){return D()};h.remove=function(){return D()};h.jb=function(){};h.$a=function(){};var ri=function(){if(!qi()){if("Node"==Hf())throw new O("internal-error","The SessionStorage compatibility library was not found.");throw new O("web-storage-unsupported");}this.F=k.sessionStorage||firebase.INTERNAL.node.sessionStorage},qi=function(){var a="Node"==Hf();a=k.sessionStorage||a&&firebase.INTERNAL.node&&firebase.INTERNAL.node.sessionStorage;if(!a)return!1;try{return a.setItem("__sak","1"),a.removeItem("__sak"),!0}catch(b){return!1}};h=ri.prototype;
	h.get=function(a){var b=this;return D().then(function(){var c=b.F.getItem(a);return Sf(c)})};h.set=function(a,b){var c=this;return D().then(function(){var d=Qf(b);null===d?c.remove(a):c.F.setItem(a,d)})};h.remove=function(a){var b=this;return D().then(function(){b.F.removeItem(a)})};h.jb=function(){};h.$a=function(){};var si=function(a,b,c,d,e,f){if(!window.indexedDB)throw new O("web-storage-unsupported");this.wf=a;this.Hd=b;this.md=c;this.cf=d;this.gb=e;this.Y={};this.gc=[];this.Wb=0;this.Of=f||k.indexedDB},ti,ui=function(a){return new C(function(b,c){var d=a.Of.open(a.wf,a.gb);d.onerror=function(a){c(Error(a.target.errorCode))};d.onupgradeneeded=function(b){b=b.target.result;try{b.createObjectStore(a.Hd,{keyPath:a.md})}catch(f){c(f)}};d.onsuccess=function(a){b(a.target.result)}})},wi=function(a){a.Fe||(a.Fe=
	ui(a));return a.Fe},xi=function(a,b){return b.objectStore(a.Hd)},yi=function(a,b,c){return b.transaction([a.Hd],c?"readwrite":"readonly")},zi=function(a){return new C(function(b,c){a.onsuccess=function(a){a&&a.target?b(a.target.result):b()};a.onerror=function(a){c(Error(a.target.errorCode))}})};h=si.prototype;
	h.set=function(a,b){var c=!1,d,e=this;return Fd(wi(this).then(function(b){d=b;b=xi(e,yi(e,d,!0));return zi(b.get(a))}).then(function(f){var g=xi(e,yi(e,d,!0));if(f)return f.value=b,zi(g.put(f));e.Wb++;c=!0;f={};f[e.md]=a;f[e.cf]=b;return zi(g.add(f))}).then(function(){e.Y[a]=b}),function(){c&&e.Wb--})};h.get=function(a){var b=this;return wi(this).then(function(c){return zi(xi(b,yi(b,c,!1)).get(a))}).then(function(a){return a&&a.value})};
	h.remove=function(a){var b=!1,c=this;return Fd(wi(this).then(function(d){b=!0;c.Wb++;return zi(xi(c,yi(c,d,!0))["delete"](a))}).then(function(){delete c.Y[a]}),function(){b&&c.Wb--})};
	h.wg=function(){var a=this;return wi(this).then(function(b){var c=xi(a,yi(a,b,!1));return c.getAll?zi(c.getAll()):new C(function(a,b){var d=[],e=c.openCursor();e.onsuccess=function(b){(b=b.target.result)?(d.push(b.value),b["continue"]()):a(d)};e.onerror=function(a){b(Error(a.target.errorCode))}})}).then(function(b){var c={},d=[];if(0==a.Wb){for(d=0;d<b.length;d++)c[b[d][a.md]]=b[d][a.cf];d=uf(a.Y,c);a.Y=c}return d})};h.jb=function(a){0==this.gc.length&&this.be();this.gc.push(a)};
	h.$a=function(a){Ya(this.gc,function(b){return b==a});0==this.gc.length&&this.Tc()};h.be=function(){var a=this;this.Tc();var b=function(){a.Nd=Ce(800).then(r(a.wg,a)).then(function(b){0<b.length&&x(a.gc,function(a){a(b)})}).then(b).g(function(a){"STOP_EVENT"!=a.message&&b()});return a.Nd};b()};h.Tc=function(){this.Nd&&this.Nd.cancel("STOP_EVENT")};var Di=function(){this.re={Browser:Ai,Node:Bi,ReactNative:Ci}[Hf()]},Ei,Ai={C:oi,de:ri},Bi={C:oi,de:ri},Ci={C:li,de:pi};var Fi=function(a){this.Bd(a)};
	Fi.prototype.Bd=function(a){var b=a.url;if("undefined"===typeof b)throw new O("missing-continue-uri");if("string"!==typeof b||"string"===typeof b&&!b.length)throw new O("invalid-continue-uri");this.rf=b;this.fe=this.oc=null;this.Ge=!1;var c=a.android;if(c&&"object"===typeof c){b=c.packageName;var d=c.installApp;c=c.minimumVersion;if("string"===typeof b&&b.length){this.oc=b;if("undefined"!==typeof d&&"boolean"!==typeof d)throw new O("argument-error","installApp property must be a boolean when specified.");this.Ge=
	!!d;if("undefined"!==typeof c&&("string"!==typeof c||"string"===typeof c&&!c.length))throw new O("argument-error","minimumVersion property must be a non empty string when specified.");this.fe=c||null}else{if("undefined"!==typeof b)throw new O("argument-error","packageName property must be a non empty string when specified.");if("undefined"!==typeof d||"undefined"!==typeof c)throw new O("missing-android-pkg-name");}}else if("undefined"!==typeof c)throw new O("argument-error","android property must be a non null object when specified.");
	this.xd=null;if((b=a.iOS)&&"object"===typeof b)if(b=b.bundleId,"string"===typeof b&&b.length)this.xd=b;else{if("undefined"!==typeof b)throw new O("argument-error","bundleId property must be a non empty string when specified.");}else if("undefined"!==typeof b)throw new O("argument-error","iOS property must be a non null object when specified.");a=a.handleCodeInApp;if("undefined"!==typeof a&&"boolean"!==typeof a)throw new O("argument-error","handleCodeInApp property must be a boolean when specified.");
	if((this.le=!!a)&&!this.xd&&!this.oc)throw new O("argument-error","handleCodeInApp property can't be true when no mobile application is provided.");};var Gi=function(a){var b={};b.continueUrl=a.rf;b.canHandleCodeInApp=a.le;if(b.androidPackageName=a.oc)b.androidMinimumVersion=a.fe,b.androidInstallApp=a.Ge;b.iOSBundleId=a.xd;for(var c in b)null===b[c]&&delete b[c];return b};var Hi=function(a,b){this.uf=b;N(this,"verificationId",a)};Hi.prototype.confirm=function(a){a=Pg(this.verificationId,a);return this.uf(a)};var Ii=function(a,b,c,d){return(new Ng(a)).verifyPhoneNumber(b,c).then(function(a){return new Hi(a,d)})};var Ji=function(a){var b={},c=a.email,d=a.newEmail;a=a.requestType;if(!c||!a)throw Error("Invalid provider user info!");b.fromEmail=d||null;b.email=c;N(this,"operation",a);N(this,"data",fg(b))};var Ki=function(a,b,c,d,e,f){this.dg=a;this.lg=b;this.Hf=c;this.Hc=d;this.ee=e;this.mg=!!f;this.ub=null;this.Sa=this.Hc;if(this.ee<this.Hc)throw Error("Proactive refresh lower bound greater than upper bound!");};Ki.prototype.start=function(){this.Sa=this.Hc;Li(this,!0)};
	var Mi=function(a,b){if(b)return a.Sa=a.Hc,a.Hf();b=a.Sa;a.Sa*=2;a.Sa>a.ee&&(a.Sa=a.ee);return b},Li=function(a,b){a.stop();a.ub=Ce(Mi(a,b)).then(function(){return a.mg?D():Yf()}).then(function(){return a.dg()}).then(function(){Li(a,!0)}).g(function(b){a.lg(b)&&Li(a,!1)})};Ki.prototype.stop=function(){this.ub&&(this.ub.cancel(),this.ub=null)};var Si=function(a){var b={};b["facebook.com"]=Ni;b["google.com"]=Oi;b["github.com"]=Pi;b["twitter.com"]=Qi;var c=a&&a.providerId;return c?b[c]?new b[c](a):new Ri(a):null},Ri=function(a){var b=Sf(a.rawUserInfo||"{}");a=a.providerId;if(!a)throw Error("Invalid additional user info!");N(this,"profile",fg(b||{}));N(this,"providerId",a)},Ni=function(a){Ri.call(this,a);if("facebook.com"!=this.providerId)throw Error("Invalid provider id!");};t(Ni,Ri);
	var Pi=function(a){Ri.call(this,a);if("github.com"!=this.providerId)throw Error("Invalid provider id!");N(this,"username",this.profile&&this.profile.login||null)};t(Pi,Ri);var Oi=function(a){Ri.call(this,a);if("google.com"!=this.providerId)throw Error("Invalid provider id!");};t(Oi,Ri);var Qi=function(a){Ri.call(this,a);if("twitter.com"!=this.providerId)throw Error("Invalid provider id!");N(this,"username",a.screenName||null)};t(Qi,Ri);var Ti={LOCAL:"local",NONE:"none",SESSION:"session"},Ui=function(a){var b=new O("invalid-persistence-type"),c=new O("unsupported-persistence-type");a:{for(d in Ti)if(Ti[d]==a){var d=!0;break a}d=!1}if(!d||"string"!==typeof a)throw b;switch(Hf()){case "ReactNative":if("session"===a)throw c;break;case "Node":if("none"!==a)throw c;break;default:if(!Mf()&&"none"!==a)throw c;}},Vi=function(a,b,c,d){this.Ke=a;this.Wd=b;this.ng=c;this.ec=d;this.X={};Ei||(Ei=new Di);a=Ei;try{if(rf()){ti||(ti=new si("firebaseLocalStorageDb",
	"firebaseLocalStorage","fbase_key","value",1));var e=ti}else e=new a.re.C;this.Qe=e}catch(f){this.Qe=new mi,this.ec=!0}try{this.Ye=new a.re.de}catch(f){this.Ye=new mi}this.Nf=new mi;this.ce=r(this.We,this);this.Y={}},Wi,Xi=function(){Wi||(Wi=new Vi("firebase",":",!Tf(L())&&Gf()?!0:!1,Pf()));return Wi},Yi=function(a,b){switch(b){case "session":return a.Ye;case "none":return a.Nf;default:return a.Qe}};h=Vi.prototype;h.ca=function(a,b){return this.Ke+this.Wd+a.name+(b?this.Wd+b:"")};
	h.get=function(a,b){return Yi(this,a.C).get(this.ca(a,b))};h.remove=function(a,b){b=this.ca(a,b);"local"!=a.C||this.ec||(this.Y[b]=null);return Yi(this,a.C).remove(b)};h.set=function(a,b,c){var d=this.ca(a,c),e=this,f=Yi(this,a.C);return f.set(d,b).then(function(){return f.get(d)}).then(function(b){"local"!=a.C||e.ec||(e.Y[d]=b)})};h.addListener=function(a,b,c){a=this.ca(a,b);this.ec||(this.Y[a]=k.localStorage.getItem(a));ib(this.X)&&this.be();this.X[a]||(this.X[a]=[]);this.X[a].push(c)};
	h.removeListener=function(a,b,c){a=this.ca(a,b);this.X[a]&&(Ya(this.X[a],function(a){return a==c}),0==this.X[a].length&&delete this.X[a]);ib(this.X)&&this.Tc()};h.be=function(){Yi(this,"local").jb(this.ce);this.ec||rf()||Zi(this)};var Zi=function(a){$i(a);a.Fd=setInterval(function(){for(var b in a.X){var c=k.localStorage.getItem(b),d=a.Y[b];c!=d&&(a.Y[b]=c,c=new Yb({type:"storage",key:b,target:window,oldValue:d,newValue:c,Md:!0}),a.We(c))}},1E3)},$i=function(a){a.Fd&&(clearInterval(a.Fd),a.Fd=null)};
	Vi.prototype.Tc=function(){Yi(this,"local").$a(this.ce);$i(this)};
	Vi.prototype.We=function(a){if(a&&a.Ef){var b=a.P.key;if(0==b.indexOf(this.Ke+this.Wd)&&this.X[b]){"undefined"!==typeof a.P.Md?Yi(this,"local").$a(this.ce):$i(this);if(this.ng){var c=k.localStorage.getItem(b),d=a.P.newValue;if(d!==c)null!==d?k.localStorage.setItem(b,d):k.localStorage.removeItem(b);else if(this.Y[b]===d&&"undefined"===typeof a.P.Md)return}var e=this;c=function(){if("undefined"!==typeof a.P.Md||e.Y[b]!==k.localStorage.getItem(b))e.Y[b]=k.localStorage.getItem(b),e.je(b)};z&&Cb&&10==
	Cb&&k.localStorage.getItem(b)!==a.P.newValue&&a.P.newValue!==a.P.oldValue?setTimeout(c,10):c()}}else x(a,r(this.je,this))};Vi.prototype.je=function(a){this.X[a]&&x(this.X[a],function(a){a()})};var aj=function(a,b){this.j=a;this.h=b||Xi()},bj={name:"authEvent",C:"local"},cj=function(a){return a.h.get(bj,a.j).then(function(a){return ng(a)})};aj.prototype.ib=function(a){this.h.addListener(bj,this.j,a)};aj.prototype.dc=function(a){this.h.removeListener(bj,this.j,a)};var dj=function(a){this.h=a||Xi()},ej={name:"sessionId",C:"session"};dj.prototype.uc=function(a){return this.h.get(ej,a)};var fj=function(a,b,c,d,e,f,g){this.A=a;this.m=b;this.o=c;this.La=d||null;this.O=g||null;this.Xe=b+":"+c;this.og=new dj;this.we=new aj(this.Xe);this.Ad=null;this.ta=[];this.Sf=e||500;this.hg=f||2E3;this.Rb=this.Kc=null},gj=function(a){return new O("invalid-cordova-configuration",a)};
	fj.prototype.Ra=function(){return this.Tb?this.Tb:this.Tb=Ef().then(function(){if("function"!==typeof M("universalLinks.subscribe",k))throw gj("cordova-universal-links-plugin is not installed");if("undefined"===typeof M("BuildInfo.packageName",k))throw gj("cordova-plugin-buildinfo is not installed");if("function"!==typeof M("cordova.plugins.browsertab.openUrl",k))throw gj("cordova-plugin-browsertab is not installed");if("function"!==typeof M("cordova.InAppBrowser.open",k))throw gj("cordova-plugin-inappbrowser is not installed");
	},function(){throw new O("cordova-not-ready");})};var hj=function(){for(var a=20,b=[];0<a;)b.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),a--;return b.join("")},ij=function(a){var b=new Sb;b.update(a);return ab(b.digest())};h=fj.prototype;h.fc=function(a,b){b(new O("operation-not-supported-in-this-environment"));return D()};h.$b=function(){return E(new O("operation-not-supported-in-this-environment"))};h.Ze=function(){return!1};h.Ve=function(){return!0};
	h.Ae=function(){return!0};
	h.ac=function(a,b,c){if(this.Kc)return E(new O("redirect-operation-pending"));var d=this,e=k.document,f=null,g=null,l=null,n=null;return this.Kc=Fd(D().then(function(){Rg(b);return jj(d)}).then(function(){return kj(d,a,b,c)}).then(function(){return(new C(function(a,b){g=function(){var b=M("cordova.plugins.browsertab.close",k);a();"function"===typeof b&&b();d.Rb&&"function"===typeof d.Rb.close&&(d.Rb.close(),d.Rb=null);return!1};d.ib(g);l=function(){f||(f=Ce(d.hg).then(function(){b(new O("redirect-cancelled-by-user"))}))};n=
	function(){Xf()&&l()};e.addEventListener("resume",l,!1);L().toLowerCase().match(/android/)||e.addEventListener("visibilitychange",n,!1)})).g(function(a){return lj(d).then(function(){throw a;})})}),function(){l&&e.removeEventListener("resume",l,!1);n&&e.removeEventListener("visibilitychange",n,!1);f&&f.cancel();g&&d.dc(g);d.Kc=null})};
	var kj=function(a,b,c,d){var e=hj(),f=new mg(b,d,null,e,new O("no-auth-event")),g=M("BuildInfo.packageName",k);if("string"!==typeof g)throw new O("invalid-cordova-configuration");var l=M("BuildInfo.displayName",k),n={};if(L().toLowerCase().match(/iphone|ipad|ipod/))n.ibi=g;else if(L().toLowerCase().match(/android/))n.apn=g;else return E(new O("operation-not-supported-in-this-environment"));l&&(n.appDisplayName=l);e=ij(e);n.sessionId=e;var F=bi(a.A,a.m,a.o,b,c,null,d,a.La,n,a.O);return a.Ra().then(function(){var b=
	a.Xe;return a.og.h.set(bj,f.G(),b)}).then(function(){var b=M("cordova.plugins.browsertab.isAvailable",k);if("function"!==typeof b)throw new O("invalid-cordova-configuration");var c=null;b(function(b){if(b){c=M("cordova.plugins.browsertab.openUrl",k);if("function"!==typeof c)throw new O("invalid-cordova-configuration");c(F)}else{c=M("cordova.InAppBrowser.open",k);if("function"!==typeof c)throw new O("invalid-cordova-configuration");b=c;var d=L();d=!(!d.match(/(iPad|iPhone|iPod).*OS 7_\d/i)&&!d.match(/(iPad|iPhone|iPod).*OS 8_\d/i));
	a.Rb=b(F,d?"_blank":"_system","location=yes")}})})};fj.prototype.Lb=function(a){for(var b=0;b<this.ta.length;b++)try{this.ta[b](a)}catch(c){}};
	var jj=function(a){a.Ad||(a.Ad=a.Ra().then(function(){return new C(function(b){var c=function(d){b(d);a.dc(c);return!1};a.ib(c);mj(a)})}));return a.Ad},lj=function(a){var b=null;return cj(a.we).then(function(c){b=c;c=a.we;return c.h.remove(bj,c.j)}).then(function(){return b})},mj=function(a){var b=M("universalLinks.subscribe",k);if("function"!==typeof b)throw new O("invalid-cordova-configuration");var c=new mg("unknown",null,null,null,new O("no-auth-event")),d=!1,e=Ce(a.Sf).then(function(){return lj(a).then(function(){d||
	a.Lb(c)})}),f=function(b){d=!0;e&&e.cancel();lj(a).then(function(d){var e=c;if(d&&b&&b.url){e=null;var f=b.url;var g=hf(f),l=gf(g,"link"),n=gf(hf(l),"link");g=gf(g,"deep_link_id");f=gf(hf(g),"link")||g||n||l||f;-1!=f.indexOf("/__/auth/callback")&&(e=hf(f),e=Sf(gf(e,"firebaseError")||null),e=(e="object"===typeof e?lg(e):null)?new mg(d.ma,d.W,null,null,e):new mg(d.ma,d.W,f,d.uc()));e=e||c}a.Lb(e)})},g=k.handleOpenURL;k.handleOpenURL=function(a){0==a.toLowerCase().indexOf(M("BuildInfo.packageName",k).toLowerCase()+
	"://")&&f({url:a});if("function"===typeof g)try{g(a)}catch(n){console.error(n)}};b(null,f)};fj.prototype.ib=function(a){this.ta.push(a);jj(this).g(function(b){"auth/invalid-cordova-configuration"===b.code&&(b=new mg("unknown",null,null,null,new O("no-auth-event")),a(b))})};fj.prototype.dc=function(a){Ya(this.ta,function(b){return b==a})};var nj=function(a){this.j=a;this.h=Xi()},oj={name:"pendingRedirect",C:"session"},pj=function(a){return a.h.set(oj,"pending",a.j)},qj=function(a){return a.h.remove(oj,a.j)},rj=function(a){return a.h.get(oj,a.j).then(function(a){return"pending"==a})};var vj=function(a,b,c){this.A=a;this.m=b;this.o=c;this.hc=[];this.sb=!1;this.fd=r(this.vd,this);this.Xa=new sj(this);this.Od=new tj(this);this.Xb=new nj(this.m+":"+this.o);this.Ia={};this.Ia.unknown=this.Xa;this.Ia.signInViaRedirect=this.Xa;this.Ia.linkViaRedirect=this.Xa;this.Ia.reauthViaRedirect=this.Xa;this.Ia.signInViaPopup=this.Od;this.Ia.linkViaPopup=this.Od;this.Ia.reauthViaPopup=this.Od;this.Z=uj(this.A,this.m,this.o,qf)},uj=function(a,b,c,d){var e=firebase.SDK_VERSION||null;return Df()?new fj(a,
	b,c,e,void 0,void 0,d):new Xh(a,b,c,e,d)};vj.prototype.reset=function(){this.sb=!1;this.Z.dc(this.fd);this.Z=uj(this.A,this.m,this.o)};vj.prototype.Sb=function(){var a=this;this.sb||(this.sb=!0,this.Z.ib(this.fd));var b=this.Z;return this.Z.Ra().g(function(c){a.Z==b&&a.reset();throw c;})};var yj=function(a){a.Z.Ve()&&a.Sb().g(function(b){var c=new mg("unknown",null,null,null,new O("operation-not-supported-in-this-environment"));wj(b)&&a.vd(c)});a.Z.Ae()||xj(a.Xa)};
	vj.prototype.subscribe=function(a){Va(this.hc,a)||this.hc.push(a);if(!this.sb){var b=this;rj(this.Xb).then(function(a){a?qj(b.Xb).then(function(){b.Sb().g(function(a){var c=new mg("unknown",null,null,null,new O("operation-not-supported-in-this-environment"));wj(a)&&b.vd(c)})}):yj(b)}).g(function(){yj(b)})}};vj.prototype.unsubscribe=function(a){Ya(this.hc,function(b){return b==a})};
	vj.prototype.vd=function(a){if(!a)throw new O("invalid-auth-event");for(var b=!1,c=0;c<this.hc.length;c++){var d=this.hc[c];if(d.ke(a.ma,a.W)){(b=this.Ia[a.ma])&&b.Re(a,d);b=!0;break}}xj(this.Xa);return b};var zj=new Wf(2E3,1E4),Aj=new Wf(3E4,6E4);vj.prototype.getRedirectResult=function(){return this.Xa.getRedirectResult()};vj.prototype.$b=function(a,b,c,d,e){var f=this;return this.Z.$b(a,b,c,function(){f.sb||(f.sb=!0,f.Z.ib(f.fd))},function(){f.reset()},d,e)};
	var wj=function(a){return a&&"auth/cordova-not-ready"==a.code?!0:!1};vj.prototype.ac=function(a,b,c){var d=this,e;return pj(this.Xb).then(function(){return d.Z.ac(a,b,c).g(function(a){if(wj(a))throw new O("operation-not-supported-in-this-environment");e=a;return qj(d.Xb).then(function(){throw e;})}).then(function(){return d.Z.Ze()?new C(function(){}):qj(d.Xb).then(function(){return d.getRedirectResult()}).then(function(){}).g(function(){})})})};
	vj.prototype.fc=function(a,b,c,d){return this.Z.fc(c,function(c){a.bb(b,null,c,d)},zj.get())};var Bj={},Cj=function(a,b,c){var d=b+":"+c;Bj[d]||(Bj[d]=new vj(a,b,c));return Bj[d]},sj=function(a){this.h=a;this.Ab=null;this.cc=[];this.bc=[];this.yb=null;this.Rd=!1};sj.prototype.reset=function(){this.Ab=null;this.yb&&(this.yb.cancel(),this.yb=null)};
	sj.prototype.Re=function(a,b){if(!a)return E(new O("invalid-auth-event"));this.reset();this.Rd=!0;var c=a.ma,d=a.W,e=a.getError()&&"auth/web-storage-unsupported"==a.getError().code,f=a.getError()&&"auth/operation-not-supported-in-this-environment"==a.getError().code;"unknown"!=c||e||f?a=a.ba?this.Pd(a,b):b.Nb(c,d)?this.Qd(a,b):E(new O("invalid-auth-event")):(Dj(this,!1,null,null),a=D());return a};var xj=function(a){a.Rd||(a.Rd=!0,Dj(a,!1,null,null))};
	sj.prototype.Pd=function(a){Dj(this,!0,null,a.getError());return D()};sj.prototype.Qd=function(a,b){var c=this;b=b.Nb(a.ma,a.W);var d=a.Eb,e=a.uc(),f=!!a.ma.match(/Redirect$/);return b(d,e).then(function(a){Dj(c,f,a,null)}).g(function(a){Dj(c,f,null,a)})};
	var Ej=function(a,b){a.Ab=function(){return E(b)};if(a.bc.length)for(var c=0;c<a.bc.length;c++)a.bc[c](b)},Fj=function(a,b){a.Ab=function(){return D(b)};if(a.cc.length)for(var c=0;c<a.cc.length;c++)a.cc[c](b)},Dj=function(a,b,c,d){b?d?Ej(a,d):Fj(a,c):Fj(a,{user:null});a.cc=[];a.bc=[]};sj.prototype.getRedirectResult=function(){var a=this;return new C(function(b,c){a.Ab?a.Ab().then(b,c):(a.cc.push(b),a.bc.push(c),Gj(a))})};
	var Gj=function(a){var b=new O("timeout");a.yb&&a.yb.cancel();a.yb=Ce(Aj.get()).then(function(){a.Ab||Dj(a,!0,null,b)})},tj=function(a){this.h=a};tj.prototype.Re=function(a,b){if(!a)return E(new O("invalid-auth-event"));var c=a.ma,d=a.W;return a.ba?this.Pd(a,b):b.Nb(c,d)?this.Qd(a,b):E(new O("invalid-auth-event"))};tj.prototype.Pd=function(a,b){b.bb(a.ma,null,a.getError(),a.W);return D()};
	tj.prototype.Qd=function(a,b){var c=a.W,d=a.ma,e=b.Nb(d,c),f=a.Eb;a=a.uc();return e(f,a).then(function(a){b.bb(d,a,null,c)}).g(function(a){b.bb(d,null,a,c)})};var Hj=function(a){this.f=a;this.Ja=this.fa=null;this.Na=0};Hj.prototype.G=function(){return{apiKey:this.f.m,refreshToken:this.fa,accessToken:this.Ja,expirationTime:this.Na}};
	var Jj=function(a,b){var c=b.idToken,d=b.refreshToken;b=Ij(b.expiresIn);a.Ja=c;a.Na=b;a.fa=d},Ij=function(a){return ma()+1E3*parseInt(a,10)},Kj=function(a,b){return gh(a.f,b).then(function(b){a.Ja=b.access_token;a.Na=Ij(b.expires_in);a.fa=b.refresh_token;return{accessToken:a.Ja,expirationTime:a.Na,refreshToken:a.fa}}).g(function(b){"auth/user-token-expired"==b.code&&(a.fa=null);throw b;})};
	Hj.prototype.getToken=function(a){a=!!a;return this.Ja&&!this.fa?E(new O("user-token-expired")):a||!this.Ja||ma()>this.Na-3E4?this.fa?Kj(this,{grant_type:"refresh_token",refresh_token:this.fa}):D(null):D({accessToken:this.Ja,expirationTime:this.Na,refreshToken:this.fa})};var Lj=function(a,b,c,d,e,f){bg(this,{uid:a,displayName:d||null,photoURL:e||null,email:c||null,phoneNumber:f||null,providerId:b})},Mj=function(a,b){B.call(this,a);for(var c in b)this[c]=b[c]};t(Mj,B);
	var S=function(a,b,c){this.J=[];this.m=a.apiKey;this.o=a.appName;this.A=a.authDomain||null;a=firebase.SDK_VERSION?Kf(firebase.SDK_VERSION):null;this.f=new R(this.m,pf(qf),a);this.ra=new Hj(this.f);Nj(this,b.idToken);Jj(this.ra,b);N(this,"refreshToken",this.ra.fa);Oj(this,c||{});G.call(this);this.Lc=!1;this.A&&Of()&&(this.v=Cj(this.A,this.m,this.o));this.Sc=[];this.sa=null;this.wb=Pj(this);this.Gb=r(this.wd,this);var d=this;this.ia=null;this.Ne=function(a){d.Cb(a.languageCode)};this.Dd=null;this.M=
	[];this.Me=function(a){Qj(d,a.Cf)};this.sd=null};t(S,G);S.prototype.Cb=function(a){this.ia=a;$g(this.f,a)};var Rj=function(a,b){a.Dd&&tc(a.Dd,"languageCodeChanged",a.Ne);(a.Dd=b)&&lc(b,"languageCodeChanged",a.Ne)},Qj=function(a,b){a.M=b;ah(a.f,firebase.SDK_VERSION?Kf(firebase.SDK_VERSION,a.M):null)},Sj=function(a,b){a.sd&&tc(a.sd,"frameworkChanged",a.Me);(a.sd=b)&&lc(b,"frameworkChanged",a.Me)};S.prototype.wd=function(){this.wb.ub&&(this.wb.stop(),this.wb.start())};
	var Tj=function(a){try{return firebase.app(a.o).auth()}catch(b){throw new O("internal-error","No firebase.auth.Auth instance is available for the Firebase App '"+a.o+"'!");}},Pj=function(a){return new Ki(function(){return a.getIdToken(!0)},function(a){return a&&"auth/network-request-failed"==a.code?!0:!1},function(){var b=a.ra.Na-ma()-3E5;return 0<b?b:0},3E4,96E4,!1)},Uj=function(a){a.Kb||a.wb.ub||(a.wb.start(),tc(a,"tokenChanged",a.Gb),lc(a,"tokenChanged",a.Gb))},Vj=function(a){tc(a,"tokenChanged",
	a.Gb);a.wb.stop()},Nj=function(a,b){a.He=b;N(a,"_lat",b)},Wj=function(a,b){Ya(a.Sc,function(a){return a==b})},Xj=function(a){for(var b=[],c=0;c<a.Sc.length;c++)b.push(a.Sc[c](a));return Cd(b).then(function(){return a})},Yj=function(a){a.v&&!a.Lc&&(a.Lc=!0,a.v.subscribe(a))},Oj=function(a,b){bg(a,{uid:b.uid,displayName:b.displayName||null,photoURL:b.photoURL||null,email:b.email||null,emailVerified:b.emailVerified||!1,phoneNumber:b.phoneNumber||null,isAnonymous:b.isAnonymous||!1,providerData:[]})};
	N(S.prototype,"providerId","firebase");var Zj=function(){},ak=function(a){return D().then(function(){if(a.Kb)throw new O("app-deleted");})},bk=function(a){return Ra(a.providerData,function(a){return a.providerId})},dk=function(a,b){b&&(ck(a,b.providerId),a.providerData.push(b))},ck=function(a,b){Ya(a.providerData,function(a){return a.providerId==b})},ek=function(a,b,c){("uid"!=b||c)&&a.hasOwnProperty(b)&&N(a,b,c)};
	S.prototype.copy=function(a){var b=this;b!=a&&(bg(this,{uid:a.uid,displayName:a.displayName,photoURL:a.photoURL,email:a.email,emailVerified:a.emailVerified,phoneNumber:a.phoneNumber,isAnonymous:a.isAnonymous,providerData:[]}),x(a.providerData,function(a){dk(b,a)}),this.ra=a.ra,N(this,"refreshToken",this.ra.fa))};S.prototype.reload=function(){var a=this;return this.c(ak(this).then(function(){return fk(a).then(function(){return Xj(a)}).then(Zj)}))};
	var fk=function(a){return a.getIdToken().then(function(b){var c=a.isAnonymous;return gk(a,b).then(function(){c||ek(a,"isAnonymous",!1);return b})})};S.prototype.getIdToken=function(a){var b=this;return this.c(ak(this).then(function(){return b.ra.getToken(a)}).then(function(a){if(!a)throw new O("internal-error");a.accessToken!=b.He&&(Nj(b,a.accessToken),b.Ta());ek(b,"refreshToken",a.refreshToken);return a.accessToken}))};
	S.prototype.getToken=function(a){Zf["firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."]||(Zf["firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."]=!0,"undefined"!==typeof console&&"function"===typeof console.warn&&console.warn("firebase.User.prototype.getToken is deprecated. Please use firebase.User.prototype.getIdToken instead."));return this.getIdToken(a)};
	var hk=function(a,b){b.idToken&&a.He!=b.idToken&&(Jj(a.ra,b),a.Ta(),Nj(a,b.idToken),ek(a,"refreshToken",a.ra.fa))};S.prototype.Ta=function(){this.dispatchEvent(new Mj("tokenChanged"))};var gk=function(a,b){return Q(a.f,Jh,{idToken:b}).then(r(a.eg,a))};
	S.prototype.eg=function(a){a=a.users;if(!a||!a.length)throw new O("internal-error");a=a[0];Oj(this,{uid:a.localId,displayName:a.displayName,photoURL:a.photoUrl,email:a.email,emailVerified:!!a.emailVerified,phoneNumber:a.phoneNumber});for(var b=ik(a),c=0;c<b.length;c++)dk(this,b[c]);ek(this,"isAnonymous",!(this.email&&a.passwordHash)&&!(this.providerData&&this.providerData.length))};
	var ik=function(a){return(a=a.providerUserInfo)&&a.length?Ra(a,function(a){return new Lj(a.rawId,a.providerId,a.email,a.displayName,a.photoUrl,a.phoneNumber)}):[]};S.prototype.reauthenticateAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(a.Gd(this.f,this.uid).then(function(a){hk(b,a);c=jk(b,a,"reauthenticate");b.sa=null;return b.reload()}).then(function(){return c}),!0)};S.prototype.reauthenticateWithCredential=function(a){return this.reauthenticateAndRetrieveDataWithCredential(a).then(function(){})};
	var kk=function(a,b){return fk(a).then(function(){if(Va(bk(a),b))return Xj(a).then(function(){throw new O("provider-already-linked");})})};S.prototype.linkAndRetrieveDataWithCredential=function(a){var b=this,c=null;return this.c(kk(this,a.providerId).then(function(){return b.getIdToken()}).then(function(c){return a.Gc(b.f,c)}).then(function(a){c=jk(b,a,"link");return lk(b,a)}).then(function(){return c}))};S.prototype.linkWithCredential=function(a){return this.linkAndRetrieveDataWithCredential(a).then(function(a){return a.user})};
	S.prototype.linkWithPhoneNumber=function(a,b){var c=this;return this.c(kk(this,"phone").then(function(){return Ii(Tj(c),a,b,r(c.linkAndRetrieveDataWithCredential,c))}))};S.prototype.reauthenticateWithPhoneNumber=function(a,b){var c=this;return this.c(D().then(function(){return Ii(Tj(c),a,b,r(c.reauthenticateAndRetrieveDataWithCredential,c))}),!0)};var jk=function(a,b,c){var d=Qg(b);b=Si(b);return cg({user:a,credential:d,additionalUserInfo:b,operationType:c})},lk=function(a,b){hk(a,b);return a.reload().then(function(){return a})};
	h=S.prototype;h.updateEmail=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updateEmail(c,a)}).then(function(a){hk(b,a);return b.reload()}))};h.updatePhoneNumber=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return a.Gc(b.f,c)}).then(function(a){hk(b,a);return b.reload()}))};h.updatePassword=function(a){var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updatePassword(c,a)}).then(function(a){hk(b,a);return b.reload()}))};
	h.updateProfile=function(a){if(void 0===a.displayName&&void 0===a.photoURL)return ak(this);var b=this;return this.c(this.getIdToken().then(function(c){return b.f.updateProfile(c,{displayName:a.displayName,photoUrl:a.photoURL})}).then(function(a){hk(b,a);ek(b,"displayName",a.displayName||null);ek(b,"photoURL",a.photoUrl||null);x(b.providerData,function(a){"password"===a.providerId&&(N(a,"displayName",b.displayName),N(a,"photoURL",b.photoURL))});return Xj(b)}).then(Zj))};
	h.unlink=function(a){var b=this;return this.c(fk(this).then(function(c){return Va(bk(b),a)?xh(b.f,c,[a]).then(function(a){var c={};x(a.providerUserInfo||[],function(a){c[a.providerId]=!0});x(bk(b),function(a){c[a]||ck(b,a)});c[Ng.PROVIDER_ID]||N(b,"phoneNumber",null);return Xj(b)}):Xj(b).then(function(){throw new O("no-such-provider");})}))};
	h["delete"]=function(){var a=this;return this.c(this.getIdToken().then(function(b){return Q(a.f,Ih,{idToken:b})}).then(function(){a.dispatchEvent(new Mj("userDeleted"))})).then(function(){for(var b=0;b<a.J.length;b++)a.J[b].cancel("app-deleted");Rj(a,null);Sj(a,null);a.J=[];a.Kb=!0;Vj(a);N(a,"refreshToken",null);a.v&&a.v.unsubscribe(a)})};
	h.ke=function(a,b){return"linkViaPopup"==a&&(this.la||null)==b&&this.ka||"reauthViaPopup"==a&&(this.la||null)==b&&this.ka||"linkViaRedirect"==a&&(this.Ha||null)==b||"reauthViaRedirect"==a&&(this.Ha||null)==b?!0:!1};h.bb=function(a,b,c,d){"linkViaPopup"!=a&&"reauthViaPopup"!=a||d!=(this.la||null)||(c&&this.Va?this.Va(c):b&&!c&&this.ka&&this.ka(b),this.K&&(this.K.cancel(),this.K=null),delete this.ka,delete this.Va)};
	h.Nb=function(a,b){return"linkViaPopup"==a&&b==(this.la||null)?r(this.te,this):"reauthViaPopup"==a&&b==(this.la||null)?r(this.ue,this):"linkViaRedirect"==a&&(this.Ha||null)==b?r(this.te,this):"reauthViaRedirect"==a&&(this.Ha||null)==b?r(this.ue,this):null};h.tc=function(){return Lf(this.uid+":::")};h.linkWithPopup=function(a){var b=this;return mk(this,"linkViaPopup",a,function(){return kk(b,a.providerId).then(function(){return Xj(b)})},!1)};
	h.reauthenticateWithPopup=function(a){return mk(this,"reauthViaPopup",a,function(){return D()},!0)};
	var mk=function(a,b,c,d,e){if(!Of())return E(new O("operation-not-supported-in-this-environment"));if(a.sa&&!e)return E(a.sa);var f=jg(c.providerId),g=a.tc(),l=null;(!Pf()||Gf())&&a.A&&c.isOAuthProvider&&(l=bi(a.A,a.m,a.o,b,c,null,g,firebase.SDK_VERSION||null));var n=zf(l,f&&f.Zb,f&&f.Yb);d=d().then(function(){nk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){return a.v.$b(n,b,c,g,!!l)}).then(function(){return new C(function(c,d){a.bb(b,null,new O("cancelled-popup-request"),a.la||
	null);a.ka=c;a.Va=d;a.la=g;a.K=a.v.fc(a,b,n,g)})}).then(function(a){n&&yf(n);return a?cg(a):null}).g(function(a){n&&yf(n);throw a;});return a.c(d,e)};S.prototype.linkWithRedirect=function(a){var b=this;return ok(this,"linkViaRedirect",a,function(){return kk(b,a.providerId)},!1)};S.prototype.reauthenticateWithRedirect=function(a){return ok(this,"reauthViaRedirect",a,function(){return D()},!0)};
	var ok=function(a,b,c,d,e){if(!Of())return E(new O("operation-not-supported-in-this-environment"));if(a.sa&&!e)return E(a.sa);var f=null,g=a.tc();d=d().then(function(){nk(a);if(!e)return a.getIdToken().then(function(){})}).then(function(){a.Ha=g;return Xj(a)}).then(function(b){a.Ya&&(b=a.Ya,b=b.h.set(pk,a.G(),b.j));return b}).then(function(){return a.v.ac(b,c,g)}).g(function(b){f=b;if(a.Ya)return qk(a.Ya);throw f;}).then(function(){if(f)throw f;});return a.c(d,e)},nk=function(a){if(!a.v||!a.Lc){if(a.v&&
	!a.Lc)throw new O("internal-error");throw new O("auth-domain-config-required");}};S.prototype.te=function(a,b){var c=this;this.K&&(this.K.cancel(),this.K=null);var d=null,e=this.getIdToken().then(function(d){return ug(c.f,{requestUri:a,sessionId:b,idToken:d})}).then(function(a){d=jk(c,a,"link");return lk(c,a)}).then(function(){return d});return this.c(e)};
	S.prototype.ue=function(a,b){var c=this;this.K&&(this.K.cancel(),this.K=null);var d=null,e=D().then(function(){return qg(vg(c.f,{requestUri:a,sessionId:b}),c.uid)}).then(function(a){d=jk(c,a,"reauthenticate");hk(c,a);c.sa=null;return c.reload()}).then(function(){return d});return this.c(e,!0)};
	S.prototype.sendEmailVerification=function(a){var b=this,c=null;return this.c(this.getIdToken().then(function(b){c=b;return"undefined"===typeof a||ib(a)?{}:Gi(new Fi(a))}).then(function(a){return b.f.sendEmailVerification(c,a)}).then(function(a){if(b.email!=a)return b.reload()}).then(function(){}))};S.prototype.c=function(a,b){var c=this,d=rk(this,a,b);this.J.push(d);Fd(d,function(){Xa(c.J,d)});return d};
	var rk=function(a,b,c){return a.sa&&!c?(b.cancel(),E(a.sa)):b.g(function(b){!b||"auth/user-disabled"!=b.code&&"auth/user-token-expired"!=b.code||(a.sa||a.dispatchEvent(new Mj("userInvalidated")),a.sa=b);throw b;})};S.prototype.toJSON=function(){return this.G()};
	S.prototype.G=function(){var a={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,providerData:[],apiKey:this.m,appName:this.o,authDomain:this.A,stsTokenManager:this.ra.G(),redirectEventId:this.Ha||null};x(this.providerData,function(b){a.providerData.push(dg(b))});return a};
	var sk=function(a){if(!a.apiKey)return null;var b={apiKey:a.apiKey,authDomain:a.authDomain,appName:a.appName},c={};if(a.stsTokenManager&&a.stsTokenManager.accessToken&&a.stsTokenManager.expirationTime)c.idToken=a.stsTokenManager.accessToken,c.refreshToken=a.stsTokenManager.refreshToken||null,c.expiresIn=(a.stsTokenManager.expirationTime-ma())/1E3;else return null;var d=new S(b,c,a);a.providerData&&x(a.providerData,function(a){a&&dk(d,cg(a))});a.redirectEventId&&(d.Ha=a.redirectEventId);return d},
	tk=function(a,b,c,d){var e=new S(a,b);c&&(e.Ya=c);d&&Qj(e,d);return e.reload().then(function(){return e})};var uk=function(a){this.j=a;this.h=Xi()},pk={name:"redirectUser",C:"session"},qk=function(a){return a.h.remove(pk,a.j)},vk=function(a,b){return a.h.get(pk,a.j).then(function(a){a&&b&&(a.authDomain=b);return sk(a||{})})};var xk=function(a,b){this.j=a;this.h=b||Xi();this.N=null;this.Jd=this.Bd();this.h.addListener(wk("local"),this.j,r(this.ug,this))};xk.prototype.ug=function(){var a=this,b=wk("local");yk(this,function(){return D().then(function(){return a.N&&"local"!=a.N.C?a.h.get(b,a.j):null}).then(function(c){if(c)return zk(a,"local").then(function(){a.N=b})})})};var zk=function(a,b){var c=[],d;for(d in Ti)Ti[d]!==b&&c.push(a.h.remove(wk(Ti[d]),a.j));c.push(a.h.remove(Ak,a.j));return Bd(c)};
	xk.prototype.Bd=function(){var a=this,b=wk("local"),c=wk("session"),d=wk("none");return this.h.get(c,this.j).then(function(e){return e?c:a.h.get(d,a.j).then(function(c){return c?d:a.h.get(b,a.j).then(function(c){return c?b:a.h.get(Ak,a.j).then(function(a){return a?wk(a):b})})})}).then(function(b){a.N=b;return zk(a,b.C)}).g(function(){a.N||(a.N=b)})};var Ak={name:"persistence",C:"session"},wk=function(a){return{name:"authUser",C:a}};
	xk.prototype.setPersistence=function(a){var b=null,c=this;Ui(a);return yk(this,function(){return a!=c.N.C?c.h.get(c.N,c.j).then(function(d){b=d;return zk(c,a)}).then(function(){c.N=wk(a);if(b)return c.h.set(c.N,b,c.j)}):D()})};
	var Bk=function(a){return yk(a,function(){return a.h.set(Ak,a.N.C,a.j)})},Ck=function(a,b){return yk(a,function(){return a.h.set(a.N,b.G(),a.j)})},Dk=function(a){return yk(a,function(){return a.h.remove(a.N,a.j)})},Ek=function(a,b){return yk(a,function(){return a.h.get(a.N,a.j).then(function(a){a&&b&&(a.authDomain=b);return sk(a||{})})})},yk=function(a,b){a.Jd=a.Jd.then(b,b);return a.Jd};var T=function(a){this.Ea=!1;N(this,"app",a);if(this.i().options&&this.i().options.apiKey)a=firebase.SDK_VERSION?Kf(firebase.SDK_VERSION):null,this.f=new R(this.i().options&&this.i().options.apiKey,pf(qf),a);else throw new O("invalid-api-key");this.J=[];this.Ka=[];this.Fb=[];this.ag=firebase.INTERNAL.createSubscribe(r(this.Pf,this));this.mc=void 0;this.cg=firebase.INTERNAL.createSubscribe(r(this.Rf,this));Fk(this,null);a=this.i().options.apiKey;var b=this.i().name;this.na=new xk(a+":"+b);a=this.i().options.apiKey;
	b=this.i().name;this.zb=new uk(a+":"+b);this.pc=this.c(Gk(this));this.ya=this.c(Hk(this));this.Dc=!1;this.ud=r(this.vg,this);this.bf=r(this.pb,this);this.Gb=r(this.wd,this);this.$e=r(this.Lf,this);this.af=r(this.Mf,this);Ik(this);this.INTERNAL={};this.INTERNAL["delete"]=r(this["delete"],this);this.INTERNAL.logFramework=r(this.Xf,this);this.Oa=0;G.call(this);Jk(this);this.M=[]};t(T,G);var Kk=function(a){B.call(this,"languageCodeChanged");this.languageCode=a};t(Kk,B);
	var Lk=function(a){B.call(this,"frameworkChanged");this.Cf=a};t(Lk,B);T.prototype.setPersistence=function(a){a=this.na.setPersistence(a);return this.c(a)};T.prototype.Cb=function(a){this.ia===a||this.Ea||(this.ia=a,$g(this.f,this.ia),this.dispatchEvent(new Kk(this.ia)))};T.prototype.useDeviceLanguage=function(){var a=k.navigator;this.Cb(a?a.languages&&a.languages[0]||a.language||a.userLanguage||null:null)};
	T.prototype.Xf=function(a){this.M.push(a);ah(this.f,firebase.SDK_VERSION?Kf(firebase.SDK_VERSION,this.M):null);this.dispatchEvent(new Lk(this.M))};var Jk=function(a){Object.defineProperty(a,"lc",{get:function(){return this.ia},set:function(a){this.Cb(a)},enumerable:!1});a.ia=null};T.prototype.toJSON=function(){return{apiKey:this.i().options.apiKey,authDomain:this.i().options.authDomain,appName:this.i().name,currentUser:U(this)&&U(this).G()}};
	var Mk=function(a){return a.xf||E(new O("auth-domain-config-required"))},Ik=function(a){var b=a.i().options.authDomain,c=a.i().options.apiKey;b&&Of()&&(a.xf=a.pc.then(function(){if(!a.Ea){a.v=Cj(b,c,a.i().name);a.v.subscribe(a);U(a)&&Yj(U(a));if(a.Za){Yj(a.Za);var d=a.Za;d.Cb(a.ia);Rj(d,a);d=a.Za;Qj(d,a.M);Sj(d,a);a.Za=null}return a.v}}))};h=T.prototype;h.ke=function(a,b){switch(a){case "unknown":case "signInViaRedirect":return!0;case "signInViaPopup":return this.la==b&&!!this.ka;default:return!1}};
	h.bb=function(a,b,c,d){"signInViaPopup"==a&&this.la==d&&(c&&this.Va?this.Va(c):b&&!c&&this.ka&&this.ka(b),this.K&&(this.K.cancel(),this.K=null),delete this.ka,delete this.Va)};h.Nb=function(a,b){return"signInViaRedirect"==a||"signInViaPopup"==a&&this.la==b&&this.ka?r(this.zf,this):null};
	h.zf=function(a,b){var c=this;a={requestUri:a,sessionId:b};this.K&&(this.K.cancel(),this.K=null);var d=null,e=null,f=sg(c.f,a).then(function(a){d=Qg(a);e=Si(a);return a});a=c.pc.then(function(){return f}).then(function(a){return Nk(c,a)}).then(function(){return cg({user:U(c),credential:d,additionalUserInfo:e,operationType:"signIn"})});return this.c(a)};h.tc=function(){return Lf()};
	h.signInWithPopup=function(a){if(!Of())return E(new O("operation-not-supported-in-this-environment"));var b=this,c=jg(a.providerId),d=this.tc(),e=null;(!Pf()||Gf())&&this.i().options.authDomain&&a.isOAuthProvider&&(e=bi(this.i().options.authDomain,this.i().options.apiKey,this.i().name,"signInViaPopup",a,null,d,firebase.SDK_VERSION||null));var f=zf(e,c&&c.Zb,c&&c.Yb);c=Mk(this).then(function(b){return b.$b(f,"signInViaPopup",a,d,!!e)}).then(function(){return new C(function(a,c){b.bb("signInViaPopup",
	null,new O("cancelled-popup-request"),b.la);b.ka=a;b.Va=c;b.la=d;b.K=b.v.fc(b,"signInViaPopup",f,d)})}).then(function(a){f&&yf(f);return a?cg(a):null}).g(function(a){f&&yf(f);throw a;});return this.c(c)};h.signInWithRedirect=function(a){if(!Of())return E(new O("operation-not-supported-in-this-environment"));var b=this,c=Mk(this).then(function(){return Bk(b.na)}).then(function(){return b.v.ac("signInViaRedirect",a)});return this.c(c)};
	h.getRedirectResult=function(){if(!Of())return E(new O("operation-not-supported-in-this-environment"));var a=this,b=Mk(this).then(function(){return a.v.getRedirectResult()}).then(function(a){return a?cg(a):null});return this.c(b)};
	var Nk=function(a,b){var c={};c.apiKey=a.i().options.apiKey;c.authDomain=a.i().options.authDomain;c.appName=a.i().name;return a.pc.then(function(){return tk(c,b,a.zb,$a(a.M))}).then(function(b){if(U(a)&&b.uid==U(a).uid)return U(a).copy(b),a.pb(b);Fk(a,b);Yj(b);return a.pb(b)}).then(function(){a.Ta()})},Fk=function(a,b){U(a)&&(Wj(U(a),a.bf),tc(U(a),"tokenChanged",a.Gb),tc(U(a),"userDeleted",a.$e),tc(U(a),"userInvalidated",a.af),Vj(U(a)));b&&(b.Sc.push(a.bf),lc(b,"tokenChanged",a.Gb),lc(b,"userDeleted",
	a.$e),lc(b,"userInvalidated",a.af),0<a.Oa&&Uj(b));N(a,"currentUser",b);b&&(b.Cb(a.ia),Rj(b,a),Qj(b,a.M),Sj(b,a))};T.prototype.signOut=function(){var a=this,b=this.ya.then(function(){if(!U(a))return D();Fk(a,null);return Dk(a.na).then(function(){a.Ta()})});return this.c(b)};
	var Ok=function(a){var b=a.i().options.authDomain;b=vk(a.zb,b).then(function(b){if(a.Za=b)b.Ya=a.zb;return qk(a.zb)});return a.c(b)},Gk=function(a){var b=a.i().options.authDomain,c=Ok(a).then(function(){return Ek(a.na,b)}).then(function(b){return b?(b.Ya=a.zb,a.Za&&(a.Za.Ha||null)==(b.Ha||null)?b:b.reload().then(function(){return Ck(a.na,b).then(function(){return b})}).g(function(c){return"auth/network-request-failed"==c.code?b:Dk(a.na)})):null}).then(function(b){Fk(a,b||null)});return a.c(c)},Hk=
	function(a){return a.pc.then(function(){return a.getRedirectResult()}).g(function(){}).then(function(){if(!a.Ea)return a.ud()}).g(function(){}).then(function(){if(!a.Ea){a.Dc=!0;var b=a.na;b.h.addListener(wk("local"),b.j,a.ud)}})};h=T.prototype;
	h.vg=function(){var a=this,b=this.i().options.authDomain;return Ek(this.na,b).then(function(b){if(!a.Ea){var c;if(c=U(a)&&b){c=U(a).uid;var e=b.uid;c=void 0===c||null===c||""===c||void 0===e||null===e||""===e?!1:c==e}if(c)return U(a).copy(b),U(a).getIdToken();if(U(a)||b)Fk(a,b),b&&(Yj(b),b.Ya=a.zb),a.v&&a.v.subscribe(a),a.Ta()}})};h.pb=function(a){return Ck(this.na,a)};h.wd=function(){this.Ta();this.pb(U(this))};h.Lf=function(){this.signOut()};h.Mf=function(){this.signOut()};
	var Pk=function(a,b){var c=null,d=null;return a.c(b.then(function(b){c=Qg(b);d=Si(b);return Nk(a,b)}).then(function(){return cg({user:U(a),credential:c,additionalUserInfo:d,operationType:"signIn"})}))};h=T.prototype;h.Pf=function(a){var b=this;this.addAuthTokenListener(function(){a.next(U(b))})};h.Rf=function(a){var b=this;Qk(this,function(){a.next(U(b))})};
	h.onIdTokenChanged=function(a,b,c){var d=this;this.Dc&&firebase.Promise.resolve().then(function(){p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.ag(a,b,c)};h.onAuthStateChanged=function(a,b,c){var d=this;this.Dc&&firebase.Promise.resolve().then(function(){d.mc=d.getUid();p(a)?a(U(d)):p(a.next)&&a.next(U(d))});return this.cg(a,b,c)};h.Ff=function(a){var b=this,c=this.ya.then(function(){return U(b)?U(b).getIdToken(a).then(function(a){return{accessToken:a}}):null});return this.c(c)};
	h.signInWithCustomToken=function(a){var b=this;return this.ya.then(function(){return Pk(b,Q(b.f,Lh,{token:a}))}).then(function(a){a=a.user;ek(a,"isAnonymous",!1);return b.pb(a)}).then(function(){return U(b)})};h.signInWithEmailAndPassword=function(a,b){var c=this;return this.ya.then(function(){return Pk(c,Q(c.f,Gg,{email:a,password:b}))}).then(function(a){return a.user})};h.createUserWithEmailAndPassword=function(a,b){var c=this;return this.ya.then(function(){return Pk(c,Q(c.f,Hh,{email:a,password:b}))}).then(function(a){return a.user})};
	h.signInWithCredential=function(a){return this.signInAndRetrieveDataWithCredential(a).then(function(a){return a.user})};h.signInAndRetrieveDataWithCredential=function(a){var b=this;return this.ya.then(function(){return Pk(b,a.Ob(b.f))})};h.signInAnonymously=function(){var a=this;return this.ya.then(function(){var b=U(a);return b&&b.isAnonymous?b:Pk(a,a.f.signInAnonymously()).then(function(b){b=b.user;ek(b,"isAnonymous",!0);return a.pb(b)}).then(function(){return U(a)})})};h.i=function(){return this.app};
	var U=function(a){return a.currentUser};T.prototype.getUid=function(){return U(this)&&U(this).uid||null};var Rk=function(a){return U(a)&&U(a)._lat||null};h=T.prototype;h.Ta=function(){if(this.Dc){for(var a=0;a<this.Ka.length;a++)if(this.Ka[a])this.Ka[a](Rk(this));if(this.mc!==this.getUid()&&this.Fb.length)for(this.mc=this.getUid(),a=0;a<this.Fb.length;a++)if(this.Fb[a])this.Fb[a](Rk(this))}};h.lf=function(a){this.addAuthTokenListener(a);this.Oa++;0<this.Oa&&U(this)&&Uj(U(this))};
	h.ig=function(a){var b=this;x(this.Ka,function(c){c==a&&b.Oa--});0>this.Oa&&(this.Oa=0);0==this.Oa&&U(this)&&Vj(U(this));this.removeAuthTokenListener(a)};h.addAuthTokenListener=function(a){var b=this;this.Ka.push(a);this.c(this.ya.then(function(){b.Ea||Va(b.Ka,a)&&a(Rk(b))}))};h.removeAuthTokenListener=function(a){Ya(this.Ka,function(b){return b==a})};var Qk=function(a,b){a.Fb.push(b);a.c(a.ya.then(function(){!a.Ea&&Va(a.Fb,b)&&a.mc!==a.getUid()&&(a.mc=a.getUid(),b(Rk(a)))}))};h=T.prototype;
	h["delete"]=function(){this.Ea=!0;for(var a=0;a<this.J.length;a++)this.J[a].cancel("app-deleted");this.J=[];this.na&&(a=this.na,a.h.removeListener(wk("local"),a.j,this.ud));this.v&&this.v.unsubscribe(this);return firebase.Promise.resolve()};h.c=function(a){var b=this;this.J.push(a);Fd(a,function(){Xa(b.J,a)});return a};h.fetchProvidersForEmail=function(a){return this.c(lh(this.f,a))};h.verifyPasswordResetCode=function(a){return this.checkActionCode(a).then(function(a){return a.data.email})};
	h.confirmPasswordReset=function(a,b){return this.c(this.f.confirmPasswordReset(a,b).then(function(){}))};h.checkActionCode=function(a){return this.c(this.f.checkActionCode(a).then(function(a){return new Ji(a)}))};h.applyActionCode=function(a){return this.c(this.f.applyActionCode(a).then(function(){}))};h.sendPasswordResetEmail=function(a,b){var c=this;return this.c(D().then(function(){return"undefined"===typeof b||ib(b)?{}:Gi(new Fi(b))}).then(function(b){return c.f.sendPasswordResetEmail(a,b)}).then(function(){}))};
	h.signInWithPhoneNumber=function(a,b){return this.c(Ii(this,a,b,r(this.signInAndRetrieveDataWithCredential,this)))};var Tk=function(a,b,c,d){a:{c=Array.prototype.slice.call(c);var e=0;for(var f=!1,g=0;g<b.length;g++)if(b[g].optional)f=!0;else{if(f)throw new O("internal-error","Argument validator encountered a required argument after an optional argument.");e++}f=b.length;if(c.length<e||f<c.length)d="Expected "+(e==f?1==e?"1 argument":e+" arguments":e+"-"+f+" arguments")+" but got "+c.length+".";else{for(e=0;e<c.length;e++)if(f=b[e].optional&&void 0===c[e],!b[e].U(c[e])&&!f){b=b[e];if(0>e||e>=Sk.length)throw new O("internal-error",
	"Argument validator received an unsupported number of arguments.");c=Sk[e];d=(d?"":c+" argument ")+(b.name?'"'+b.name+'" ':"")+"must be "+b.T+".";break a}d=null}}if(d)throw new O("argument-error",a+" failed: "+d);},Sk="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" "),V=function(a,b){return{name:a||"",T:"a valid string",optional:!!b,U:m}},Uk=function(){return{name:"opt_forceRefresh",T:"a boolean",optional:!0,U:ca}},W=function(a,b){return{name:a||"",T:"a valid object",optional:!!b,
	U:q}},Vk=function(a,b){return{name:a||"",T:"a function",optional:!!b,U:p}},Wk=function(a,b){return{name:a||"",T:"null",optional:!!b,U:fa}},Xk=function(){return{name:"",T:"an HTML element",optional:!1,U:function(a){return!!(a&&a instanceof Element)}}},Yk=function(){return{name:"auth",T:"an instance of Firebase Auth",optional:!0,U:function(a){return!!(a&&a instanceof T)}}},Zk=function(){return{name:"app",T:"an instance of Firebase App",optional:!0,U:function(a){return!!(a&&a instanceof firebase.app.App)}}},
	$k=function(a){return{name:a?a+"Credential":"credential",T:a?"a valid "+a+" credential":"a valid credential",optional:!1,U:function(b){if(!b)return!1;var c=!a||b.providerId===a;return!(!b.Ob||!c)}}},al=function(){return{name:"authProvider",T:"a valid Auth provider",optional:!1,U:function(a){return!!(a&&a.providerId&&a.hasOwnProperty&&a.hasOwnProperty("isOAuthProvider"))}}},bl=function(){return{name:"applicationVerifier",T:"an implementation of firebase.auth.ApplicationVerifier",optional:!1,U:function(a){return!!(a&&
	m(a.type)&&p(a.verify))}}},X=function(a,b,c,d){return{name:c||"",T:a.T+" or "+b.T,optional:!!d,U:function(c){return a.U(c)||b.U(c)}}};var Y=function(a,b){for(var c in b){var d=b[c].name;a[d]=cl(d,a[c],b[c].a)}},Z=function(a,b,c,d){a[b]=cl(b,c,d)},cl=function(a,b,c){if(!c)return b;var d=dl(a);a=function(){var a=Array.prototype.slice.call(arguments);Tk(d,c,a);return b.apply(this,a)};for(var e in b)a[e]=b[e];for(e in b.prototype)a.prototype[e]=b.prototype[e];return a},dl=function(a){a=a.split(".");return a[a.length-1]};Y(T.prototype,{applyActionCode:{name:"applyActionCode",a:[V("code")]},checkActionCode:{name:"checkActionCode",a:[V("code")]},confirmPasswordReset:{name:"confirmPasswordReset",a:[V("code"),V("newPassword")]},createUserWithEmailAndPassword:{name:"createUserWithEmailAndPassword",a:[V("email"),V("password")]},fetchProvidersForEmail:{name:"fetchProvidersForEmail",a:[V("email")]},getRedirectResult:{name:"getRedirectResult",a:[]},onAuthStateChanged:{name:"onAuthStateChanged",a:[X(W(),Vk(),"nextOrObserver"),
	Vk("opt_error",!0),Vk("opt_completed",!0)]},onIdTokenChanged:{name:"onIdTokenChanged",a:[X(W(),Vk(),"nextOrObserver"),Vk("opt_error",!0),Vk("opt_completed",!0)]},sendPasswordResetEmail:{name:"sendPasswordResetEmail",a:[V("email"),X(W("opt_actionCodeSettings",!0),Wk(null,!0),"opt_actionCodeSettings",!0)]},setPersistence:{name:"setPersistence",a:[V("persistence")]},signInAndRetrieveDataWithCredential:{name:"signInAndRetrieveDataWithCredential",a:[$k()]},signInAnonymously:{name:"signInAnonymously",a:[]},
	signInWithCredential:{name:"signInWithCredential",a:[$k()]},signInWithCustomToken:{name:"signInWithCustomToken",a:[V("token")]},signInWithEmailAndPassword:{name:"signInWithEmailAndPassword",a:[V("email"),V("password")]},signInWithPhoneNumber:{name:"signInWithPhoneNumber",a:[V("phoneNumber"),bl()]},signInWithPopup:{name:"signInWithPopup",a:[al()]},signInWithRedirect:{name:"signInWithRedirect",a:[al()]},signOut:{name:"signOut",a:[]},toJSON:{name:"toJSON",a:[V(null,!0)]},useDeviceLanguage:{name:"useDeviceLanguage",
	a:[]},verifyPasswordResetCode:{name:"verifyPasswordResetCode",a:[V("code")]}});(function(a,b){for(var c in b){var d=b[c].name;if(d!==c){var e=b[c].nf;Object.defineProperty(a,d,{get:function(){return this[c]},set:function(a){Tk(d,[e],[a],!0);this[c]=a},enumerable:!0})}}})(T.prototype,{lc:{name:"languageCode",nf:X(V(),Wk(),"languageCode")}});T.Persistence=Ti;T.Persistence.LOCAL="local";T.Persistence.SESSION="session";T.Persistence.NONE="none";
	Y(S.prototype,{"delete":{name:"delete",a:[]},getIdToken:{name:"getIdToken",a:[Uk()]},getToken:{name:"getToken",a:[Uk()]},linkAndRetrieveDataWithCredential:{name:"linkAndRetrieveDataWithCredential",a:[$k()]},linkWithCredential:{name:"linkWithCredential",a:[$k()]},linkWithPhoneNumber:{name:"linkWithPhoneNumber",a:[V("phoneNumber"),bl()]},linkWithPopup:{name:"linkWithPopup",a:[al()]},linkWithRedirect:{name:"linkWithRedirect",a:[al()]},reauthenticateAndRetrieveDataWithCredential:{name:"reauthenticateAndRetrieveDataWithCredential",
	a:[$k()]},reauthenticateWithCredential:{name:"reauthenticateWithCredential",a:[$k()]},reauthenticateWithPhoneNumber:{name:"reauthenticateWithPhoneNumber",a:[V("phoneNumber"),bl()]},reauthenticateWithPopup:{name:"reauthenticateWithPopup",a:[al()]},reauthenticateWithRedirect:{name:"reauthenticateWithRedirect",a:[al()]},reload:{name:"reload",a:[]},sendEmailVerification:{name:"sendEmailVerification",a:[X(W("opt_actionCodeSettings",!0),Wk(null,!0),"opt_actionCodeSettings",!0)]},toJSON:{name:"toJSON",a:[V(null,
	!0)]},unlink:{name:"unlink",a:[V("provider")]},updateEmail:{name:"updateEmail",a:[V("email")]},updatePassword:{name:"updatePassword",a:[V("password")]},updatePhoneNumber:{name:"updatePhoneNumber",a:[$k("phone")]},updateProfile:{name:"updateProfile",a:[W("profile")]}});Y(C.prototype,{g:{name:"catch"},then:{name:"then"}});Y(Hi.prototype,{confirm:{name:"confirm",a:[V("verificationCode")]}});Z(Ig,"credential",function(a,b){return new Fg(a,b)},[V("email"),V("password")]);
	Y(xg.prototype,{addScope:{name:"addScope",a:[V("scope")]},setCustomParameters:{name:"setCustomParameters",a:[W("customOAuthParameters")]}});Z(xg,"credential",yg,[X(V(),W(),"token")]);Y(zg.prototype,{addScope:{name:"addScope",a:[V("scope")]},setCustomParameters:{name:"setCustomParameters",a:[W("customOAuthParameters")]}});Z(zg,"credential",Ag,[X(V(),W(),"token")]);Y(Bg.prototype,{addScope:{name:"addScope",a:[V("scope")]},setCustomParameters:{name:"setCustomParameters",a:[W("customOAuthParameters")]}});
	Z(Bg,"credential",Cg,[X(V(),X(W(),Wk()),"idToken"),X(V(),Wk(),"accessToken",!0)]);Y(Dg.prototype,{setCustomParameters:{name:"setCustomParameters",a:[W("customOAuthParameters")]}});Z(Dg,"credential",Eg,[X(V(),W(),"token"),V("secret",!0)]);Y(P.prototype,{addScope:{name:"addScope",a:[V("scope")]},credential:{name:"credential",a:[X(V(),Wk(),"idToken",!0),X(V(),Wk(),"accessToken",!0)]},setCustomParameters:{name:"setCustomParameters",a:[W("customOAuthParameters")]}});
	Z(Ng,"credential",Pg,[V("verificationId"),V("verificationCode")]);Y(Ng.prototype,{verifyPhoneNumber:{name:"verifyPhoneNumber",a:[V("phoneNumber"),bl()]}});Y(O.prototype,{toJSON:{name:"toJSON",a:[V(null,!0)]}});Y(Sg.prototype,{toJSON:{name:"toJSON",a:[V(null,!0)]}});Y(og.prototype,{toJSON:{name:"toJSON",a:[V(null,!0)]}});Y(ki.prototype,{clear:{name:"clear",a:[]},render:{name:"render",a:[]},verify:{name:"verify",a:[]}});
	(function(){if("undefined"!==typeof firebase&&firebase.INTERNAL&&firebase.INTERNAL.registerService){var a={Auth:T,Error:O};Z(a,"EmailAuthProvider",Ig,[]);Z(a,"FacebookAuthProvider",xg,[]);Z(a,"GithubAuthProvider",zg,[]);Z(a,"GoogleAuthProvider",Bg,[]);Z(a,"TwitterAuthProvider",Dg,[]);Z(a,"OAuthProvider",P,[V("providerId")]);Z(a,"PhoneAuthProvider",Ng,[Yk()]);Z(a,"RecaptchaVerifier",ki,[X(V(),Xk(),"recaptchaContainer"),W("recaptchaParameters",!0),Zk()]);firebase.INTERNAL.registerService("auth",function(a,
	c){a=new T(a);c({INTERNAL:{getUid:r(a.getUid,a),getToken:r(a.Ff,a),addAuthTokenListener:r(a.lf,a),removeAuthTokenListener:r(a.ig,a)}});return a},a,function(a,c){if("create"===a)try{c.auth()}catch(d){}});firebase.INTERNAL.extendNamespace({User:S})}else throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");})();}).call(this);
	}).call(typeof global !== undefined ? global : typeof self !== undefined ? self : typeof window !== undefined ? window : {});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/

	---

	typedarray.js
	Copyright (c) 2010, Linden Research, Inc.

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE. */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.registerDatabase = registerDatabase;

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	var _Database = __webpack_require__(18);

	var _Query = __webpack_require__(42);

	var _Reference = __webpack_require__(36);

	var _util = __webpack_require__(19);

	var _RepoManager = __webpack_require__(106);

	var _internal = __webpack_require__(109);

	var INTERNAL = _interopRequireWildcard(_internal);

	var _test_access = __webpack_require__(110);

	var TEST_ACCESS = _interopRequireWildcard(_test_access);

	var _environment = __webpack_require__(31);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function registerDatabase(instance) {
	    // Register the Database Service with the 'firebase' namespace.
	    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) {
	        return _RepoManager.RepoManager.getInstance().databaseFromApp(app, url);
	    },
	    // firebase.database namespace properties
	    {
	        Reference: _Reference.Reference,
	        Query: _Query.Query,
	        Database: _Database.Database,
	        enableLogging: _util.enableLogging,
	        INTERNAL: INTERNAL,
	        ServerValue: _Database.Database.ServerValue,
	        TEST_ACCESS: TEST_ACCESS
	    }, null, true);
	    if ((0, _environment.isNodeSdk)()) {
	        module.exports = namespace;
	    }
	} /**
	   * Copyright 2017 Google Inc.
	   *
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   *   http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   */

	registerDatabase(_app2.default);
	//# sourceMappingURL=database.js.map


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DatabaseInternals = exports.Database = undefined;

	var _util = __webpack_require__(19);

	var _parser = __webpack_require__(32);

	var _Path = __webpack_require__(33);

	var _promise = __webpack_require__(8);

	var _Reference = __webpack_require__(36);

	var _Repo = __webpack_require__(60);

	var _RepoManager = __webpack_require__(106);

	var _validation = __webpack_require__(38);

	var _validation2 = __webpack_require__(39);

	/**
	 * Class representing a firebase database.
	 * @implements {FirebaseService}
	 */
	var Database = /** @class */function () {
	    /**
	     * The constructor should not be called by users of our public API.
	     * @param {!Repo} repo_
	     */
	    function Database(repo_) {
	        this.repo_ = repo_;
	        if (!(repo_ instanceof _Repo.Repo)) {
	            (0, _util.fatal)("Don't call new Database() directly - please use firebase.database().");
	        }
	        /** @type {Reference} */
	        this.root_ = new _Reference.Reference(repo_, _Path.Path.Empty);
	        this.INTERNAL = new DatabaseInternals(this);
	    }
	    Object.defineProperty(Database.prototype, "app", {
	        get: function get() {
	            return this.repo_.app;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Returns a reference to the root or the path specified in opt_pathString.
	     * @param {string=} pathString
	     * @return {!Reference} Firebase reference.
	     */
	    Database.prototype.ref = function (pathString) {
	        this.checkDeleted_('ref');
	        (0, _validation.validateArgCount)('database.ref', 0, 1, arguments.length);
	        return pathString !== undefined ? this.root_.child(pathString) : this.root_;
	    };
	    /**
	     * Returns a reference to the root or the path specified in url.
	     * We throw a exception if the url is not in the same domain as the
	     * current repo.
	     * @param {string} url
	     * @return {!Reference} Firebase reference.
	     */
	    Database.prototype.refFromURL = function (url) {
	        /** @const {string} */
	        var apiName = 'database.refFromURL';
	        this.checkDeleted_(apiName);
	        (0, _validation.validateArgCount)(apiName, 1, 1, arguments.length);
	        var parsedURL = (0, _parser.parseRepoInfo)(url);
	        (0, _validation2.validateUrl)(apiName, 1, parsedURL);
	        var repoInfo = parsedURL.repoInfo;
	        if (repoInfo.host !== this.repo_.repoInfo_.host) {
	            (0, _util.fatal)(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');
	        }
	        return this.ref(parsedURL.path.toString());
	    };
	    /**
	     * @param {string} apiName
	     */
	    Database.prototype.checkDeleted_ = function (apiName) {
	        if (this.repo_ === null) {
	            (0, _util.fatal)('Cannot call ' + apiName + ' on a deleted database.');
	        }
	    };
	    // Make individual repo go offline.
	    Database.prototype.goOffline = function () {
	        (0, _validation.validateArgCount)('database.goOffline', 0, 0, arguments.length);
	        this.checkDeleted_('goOffline');
	        this.repo_.interrupt();
	    };
	    Database.prototype.goOnline = function () {
	        (0, _validation.validateArgCount)('database.goOnline', 0, 0, arguments.length);
	        this.checkDeleted_('goOnline');
	        this.repo_.resume();
	    };
	    Database.ServerValue = {
	        TIMESTAMP: {
	            '.sv': 'timestamp'
	        }
	    };
	    return Database;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.Database = Database;

	var DatabaseInternals = /** @class */function () {
	    /** @param {!Database} database */
	    function DatabaseInternals(database) {
	        this.database = database;
	    }
	    /** @return {Promise<void>} */
	    DatabaseInternals.prototype.delete = function () {
	        this.database.checkDeleted_('delete');
	        _RepoManager.RepoManager.getInstance().deleteRepo(this.database.repo_);
	        this.database.repo_ = null;
	        this.database.root_ = null;
	        this.database.INTERNAL = null;
	        this.database = null;
	        return _promise.PromiseImpl.resolve();
	    };
	    return DatabaseInternals;
	}();
	exports.DatabaseInternals = DatabaseInternals;
	//# sourceMappingURL=Database.js.map


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.setTimeoutNonBlocking = exports.exportPropGetter = exports.beingCrawled = exports.callUserCallback = exports.exceptionGuard = exports.tryParseInt = exports.INTEGER_REGEXP_ = exports.errorForServerCode = exports.isWindowsStoreApp = exports.isChromeExtensionContentScript = exports.doubleToIEEE754String = exports.bindCallback = exports.each = exports.splitStringBySize = exports.ObjectToUniqueKey = exports.requireKey = exports.stringCompare = exports.nameCompare = exports.MAX_NAME = exports.MIN_NAME = exports.executeWhenDOMReady = exports.isInvalidJSONNumber = exports.warnAboutUnsupportedMethod = exports.warnIfPageIsSecure = exports.warn = exports.fatal = exports.error = exports.logWrapper = exports.log = exports.enableLogging = exports.logger = exports.sha1 = exports.base64Decode = exports.base64Encode = exports.LUIDGenerator = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	exports.setBufferImpl = setBufferImpl;

	var _assert = __webpack_require__(20);

	var _obj = __webpack_require__(22);

	var _crypt = __webpack_require__(23);

	var _Sha = __webpack_require__(24);

	var _utf = __webpack_require__(26);

	var _json = __webpack_require__(27);

	var _storage = __webpack_require__(28);

	var _environment = __webpack_require__(31);

	/**
	 * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).
	 * @type {function(): number} Generated ID.
	 */
	var LUIDGenerator = exports.LUIDGenerator = function () {
	    var id = 1;
	    return function () {
	        return id++;
	    };
	}();
	/**
	 * URL-safe base64 encoding
	 * @param {!string} str
	 * @return {!string}
	 */
	var base64Encode = exports.base64Encode = function base64Encode(str) {
	    var utf8Bytes = (0, _utf.stringToByteArray)(str);
	    return _crypt.base64.encodeByteArray(utf8Bytes, /*useWebSafe=*/true);
	};
	var BufferImpl;
	function setBufferImpl(impl) {
	    BufferImpl = impl;
	}
	/**
	 * URL-safe base64 decoding
	 *
	 * NOTE: DO NOT use the global atob() function - it does NOT support the
	 * base64Url variant encoding.
	 *
	 * @param {string} str To be decoded
	 * @return {?string} Decoded result, if possible
	 */
	var base64Decode = exports.base64Decode = function base64Decode(str) {
	    try {
	        if (BufferImpl) {
	            return new BufferImpl(str, 'base64').toString('utf8');
	        } else {
	            return _crypt.base64.decodeString(str, /*useWebSafe=*/true);
	        }
	    } catch (e) {
	        log('base64Decode failed: ', e);
	    }
	    return null;
	};
	/**
	 * Sha1 hash of the input string
	 * @param {!string} str The string to hash
	 * @return {!string} The resulting hash
	 */
	var sha1 = exports.sha1 = function sha1(str) {
	    var utf8Bytes = (0, _utf.stringToByteArray)(str);
	    var sha1 = new _Sha.Sha1();
	    sha1.update(utf8Bytes);
	    var sha1Bytes = sha1.digest();
	    return _crypt.base64.encodeByteArray(sha1Bytes);
	};
	/**
	 * @param {...*} var_args
	 * @return {string}
	 * @private
	 */
	var buildLogMessage_ = function buildLogMessage_() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    var message = '';
	    for (var i = 0; i < var_args.length; i++) {
	        if (Array.isArray(var_args[i]) || var_args[i] && _typeof(var_args[i]) === 'object' && typeof var_args[i].length === 'number') {
	            message += buildLogMessage_.apply(null, var_args[i]);
	        } else if (_typeof(var_args[i]) === 'object') {
	            message += (0, _json.stringify)(var_args[i]);
	        } else {
	            message += var_args[i];
	        }
	        message += ' ';
	    }
	    return message;
	};
	/**
	 * Use this for all debug messages in Firebase.
	 * @type {?function(string)}
	 */
	var logger = exports.logger = null;
	/**
	 * Flag to check for log availability on first log message
	 * @type {boolean}
	 * @private
	 */
	var firstLog_ = true;
	/**
	 * The implementation of Firebase.enableLogging (defined here to break dependencies)
	 * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger
	 * @param {boolean=} persistent Whether or not to persist logging settings across refreshes
	 */
	var enableLogging = exports.enableLogging = function enableLogging(logger_, persistent) {
	    (0, _assert.assert)(!persistent || logger_ === true || logger_ === false, "Can't turn on custom loggers persistently.");
	    if (logger_ === true) {
	        if (typeof console !== 'undefined') {
	            if (typeof console.log === 'function') {
	                exports.logger = logger = console.log.bind(console);
	            } else if (_typeof(console.log) === 'object') {
	                // IE does this.
	                exports.logger = logger = function logger(message) {
	                    console.log(message);
	                };
	            }
	        }
	        if (persistent) _storage.SessionStorage.set('logging_enabled', true);
	    } else if (typeof logger_ === 'function') {
	        exports.logger = logger = logger_;
	    } else {
	        exports.logger = logger = null;
	        _storage.SessionStorage.remove('logging_enabled');
	    }
	};
	/**
	 *
	 * @param {...(string|Arguments)} var_args
	 */
	var log = exports.log = function log() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    if (firstLog_ === true) {
	        firstLog_ = false;
	        if (logger === null && _storage.SessionStorage.get('logging_enabled') === true) enableLogging(true);
	    }
	    if (logger) {
	        var message = buildLogMessage_.apply(null, var_args);
	        logger(message);
	    }
	};
	/**
	 * @param {!string} prefix
	 * @return {function(...[*])}
	 */
	var logWrapper = exports.logWrapper = function logWrapper(prefix) {
	    return function () {
	        var var_args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            var_args[_i] = arguments[_i];
	        }
	        log.apply(void 0, [prefix].concat(var_args));
	    };
	};
	/**
	 * @param {...string} var_args
	 */
	var error = exports.error = function error() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    if (typeof console !== 'undefined') {
	        var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);
	        if (typeof console.error !== 'undefined') {
	            console.error(message);
	        } else {
	            console.log(message);
	        }
	    }
	};
	/**
	 * @param {...string} var_args
	 */
	var fatal = exports.fatal = function fatal() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    var message = buildLogMessage_.apply(void 0, var_args);
	    throw new Error('FIREBASE FATAL ERROR: ' + message);
	};
	/**
	 * @param {...*} var_args
	 */
	var warn = exports.warn = function warn() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    if (typeof console !== 'undefined') {
	        var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);
	        if (typeof console.warn !== 'undefined') {
	            console.warn(message);
	        } else {
	            console.log(message);
	        }
	    }
	};
	/**
	 * Logs a warning if the containing page uses https. Called when a call to new Firebase
	 * does not use https.
	 */
	var warnIfPageIsSecure = exports.warnIfPageIsSecure = function warnIfPageIsSecure() {
	    // Be very careful accessing browser globals. Who knows what may or may not exist.
	    if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {
	        warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');
	    }
	};
	/**
	 * @param {!String} methodName
	 */
	var warnAboutUnsupportedMethod = exports.warnAboutUnsupportedMethod = function warnAboutUnsupportedMethod(methodName) {
	    warn(methodName + ' is unsupported and will likely change soon.  ' + 'Please do not use.');
	};
	/**
	 * Returns true if data is NaN, or +/- Infinity.
	 * @param {*} data
	 * @return {boolean}
	 */
	var isInvalidJSONNumber = exports.isInvalidJSONNumber = function isInvalidJSONNumber(data) {
	    return typeof data === 'number' && (data != data || // NaN
	    data == Number.POSITIVE_INFINITY || data == Number.NEGATIVE_INFINITY);
	};
	/**
	 * @param {function()} fn
	 */
	var executeWhenDOMReady = exports.executeWhenDOMReady = function executeWhenDOMReady(fn) {
	    if ((0, _environment.isNodeSdk)() || document.readyState === 'complete') {
	        fn();
	    } else {
	        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which
	        // fire before onload), but fall back to onload.
	        var called_1 = false;
	        var wrappedFn_1 = function wrappedFn_1() {
	            if (!document.body) {
	                setTimeout(wrappedFn_1, Math.floor(10));
	                return;
	            }
	            if (!called_1) {
	                called_1 = true;
	                fn();
	            }
	        };
	        if (document.addEventListener) {
	            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);
	            // fallback to onload.
	            window.addEventListener('load', wrappedFn_1, false);
	        } else if (document.attachEvent) {
	            // IE.
	            document.attachEvent('onreadystatechange', function () {
	                if (document.readyState === 'complete') wrappedFn_1();
	            });
	            // fallback to onload.
	            window.attachEvent('onload', wrappedFn_1);
	            // jQuery has an extra hack for IE that we could employ (based on
	            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.
	            // I'm hoping we don't need it.
	        }
	    }
	};
	/**
	 * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names
	 * @type {!string}
	 */
	var MIN_NAME = exports.MIN_NAME = '[MIN_NAME]';
	/**
	 * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names
	 * @type {!string}
	 */
	var MAX_NAME = exports.MAX_NAME = '[MAX_NAME]';
	/**
	 * Compares valid Firebase key names, plus min and max name
	 * @param {!string} a
	 * @param {!string} b
	 * @return {!number}
	 */
	var nameCompare = exports.nameCompare = function nameCompare(a, b) {
	    if (a === b) {
	        return 0;
	    } else if (a === MIN_NAME || b === MAX_NAME) {
	        return -1;
	    } else if (b === MIN_NAME || a === MAX_NAME) {
	        return 1;
	    } else {
	        var aAsInt = tryParseInt(a),
	            bAsInt = tryParseInt(b);
	        if (aAsInt !== null) {
	            if (bAsInt !== null) {
	                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;
	            } else {
	                return -1;
	            }
	        } else if (bAsInt !== null) {
	            return 1;
	        } else {
	            return a < b ? -1 : 1;
	        }
	    }
	};
	/**
	 * @param {!string} a
	 * @param {!string} b
	 * @return {!number} comparison result.
	 */
	var stringCompare = exports.stringCompare = function stringCompare(a, b) {
	    if (a === b) {
	        return 0;
	    } else if (a < b) {
	        return -1;
	    } else {
	        return 1;
	    }
	};
	/**
	 * @param {string} key
	 * @param {Object} obj
	 * @return {*}
	 */
	var requireKey = exports.requireKey = function requireKey(key, obj) {
	    if (obj && key in obj) {
	        return obj[key];
	    } else {
	        throw new Error('Missing required key (' + key + ') in object: ' + (0, _json.stringify)(obj));
	    }
	};
	/**
	 * @param {*} obj
	 * @return {string}
	 */
	var ObjectToUniqueKey = exports.ObjectToUniqueKey = function ObjectToUniqueKey(obj) {
	    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return (0, _json.stringify)(obj);
	    var keys = [];
	    for (var k in obj) {
	        keys.push(k);
	    }
	    // Export as json, but with the keys sorted.
	    keys.sort();
	    var key = '{';
	    for (var i = 0; i < keys.length; i++) {
	        if (i !== 0) key += ',';
	        key += (0, _json.stringify)(keys[i]);
	        key += ':';
	        key += ObjectToUniqueKey(obj[keys[i]]);
	    }
	    key += '}';
	    return key;
	};
	/**
	 * Splits a string into a number of smaller segments of maximum size
	 * @param {!string} str The string
	 * @param {!number} segsize The maximum number of chars in the string.
	 * @return {Array.<string>} The string, split into appropriately-sized chunks
	 */
	var splitStringBySize = exports.splitStringBySize = function splitStringBySize(str, segsize) {
	    var len = str.length;
	    if (len <= segsize) {
	        return [str];
	    }
	    var dataSegs = [];
	    for (var c = 0; c < len; c += segsize) {
	        if (c + segsize > len) {
	            dataSegs.push(str.substring(c, len));
	        } else {
	            dataSegs.push(str.substring(c, c + segsize));
	        }
	    }
	    return dataSegs;
	};
	/**
	 * Apply a function to each (key, value) pair in an object or
	 * apply a function to each (index, value) pair in an array
	 * @param {!(Object|Array)} obj The object or array to iterate over
	 * @param {function(?, ?)} fn The function to apply
	 */
	var each = exports.each = function each(obj, fn) {
	    if (Array.isArray(obj)) {
	        for (var i = 0; i < obj.length; ++i) {
	            fn(i, obj[i]);
	        }
	    } else {
	        /**
	         * in the conversion of code we removed the goog.object.forEach
	         * function which did a value,key callback. We standardized on
	         * a single impl that does a key, value callback. So we invert
	         * to not have to touch the `each` code points
	         */
	        (0, _obj.forEach)(obj, function (key, val) {
	            return fn(val, key);
	        });
	    }
	};
	/**
	 * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.
	 * @param {function(*)} callback Callback function.
	 * @param {?Object=} context Optional context to bind to.
	 * @return {function(*)}
	 */
	var bindCallback = exports.bindCallback = function bindCallback(callback, context) {
	    return context ? callback.bind(context) : callback;
	};
	/**
	 * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)
	 * I made one modification at the end and removed the NaN / Infinity
	 * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.
	 * @param {!number} v A double
	 * @return {string}
	 */
	var doubleToIEEE754String = exports.doubleToIEEE754String = function doubleToIEEE754String(v) {
	    (0, _assert.assert)(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL
	    var ebits = 11,
	        fbits = 52;
	    var bias = (1 << ebits - 1) - 1,
	        s,
	        e,
	        f,
	        ln,
	        i,
	        bits,
	        str;
	    // Compute sign, exponent, fraction
	    // Skip NaN / Infinity handling --MJL.
	    if (v === 0) {
	        e = 0;
	        f = 0;
	        s = 1 / v === -Infinity ? 1 : 0;
	    } else {
	        s = v < 0;
	        v = Math.abs(v);
	        if (v >= Math.pow(2, 1 - bias)) {
	            // Normalized
	            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);
	            e = ln + bias;
	            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));
	        } else {
	            // Denormalized
	            e = 0;
	            f = Math.round(v / Math.pow(2, 1 - bias - fbits));
	        }
	    }
	    // Pack sign, exponent, fraction
	    bits = [];
	    for (i = fbits; i; i -= 1) {
	        bits.push(f % 2 ? 1 : 0);
	        f = Math.floor(f / 2);
	    }
	    for (i = ebits; i; i -= 1) {
	        bits.push(e % 2 ? 1 : 0);
	        e = Math.floor(e / 2);
	    }
	    bits.push(s ? 1 : 0);
	    bits.reverse();
	    str = bits.join('');
	    // Return the data as a hex string. --MJL
	    var hexByteString = '';
	    for (i = 0; i < 64; i += 8) {
	        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);
	        if (hexByte.length === 1) hexByte = '0' + hexByte;
	        hexByteString = hexByteString + hexByte;
	    }
	    return hexByteString.toLowerCase();
	};
	/**
	 * Used to detect if we're in a Chrome content script (which executes in an
	 * isolated environment where long-polling doesn't work).
	 * @return {boolean}
	 */
	var isChromeExtensionContentScript = exports.isChromeExtensionContentScript = function isChromeExtensionContentScript() {
	    return !!((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));
	};
	/**
	 * Used to detect if we're in a Windows 8 Store app.
	 * @return {boolean}
	 */
	var isWindowsStoreApp = exports.isWindowsStoreApp = function isWindowsStoreApp() {
	    // Check for the presence of a couple WinRT globals
	    return (typeof Windows === 'undefined' ? 'undefined' : _typeof(Windows)) === 'object' && _typeof(Windows.UI) === 'object';
	};
	/**
	 * Converts a server error code to a Javascript Error
	 * @param {!string} code
	 * @param {!Query} query
	 * @return {Error}
	 */
	var errorForServerCode = exports.errorForServerCode = function errorForServerCode(code, query) {
	    var reason = 'Unknown Error';
	    if (code === 'too_big') {
	        reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';
	    } else if (code == 'permission_denied') {
	        reason = "Client doesn't have permission to access the desired data.";
	    } else if (code == 'unavailable') {
	        reason = 'The service is unavailable';
	    }
	    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);
	    error.code = code.toUpperCase();
	    return error;
	};
	/**
	 * Used to test for integer-looking strings
	 * @type {RegExp}
	 * @private
	 */
	var INTEGER_REGEXP_ = exports.INTEGER_REGEXP_ = new RegExp('^-?\\d{1,10}$');
	/**
	 * If the string contains a 32-bit integer, return it.  Else return null.
	 * @param {!string} str
	 * @return {?number}
	 */
	var tryParseInt = exports.tryParseInt = function tryParseInt(str) {
	    if (INTEGER_REGEXP_.test(str)) {
	        var intVal = Number(str);
	        if (intVal >= -2147483648 && intVal <= 2147483647) {
	            return intVal;
	        }
	    }
	    return null;
	};
	/**
	 * Helper to run some code but catch any exceptions and re-throw them later.
	 * Useful for preventing user callbacks from breaking internal code.
	 *
	 * Re-throwing the exception from a setTimeout is a little evil, but it's very
	 * convenient (we don't have to try to figure out when is a safe point to
	 * re-throw it), and the behavior seems reasonable:
	 *
	 * * If you aren't pausing on exceptions, you get an error in the console with
	 *   the correct stack trace.
	 * * If you're pausing on all exceptions, the debugger will pause on your
	 *   exception and then again when we rethrow it.
	 * * If you're only pausing on uncaught exceptions, the debugger will only pause
	 *   on us re-throwing it.
	 *
	 * @param {!function()} fn The code to guard.
	 */
	var exceptionGuard = exports.exceptionGuard = function exceptionGuard(fn) {
	    try {
	        fn();
	    } catch (e) {
	        // Re-throw exception when it's safe.
	        setTimeout(function () {
	            // It used to be that "throw e" would result in a good console error with
	            // relevant context, but as of Chrome 39, you just get the firebase.js
	            // file/line number where we re-throw it, which is useless. So we log
	            // e.stack explicitly.
	            var stack = e.stack || '';
	            warn('Exception was thrown by user callback.', stack);
	            throw e;
	        }, Math.floor(0));
	    }
	};
	/**
	 * Helper function to safely call opt_callback with the specified arguments.  It:
	 * 1. Turns into a no-op if opt_callback is null or undefined.
	 * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.
	 *
	 * @param {?Function=} callback Optional onComplete callback.
	 * @param {...*} var_args Arbitrary args to be passed to opt_onComplete
	 */
	var callUserCallback = exports.callUserCallback = function callUserCallback(callback) {
	    var var_args = [];
	    for (var _i = 1; _i < arguments.length; _i++) {
	        var_args[_i - 1] = arguments[_i];
	    }
	    if (typeof callback === 'function') {
	        exceptionGuard(function () {
	            callback.apply(void 0, var_args);
	        });
	    }
	};
	/**
	 * @return {boolean} true if we think we're currently being crawled.
	 */
	var beingCrawled = exports.beingCrawled = function beingCrawled() {
	    var userAgent = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window['navigator'] && window['navigator']['userAgent'] || '';
	    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we
	    // believe to support JavaScript/AJAX rendering.
	    // NOTE: Google Webmaster Tools doesn't really belong, but their "This is how a visitor to your website
	    // would have seen the page" is flaky if we don't treat it as a crawler.
	    return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;
	};
	/**
	 * Export a property of an object using a getter function.
	 *
	 * @param {!Object} object
	 * @param {string} name
	 * @param {!function(): *} fnGet
	 */
	var exportPropGetter = exports.exportPropGetter = function exportPropGetter(object, name, fnGet) {
	    Object.defineProperty(object, name, { get: fnGet });
	};
	/**
	 * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.
	 *
	 * It is removed with clearTimeout() as normal.
	 *
	 * @param {Function} fn Function to run.
	 * @param {number} time Milliseconds to wait before running.
	 * @return {number|Object} The setTimeout() return value.
	 */
	var setTimeoutNonBlocking = exports.setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {
	    var timeout = setTimeout(fn, time);
	    if ((typeof timeout === 'undefined' ? 'undefined' : _typeof(timeout)) === 'object' && timeout['unref']) {
	        timeout['unref']();
	    }
	    return timeout;
	};
	//# sourceMappingURL=util.js.map


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.assertionError = exports.assert = undefined;

	var _constants = __webpack_require__(21);

	/**
	 * Throws an error if the provided assertion is falsy
	 * @param {*} assertion The assertion to be tested for falsiness
	 * @param {!string} message The message to display if the check fails
	 */
	var assert = exports.assert = function assert(assertion, message) {
	  if (!assertion) {
	    throw assertionError(message);
	  }
	};
	/**
	 * Returns an Error object suitable for throwing.
	 * @param {string} message
	 * @return {!Error}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var assertionError = exports.assertionError = function assertionError(message) {
	  return new Error('Firebase Database (' + _constants.CONSTANTS.SDK_VERSION + ') INTERNAL ASSERT FAILED: ' + message);
	};
	//# sourceMappingURL=assert.js.map


/***/ }),
/* 21 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
	 */
	var CONSTANTS = exports.CONSTANTS = {
	  /**
	   * @define {boolean} Whether this is the client Node.js SDK.
	   */
	  NODE_CLIENT: false,
	  /**
	   * @define {boolean} Whether this is the Admin Node.js SDK.
	   */
	  NODE_ADMIN: false,
	  /**
	   * Firebase SDK Version
	   */
	  SDK_VERSION: '4.5.0'
	};
	//# sourceMappingURL=constants.js.map


/***/ }),
/* 22 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/
	var contains = exports.contains = function contains(obj, key) {
	    return Object.prototype.hasOwnProperty.call(obj, key);
	};
	var safeGet = exports.safeGet = function safeGet(obj, key) {
	    if (Object.prototype.hasOwnProperty.call(obj, key)) return obj[key];
	    // else return undefined.
	};
	/**
	 * Enumerates the keys/values in an object, excluding keys defined on the prototype.
	 *
	 * @param {?Object.<K,V>} obj Object to enumerate.
	 * @param {!function(K, V)} fn Function to call for each key and value.
	 * @template K,V
	 */
	var forEach = exports.forEach = function forEach(obj, fn) {
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            fn(key, obj[key]);
	        }
	    }
	};
	/**
	 * Copies all the (own) properties from one object to another.
	 * @param {!Object} objTo
	 * @param {!Object} objFrom
	 * @return {!Object} objTo
	 */
	var extend = exports.extend = function extend(objTo, objFrom) {
	    forEach(objFrom, function (key, value) {
	        objTo[key] = value;
	    });
	    return objTo;
	};
	/**
	 * Returns a clone of the specified object.
	 * @param {!Object} obj
	 * @return {!Object} cloned obj.
	 */
	var clone = exports.clone = function clone(obj) {
	    return extend({}, obj);
	};
	/**
	 * Returns true if obj has typeof "object" and is not null.  Unlike goog.isObject(), does not return true
	 * for functions.
	 *
	 * @param obj {*} A potential object.
	 * @returns {boolean} True if it's an object.
	 */
	var isNonNullObject = exports.isNonNullObject = function isNonNullObject(obj) {
	    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;
	};
	var isEmpty = exports.isEmpty = function isEmpty(obj) {
	    for (var key in obj) {
	        return false;
	    }
	    return true;
	};
	var getCount = exports.getCount = function getCount(obj) {
	    var rv = 0;
	    for (var key in obj) {
	        rv++;
	    }
	    return rv;
	};
	var map = exports.map = function map(obj, f, opt_obj) {
	    var res = {};
	    for (var key in obj) {
	        res[key] = f.call(opt_obj, obj[key], key, obj);
	    }
	    return res;
	};
	var findKey = exports.findKey = function findKey(obj, fn, opt_this) {
	    for (var key in obj) {
	        if (fn.call(opt_this, obj[key], key, obj)) {
	            return key;
	        }
	    }
	    return undefined;
	};
	var findValue = exports.findValue = function findValue(obj, fn, opt_this) {
	    var key = findKey(obj, fn, opt_this);
	    return key && obj[key];
	};
	var getAnyKey = exports.getAnyKey = function getAnyKey(obj) {
	    for (var key in obj) {
	        return key;
	    }
	};
	var getValues = exports.getValues = function getValues(obj) {
	    var res = [];
	    var i = 0;
	    for (var key in obj) {
	        res[i++] = obj[key];
	    }
	    return res;
	};
	/**
	 * Tests whether every key/value pair in an object pass the test implemented
	 * by the provided function
	 *
	 * @param {?Object.<K,V>} obj Object to test.
	 * @param {!function(K, V)} fn Function to call for each key and value.
	 * @template K,V
	 */
	var every = exports.every = function every(obj, fn) {
	    for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	            if (!fn(key, obj[key])) {
	                return false;
	            }
	        }
	    }
	    return true;
	};
	//# sourceMappingURL=obj.js.map


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.base64 = undefined;

	var _globalScope = __webpack_require__(9);

	var stringToByteArray = function stringToByteArray(str) {
	    var output = [],
	        p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        while (c > 255) {
	            output[p++] = c & 255;
	            c >>= 8;
	        }
	        output[p++] = c;
	    }
	    return output;
	};
	/**
	 * Turns an array of numbers into the string given by the concatenation of the
	 * characters to which the numbers correspond.
	 * @param {Array<number>} bytes Array of numbers representing characters.
	 * @return {string} Stringification of the array.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var byteArrayToString = function byteArrayToString(bytes) {
	    var CHUNK_SIZE = 8192;
	    // Special-case the simple case for speed's sake.
	    if (bytes.length < CHUNK_SIZE) {
	        return String.fromCharCode.apply(null, bytes);
	    }
	    // The remaining logic splits conversion by chunks since
	    // Function#apply() has a maximum parameter count.
	    // See discussion: http://goo.gl/LrWmZ9
	    var str = '';
	    for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {
	        var chunk = bytes.slice(i, i + CHUNK_SIZE);
	        str += String.fromCharCode.apply(null, chunk);
	    }
	    return str;
	};
	// Static lookup maps, lazily populated by init_()
	var base64 = exports.base64 = {
	    /**
	     * Maps bytes to characters.
	     * @type {Object}
	     * @private
	     */
	    byteToCharMap_: null,
	    /**
	     * Maps characters to bytes.
	     * @type {Object}
	     * @private
	     */
	    charToByteMap_: null,
	    /**
	     * Maps bytes to websafe characters.
	     * @type {Object}
	     * @private
	     */
	    byteToCharMapWebSafe_: null,
	    /**
	     * Maps websafe characters to bytes.
	     * @type {Object}
	     * @private
	     */
	    charToByteMapWebSafe_: null,
	    /**
	     * Our default alphabet, shared between
	     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
	     * @type {string}
	     */
	    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
	    /**
	     * Our default alphabet. Value 64 (=) is special; it means "nothing."
	     * @type {string}
	     */
	    get ENCODED_VALS() {
	        return this.ENCODED_VALS_BASE + '+/=';
	    },
	    /**
	     * Our websafe alphabet.
	     * @type {string}
	     */
	    get ENCODED_VALS_WEBSAFE() {
	        return this.ENCODED_VALS_BASE + '-_.';
	    },
	    /**
	     * Whether this browser supports the atob and btoa functions. This extension
	     * started at Mozilla but is now implemented by many browsers. We use the
	     * ASSUME_* variables to avoid pulling in the full useragent detection library
	     * but still allowing the standard per-browser compilations.
	     *
	     * @type {boolean}
	     */
	    HAS_NATIVE_SUPPORT: typeof _globalScope.globalScope.atob === 'function',
	    /**
	     * Base64-encode an array of bytes.
	     *
	     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with
	     *     value in [0, 255]) to encode.
	     * @param {boolean=} opt_webSafe Boolean indicating we should use the
	     *     alternative alphabet.
	     * @return {string} The base64 encoded string.
	     */
	    encodeByteArray: function encodeByteArray(input, opt_webSafe) {
	        if (!Array.isArray(input)) {
	            throw Error('encodeByteArray takes an array as a parameter');
	        }
	        this.init_();
	        var byteToCharMap = opt_webSafe ? this.byteToCharMapWebSafe_ : this.byteToCharMap_;
	        var output = [];
	        for (var i = 0; i < input.length; i += 3) {
	            var byte1 = input[i];
	            var haveByte2 = i + 1 < input.length;
	            var byte2 = haveByte2 ? input[i + 1] : 0;
	            var haveByte3 = i + 2 < input.length;
	            var byte3 = haveByte3 ? input[i + 2] : 0;
	            var outByte1 = byte1 >> 2;
	            var outByte2 = (byte1 & 0x03) << 4 | byte2 >> 4;
	            var outByte3 = (byte2 & 0x0f) << 2 | byte3 >> 6;
	            var outByte4 = byte3 & 0x3f;
	            if (!haveByte3) {
	                outByte4 = 64;
	                if (!haveByte2) {
	                    outByte3 = 64;
	                }
	            }
	            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
	        }
	        return output.join('');
	    },
	    /**
	     * Base64-encode a string.
	     *
	     * @param {string} input A string to encode.
	     * @param {boolean=} opt_webSafe If true, we should use the
	     *     alternative alphabet.
	     * @return {string} The base64 encoded string.
	     */
	    encodeString: function encodeString(input, opt_webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {
	            return btoa(input);
	        }
	        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * @param {string} input to decode.
	     * @param {boolean=} opt_webSafe True if we should use the
	     *     alternative alphabet.
	     * @return {string} string representing the decoded value.
	     */
	    decodeString: function decodeString(input, opt_webSafe) {
	        // Shortcut for Mozilla browsers that implement
	        // a native base64 encoder in the form of "btoa/atob"
	        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {
	            return atob(input);
	        }
	        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));
	    },
	    /**
	     * Base64-decode a string.
	     *
	     * In base-64 decoding, groups of four characters are converted into three
	     * bytes.  If the encoder did not apply padding, the input length may not
	     * be a multiple of 4.
	     *
	     * In this case, the last group will have fewer than 4 characters, and
	     * padding will be inferred.  If the group has one or two characters, it decodes
	     * to one byte.  If the group has three characters, it decodes to two bytes.
	     *
	     * @param {string} input Input to decode.
	     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.
	     * @return {!Array<number>} bytes representing the decoded value.
	     */
	    decodeStringToByteArray: function decodeStringToByteArray(input, opt_webSafe) {
	        this.init_();
	        var charToByteMap = opt_webSafe ? this.charToByteMapWebSafe_ : this.charToByteMap_;
	        var output = [];
	        for (var i = 0; i < input.length;) {
	            var byte1 = charToByteMap[input.charAt(i++)];
	            var haveByte2 = i < input.length;
	            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
	            ++i;
	            var haveByte3 = i < input.length;
	            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            var haveByte4 = i < input.length;
	            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
	            ++i;
	            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
	                throw Error();
	            }
	            var outByte1 = byte1 << 2 | byte2 >> 4;
	            output.push(outByte1);
	            if (byte3 != 64) {
	                var outByte2 = byte2 << 4 & 0xf0 | byte3 >> 2;
	                output.push(outByte2);
	                if (byte4 != 64) {
	                    var outByte3 = byte3 << 6 & 0xc0 | byte4;
	                    output.push(outByte3);
	                }
	            }
	        }
	        return output;
	    },
	    /**
	     * Lazy static initialization function. Called before
	     * accessing any of the static map variables.
	     * @private
	     */
	    init_: function init_() {
	        if (!this.byteToCharMap_) {
	            this.byteToCharMap_ = {};
	            this.charToByteMap_ = {};
	            this.byteToCharMapWebSafe_ = {};
	            this.charToByteMapWebSafe_ = {};
	            // We want quick mappings back and forth, so we precompute two maps.
	            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
	                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
	                this.charToByteMap_[this.byteToCharMap_[i]] = i;
	                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
	                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
	                // Be forgiving when decoding and correctly decode both encodings.
	                if (i >= this.ENCODED_VALS_BASE.length) {
	                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
	                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
	                }
	            }
	        }
	    }
	};
	//# sourceMappingURL=crypt.js.map


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Sha1 = undefined;

	var _hash = __webpack_require__(25);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * @fileoverview SHA-1 cryptographic hash.
	 * Variable names follow the notation in FIPS PUB 180-3:
	 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
	 *
	 * Usage:
	 *   var sha1 = new sha1();
	 *   sha1.update(bytes);
	 *   var hash = sha1.digest();
	 *
	 * Performance:
	 *   Chrome 23:   ~400 Mbit/s
	 *   Firefox 16:  ~250 Mbit/s
	 *
	 */
	/**
	 * SHA-1 cryptographic hash constructor.
	 *
	 * The properties declared here are discussed in the above algorithm document.
	 * @constructor
	 * @extends {Hash}
	 * @final
	 * @struct
	 */
	var Sha1 = /** @class */function (_super) {
	    __extends(Sha1, _super);
	    function Sha1() {
	        var _this = _super.call(this) || this;
	        /**
	         * Holds the previous values of accumulated variables a-e in the compress_
	         * function.
	         * @type {!Array<number>}
	         * @private
	         */
	        _this.chain_ = [];
	        /**
	         * A buffer holding the partially computed hash result.
	         * @type {!Array<number>}
	         * @private
	         */
	        _this.buf_ = [];
	        /**
	         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
	         * as the message schedule in the docs.
	         * @type {!Array<number>}
	         * @private
	         */
	        _this.W_ = [];
	        /**
	         * Contains data needed to pad messages less than 64 bytes.
	         * @type {!Array<number>}
	         * @private
	         */
	        _this.pad_ = [];
	        /**
	         * @private {number}
	         */
	        _this.inbuf_ = 0;
	        /**
	         * @private {number}
	         */
	        _this.total_ = 0;
	        _this.blockSize = 512 / 8;
	        _this.pad_[0] = 128;
	        for (var i = 1; i < _this.blockSize; ++i) {
	            _this.pad_[i] = 0;
	        }
	        _this.reset();
	        return _this;
	    }
	    Sha1.prototype.reset = function () {
	        this.chain_[0] = 0x67452301;
	        this.chain_[1] = 0xefcdab89;
	        this.chain_[2] = 0x98badcfe;
	        this.chain_[3] = 0x10325476;
	        this.chain_[4] = 0xc3d2e1f0;
	        this.inbuf_ = 0;
	        this.total_ = 0;
	    };
	    /**
	     * Internal compress helper function.
	     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.
	     * @param {number=} opt_offset Offset of the block in the buffer.
	     * @private
	     */
	    Sha1.prototype.compress_ = function (buf, opt_offset) {
	        if (!opt_offset) {
	            opt_offset = 0;
	        }
	        var W = this.W_;
	        // get 16 big endian words
	        if (typeof buf === 'string') {
	            for (var i = 0; i < 16; i++) {
	                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
	                // have a bug that turns the post-increment ++ operator into pre-increment
	                // during JIT compilation.  We have code that depends heavily on SHA-1 for
	                // correctness and which is affected by this bug, so I've removed all uses
	                // of post-increment ++ in which the result value is used.  We can revert
	                // this change once the Safari bug
	                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
	                // most clients have been updated.
	                W[i] = buf.charCodeAt(opt_offset) << 24 | buf.charCodeAt(opt_offset + 1) << 16 | buf.charCodeAt(opt_offset + 2) << 8 | buf.charCodeAt(opt_offset + 3);
	                opt_offset += 4;
	            }
	        } else {
	            for (var i = 0; i < 16; i++) {
	                W[i] = buf[opt_offset] << 24 | buf[opt_offset + 1] << 16 | buf[opt_offset + 2] << 8 | buf[opt_offset + 3];
	                opt_offset += 4;
	            }
	        }
	        // expand to 80 words
	        for (var i = 16; i < 80; i++) {
	            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	            W[i] = (t << 1 | t >>> 31) & 0xffffffff;
	        }
	        var a = this.chain_[0];
	        var b = this.chain_[1];
	        var c = this.chain_[2];
	        var d = this.chain_[3];
	        var e = this.chain_[4];
	        var f, k;
	        // TODO(user): Try to unroll this loop to speed up the computation.
	        for (var i = 0; i < 80; i++) {
	            if (i < 40) {
	                if (i < 20) {
	                    f = d ^ b & (c ^ d);
	                    k = 0x5a827999;
	                } else {
	                    f = b ^ c ^ d;
	                    k = 0x6ed9eba1;
	                }
	            } else {
	                if (i < 60) {
	                    f = b & c | d & (b | c);
	                    k = 0x8f1bbcdc;
	                } else {
	                    f = b ^ c ^ d;
	                    k = 0xca62c1d6;
	                }
	            }
	            var t = (a << 5 | a >>> 27) + f + e + k + W[i] & 0xffffffff;
	            e = d;
	            d = c;
	            c = (b << 30 | b >>> 2) & 0xffffffff;
	            b = a;
	            a = t;
	        }
	        this.chain_[0] = this.chain_[0] + a & 0xffffffff;
	        this.chain_[1] = this.chain_[1] + b & 0xffffffff;
	        this.chain_[2] = this.chain_[2] + c & 0xffffffff;
	        this.chain_[3] = this.chain_[3] + d & 0xffffffff;
	        this.chain_[4] = this.chain_[4] + e & 0xffffffff;
	    };
	    Sha1.prototype.update = function (bytes, opt_length) {
	        // TODO(johnlenz): tighten the function signature and remove this check
	        if (bytes == null) {
	            return;
	        }
	        if (opt_length === undefined) {
	            opt_length = bytes.length;
	        }
	        var lengthMinusBlock = opt_length - this.blockSize;
	        var n = 0;
	        // Using local instead of member variables gives ~5% speedup on Firefox 16.
	        var buf = this.buf_;
	        var inbuf = this.inbuf_;
	        // The outer while loop should execute at most twice.
	        while (n < opt_length) {
	            // When we have no data in the block to top up, we can directly process the
	            // input buffer (assuming it contains sufficient data). This gives ~25%
	            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
	            // the data is provided in large chunks (or in multiples of 64 bytes).
	            if (inbuf == 0) {
	                while (n <= lengthMinusBlock) {
	                    this.compress_(bytes, n);
	                    n += this.blockSize;
	                }
	            }
	            if (typeof bytes === 'string') {
	                while (n < opt_length) {
	                    buf[inbuf] = bytes.charCodeAt(n);
	                    ++inbuf;
	                    ++n;
	                    if (inbuf == this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            } else {
	                while (n < opt_length) {
	                    buf[inbuf] = bytes[n];
	                    ++inbuf;
	                    ++n;
	                    if (inbuf == this.blockSize) {
	                        this.compress_(buf);
	                        inbuf = 0;
	                        // Jump to the outer loop so we use the full-block optimization.
	                        break;
	                    }
	                }
	            }
	        }
	        this.inbuf_ = inbuf;
	        this.total_ += opt_length;
	    };
	    /** @override */
	    Sha1.prototype.digest = function () {
	        var digest = [];
	        var totalBits = this.total_ * 8;
	        // Add pad 0x80 0x00*.
	        if (this.inbuf_ < 56) {
	            this.update(this.pad_, 56 - this.inbuf_);
	        } else {
	            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
	        }
	        // Add # bits.
	        for (var i = this.blockSize - 1; i >= 56; i--) {
	            this.buf_[i] = totalBits & 255;
	            totalBits /= 256; // Don't use bit-shifting here!
	        }
	        this.compress_(this.buf_);
	        var n = 0;
	        for (var i = 0; i < 5; i++) {
	            for (var j = 24; j >= 0; j -= 8) {
	                digest[n] = this.chain_[i] >> j & 255;
	                ++n;
	            }
	        }
	        return digest;
	    };
	    return Sha1;
	}(_hash.Hash);
	exports.Sha1 = Sha1;
	//# sourceMappingURL=Sha1.js.map


/***/ }),
/* 25 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	// Copyright 2011 The Closure Library Authors. All Rights Reserved.
	//
	// Licensed under the Apache License, Version 2.0 (the "License");
	// you may not use this file except in compliance with the License.
	// You may obtain a copy of the License at
	//
	//      http://www.apache.org/licenses/LICENSE-2.0
	//
	// Unless required by applicable law or agreed to in writing, software
	// distributed under the License is distributed on an "AS-IS" BASIS,
	// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	// See the License for the specific language governing permissions and
	// limitations under the License.
	/**
	 * @fileoverview Abstract cryptographic hash interface.
	 *
	 * See Sha1 and Md5 for sample implementations.
	 *
	 */
	/**
	 * Create a cryptographic hash instance.
	 *
	 * @constructor
	 * @struct
	 */
	var Hash = /** @class */function () {
	  function Hash() {
	    /**
	     * The block size for the hasher.
	     * @type {number}
	     */
	    this.blockSize = -1;
	  }
	  return Hash;
	}();
	exports.Hash = Hash;
	//# sourceMappingURL=hash.js.map


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.stringLength = exports.stringToByteArray = undefined;

	var _assert = __webpack_require__(20);

	// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
	// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
	// so it's been modified.
	// Note that not all Unicode characters appear as single characters in JavaScript strings.
	// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
	// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
	// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
	// pair).
	// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
	/**
	 * @param {string} str
	 * @return {Array}
	 */
	var stringToByteArray = exports.stringToByteArray = function stringToByteArray(str) {
	    var out = [],
	        p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        // Is this the lead surrogate in a surrogate pair?
	        if (c >= 0xd800 && c <= 0xdbff) {
	            var high = c - 0xd800; // the high 10 bits.
	            i++;
	            (0, _assert.assert)(i < str.length, 'Surrogate pair missing trail surrogate.');
	            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
	            c = 0x10000 + (high << 10) + low;
	        }
	        if (c < 128) {
	            out[p++] = c;
	        } else if (c < 2048) {
	            out[p++] = c >> 6 | 192;
	            out[p++] = c & 63 | 128;
	        } else if (c < 65536) {
	            out[p++] = c >> 12 | 224;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        } else {
	            out[p++] = c >> 18 | 240;
	            out[p++] = c >> 12 & 63 | 128;
	            out[p++] = c >> 6 & 63 | 128;
	            out[p++] = c & 63 | 128;
	        }
	    }
	    return out;
	};
	/**
	 * Calculate length without actually converting; useful for doing cheaper validation.
	 * @param {string} str
	 * @return {number}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var stringLength = exports.stringLength = function stringLength(str) {
	    var p = 0;
	    for (var i = 0; i < str.length; i++) {
	        var c = str.charCodeAt(i);
	        if (c < 128) {
	            p++;
	        } else if (c < 2048) {
	            p += 2;
	        } else if (c >= 0xd800 && c <= 0xdbff) {
	            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
	            p += 4;
	            i++; // skip trail surrogate.
	        } else {
	            p += 3;
	        }
	    }
	    return p;
	};
	//# sourceMappingURL=utf8.js.map


/***/ }),
/* 27 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Evaluates a JSON string into a javascript object.
	 *
	 * @param {string} str A string containing JSON.
	 * @return {*} The javascript object representing the specified JSON.
	 */
	var jsonEval = exports.jsonEval = function jsonEval(str) {
	  return JSON.parse(str);
	};
	/**
	 * Returns JSON representing a javascript object.
	 * @param {*} data Javascript object to be stringified.
	 * @return {string} The JSON contents of the object.
	 */
	var stringify = exports.stringify = function stringify(data) {
	  return JSON.stringify(data);
	};
	//# sourceMappingURL=json.js.map


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SessionStorage = exports.PersistentStorage = undefined;

	var _DOMStorageWrapper = __webpack_require__(29);

	var _MemoryStorage = __webpack_require__(30);

	/**
	 * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.
	 * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change
	 * to reflect this type
	 *
	 * @param {string} domStorageName Name of the underlying storage object
	 *   (e.g. 'localStorage' or 'sessionStorage').
	 * @return {?} Turning off type information until a common interface is defined.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var createStoragefor = function createStoragefor(domStorageName) {
	    try {
	        // NOTE: just accessing "localStorage" or "window['localStorage']" may throw a security exception,
	        // so it must be inside the try/catch.
	        if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {
	            // Need to test cache. Just because it's here doesn't mean it works
	            var domStorage = window[domStorageName];
	            domStorage.setItem('firebase:sentinel', 'cache');
	            domStorage.removeItem('firebase:sentinel');
	            return new _DOMStorageWrapper.DOMStorageWrapper(domStorage);
	        }
	    } catch (e) {}
	    // Failed to create wrapper.  Just return in-memory storage.
	    // TODO: log?
	    return new _MemoryStorage.MemoryStorage();
	};
	/** A storage object that lasts across sessions */
	var PersistentStorage = exports.PersistentStorage = createStoragefor('localStorage');
	/** A storage object that only lasts one session */
	var SessionStorage = exports.SessionStorage = createStoragefor('sessionStorage');
	//# sourceMappingURL=storage.js.map


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DOMStorageWrapper = undefined;

	var _json = __webpack_require__(27);

	/**
	 * Wraps a DOM Storage object and:
	 * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.
	 * - prefixes names with "firebase:" to avoid collisions with app data.
	 *
	 * We automatically (see storage.js) create two such wrappers, one for sessionStorage,
	 * and one for localStorage.
	 *
	 * @constructor
	 */
	var DOMStorageWrapper = /** @class */function () {
	    /**
	     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)
	     */
	    function DOMStorageWrapper(domStorage_) {
	        this.domStorage_ = domStorage_;
	        // Use a prefix to avoid collisions with other stuff saved by the app.
	        this.prefix_ = 'firebase:';
	    }
	    /**
	     * @param {string} key The key to save the value under
	     * @param {?Object} value The value being stored, or null to remove the key.
	     */
	    DOMStorageWrapper.prototype.set = function (key, value) {
	        if (value == null) {
	            this.domStorage_.removeItem(this.prefixedName_(key));
	        } else {
	            this.domStorage_.setItem(this.prefixedName_(key), (0, _json.stringify)(value));
	        }
	    };
	    /**
	     * @param {string} key
	     * @return {*} The value that was stored under this key, or null
	     */
	    DOMStorageWrapper.prototype.get = function (key) {
	        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));
	        if (storedVal == null) {
	            return null;
	        } else {
	            return (0, _json.jsonEval)(storedVal);
	        }
	    };
	    /**
	     * @param {string} key
	     */
	    DOMStorageWrapper.prototype.remove = function (key) {
	        this.domStorage_.removeItem(this.prefixedName_(key));
	    };
	    /**
	     * @param {string} name
	     * @return {string}
	     */
	    DOMStorageWrapper.prototype.prefixedName_ = function (name) {
	        return this.prefix_ + name;
	    };
	    DOMStorageWrapper.prototype.toString = function () {
	        return this.domStorage_.toString();
	    };
	    return DOMStorageWrapper;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.DOMStorageWrapper = DOMStorageWrapper;
	//# sourceMappingURL=DOMStorageWrapper.js.map


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.MemoryStorage = undefined;

	var _obj = __webpack_require__(22);

	/**
	 * An in-memory storage implementation that matches the API of DOMStorageWrapper
	 * (TODO: create interface for both to implement).
	 *
	 * @constructor
	 */
	var MemoryStorage = /** @class */function () {
	    function MemoryStorage() {
	        this.cache_ = {};
	        this.isInMemoryStorage = true;
	    }
	    MemoryStorage.prototype.set = function (key, value) {
	        if (value == null) {
	            delete this.cache_[key];
	        } else {
	            this.cache_[key] = value;
	        }
	    };
	    MemoryStorage.prototype.get = function (key) {
	        if ((0, _obj.contains)(this.cache_, key)) {
	            return this.cache_[key];
	        }
	        return null;
	    };
	    MemoryStorage.prototype.remove = function (key) {
	        delete this.cache_[key];
	    };
	    return MemoryStorage;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.MemoryStorage = MemoryStorage;
	//# sourceMappingURL=MemoryStorage.js.map


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isNodeSdk = exports.isReactNative = exports.isMobileCordova = exports.getUA = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _constants = __webpack_require__(21);

	/**
	 * Returns navigator.userAgent string or '' if it's not defined.
	 * @return {string} user agent string
	 */
	var getUA = exports.getUA = function getUA() {
	    if (typeof navigator !== 'undefined' && typeof navigator['userAgent'] === 'string') {
	        return navigator['userAgent'];
	    } else {
	        return '';
	    }
	};
	/**
	 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
	 *
	 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor
	 * Cordova `onDeviceReady`, which would normally wait for a callback.
	 *
	 * @return {boolean} isMobileCordova
	 */
	var isMobileCordova = exports.isMobileCordova = function isMobileCordova() {
	    return typeof window !== 'undefined' && !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());
	};
	/**
	 * Detect React Native.
	 *
	 * @return {boolean} True if ReactNative environment is detected.
	 */
	var isReactNative = exports.isReactNative = function isReactNative() {
	    return (typeof navigator === 'undefined' ? 'undefined' : _typeof(navigator)) === 'object' && navigator['product'] === 'ReactNative';
	};
	/**
	 * Detect Node.js.
	 *
	 * @return {boolean} True if Node.js environment is detected.
	 */
	var isNodeSdk = exports.isNodeSdk = function isNodeSdk() {
	    return _constants.CONSTANTS.NODE_CLIENT === true || _constants.CONSTANTS.NODE_ADMIN === true;
	};
	//# sourceMappingURL=environment.js.map


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.parseURL = exports.parseRepoInfo = undefined;

	var _Path = __webpack_require__(33);

	var _RepoInfo = __webpack_require__(34);

	var _util = __webpack_require__(19);

	/**
	 * @param {!string} pathString
	 * @return {string}
	 */
	function decodePath(pathString) {
	    var pathStringDecoded = '';
	    var pieces = pathString.split('/');
	    for (var i = 0; i < pieces.length; i++) {
	        if (pieces[i].length > 0) {
	            var piece = pieces[i];
	            try {
	                piece = decodeURIComponent(piece.replace(/\+/g, ' '));
	            } catch (e) {}
	            pathStringDecoded += '/' + piece;
	        }
	    }
	    return pathStringDecoded;
	}
	/**
	 *
	 * @param {!string} dataURL
	 * @return {{repoInfo: !RepoInfo, path: !Path}}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var parseRepoInfo = exports.parseRepoInfo = function parseRepoInfo(dataURL) {
	    var parsedUrl = parseURL(dataURL),
	        namespace = parsedUrl.subdomain;
	    if (parsedUrl.domain === 'firebase') {
	        (0, _util.fatal)(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');
	    }
	    // Catch common error of uninitialized namespace value.
	    if (!namespace || namespace == 'undefined') {
	        (0, _util.fatal)('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');
	    }
	    if (!parsedUrl.secure) {
	        (0, _util.warnIfPageIsSecure)();
	    }
	    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';
	    return {
	        repoInfo: new _RepoInfo.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),
	        path: new _Path.Path(parsedUrl.pathString)
	    };
	};
	/**
	 *
	 * @param {!string} dataURL
	 * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}
	 */
	var parseURL = exports.parseURL = function parseURL(dataURL) {
	    // Default to empty strings in the event of a malformed string.
	    var host = '',
	        domain = '',
	        subdomain = '',
	        pathString = '';
	    // Always default to SSL, unless otherwise specified.
	    var secure = true,
	        scheme = 'https',
	        port = 443;
	    // Don't do any validation here. The caller is responsible for validating the result of parsing.
	    if (typeof dataURL === 'string') {
	        // Parse scheme.
	        var colonInd = dataURL.indexOf('//');
	        if (colonInd >= 0) {
	            scheme = dataURL.substring(0, colonInd - 1);
	            dataURL = dataURL.substring(colonInd + 2);
	        }
	        // Parse host and path.
	        var slashInd = dataURL.indexOf('/');
	        if (slashInd === -1) {
	            slashInd = dataURL.length;
	        }
	        host = dataURL.substring(0, slashInd);
	        pathString = decodePath(dataURL.substring(slashInd));
	        var parts = host.split('.');
	        if (parts.length === 3) {
	            // Normalize namespaces to lowercase to share storage / connection.
	            domain = parts[1];
	            subdomain = parts[0].toLowerCase();
	        } else if (parts.length === 2) {
	            domain = parts[0];
	        }
	        // If we have a port, use scheme for determining if it's secure.
	        colonInd = host.indexOf(':');
	        if (colonInd >= 0) {
	            secure = scheme === 'https' || scheme === 'wss';
	            port = parseInt(host.substring(colonInd + 1), 10);
	        }
	    }
	    return {
	        host: host,
	        port: port,
	        domain: domain,
	        subdomain: subdomain,
	        secure: secure,
	        scheme: scheme,
	        pathString: pathString
	    };
	};
	//# sourceMappingURL=parser.js.map


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ValidationPath = exports.Path = undefined;

	var _util = __webpack_require__(19);

	var _utf = __webpack_require__(26);

	/**
	 * An immutable object representing a parsed path.  It's immutable so that you
	 * can pass them around to other functions without worrying about them changing
	 * it.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Path = /** @class */function () {
	    /**
	     * @param {string|Array.<string>} pathOrString Path string to parse,
	     *      or another path, or the raw tokens array
	     * @param {number=} pieceNum
	     */
	    function Path(pathOrString, pieceNum) {
	        if (pieceNum === void 0) {
	            this.pieces_ = pathOrString.split('/');
	            // Remove empty pieces.
	            var copyTo = 0;
	            for (var i = 0; i < this.pieces_.length; i++) {
	                if (this.pieces_[i].length > 0) {
	                    this.pieces_[copyTo] = this.pieces_[i];
	                    copyTo++;
	                }
	            }
	            this.pieces_.length = copyTo;
	            this.pieceNum_ = 0;
	        } else {
	            this.pieces_ = pathOrString;
	            this.pieceNum_ = pieceNum;
	        }
	    }
	    Object.defineProperty(Path, "Empty", {
	        /**
	         * Singleton to represent an empty path
	         *
	         * @const
	         */
	        get: function get() {
	            return new Path('');
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Path.prototype.getFront = function () {
	        if (this.pieceNum_ >= this.pieces_.length) return null;
	        return this.pieces_[this.pieceNum_];
	    };
	    /**
	     * @return {number} The number of segments in this path
	     */
	    Path.prototype.getLength = function () {
	        return this.pieces_.length - this.pieceNum_;
	    };
	    /**
	     * @return {!Path}
	     */
	    Path.prototype.popFront = function () {
	        var pieceNum = this.pieceNum_;
	        if (pieceNum < this.pieces_.length) {
	            pieceNum++;
	        }
	        return new Path(this.pieces_, pieceNum);
	    };
	    /**
	     * @return {?string}
	     */
	    Path.prototype.getBack = function () {
	        if (this.pieceNum_ < this.pieces_.length) return this.pieces_[this.pieces_.length - 1];
	        return null;
	    };
	    Path.prototype.toString = function () {
	        var pathString = '';
	        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {
	            if (this.pieces_[i] !== '') pathString += '/' + this.pieces_[i];
	        }
	        return pathString || '/';
	    };
	    Path.prototype.toUrlEncodedString = function () {
	        var pathString = '';
	        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {
	            if (this.pieces_[i] !== '') pathString += '/' + encodeURIComponent(String(this.pieces_[i]));
	        }
	        return pathString || '/';
	    };
	    /**
	     * Shallow copy of the parts of the path.
	     *
	     * @param {number=} begin
	     * @return {!Array<string>}
	     */
	    Path.prototype.slice = function (begin) {
	        if (begin === void 0) {
	            begin = 0;
	        }
	        return this.pieces_.slice(this.pieceNum_ + begin);
	    };
	    /**
	     * @return {?Path}
	     */
	    Path.prototype.parent = function () {
	        if (this.pieceNum_ >= this.pieces_.length) return null;
	        var pieces = [];
	        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {
	            pieces.push(this.pieces_[i]);
	        }return new Path(pieces, 0);
	    };
	    /**
	     * @param {string|!Path} childPathObj
	     * @return {!Path}
	     */
	    Path.prototype.child = function (childPathObj) {
	        var pieces = [];
	        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {
	            pieces.push(this.pieces_[i]);
	        }if (childPathObj instanceof Path) {
	            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {
	                pieces.push(childPathObj.pieces_[i]);
	            }
	        } else {
	            var childPieces = childPathObj.split('/');
	            for (var i = 0; i < childPieces.length; i++) {
	                if (childPieces[i].length > 0) pieces.push(childPieces[i]);
	            }
	        }
	        return new Path(pieces, 0);
	    };
	    /**
	     * @return {boolean} True if there are no segments in this path
	     */
	    Path.prototype.isEmpty = function () {
	        return this.pieceNum_ >= this.pieces_.length;
	    };
	    /**
	     * @param {!Path} outerPath
	     * @param {!Path} innerPath
	     * @return {!Path} The path from outerPath to innerPath
	     */
	    Path.relativePath = function (outerPath, innerPath) {
	        var outer = outerPath.getFront(),
	            inner = innerPath.getFront();
	        if (outer === null) {
	            return innerPath;
	        } else if (outer === inner) {
	            return Path.relativePath(outerPath.popFront(), innerPath.popFront());
	        } else {
	            throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');
	        }
	    };
	    /**
	     * @param {!Path} left
	     * @param {!Path} right
	     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.
	     */
	    Path.comparePaths = function (left, right) {
	        var leftKeys = left.slice();
	        var rightKeys = right.slice();
	        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {
	            var cmp = (0, _util.nameCompare)(leftKeys[i], rightKeys[i]);
	            if (cmp !== 0) return cmp;
	        }
	        if (leftKeys.length === rightKeys.length) return 0;
	        return leftKeys.length < rightKeys.length ? -1 : 1;
	    };
	    /**
	     *
	     * @param {Path} other
	     * @return {boolean} true if paths are the same.
	     */
	    Path.prototype.equals = function (other) {
	        if (this.getLength() !== other.getLength()) {
	            return false;
	        }
	        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {
	            if (this.pieces_[i] !== other.pieces_[j]) {
	                return false;
	            }
	        }
	        return true;
	    };
	    /**
	     *
	     * @param {!Path} other
	     * @return {boolean} True if this path is a parent (or the same as) other
	     */
	    Path.prototype.contains = function (other) {
	        var i = this.pieceNum_;
	        var j = other.pieceNum_;
	        if (this.getLength() > other.getLength()) {
	            return false;
	        }
	        while (i < this.pieces_.length) {
	            if (this.pieces_[i] !== other.pieces_[j]) {
	                return false;
	            }
	            ++i;
	            ++j;
	        }
	        return true;
	    };
	    return Path;
	}(); // end Path
	exports.Path = Path;
	/**
	 * Dynamic (mutable) path used to count path lengths.
	 *
	 * This class is used to efficiently check paths for valid
	 * length (in UTF8 bytes) and depth (used in path validation).
	 *
	 * Throws Error exception if path is ever invalid.
	 *
	 * The definition of a path always begins with '/'.
	 */

	var ValidationPath = /** @class */function () {
	    /**
	     * @param {!Path} path Initial Path.
	     * @param {string} errorPrefix_ Prefix for any error messages.
	     */
	    function ValidationPath(path, errorPrefix_) {
	        this.errorPrefix_ = errorPrefix_;
	        /** @type {!Array<string>} */
	        this.parts_ = path.slice();
	        /** @type {number} Initialize to number of '/' chars needed in path. */
	        this.byteLength_ = Math.max(1, this.parts_.length);
	        for (var i = 0; i < this.parts_.length; i++) {
	            this.byteLength_ += (0, _utf.stringLength)(this.parts_[i]);
	        }
	        this.checkValid_();
	    }
	    Object.defineProperty(ValidationPath, "MAX_PATH_DEPTH", {
	        /** @const {number} Maximum key depth. */
	        get: function get() {
	            return 32;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(ValidationPath, "MAX_PATH_LENGTH_BYTES", {
	        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */
	        get: function get() {
	            return 768;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /** @param {string} child */
	    ValidationPath.prototype.push = function (child) {
	        // Count the needed '/'
	        if (this.parts_.length > 0) {
	            this.byteLength_ += 1;
	        }
	        this.parts_.push(child);
	        this.byteLength_ += (0, _utf.stringLength)(child);
	        this.checkValid_();
	    };
	    ValidationPath.prototype.pop = function () {
	        var last = this.parts_.pop();
	        this.byteLength_ -= (0, _utf.stringLength)(last);
	        // Un-count the previous '/'
	        if (this.parts_.length > 0) {
	            this.byteLength_ -= 1;
	        }
	    };
	    ValidationPath.prototype.checkValid_ = function () {
	        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {
	            throw new Error(this.errorPrefix_ + 'has a key path longer than ' + ValidationPath.MAX_PATH_LENGTH_BYTES + ' bytes (' + this.byteLength_ + ').');
	        }
	        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {
	            throw new Error(this.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + ValidationPath.MAX_PATH_DEPTH + ') or object contains a cycle ' + this.toErrorString());
	        }
	    };
	    /**
	     * String for use in error messages - uses '.' notation for path.
	     *
	     * @return {string}
	     */
	    ValidationPath.prototype.toErrorString = function () {
	        if (this.parts_.length == 0) {
	            return '';
	        }
	        return "in property '" + this.parts_.join('.') + "'";
	    };
	    return ValidationPath;
	}();
	exports.ValidationPath = ValidationPath;
	//# sourceMappingURL=Path.js.map


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RepoInfo = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _assert = __webpack_require__(20);

	var _obj = __webpack_require__(22);

	var _storage = __webpack_require__(28);

	var _Constants = __webpack_require__(35);

	/**
	 * A class that holds metadata about a Repo object
	 *
	 * @constructor
	 */
	var RepoInfo = /** @class */function () {
	    /**
	     * @param {string} host Hostname portion of the url for the repo
	     * @param {boolean} secure Whether or not this repo is accessed over ssl
	     * @param {string} namespace The namespace represented by the repo
	     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).
	     * @param {string=} persistenceKey Override the default session persistence storage key
	     */
	    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {
	        if (persistenceKey === void 0) {
	            persistenceKey = '';
	        }
	        this.secure = secure;
	        this.namespace = namespace;
	        this.webSocketOnly = webSocketOnly;
	        this.persistenceKey = persistenceKey;
	        this.host = host.toLowerCase();
	        this.domain = this.host.substr(this.host.indexOf('.') + 1);
	        this.internalHost = _storage.PersistentStorage.get('host:' + host) || this.host;
	    }
	    RepoInfo.prototype.needsQueryParam = function () {
	        return this.host !== this.internalHost;
	    };
	    RepoInfo.prototype.isCacheableHost = function () {
	        return this.internalHost.substr(0, 2) === 's-';
	    };
	    RepoInfo.prototype.isDemoHost = function () {
	        return this.domain === 'firebaseio-demo.com';
	    };
	    RepoInfo.prototype.isCustomHost = function () {
	        return this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com';
	    };
	    RepoInfo.prototype.updateHost = function (newHost) {
	        if (newHost !== this.internalHost) {
	            this.internalHost = newHost;
	            if (this.isCacheableHost()) {
	                _storage.PersistentStorage.set('host:' + this.host, this.internalHost);
	            }
	        }
	    };
	    /**
	     * Returns the websocket URL for this repo
	     * @param {string} type of connection
	     * @param {Object} params list
	     * @return {string} The URL for this repo
	     */
	    RepoInfo.prototype.connectionURL = function (type, params) {
	        (0, _assert.assert)(typeof type === 'string', 'typeof type must == string');
	        (0, _assert.assert)((typeof params === 'undefined' ? 'undefined' : _typeof(params)) === 'object', 'typeof params must == object');
	        var connURL;
	        if (type === _Constants.WEBSOCKET) {
	            connURL = (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';
	        } else if (type === _Constants.LONG_POLLING) {
	            connURL = (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';
	        } else {
	            throw new Error('Unknown connection type: ' + type);
	        }
	        if (this.needsQueryParam()) {
	            params['ns'] = this.namespace;
	        }
	        var pairs = [];
	        (0, _obj.forEach)(params, function (key, value) {
	            pairs.push(key + '=' + value);
	        });
	        return connURL + pairs.join('&');
	    };
	    /** @return {string} */
	    RepoInfo.prototype.toString = function () {
	        var str = this.toURLString();
	        if (this.persistenceKey) {
	            str += '<' + this.persistenceKey + '>';
	        }
	        return str;
	    };
	    /** @return {string} */
	    RepoInfo.prototype.toURLString = function () {
	        return (this.secure ? 'https://' : 'http://') + this.host;
	    };
	    return RepoInfo;
	}();
	exports.RepoInfo = RepoInfo;
	//# sourceMappingURL=RepoInfo.js.map


/***/ }),
/* 35 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var PROTOCOL_VERSION = exports.PROTOCOL_VERSION = '5';
	var VERSION_PARAM = exports.VERSION_PARAM = 'v';
	var TRANSPORT_SESSION_PARAM = exports.TRANSPORT_SESSION_PARAM = 's';
	var REFERER_PARAM = exports.REFERER_PARAM = 'r';
	var FORGE_REF = exports.FORGE_REF = 'f';
	var FORGE_DOMAIN = exports.FORGE_DOMAIN = 'firebaseio.com';
	var LAST_SESSION_PARAM = exports.LAST_SESSION_PARAM = 'ls';
	var WEBSOCKET = exports.WEBSOCKET = 'websocket';
	var LONG_POLLING = exports.LONG_POLLING = 'long_polling';
	//# sourceMappingURL=Constants.js.map


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Reference = undefined;

	var _onDisconnect = __webpack_require__(37);

	var _TransactionResult = __webpack_require__(40);

	var _util = __webpack_require__(19);

	var _NextPushId = __webpack_require__(41);

	var _Query = __webpack_require__(42);

	var _Repo = __webpack_require__(60);

	var _Path = __webpack_require__(33);

	var _QueryParams = __webpack_require__(103);

	var _validation = __webpack_require__(39);

	var _validation2 = __webpack_require__(38);

	var _promise = __webpack_require__(8);

	var _SyncPoint = __webpack_require__(71);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var Reference = /** @class */function (_super) {
	    __extends(Reference, _super);
	    /**
	     * Call options:
	     *   new Reference(Repo, Path) or
	     *   new Reference(url: string, string|RepoManager)
	     *
	     * Externally - this is the firebase.database.Reference type.
	     *
	     * @param {!Repo} repo
	     * @param {(!Path)} path
	     * @extends {Query}
	     */
	    function Reference(repo, path) {
	        var _this = this;
	        if (!(repo instanceof _Repo.Repo)) {
	            throw new Error('new Reference() no longer supported - use app.database().');
	        }
	        // call Query's constructor, passing in the repo and path.
	        _this = _super.call(this, repo, path, _QueryParams.QueryParams.DEFAULT, false) || this;
	        return _this;
	    }
	    /** @return {?string} */
	    Reference.prototype.getKey = function () {
	        (0, _validation2.validateArgCount)('Reference.key', 0, 0, arguments.length);
	        if (this.path.isEmpty()) return null;else return this.path.getBack();
	    };
	    /**
	     * @param {!(string|Path)} pathString
	     * @return {!Reference}
	     */
	    Reference.prototype.child = function (pathString) {
	        (0, _validation2.validateArgCount)('Reference.child', 1, 1, arguments.length);
	        if (typeof pathString === 'number') {
	            pathString = String(pathString);
	        } else if (!(pathString instanceof _Path.Path)) {
	            if (this.path.getFront() === null) (0, _validation.validateRootPathString)('Reference.child', 1, pathString, false);else (0, _validation.validatePathString)('Reference.child', 1, pathString, false);
	        }
	        return new Reference(this.repo, this.path.child(pathString));
	    };
	    /** @return {?Reference} */
	    Reference.prototype.getParent = function () {
	        (0, _validation2.validateArgCount)('Reference.parent', 0, 0, arguments.length);
	        var parentPath = this.path.parent();
	        return parentPath === null ? null : new Reference(this.repo, parentPath);
	    };
	    /** @return {!Reference} */
	    Reference.prototype.getRoot = function () {
	        (0, _validation2.validateArgCount)('Reference.root', 0, 0, arguments.length);
	        var ref = this;
	        while (ref.getParent() !== null) {
	            ref = ref.getParent();
	        }
	        return ref;
	    };
	    /** @return {!Database} */
	    Reference.prototype.databaseProp = function () {
	        return this.repo.database;
	    };
	    /**
	     * @param {*} newVal
	     * @param {function(?Error)=} onComplete
	     * @return {!Promise}
	     */
	    Reference.prototype.set = function (newVal, onComplete) {
	        (0, _validation2.validateArgCount)('Reference.set', 1, 2, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.set', this.path);
	        (0, _validation.validateFirebaseDataArg)('Reference.set', 1, newVal, this.path, false);
	        (0, _validation2.validateCallback)('Reference.set', 2, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo.setWithPriority(this.path, newVal,
	        /*priority=*/null, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {!Object} objectToMerge
	     * @param {function(?Error)=} onComplete
	     * @return {!Promise}
	     */
	    Reference.prototype.update = function (objectToMerge, onComplete) {
	        (0, _validation2.validateArgCount)('Reference.update', 1, 2, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.update', this.path);
	        if (Array.isArray(objectToMerge)) {
	            var newObjectToMerge = {};
	            for (var i = 0; i < objectToMerge.length; ++i) {
	                newObjectToMerge['' + i] = objectToMerge[i];
	            }
	            objectToMerge = newObjectToMerge;
	            (0, _util.warn)('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');
	        }
	        (0, _validation.validateFirebaseMergeDataArg)('Reference.update', 1, objectToMerge, this.path, false);
	        (0, _validation2.validateCallback)('Reference.update', 2, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {*} newVal
	     * @param {string|number|null} newPriority
	     * @param {function(?Error)=} onComplete
	     * @return {!Promise}
	     */
	    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {
	        (0, _validation2.validateArgCount)('Reference.setWithPriority', 2, 3, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.setWithPriority', this.path);
	        (0, _validation.validateFirebaseDataArg)('Reference.setWithPriority', 1, newVal, this.path, false);
	        (0, _validation.validatePriority)('Reference.setWithPriority', 2, newPriority, false);
	        (0, _validation2.validateCallback)('Reference.setWithPriority', 3, onComplete, true);
	        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';
	        var deferred = new _promise.Deferred();
	        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {function(?Error)=} onComplete
	     * @return {!Promise}
	     */
	    Reference.prototype.remove = function (onComplete) {
	        (0, _validation2.validateArgCount)('Reference.remove', 0, 1, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.remove', this.path);
	        (0, _validation2.validateCallback)('Reference.remove', 1, onComplete, true);
	        return this.set(null, onComplete);
	    };
	    /**
	     * @param {function(*):*} transactionUpdate
	     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete
	     * @param {boolean=} applyLocally
	     * @return {!Promise}
	     */
	    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {
	        (0, _validation2.validateArgCount)('Reference.transaction', 1, 3, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.transaction', this.path);
	        (0, _validation2.validateCallback)('Reference.transaction', 1, transactionUpdate, false);
	        (0, _validation2.validateCallback)('Reference.transaction', 2, onComplete, true);
	        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how
	        // to expose it.
	        (0, _validation.validateBoolean)('Reference.transaction', 3, applyLocally, true);
	        if (this.getKey() === '.length' || this.getKey() === '.keys') throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';
	        if (applyLocally === undefined) applyLocally = true;
	        var deferred = new _promise.Deferred();
	        if (typeof onComplete === 'function') {
	            (0, _promise.attachDummyErrorHandler)(deferred.promise);
	        }
	        var promiseComplete = function promiseComplete(error, committed, snapshot) {
	            if (error) {
	                deferred.reject(error);
	            } else {
	                deferred.resolve(new _TransactionResult.TransactionResult(committed, snapshot));
	            }
	            if (typeof onComplete === 'function') {
	                onComplete(error, committed, snapshot);
	            }
	        };
	        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);
	        return deferred.promise;
	    };
	    /**
	     * @param {string|number|null} priority
	     * @param {function(?Error)=} onComplete
	     * @return {!Promise}
	     */
	    Reference.prototype.setPriority = function (priority, onComplete) {
	        (0, _validation2.validateArgCount)('Reference.setPriority', 1, 2, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.setPriority', this.path);
	        (0, _validation.validatePriority)('Reference.setPriority', 1, priority, false);
	        (0, _validation2.validateCallback)('Reference.setPriority', 2, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {*=} value
	     * @param {function(?Error)=} onComplete
	     * @return {!Reference}
	     */
	    Reference.prototype.push = function (value, onComplete) {
	        (0, _validation2.validateArgCount)('Reference.push', 0, 2, arguments.length);
	        (0, _validation.validateWritablePath)('Reference.push', this.path);
	        (0, _validation.validateFirebaseDataArg)('Reference.push', 1, value, this.path, true);
	        (0, _validation2.validateCallback)('Reference.push', 2, onComplete, true);
	        var now = this.repo.serverTime();
	        var name = (0, _NextPushId.nextPushId)(now);
	        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.
	        // We use child() to create handles to two different references. The first is turned into a
	        // ThennableReference below by adding then() and catch() methods and is used as the
	        // return value of push(). The second remains a regular Reference and is used as the fulfilled
	        // value of the first ThennableReference.
	        var thennablePushRef = this.child(name);
	        var pushRef = this.child(name);
	        var promise;
	        if (value != null) {
	            promise = thennablePushRef.set(value, onComplete).then(function () {
	                return pushRef;
	            });
	        } else {
	            promise = _promise.PromiseImpl.resolve(pushRef);
	        }
	        thennablePushRef.then = promise.then.bind(promise);
	        thennablePushRef.catch = promise.then.bind(promise, undefined);
	        if (typeof onComplete === 'function') {
	            (0, _promise.attachDummyErrorHandler)(promise);
	        }
	        return thennablePushRef;
	    };
	    /**
	     * @return {!OnDisconnect}
	     */
	    Reference.prototype.onDisconnect = function () {
	        (0, _validation.validateWritablePath)('Reference.onDisconnect', this.path);
	        return new _onDisconnect.OnDisconnect(this.repo, this.path);
	    };
	    Object.defineProperty(Reference.prototype, "database", {
	        get: function get() {
	            return this.databaseProp();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "key", {
	        get: function get() {
	            return this.getKey();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "parent", {
	        get: function get() {
	            return this.getParent();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "root", {
	        get: function get() {
	            return this.getRoot();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Reference;
	}(_Query.Query);
	exports.Reference = Reference;
	/**
	 * Define reference constructor in various modules
	 *
	 * We are doing this here to avoid several circular
	 * dependency issues
	 */

	_Query.Query.__referenceConstructor = Reference;
	_SyncPoint.SyncPoint.__referenceConstructor = Reference;
	//# sourceMappingURL=Reference.js.map


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.OnDisconnect = undefined;

	var _validation = __webpack_require__(38);

	var _validation2 = __webpack_require__(39);

	var _util = __webpack_require__(19);

	var _promise = __webpack_require__(8);

	/**
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var OnDisconnect = /** @class */function () {
	    /**
	     * @param {!Repo} repo_
	     * @param {!Path} path_
	     */
	    function OnDisconnect(repo_, path_) {
	        this.repo_ = repo_;
	        this.path_ = path_;
	    }
	    /**
	     * @param {function(?Error)=} onComplete
	     * @return {!firebase.Promise}
	     */
	    OnDisconnect.prototype.cancel = function (onComplete) {
	        (0, _validation.validateArgCount)('OnDisconnect.cancel', 0, 1, arguments.length);
	        (0, _validation.validateCallback)('OnDisconnect.cancel', 1, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {function(?Error)=} onComplete
	     * @return {!firebase.Promise}
	     */
	    OnDisconnect.prototype.remove = function (onComplete) {
	        (0, _validation.validateArgCount)('OnDisconnect.remove', 0, 1, arguments.length);
	        (0, _validation2.validateWritablePath)('OnDisconnect.remove', this.path_);
	        (0, _validation.validateCallback)('OnDisconnect.remove', 1, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {*} value
	     * @param {function(?Error)=} onComplete
	     * @return {!firebase.Promise}
	     */
	    OnDisconnect.prototype.set = function (value, onComplete) {
	        (0, _validation.validateArgCount)('OnDisconnect.set', 1, 2, arguments.length);
	        (0, _validation2.validateWritablePath)('OnDisconnect.set', this.path_);
	        (0, _validation2.validateFirebaseDataArg)('OnDisconnect.set', 1, value, this.path_, false);
	        (0, _validation.validateCallback)('OnDisconnect.set', 2, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {*} value
	     * @param {number|string|null} priority
	     * @param {function(?Error)=} onComplete
	     * @return {!firebase.Promise}
	     */
	    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {
	        (0, _validation.validateArgCount)('OnDisconnect.setWithPriority', 2, 3, arguments.length);
	        (0, _validation2.validateWritablePath)('OnDisconnect.setWithPriority', this.path_);
	        (0, _validation2.validateFirebaseDataArg)('OnDisconnect.setWithPriority', 1, value, this.path_, false);
	        (0, _validation2.validatePriority)('OnDisconnect.setWithPriority', 2, priority, false);
	        (0, _validation.validateCallback)('OnDisconnect.setWithPriority', 3, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    /**
	     * @param {!Object} objectToMerge
	     * @param {function(?Error)=} onComplete
	     * @return {!firebase.Promise}
	     */
	    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {
	        (0, _validation.validateArgCount)('OnDisconnect.update', 1, 2, arguments.length);
	        (0, _validation2.validateWritablePath)('OnDisconnect.update', this.path_);
	        if (Array.isArray(objectToMerge)) {
	            var newObjectToMerge = {};
	            for (var i = 0; i < objectToMerge.length; ++i) {
	                newObjectToMerge['' + i] = objectToMerge[i];
	            }
	            objectToMerge = newObjectToMerge;
	            (0, _util.warn)('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');
	        }
	        (0, _validation2.validateFirebaseMergeDataArg)('OnDisconnect.update', 1, objectToMerge, this.path_, false);
	        (0, _validation.validateCallback)('OnDisconnect.update', 2, onComplete, true);
	        var deferred = new _promise.Deferred();
	        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));
	        return deferred.promise;
	    };
	    return OnDisconnect;
	}();
	exports.OnDisconnect = OnDisconnect;
	//# sourceMappingURL=onDisconnect.js.map


/***/ }),
/* 38 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.errorPrefix = errorPrefix;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Check to make sure the appropriate number of arguments are provided for a public function.
	 * Throws an error if it fails.
	 *
	 * @param {!string} fnName The function name
	 * @param {!number} minCount The minimum number of arguments to allow for the function call
	 * @param {!number} maxCount The maximum number of argument to allow for the function call
	 * @param {!number} argCount The actual number of arguments provided.
	 */
	var validateArgCount = exports.validateArgCount = function validateArgCount(fnName, minCount, maxCount, argCount) {
	    var argError;
	    if (argCount < minCount) {
	        argError = 'at least ' + minCount;
	    } else if (argCount > maxCount) {
	        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
	    }
	    if (argError) {
	        var error = fnName + ' failed: Was called with ' + argCount + (argCount === 1 ? ' argument.' : ' arguments.') + ' Expects ' + argError + '.';
	        throw new Error(error);
	    }
	};
	/**
	 * Generates a string to prefix an error message about failed argument validation
	 *
	 * @param {!string} fnName The function name
	 * @param {!number} argumentNumber The index of the argument
	 * @param {boolean} optional Whether or not the argument is optional
	 * @return {!string} The prefix to add to the error thrown for validation.
	 */
	function errorPrefix(fnName, argumentNumber, optional) {
	    var argName = '';
	    switch (argumentNumber) {
	        case 1:
	            argName = optional ? 'first' : 'First';
	            break;
	        case 2:
	            argName = optional ? 'second' : 'Second';
	            break;
	        case 3:
	            argName = optional ? 'third' : 'Third';
	            break;
	        case 4:
	            argName = optional ? 'fourth' : 'Fourth';
	            break;
	        default:
	            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
	    }
	    var error = fnName + ' failed: ';
	    error += argName + ' argument ';
	    return error;
	}
	/**
	 * @param {!string} fnName
	 * @param {!number} argumentNumber
	 * @param {!string} namespace
	 * @param {boolean} optional
	 */
	var validateNamespace = exports.validateNamespace = function validateNamespace(fnName, argumentNumber, namespace, optional) {
	    if (optional && !namespace) return;
	    if (typeof namespace !== 'string') {
	        //TODO: I should do more validation here. We only allow certain chars in namespaces.
	        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid firebase namespace.');
	    }
	};
	var validateCallback = exports.validateCallback = function validateCallback(fnName, argumentNumber, callback, optional) {
	    if (optional && !callback) return;
	    if (typeof callback !== 'function') throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid function.');
	};
	var validateContextObject = exports.validateContextObject = function validateContextObject(fnName, argumentNumber, context, optional) {
	    if (optional && !context) return;
	    if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) !== 'object' || context === null) throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid context object.');
	};
	//# sourceMappingURL=validation.js.map


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.validateObjectContainsKey = exports.validateObject = exports.validateString = exports.validateBoolean = exports.validateCredential = exports.validateUrl = exports.validateWritablePath = exports.validateRootPathString = exports.validatePathString = exports.validateKey = exports.validateEventType = exports.validatePriority = exports.validateFirebaseMergeDataArg = exports.validateFirebaseMergePaths = exports.validateFirebaseData = exports.validateFirebaseDataArg = exports.isValidPriority = exports.isValidRootPathString = exports.isValidPathString = exports.isValidKey = exports.MAX_LEAF_SIZE_ = exports.INVALID_PATH_REGEX_ = exports.INVALID_KEY_REGEX_ = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _Path = __webpack_require__(33);

	var _obj = __webpack_require__(22);

	var _util = __webpack_require__(19);

	var _validation = __webpack_require__(38);

	var _utf = __webpack_require__(26);

	/**
	 * True for invalid Firebase keys
	 * @type {RegExp}
	 * @private
	 */
	var INVALID_KEY_REGEX_ = exports.INVALID_KEY_REGEX_ = /[\[\].#$\/\u0000-\u001F\u007F]/;
	/**
	 * True for invalid Firebase paths.
	 * Allows '/' in paths.
	 * @type {RegExp}
	 * @private
	 */
	var INVALID_PATH_REGEX_ = exports.INVALID_PATH_REGEX_ = /[\[\].#$\u0000-\u001F\u007F]/;
	/**
	 * Maximum number of characters to allow in leaf value
	 * @type {number}
	 * @private
	 */
	var MAX_LEAF_SIZE_ = exports.MAX_LEAF_SIZE_ = 10 * 1024 * 1024;
	/**
	 * @param {*} key
	 * @return {boolean}
	 */
	var isValidKey = exports.isValidKey = function isValidKey(key) {
	    return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);
	};
	/**
	 * @param {string} pathString
	 * @return {boolean}
	 */
	var isValidPathString = exports.isValidPathString = function isValidPathString(pathString) {
	    return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);
	};
	/**
	 * @param {string} pathString
	 * @return {boolean}
	 */
	var isValidRootPathString = exports.isValidRootPathString = function isValidRootPathString(pathString) {
	    if (pathString) {
	        // Allow '/.info/' at the beginning.
	        pathString = pathString.replace(/^\/*\.info(\/|$)/, '/');
	    }
	    return isValidPathString(pathString);
	};
	/**
	 * @param {*} priority
	 * @return {boolean}
	 */
	var isValidPriority = exports.isValidPriority = function isValidPriority(priority) {
	    return priority === null || typeof priority === 'string' || typeof priority === 'number' && !(0, _util.isInvalidJSONNumber)(priority) || priority && (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && (0, _obj.contains)(priority, '.sv');
	};
	/**
	 * Pre-validate a datum passed as an argument to Firebase function.
	 *
	 * @param {string} fnName
	 * @param {number} argumentNumber
	 * @param {*} data
	 * @param {!Path} path
	 * @param {boolean} optional
	 */
	var validateFirebaseDataArg = exports.validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {
	    if (optional && data === undefined) return;
	    validateFirebaseData((0, _validation.errorPrefix)(fnName, argumentNumber, optional), data, path);
	};
	/**
	 * Validate a data object client-side before sending to server.
	 *
	 * @param {string} errorPrefix
	 * @param {*} data
	 * @param {!Path|!ValidationPath} path_
	 */
	var validateFirebaseData = exports.validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {
	    var path = path_ instanceof _Path.Path ? new _Path.ValidationPath(path_, errorPrefix) : path_;
	    if (data === undefined) {
	        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());
	    }
	    if (typeof data === 'function') {
	        throw new Error(errorPrefix + 'contains a function ' + path.toErrorString() + ' with contents = ' + data.toString());
	    }
	    if ((0, _util.isInvalidJSONNumber)(data)) {
	        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());
	    }
	    // Check max leaf size, but try to avoid the utf8 conversion if we can.
	    if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && (0, _utf.stringLength)(data) > MAX_LEAF_SIZE_) {
	        throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + path.toErrorString() + " ('" + data.substring(0, 50) + "...')");
	    }
	    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON
	    // to save extra walking of large objects.
	    if (data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {
	        var hasDotValue_1 = false,
	            hasActualChild_1 = false;
	        (0, _obj.forEach)(data, function (key, value) {
	            if (key === '.value') {
	                hasDotValue_1 = true;
	            } else if (key !== '.priority' && key !== '.sv') {
	                hasActualChild_1 = true;
	                if (!isValidKey(key)) {
	                    throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + path.toErrorString() + '.  Keys must be non-empty strings ' + 'and can\'t contain ".", "#", "$", "/", "[", or "]"');
	                }
	            }
	            path.push(key);
	            validateFirebaseData(errorPrefix, value, path);
	            path.pop();
	        });
	        if (hasDotValue_1 && hasActualChild_1) {
	            throw new Error(errorPrefix + ' contains ".value" child ' + path.toErrorString() + ' in addition to actual children.');
	        }
	    }
	};
	/**
	 * Pre-validate paths passed in the firebase function.
	 *
	 * @param {string} errorPrefix
	 * @param {Array<!Path>} mergePaths
	 */
	var validateFirebaseMergePaths = exports.validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {
	    var i, curPath;
	    for (i = 0; i < mergePaths.length; i++) {
	        curPath = mergePaths[i];
	        var keys = curPath.slice();
	        for (var j = 0; j < keys.length; j++) {
	            if (keys[j] === '.priority' && j === keys.length - 1) {
	                // .priority is OK
	            } else if (!isValidKey(keys[j])) {
	                throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\'t contain ".", "#", "$", "/", "[", or "]"');
	            }
	        }
	    }
	    // Check that update keys are not descendants of each other.
	    // We rely on the property that sorting guarantees that ancestors come
	    // right before descendants.
	    mergePaths.sort(_Path.Path.comparePaths);
	    var prevPath = null;
	    for (i = 0; i < mergePaths.length; i++) {
	        curPath = mergePaths[i];
	        if (prevPath !== null && prevPath.contains(curPath)) {
	            throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());
	        }
	        prevPath = curPath;
	    }
	};
	/**
	 * pre-validate an object passed as an argument to firebase function (
	 * must be an object - e.g. for firebase.update()).
	 *
	 * @param {string} fnName
	 * @param {number} argumentNumber
	 * @param {*} data
	 * @param {!Path} path
	 * @param {boolean} optional
	 */
	var validateFirebaseMergeDataArg = exports.validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {
	    if (optional && data === undefined) return;
	    var errorPrefix = (0, _validation.errorPrefix)(fnName, argumentNumber, optional);
	    if (!(data && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') || Array.isArray(data)) {
	        throw new Error(errorPrefix + ' must be an object containing the children to replace.');
	    }
	    var mergePaths = [];
	    (0, _obj.forEach)(data, function (key, value) {
	        var curPath = new _Path.Path(key);
	        validateFirebaseData(errorPrefix, value, path.child(curPath));
	        if (curPath.getBack() === '.priority') {
	            if (!isValidPriority(value)) {
	                throw new Error(errorPrefix + "contains an invalid value for '" + curPath.toString() + "', which must be a valid " + 'Firebase priority (a string, finite number, server value, or null).');
	            }
	        }
	        mergePaths.push(curPath);
	    });
	    validateFirebaseMergePaths(errorPrefix, mergePaths);
	};
	var validatePriority = exports.validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {
	    if (optional && priority === undefined) return;
	    if ((0, _util.isInvalidJSONNumber)(priority)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');
	    // Special case to allow importing data with a .sv.
	    if (!isValidPriority(priority)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');
	};
	var validateEventType = exports.validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {
	    if (optional && eventType === undefined) return;
	    switch (eventType) {
	        case 'value':
	        case 'child_added':
	        case 'child_removed':
	        case 'child_changed':
	        case 'child_moved':
	            break;
	        default:
	            throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid event type = "value", "child_added", "child_removed", ' + '"child_changed", or "child_moved".');
	    }
	};
	var validateKey = exports.validateKey = function validateKey(fnName, argumentNumber, key, optional) {
	    if (optional && key === undefined) return;
	    if (!isValidKey(key)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'was an invalid key = "' + key + '".  Firebase keys must be non-empty strings and ' + 'can\'t contain ".", "#", "$", "/", "[", or "]").');
	};
	var validatePathString = exports.validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {
	    if (optional && pathString === undefined) return;
	    if (!isValidPathString(pathString)) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'was an invalid path = "' + pathString + '". Paths must be non-empty strings and ' + 'can\'t contain ".", "#", "$", "[", or "]"');
	};
	var validateRootPathString = exports.validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {
	    if (pathString) {
	        // Allow '/.info/' at the beginning.
	        pathString = pathString.replace(/^\/*\.info(\/|$)/, '/');
	    }
	    validatePathString(fnName, argumentNumber, pathString, optional);
	};
	var validateWritablePath = exports.validateWritablePath = function validateWritablePath(fnName, path) {
	    if (path.getFront() === '.info') {
	        throw new Error(fnName + " failed = Can't modify data under /.info/");
	    }
	};
	var validateUrl = exports.validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {
	    // TODO = Validate server better.
	    var pathString = parsedUrl.path.toString();
	    if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) || pathString.length !== 0 && !isValidRootPathString(pathString)) {
	        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\'t contain ".", "#", "$", "[", or "]".');
	    }
	};
	var validateCredential = exports.validateCredential = function validateCredential(fnName, argumentNumber, cred, optional) {
	    if (optional && cred === undefined) return;
	    if (!(typeof cred === 'string')) throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid credential (a string).');
	};
	var validateBoolean = exports.validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {
	    if (optional && bool === undefined) return;
	    if (typeof bool !== 'boolean') throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a boolean.');
	};
	var validateString = exports.validateString = function validateString(fnName, argumentNumber, string, optional) {
	    if (optional && string === undefined) return;
	    if (!(typeof string === 'string')) {
	        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid string.');
	    }
	};
	var validateObject = exports.validateObject = function validateObject(fnName, argumentNumber, obj, optional) {
	    if (optional && obj === undefined) return;
	    if (!(obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') || obj === null) {
	        throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must be a valid object.');
	    }
	};
	var validateObjectContainsKey = exports.validateObjectContainsKey = function validateObjectContainsKey(fnName, argumentNumber, obj, key, optional, opt_type) {
	    var objectContainsKey = obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && (0, _obj.contains)(obj, key);
	    if (!objectContainsKey) {
	        if (optional) {
	            return;
	        } else {
	            throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must contain the key "' + key + '"');
	        }
	    }
	    if (opt_type) {
	        var val = (0, _obj.safeGet)(obj, key);
	        if (opt_type === 'number' && !(typeof val === 'number') || opt_type === 'string' && !(typeof val === 'string') || opt_type === 'boolean' && !(typeof val === 'boolean') || opt_type === 'function' && !(typeof val === 'function') || opt_type === 'object' && !((typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') && val) {
	            if (optional) {
	                throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'contains invalid value for key "' + key + '" (must be of type "' + opt_type + '")');
	            } else {
	                throw new Error((0, _validation.errorPrefix)(fnName, argumentNumber, optional) + 'must contain the key "' + key + '" with type "' + opt_type + '"');
	            }
	        }
	    }
	};
	//# sourceMappingURL=validation.js.map


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TransactionResult = undefined;

	var _validation = __webpack_require__(38);

	var TransactionResult = /** @class */function () {
	    /**
	     * A type for the resolve value of Firebase.transaction.
	     * @constructor
	     * @dict
	     * @param {boolean} committed
	     * @param {DataSnapshot} snapshot
	     */
	    function TransactionResult(committed, snapshot) {
	        this.committed = committed;
	        this.snapshot = snapshot;
	    }
	    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
	    // for end-users
	    TransactionResult.prototype.toJSON = function () {
	        (0, _validation.validateArgCount)('TransactionResult.toJSON', 0, 1, arguments.length);
	        return { committed: this.committed, snapshot: this.snapshot.toJSON() };
	    };
	    return TransactionResult;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.TransactionResult = TransactionResult;
	//# sourceMappingURL=TransactionResult.js.map


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.nextPushId = undefined;

	var _assert = __webpack_require__(20);

	/**
	 * Fancy ID generator that creates 20-character string identifiers with the
	 * following properties:
	 *
	 * 1. They're based on timestamp so that they sort *after* any existing ids.
	 * 2. They contain 72-bits of random data after the timestamp so that IDs won't
	 *    collide with other clients' IDs.
	 * 3. They sort *lexicographically* (so the timestamp is converted to characters
	 *    that will sort properly).
	 * 4. They're monotonically increasing. Even if you generate more than one in
	 *    the same timestamp, the latter ones will sort after the former ones. We do
	 *    this by using the previous random bits but "incrementing" them by 1 (only
	 *    in the case of a timestamp collision).
	 */
	var nextPushId = exports.nextPushId = function () {
	    // Modeled after base64 web-safe chars, but ordered by ASCII.
	    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';
	    // Timestamp of last push, used to prevent local collisions if you push twice
	    // in one ms.
	    var lastPushTime = 0;
	    // We generate 72-bits of randomness which get turned into 12 characters and
	    // appended to the timestamp to prevent collisions with other clients. We
	    // store the last characters we generated because in the event of a collision,
	    // we'll use those same characters except "incremented" by one.
	    var lastRandChars = [];
	    return function (now) {
	        var duplicateTime = now === lastPushTime;
	        lastPushTime = now;
	        var i;
	        var timeStampChars = new Array(8);
	        for (i = 7; i >= 0; i--) {
	            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);
	            // NOTE: Can't use << here because javascript will convert to int and lose
	            // the upper bits.
	            now = Math.floor(now / 64);
	        }
	        (0, _assert.assert)(now === 0, 'Cannot push at time == 0');
	        var id = timeStampChars.join('');
	        if (!duplicateTime) {
	            for (i = 0; i < 12; i++) {
	                lastRandChars[i] = Math.floor(Math.random() * 64);
	            }
	        } else {
	            // If the timestamp hasn't changed since last push, use the same random
	            // number, except incremented by 1.
	            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {
	                lastRandChars[i] = 0;
	            }
	            lastRandChars[i]++;
	        }
	        for (i = 0; i < 12; i++) {
	            id += PUSH_CHARS.charAt(lastRandChars[i]);
	        }
	        (0, _assert.assert)(id.length === 20, 'nextPushId: Length should be 20.');
	        return id;
	    };
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	//# sourceMappingURL=NextPushId.js.map


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Query = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _assert = __webpack_require__(20);

	var _KeyIndex = __webpack_require__(43);

	var _PriorityIndex = __webpack_require__(46);

	var _ValueIndex = __webpack_require__(49);

	var _PathIndex = __webpack_require__(56);

	var _util = __webpack_require__(19);

	var _Path = __webpack_require__(33);

	var _validation = __webpack_require__(39);

	var _validation2 = __webpack_require__(38);

	var _EventRegistration = __webpack_require__(57);

	var _promise = __webpack_require__(8);

	var __referenceConstructor;
	/**
	 * A Query represents a filter to be applied to a firebase location.  This object purely represents the
	 * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.
	 *
	 * Since every Firebase reference is a query, Firebase inherits from this object.
	 */
	var Query = /** @class */function () {
	    function Query(repo, path, queryParams_, orderByCalled_) {
	        this.repo = repo;
	        this.path = path;
	        this.queryParams_ = queryParams_;
	        this.orderByCalled_ = orderByCalled_;
	    }
	    Object.defineProperty(Query, "__referenceConstructor", {
	        get: function get() {
	            (0, _assert.assert)(__referenceConstructor, 'Reference.ts has not been loaded');
	            return __referenceConstructor;
	        },
	        set: function set(val) {
	            __referenceConstructor = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Validates start/end values for queries.
	     * @param {!QueryParams} params
	     * @private
	     */
	    Query.validateQueryEndpoints_ = function (params) {
	        var startNode = null;
	        var endNode = null;
	        if (params.hasStart()) {
	            startNode = params.getIndexStartValue();
	        }
	        if (params.hasEnd()) {
	            endNode = params.getIndexEndValue();
	        }
	        if (params.getIndex() === _KeyIndex.KEY_INDEX) {
	            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';
	            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' + 'or equalTo() must be a string.';
	            if (params.hasStart()) {
	                var startName = params.getIndexStartName();
	                if (startName != _util.MIN_NAME) {
	                    throw new Error(tooManyArgsError);
	                } else if (typeof startNode !== 'string') {
	                    throw new Error(wrongArgTypeError);
	                }
	            }
	            if (params.hasEnd()) {
	                var endName = params.getIndexEndName();
	                if (endName != _util.MAX_NAME) {
	                    throw new Error(tooManyArgsError);
	                } else if (typeof endNode !== 'string') {
	                    throw new Error(wrongArgTypeError);
	                }
	            }
	        } else if (params.getIndex() === _PriorityIndex.PRIORITY_INDEX) {
	            if (startNode != null && !(0, _validation.isValidPriority)(startNode) || endNode != null && !(0, _validation.isValidPriority)(endNode)) {
	                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');
	            }
	        } else {
	            (0, _assert.assert)(params.getIndex() instanceof _PathIndex.PathIndex || params.getIndex() === _ValueIndex.VALUE_INDEX, 'unknown index type.');
	            if (startNode != null && (typeof startNode === 'undefined' ? 'undefined' : _typeof(startNode)) === 'object' || endNode != null && (typeof endNode === 'undefined' ? 'undefined' : _typeof(endNode)) === 'object') {
	                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' + 'an object.');
	            }
	        }
	    };
	    /**
	     * Validates that limit* has been called with the correct combination of parameters
	     * @param {!QueryParams} params
	     * @private
	     */
	    Query.validateLimit_ = function (params) {
	        if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {
	            throw new Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");
	        }
	    };
	    /**
	     * Validates that no other order by call has been made
	     * @param {!string} fnName
	     * @private
	     */
	    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {
	        if (this.orderByCalled_ === true) {
	            throw new Error(fnName + ": You can't combine multiple orderBy calls.");
	        }
	    };
	    /**
	     * @return {!QueryParams}
	     */
	    Query.prototype.getQueryParams = function () {
	        return this.queryParams_;
	    };
	    /**
	     * @return {!Reference}
	     */
	    Query.prototype.getRef = function () {
	        (0, _validation2.validateArgCount)('Query.ref', 0, 0, arguments.length);
	        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.
	        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this
	        // method gets called.
	        return new Query.__referenceConstructor(this.repo, this.path);
	    };
	    /**
	     * @param {!string} eventType
	     * @param {!function(DataSnapshot, string=)} callback
	     * @param {(function(Error)|Object)=} cancelCallbackOrContext
	     * @param {Object=} context
	     * @return {!function(DataSnapshot, string=)}
	     */
	    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {
	        (0, _validation2.validateArgCount)('Query.on', 2, 4, arguments.length);
	        (0, _validation.validateEventType)('Query.on', 1, eventType, false);
	        (0, _validation2.validateCallback)('Query.on', 2, callback, false);
	        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);
	        if (eventType === 'value') {
	            this.onValueEvent(callback, ret.cancel, ret.context);
	        } else {
	            var callbacks = {};
	            callbacks[eventType] = callback;
	            this.onChildEvent(callbacks, ret.cancel, ret.context);
	        }
	        return callback;
	    };
	    /**
	     * @param {!function(!DataSnapshot)} callback
	     * @param {?function(Error)} cancelCallback
	     * @param {?Object} context
	     * @protected
	     */
	    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {
	        var container = new _EventRegistration.ValueEventRegistration(callback, cancelCallback || null, context || null);
	        this.repo.addEventCallbackForQuery(this, container);
	    };
	    /**
	     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks
	     * @param {?function(Error)} cancelCallback
	     * @param {?Object} context
	     * @protected
	     */
	    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {
	        var container = new _EventRegistration.ChildEventRegistration(callbacks, cancelCallback, context);
	        this.repo.addEventCallbackForQuery(this, container);
	    };
	    /**
	     * @param {string=} eventType
	     * @param {(function(!DataSnapshot, ?string=))=} callback
	     * @param {Object=} context
	     */
	    Query.prototype.off = function (eventType, callback, context) {
	        (0, _validation2.validateArgCount)('Query.off', 0, 3, arguments.length);
	        (0, _validation.validateEventType)('Query.off', 1, eventType, true);
	        (0, _validation2.validateCallback)('Query.off', 2, callback, true);
	        (0, _validation2.validateContextObject)('Query.off', 3, context, true);
	        var container = null;
	        var callbacks = null;
	        if (eventType === 'value') {
	            var valueCallback = callback || null;
	            container = new _EventRegistration.ValueEventRegistration(valueCallback, null, context || null);
	        } else if (eventType) {
	            if (callback) {
	                callbacks = {};
	                callbacks[eventType] = callback;
	            }
	            container = new _EventRegistration.ChildEventRegistration(callbacks, null, context || null);
	        }
	        this.repo.removeEventCallbackForQuery(this, container);
	    };
	    /**
	     * Attaches a listener, waits for the first event, and then removes the listener
	     * @param {!string} eventType
	     * @param {!function(!DataSnapshot, string=)} userCallback
	     * @param cancelOrContext
	     * @param context
	     * @return {!firebase.Promise}
	     */
	    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {
	        var _this = this;
	        (0, _validation2.validateArgCount)('Query.once', 1, 4, arguments.length);
	        (0, _validation.validateEventType)('Query.once', 1, eventType, false);
	        (0, _validation2.validateCallback)('Query.once', 2, userCallback, true);
	        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);
	        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)
	        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change
	        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is
	        // against the Promise specification.
	        var firstCall = true;
	        var deferred = new _promise.Deferred();
	        (0, _promise.attachDummyErrorHandler)(deferred.promise);
	        var onceCallback = function onceCallback(snapshot) {
	            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)
	            // triggers multiple events (e.g. child_added or child_changed).
	            if (firstCall) {
	                firstCall = false;
	                _this.off(eventType, onceCallback);
	                if (userCallback) {
	                    userCallback.bind(ret.context)(snapshot);
	                }
	                deferred.resolve(snapshot);
	            }
	        };
	        this.on(eventType, onceCallback,
	        /*cancel=*/function (err) {
	            _this.off(eventType, onceCallback);
	            if (ret.cancel) ret.cancel.bind(ret.context)(err);
	            deferred.reject(err);
	        });
	        return deferred.promise;
	    };
	    /**
	     * Set a limit and anchor it to the start of the window.
	     * @param {!number} limit
	     * @return {!Query}
	     */
	    Query.prototype.limitToFirst = function (limit) {
	        (0, _validation2.validateArgCount)('Query.limitToFirst', 1, 1, arguments.length);
	        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {
	            throw new Error('Query.limitToFirst: First argument must be a positive integer.');
	        }
	        if (this.queryParams_.hasLimit()) {
	            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');
	        }
	        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);
	    };
	    /**
	     * Set a limit and anchor it to the end of the window.
	     * @param {!number} limit
	     * @return {!Query}
	     */
	    Query.prototype.limitToLast = function (limit) {
	        (0, _validation2.validateArgCount)('Query.limitToLast', 1, 1, arguments.length);
	        if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {
	            throw new Error('Query.limitToLast: First argument must be a positive integer.');
	        }
	        if (this.queryParams_.hasLimit()) {
	            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');
	        }
	        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);
	    };
	    /**
	     * Given a child path, return a new query ordered by the specified grandchild path.
	     * @param {!string} path
	     * @return {!Query}
	     */
	    Query.prototype.orderByChild = function (path) {
	        (0, _validation2.validateArgCount)('Query.orderByChild', 1, 1, arguments.length);
	        if (path === '$key') {
	            throw new Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');
	        } else if (path === '$priority') {
	            throw new Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');
	        } else if (path === '$value') {
	            throw new Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');
	        }
	        (0, _validation.validatePathString)('Query.orderByChild', 1, path, false);
	        this.validateNoPreviousOrderByCall_('Query.orderByChild');
	        var parsedPath = new _Path.Path(path);
	        if (parsedPath.isEmpty()) {
	            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');
	        }
	        var index = new _PathIndex.PathIndex(parsedPath);
	        var newParams = this.queryParams_.orderBy(index);
	        Query.validateQueryEndpoints_(newParams);
	        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);
	    };
	    /**
	     * Return a new query ordered by the KeyIndex
	     * @return {!Query}
	     */
	    Query.prototype.orderByKey = function () {
	        (0, _validation2.validateArgCount)('Query.orderByKey', 0, 0, arguments.length);
	        this.validateNoPreviousOrderByCall_('Query.orderByKey');
	        var newParams = this.queryParams_.orderBy(_KeyIndex.KEY_INDEX);
	        Query.validateQueryEndpoints_(newParams);
	        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);
	    };
	    /**
	     * Return a new query ordered by the PriorityIndex
	     * @return {!Query}
	     */
	    Query.prototype.orderByPriority = function () {
	        (0, _validation2.validateArgCount)('Query.orderByPriority', 0, 0, arguments.length);
	        this.validateNoPreviousOrderByCall_('Query.orderByPriority');
	        var newParams = this.queryParams_.orderBy(_PriorityIndex.PRIORITY_INDEX);
	        Query.validateQueryEndpoints_(newParams);
	        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);
	    };
	    /**
	     * Return a new query ordered by the ValueIndex
	     * @return {!Query}
	     */
	    Query.prototype.orderByValue = function () {
	        (0, _validation2.validateArgCount)('Query.orderByValue', 0, 0, arguments.length);
	        this.validateNoPreviousOrderByCall_('Query.orderByValue');
	        var newParams = this.queryParams_.orderBy(_ValueIndex.VALUE_INDEX);
	        Query.validateQueryEndpoints_(newParams);
	        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/true);
	    };
	    /**
	     * @param {number|string|boolean|null} value
	     * @param {?string=} name
	     * @return {!Query}
	     */
	    Query.prototype.startAt = function (value, name) {
	        if (value === void 0) {
	            value = null;
	        }
	        (0, _validation2.validateArgCount)('Query.startAt', 0, 2, arguments.length);
	        (0, _validation.validateFirebaseDataArg)('Query.startAt', 1, value, this.path, true);
	        (0, _validation.validateKey)('Query.startAt', 2, name, true);
	        var newParams = this.queryParams_.startAt(value, name);
	        Query.validateLimit_(newParams);
	        Query.validateQueryEndpoints_(newParams);
	        if (this.queryParams_.hasStart()) {
	            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');
	        }
	        // Calling with no params tells us to start at the beginning.
	        if (value === undefined) {
	            value = null;
	            name = null;
	        }
	        return new Query(this.repo, this.path, newParams, this.orderByCalled_);
	    };
	    /**
	     * @param {number|string|boolean|null} value
	     * @param {?string=} name
	     * @return {!Query}
	     */
	    Query.prototype.endAt = function (value, name) {
	        if (value === void 0) {
	            value = null;
	        }
	        (0, _validation2.validateArgCount)('Query.endAt', 0, 2, arguments.length);
	        (0, _validation.validateFirebaseDataArg)('Query.endAt', 1, value, this.path, true);
	        (0, _validation.validateKey)('Query.endAt', 2, name, true);
	        var newParams = this.queryParams_.endAt(value, name);
	        Query.validateLimit_(newParams);
	        Query.validateQueryEndpoints_(newParams);
	        if (this.queryParams_.hasEnd()) {
	            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' + 'equalTo).');
	        }
	        return new Query(this.repo, this.path, newParams, this.orderByCalled_);
	    };
	    /**
	     * Load the selection of children with exactly the specified value, and, optionally,
	     * the specified name.
	     * @param {number|string|boolean|null} value
	     * @param {string=} name
	     * @return {!Query}
	     */
	    Query.prototype.equalTo = function (value, name) {
	        (0, _validation2.validateArgCount)('Query.equalTo', 1, 2, arguments.length);
	        (0, _validation.validateFirebaseDataArg)('Query.equalTo', 1, value, this.path, false);
	        (0, _validation.validateKey)('Query.equalTo', 2, name, true);
	        if (this.queryParams_.hasStart()) {
	            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' + 'equalTo).');
	        }
	        if (this.queryParams_.hasEnd()) {
	            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' + 'equalTo).');
	        }
	        return this.startAt(value, name).endAt(value, name);
	    };
	    /**
	     * @return {!string} URL for this location.
	     */
	    Query.prototype.toString = function () {
	        (0, _validation2.validateArgCount)('Query.toString', 0, 0, arguments.length);
	        return this.repo.toString() + this.path.toUrlEncodedString();
	    };
	    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
	    // for end-users.
	    Query.prototype.toJSON = function () {
	        // An optional spacer argument is unnecessary for a string.
	        (0, _validation2.validateArgCount)('Query.toJSON', 0, 1, arguments.length);
	        return this.toString();
	    };
	    /**
	     * An object representation of the query parameters used by this Query.
	     * @return {!Object}
	     */
	    Query.prototype.queryObject = function () {
	        return this.queryParams_.getQueryObject();
	    };
	    /**
	     * @return {!string}
	     */
	    Query.prototype.queryIdentifier = function () {
	        var obj = this.queryObject();
	        var id = (0, _util.ObjectToUniqueKey)(obj);
	        return id === '{}' ? 'default' : id;
	    };
	    /**
	     * Return true if this query and the provided query are equivalent; otherwise, return false.
	     * @param {Query} other
	     * @return {boolean}
	     */
	    Query.prototype.isEqual = function (other) {
	        (0, _validation2.validateArgCount)('Query.isEqual', 1, 1, arguments.length);
	        if (!(other instanceof Query)) {
	            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';
	            throw new Error(error);
	        }
	        var sameRepo = this.repo === other.repo;
	        var samePath = this.path.equals(other.path);
	        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();
	        return sameRepo && samePath && sameQueryIdentifier;
	    };
	    /**
	     * Helper used by .on and .once to extract the context and or cancel arguments.
	     * @param {!string} fnName The function name (on or once)
	     * @param {(function(Error)|Object)=} cancelOrContext
	     * @param {Object=} context
	     * @return {{cancel: ?function(Error), context: ?Object}}
	     * @private
	     */
	    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {
	        var ret = { cancel: null, context: null };
	        if (cancelOrContext && context) {
	            ret.cancel = cancelOrContext;
	            (0, _validation2.validateCallback)(fnName, 3, ret.cancel, true);
	            ret.context = context;
	            (0, _validation2.validateContextObject)(fnName, 4, ret.context, true);
	        } else if (cancelOrContext) {
	            // we have either a cancel callback or a context.
	            if ((typeof cancelOrContext === 'undefined' ? 'undefined' : _typeof(cancelOrContext)) === 'object' && cancelOrContext !== null) {
	                // it's a context!
	                ret.context = cancelOrContext;
	            } else if (typeof cancelOrContext === 'function') {
	                ret.cancel = cancelOrContext;
	            } else {
	                throw new Error((0, _validation2.errorPrefix)(fnName, 3, true) + ' must either be a cancel callback or a context object.');
	            }
	        }
	        return ret;
	    };
	    Object.defineProperty(Query.prototype, "ref", {
	        get: function get() {
	            return this.getRef();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Query;
	}();
	exports.Query = Query;
	//# sourceMappingURL=Query.js.map


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.KEY_INDEX = exports.KeyIndex = undefined;

	var _Index = __webpack_require__(44);

	var _Node = __webpack_require__(45);

	var _util = __webpack_require__(19);

	var _assert = __webpack_require__(20);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var __EMPTY_NODE;
	var KeyIndex = /** @class */function (_super) {
	    __extends(KeyIndex, _super);
	    function KeyIndex() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    Object.defineProperty(KeyIndex, "__EMPTY_NODE", {
	        get: function get() {
	            return __EMPTY_NODE;
	        },
	        set: function set(val) {
	            __EMPTY_NODE = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * @inheritDoc
	     */
	    KeyIndex.prototype.compare = function (a, b) {
	        return (0, _util.nameCompare)(a.name, b.name);
	    };
	    /**
	     * @inheritDoc
	     */
	    KeyIndex.prototype.isDefinedOn = function (node) {
	        // We could probably return true here (since every node has a key), but it's never called
	        // so just leaving unimplemented for now.
	        throw (0, _assert.assertionError)('KeyIndex.isDefinedOn not expected to be called.');
	    };
	    /**
	     * @inheritDoc
	     */
	    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
	        return false; // The key for a node never changes.
	    };
	    /**
	     * @inheritDoc
	     */
	    KeyIndex.prototype.minPost = function () {
	        return _Node.NamedNode.MIN;
	    };
	    /**
	     * @inheritDoc
	     */
	    KeyIndex.prototype.maxPost = function () {
	        // TODO: This should really be created once and cached in a static property, but
	        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.
	        return new _Node.NamedNode(_util.MAX_NAME, __EMPTY_NODE);
	    };
	    /**
	     * @param {*} indexValue
	     * @param {string} name
	     * @return {!NamedNode}
	     */
	    KeyIndex.prototype.makePost = function (indexValue, name) {
	        (0, _assert.assert)(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');
	        // We just use empty node, but it'll never be compared, since our comparator only looks at name.
	        return new _Node.NamedNode(indexValue, __EMPTY_NODE);
	    };
	    /**
	     * @return {!string} String representation for inclusion in a query spec
	     */
	    KeyIndex.prototype.toString = function () {
	        return '.key';
	    };
	    return KeyIndex;
	}(_Index.Index);
	exports.KeyIndex = KeyIndex;
	var KEY_INDEX = exports.KEY_INDEX = new KeyIndex();
	//# sourceMappingURL=KeyIndex.js.map


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Index = undefined;

	var _Node = __webpack_require__(45);

	var _util = __webpack_require__(19);

	/**
	 *
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Index = /** @class */function () {
	  function Index() {}
	  /**
	   * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for
	   * this index
	   */
	  Index.prototype.getCompare = function () {
	    return this.compare.bind(this);
	  };
	  /**
	   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,
	   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.
	   *
	   * @param {!Node} oldNode
	   * @param {!Node} newNode
	   * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode
	   */
	  Index.prototype.indexedValueChanged = function (oldNode, newNode) {
	    var oldWrapped = new _Node.NamedNode(_util.MIN_NAME, oldNode);
	    var newWrapped = new _Node.NamedNode(_util.MIN_NAME, newNode);
	    return this.compare(oldWrapped, newWrapped) !== 0;
	  };
	  /**
	   * @return {!NamedNode} a node wrapper that will sort equal to or less than
	   * any other node wrapper, using this index
	   */
	  Index.prototype.minPost = function () {
	    return _Node.NamedNode.MIN;
	  };
	  return Index;
	}();
	exports.Index = Index;
	//# sourceMappingURL=Index.js.map


/***/ }),
/* 45 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 *
	 * @param {!string} name
	 * @param {!Node} node
	 * @constructor
	 * @struct
	 */
	var NamedNode = /** @class */function () {
	  function NamedNode(name, node) {
	    this.name = name;
	    this.node = node;
	  }
	  /**
	   *
	   * @param {!string} name
	   * @param {!Node} node
	   * @return {NamedNode}
	   */
	  NamedNode.Wrap = function (name, node) {
	    return new NamedNode(name, node);
	  };
	  return NamedNode;
	}();
	exports.NamedNode = NamedNode;
	//# sourceMappingURL=Node.js.map


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PRIORITY_INDEX = exports.PriorityIndex = undefined;
	exports.setNodeFromJSON = setNodeFromJSON;
	exports.setMaxNode = setMaxNode;

	var _Index = __webpack_require__(44);

	var _util = __webpack_require__(19);

	var _Node = __webpack_require__(45);

	var _LeafNode = __webpack_require__(47);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var nodeFromJSON;
	var MAX_NODE;
	function setNodeFromJSON(val) {
	    nodeFromJSON = val;
	}
	function setMaxNode(val) {
	    MAX_NODE = val;
	}
	/**
	 * @constructor
	 * @extends {Index}
	 * @private
	 */
	var PriorityIndex = /** @class */function (_super) {
	    __extends(PriorityIndex, _super);
	    function PriorityIndex() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    /**
	     * @inheritDoc
	     */
	    PriorityIndex.prototype.compare = function (a, b) {
	        var aPriority = a.node.getPriority();
	        var bPriority = b.node.getPriority();
	        var indexCmp = aPriority.compareTo(bPriority);
	        if (indexCmp === 0) {
	            return (0, _util.nameCompare)(a.name, b.name);
	        } else {
	            return indexCmp;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PriorityIndex.prototype.isDefinedOn = function (node) {
	        return !node.getPriority().isEmpty();
	    };
	    /**
	     * @inheritDoc
	     */
	    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
	        return !oldNode.getPriority().equals(newNode.getPriority());
	    };
	    /**
	     * @inheritDoc
	     */
	    PriorityIndex.prototype.minPost = function () {
	        return _Node.NamedNode.MIN;
	    };
	    /**
	     * @inheritDoc
	     */
	    PriorityIndex.prototype.maxPost = function () {
	        return new _Node.NamedNode(_util.MAX_NAME, new _LeafNode.LeafNode('[PRIORITY-POST]', MAX_NODE));
	    };
	    /**
	     * @param {*} indexValue
	     * @param {string} name
	     * @return {!NamedNode}
	     */
	    PriorityIndex.prototype.makePost = function (indexValue, name) {
	        var priorityNode = nodeFromJSON(indexValue);
	        return new _Node.NamedNode(name, new _LeafNode.LeafNode('[PRIORITY-POST]', priorityNode));
	    };
	    /**
	     * @return {!string} String representation for inclusion in a query spec
	     */
	    PriorityIndex.prototype.toString = function () {
	        return '.priority';
	    };
	    return PriorityIndex;
	}(_Index.Index);
	exports.PriorityIndex = PriorityIndex;
	var PRIORITY_INDEX = exports.PRIORITY_INDEX = new PriorityIndex();
	//# sourceMappingURL=PriorityIndex.js.map


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LeafNode = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _snap = __webpack_require__(48);

	var __childrenNodeConstructor;
	/**
	 * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It
	 * implements Node and stores the value of the node (a string,
	 * number, or boolean) accessible via getValue().
	 */
	var LeafNode = /** @class */function () {
	    /**
	     * @implements {Node}
	     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.
	     *                                         The object type is possible in the event of a deferred value
	     * @param {!Node=} priorityNode_ The priority of this node.
	     */
	    function LeafNode(value_, priorityNode_) {
	        if (priorityNode_ === void 0) {
	            priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;
	        }
	        this.value_ = value_;
	        this.priorityNode_ = priorityNode_;
	        this.lazyHash_ = null;
	        (0, _assert.assert)(this.value_ !== undefined && this.value_ !== null, "LeafNode shouldn't be created with null/undefined value.");
	        (0, _snap.validatePriorityNode)(this.priorityNode_);
	    }
	    Object.defineProperty(LeafNode, "__childrenNodeConstructor", {
	        get: function get() {
	            return __childrenNodeConstructor;
	        },
	        set: function set(val) {
	            __childrenNodeConstructor = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /** @inheritDoc */
	    LeafNode.prototype.isLeafNode = function () {
	        return true;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.getPriority = function () {
	        return this.priorityNode_;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.updatePriority = function (newPriorityNode) {
	        return new LeafNode(this.value_, newPriorityNode);
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.getImmediateChild = function (childName) {
	        // Hack to treat priority as a regular child
	        if (childName === '.priority') {
	            return this.priorityNode_;
	        } else {
	            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;
	        }
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.getChild = function (path) {
	        if (path.isEmpty()) {
	            return this;
	        } else if (path.getFront() === '.priority') {
	            return this.priorityNode_;
	        } else {
	            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.hasChild = function () {
	        return false;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {
	        return null;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {
	        if (childName === '.priority') {
	            return this.updatePriority(newChildNode);
	        } else if (newChildNode.isEmpty() && childName !== '.priority') {
	            return this;
	        } else {
	            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);
	        }
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.updateChild = function (path, newChildNode) {
	        var front = path.getFront();
	        if (front === null) {
	            return newChildNode;
	        } else if (newChildNode.isEmpty() && front !== '.priority') {
	            return this;
	        } else {
	            (0, _assert.assert)(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');
	            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));
	        }
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.isEmpty = function () {
	        return false;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.numChildren = function () {
	        return 0;
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.forEachChild = function (index, action) {
	        return false;
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.val = function (exportFormat) {
	        if (exportFormat && !this.getPriority().isEmpty()) return {
	            '.value': this.getValue(),
	            '.priority': this.getPriority().val()
	        };else return this.getValue();
	    };
	    /** @inheritDoc */
	    LeafNode.prototype.hash = function () {
	        if (this.lazyHash_ === null) {
	            var toHash = '';
	            if (!this.priorityNode_.isEmpty()) toHash += 'priority:' + (0, _snap.priorityHashText)(this.priorityNode_.val()) + ':';
	            var type = _typeof(this.value_);
	            toHash += type + ':';
	            if (type === 'number') {
	                toHash += (0, _util.doubleToIEEE754String)(this.value_);
	            } else {
	                toHash += this.value_;
	            }
	            this.lazyHash_ = (0, _util.sha1)(toHash);
	        }
	        return this.lazyHash_;
	    };
	    /**
	     * Returns the value of the leaf node.
	     * @return {Object|string|number|boolean} The value of the node.
	     */
	    LeafNode.prototype.getValue = function () {
	        return this.value_;
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.compareTo = function (other) {
	        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {
	            return 1;
	        } else if (other instanceof LeafNode.__childrenNodeConstructor) {
	            return -1;
	        } else {
	            (0, _assert.assert)(other.isLeafNode(), 'Unknown node type');
	            return this.compareToLeafNode_(other);
	        }
	    };
	    /**
	     * Comparison specifically for two leaf nodes
	     * @param {!LeafNode} otherLeaf
	     * @return {!number}
	     * @private
	     */
	    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {
	        var otherLeafType = _typeof(otherLeaf.value_);
	        var thisLeafType = _typeof(this.value_);
	        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);
	        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);
	        (0, _assert.assert)(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);
	        (0, _assert.assert)(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);
	        if (otherIndex === thisIndex) {
	            // Same type, compare values
	            if (thisLeafType === 'object') {
	                // Deferred value nodes are all equal, but we should also never get to this point...
	                return 0;
	            } else {
	                // Note that this works because true > false, all others are number or string comparisons
	                if (this.value_ < otherLeaf.value_) {
	                    return -1;
	                } else if (this.value_ === otherLeaf.value_) {
	                    return 0;
	                } else {
	                    return 1;
	                }
	            }
	        } else {
	            return thisIndex - otherIndex;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.withIndex = function () {
	        return this;
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.isIndexed = function () {
	        return true;
	    };
	    /**
	     * @inheritDoc
	     */
	    LeafNode.prototype.equals = function (other) {
	        /**
	         * @inheritDoc
	         */
	        if (other === this) {
	            return true;
	        } else if (other.isLeafNode()) {
	            var otherLeaf = other;
	            return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);
	        } else {
	            return false;
	        }
	    };
	    /**
	     * The sort order for comparing leaf nodes of different types. If two leaf nodes have
	     * the same type, the comparison falls back to their value
	     * @type {Array.<!string>}
	     * @const
	     */
	    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];
	    return LeafNode;
	}();
	exports.LeafNode = LeafNode;
	//# sourceMappingURL=LeafNode.js.map


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.validatePriorityNode = exports.priorityHashText = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	exports.setMaxNode = setMaxNode;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _obj = __webpack_require__(22);

	var MAX_NODE;
	function setMaxNode(val) {
	    MAX_NODE = val;
	}
	/**
	 * @param {(!string|!number)} priority
	 * @return {!string}
	 */
	var priorityHashText = exports.priorityHashText = function priorityHashText(priority) {
	    if (typeof priority === 'number') return 'number:' + (0, _util.doubleToIEEE754String)(priority);else return 'string:' + priority;
	};
	/**
	 * Validates that a priority snapshot Node is valid.
	 *
	 * @param {!Node} priorityNode
	 */
	var validatePriorityNode = exports.validatePriorityNode = function validatePriorityNode(priorityNode) {
	    if (priorityNode.isLeafNode()) {
	        var val = priorityNode.val();
	        (0, _assert.assert)(typeof val === 'string' || typeof val === 'number' || (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && (0, _obj.contains)(val, '.sv'), 'Priority must be a string or number.');
	    } else {
	        (0, _assert.assert)(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');
	    }
	    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.
	    (0, _assert.assert)(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), "Priority nodes can't have a priority of their own.");
	};
	//# sourceMappingURL=snap.js.map


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.VALUE_INDEX = exports.ValueIndex = undefined;

	var _Index = __webpack_require__(44);

	var _Node = __webpack_require__(45);

	var _util = __webpack_require__(19);

	var _nodeFromJSON = __webpack_require__(50);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * @constructor
	 * @extends {Index}
	 * @private
	 */
	var ValueIndex = /** @class */function (_super) {
	    __extends(ValueIndex, _super);
	    function ValueIndex() {
	        return _super !== null && _super.apply(this, arguments) || this;
	    }
	    /**
	     * @inheritDoc
	     */
	    ValueIndex.prototype.compare = function (a, b) {
	        var indexCmp = a.node.compareTo(b.node);
	        if (indexCmp === 0) {
	            return (0, _util.nameCompare)(a.name, b.name);
	        } else {
	            return indexCmp;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueIndex.prototype.isDefinedOn = function (node) {
	        return true;
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {
	        return !oldNode.equals(newNode);
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueIndex.prototype.minPost = function () {
	        return _Node.NamedNode.MIN;
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueIndex.prototype.maxPost = function () {
	        return _Node.NamedNode.MAX;
	    };
	    /**
	     * @param {*} indexValue
	     * @param {string} name
	     * @return {!NamedNode}
	     */
	    ValueIndex.prototype.makePost = function (indexValue, name) {
	        var valueNode = (0, _nodeFromJSON.nodeFromJSON)(indexValue);
	        return new _Node.NamedNode(name, valueNode);
	    };
	    /**
	     * @return {!string} String representation for inclusion in a query spec
	     */
	    ValueIndex.prototype.toString = function () {
	        return '.value';
	    };
	    return ValueIndex;
	}(_Index.Index);
	exports.ValueIndex = ValueIndex;
	var VALUE_INDEX = exports.VALUE_INDEX = new ValueIndex();
	//# sourceMappingURL=ValueIndex.js.map


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	exports.nodeFromJSON = nodeFromJSON;

	var _ChildrenNode = __webpack_require__(51);

	var _LeafNode = __webpack_require__(47);

	var _Node = __webpack_require__(45);

	var _obj = __webpack_require__(22);

	var _assert = __webpack_require__(20);

	var _childSet = __webpack_require__(54);

	var _comparators = __webpack_require__(55);

	var _IndexMap = __webpack_require__(53);

	var _PriorityIndex = __webpack_require__(46);

	var USE_HINZE = true;
	/**
	 * Constructs a snapshot node representing the passed JSON and returns it.
	 * @param {*} json JSON to create a node for.
	 * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the
	 * passed JSON contains a .priority property.
	 * @return {!Node}
	 */
	function nodeFromJSON(json, priority) {
	    if (priority === void 0) {
	        priority = null;
	    }
	    if (json === null) {
	        return _ChildrenNode.ChildrenNode.EMPTY_NODE;
	    }
	    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.priority' in json) {
	        priority = json['.priority'];
	    }
	    (0, _assert.assert)(priority === null || typeof priority === 'string' || typeof priority === 'number' || (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)) === 'object' && '.sv' in priority, 'Invalid priority type found: ' + (typeof priority === 'undefined' ? 'undefined' : _typeof(priority)));
	    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) === 'object' && '.value' in json && json['.value'] !== null) {
	        json = json['.value'];
	    }
	    // Valid leaf nodes include non-objects or server-value wrapper objects
	    if ((typeof json === 'undefined' ? 'undefined' : _typeof(json)) !== 'object' || '.sv' in json) {
	        var jsonLeaf = json;
	        return new _LeafNode.LeafNode(jsonLeaf, nodeFromJSON(priority));
	    }
	    if (!(json instanceof Array) && USE_HINZE) {
	        var children_1 = [];
	        var childrenHavePriority_1 = false;
	        var hinzeJsonObj_1 = json;
	        (0, _obj.forEach)(hinzeJsonObj_1, function (key, child) {
	            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {
	                // Ignore metadata nodes
	                var childNode = nodeFromJSON(hinzeJsonObj_1[key]);
	                if (!childNode.isEmpty()) {
	                    childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();
	                    children_1.push(new _Node.NamedNode(key, childNode));
	                }
	            }
	        });
	        if (children_1.length == 0) {
	            return _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        }
	        var childSet = (0, _childSet.buildChildSet)(children_1, _comparators.NAME_ONLY_COMPARATOR, function (namedNode) {
	            return namedNode.name;
	        }, _comparators.NAME_COMPARATOR);
	        if (childrenHavePriority_1) {
	            var sortedChildSet = (0, _childSet.buildChildSet)(children_1, _PriorityIndex.PRIORITY_INDEX.getCompare());
	            return new _ChildrenNode.ChildrenNode(childSet, nodeFromJSON(priority), new _IndexMap.IndexMap({ '.priority': sortedChildSet }, { '.priority': _PriorityIndex.PRIORITY_INDEX }));
	        } else {
	            return new _ChildrenNode.ChildrenNode(childSet, nodeFromJSON(priority), _IndexMap.IndexMap.Default);
	        }
	    } else {
	        var node_1 = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        var jsonObj_1 = json;
	        (0, _obj.forEach)(jsonObj_1, function (key, childData) {
	            if ((0, _obj.contains)(jsonObj_1, key)) {
	                if (key.substring(0, 1) !== '.') {
	                    // ignore metadata nodes.
	                    var childNode = nodeFromJSON(childData);
	                    if (childNode.isLeafNode() || !childNode.isEmpty()) node_1 = node_1.updateImmediateChild(key, childNode);
	                }
	            }
	        });
	        return node_1.updatePriority(nodeFromJSON(priority));
	    }
	}
	(0, _PriorityIndex.setNodeFromJSON)(nodeFromJSON);
	//# sourceMappingURL=nodeFromJSON.js.map


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.MAX_NODE = exports.MaxNode = exports.ChildrenNode = undefined;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _SortedMap = __webpack_require__(52);

	var _Node = __webpack_require__(45);

	var _snap = __webpack_require__(48);

	var _PriorityIndex = __webpack_require__(46);

	var _KeyIndex = __webpack_require__(43);

	var _IndexMap = __webpack_require__(53);

	var _LeafNode = __webpack_require__(47);

	var _comparators = __webpack_require__(55);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	// TODO: For memory savings, don't store priorityNode_ if it's empty.
	var EMPTY_NODE;
	/**
	 * ChildrenNode is a class for storing internal nodes in a DataSnapshot
	 * (i.e. nodes with children).  It implements Node and stores the
	 * list of children in the children property, sorted by child name.
	 *
	 * @constructor
	 * @implements {Node}
	 */
	var ChildrenNode = /** @class */function () {
	    /**
	     *
	     * @param {!SortedMap.<string, !Node>} children_ List of children
	     * of this node..
	     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).
	     * @param {!IndexMap} indexMap_
	     */
	    function ChildrenNode(children_, priorityNode_, indexMap_) {
	        this.children_ = children_;
	        this.priorityNode_ = priorityNode_;
	        this.indexMap_ = indexMap_;
	        this.lazyHash_ = null;
	        /**
	         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use
	         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own
	         * class instead of an empty ChildrenNode.
	         */
	        if (this.priorityNode_) {
	            (0, _snap.validatePriorityNode)(this.priorityNode_);
	        }
	        if (this.children_.isEmpty()) {
	            (0, _assert.assert)(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');
	        }
	    }
	    Object.defineProperty(ChildrenNode, "EMPTY_NODE", {
	        get: function get() {
	            return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new _SortedMap.SortedMap(_comparators.NAME_COMPARATOR), null, _IndexMap.IndexMap.Default));
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /** @inheritDoc */
	    ChildrenNode.prototype.isLeafNode = function () {
	        return false;
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.getPriority = function () {
	        return this.priorityNode_ || EMPTY_NODE;
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {
	        if (this.children_.isEmpty()) {
	            // Don't allow priorities on empty nodes
	            return this;
	        } else {
	            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);
	        }
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.getImmediateChild = function (childName) {
	        // Hack to treat priority as a regular child
	        if (childName === '.priority') {
	            return this.getPriority();
	        } else {
	            var child = this.children_.get(childName);
	            return child === null ? EMPTY_NODE : child;
	        }
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.getChild = function (path) {
	        var front = path.getFront();
	        if (front === null) return this;
	        return this.getImmediateChild(front).getChild(path.popFront());
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.hasChild = function (childName) {
	        return this.children_.get(childName) !== null;
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {
	        (0, _assert.assert)(newChildNode, 'We should always be passing snapshot nodes');
	        if (childName === '.priority') {
	            return this.updatePriority(newChildNode);
	        } else {
	            var namedNode = new _Node.NamedNode(childName, newChildNode);
	            var newChildren = void 0,
	                newIndexMap = void 0,
	                newPriority = void 0;
	            if (newChildNode.isEmpty()) {
	                newChildren = this.children_.remove(childName);
	                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);
	            } else {
	                newChildren = this.children_.insert(childName, newChildNode);
	                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);
	            }
	            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;
	            return new ChildrenNode(newChildren, newPriority, newIndexMap);
	        }
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.updateChild = function (path, newChildNode) {
	        var front = path.getFront();
	        if (front === null) {
	            return newChildNode;
	        } else {
	            (0, _assert.assert)(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');
	            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);
	            return this.updateImmediateChild(front, newImmediateChild);
	        }
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.isEmpty = function () {
	        return this.children_.isEmpty();
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.numChildren = function () {
	        return this.children_.count();
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.val = function (exportFormat) {
	        if (this.isEmpty()) return null;
	        var obj = {};
	        var numKeys = 0,
	            maxKey = 0,
	            allIntegerKeys = true;
	        this.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	            obj[key] = childNode.val(exportFormat);
	            numKeys++;
	            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {
	                maxKey = Math.max(maxKey, Number(key));
	            } else {
	                allIntegerKeys = false;
	            }
	        });
	        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {
	            // convert to array.
	            var array = [];
	            for (var key in obj) {
	                array[key] = obj[key];
	            }return array;
	        } else {
	            if (exportFormat && !this.getPriority().isEmpty()) {
	                obj['.priority'] = this.getPriority().val();
	            }
	            return obj;
	        }
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.hash = function () {
	        if (this.lazyHash_ === null) {
	            var toHash_1 = '';
	            if (!this.getPriority().isEmpty()) toHash_1 += 'priority:' + (0, _snap.priorityHashText)(this.getPriority().val()) + ':';
	            this.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	                var childHash = childNode.hash();
	                if (childHash !== '') toHash_1 += ':' + key + ':' + childHash;
	            });
	            this.lazyHash_ = toHash_1 === '' ? '' : (0, _util.sha1)(toHash_1);
	        }
	        return this.lazyHash_;
	    };
	    /** @inheritDoc */
	    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {
	        var idx = this.resolveIndex_(index);
	        if (idx) {
	            var predecessor = idx.getPredecessorKey(new _Node.NamedNode(childName, childNode));
	            return predecessor ? predecessor.name : null;
	        } else {
	            return this.children_.getPredecessorKey(childName);
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {?string}
	     */
	    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {
	        var idx = this.resolveIndex_(indexDefinition);
	        if (idx) {
	            var minKey = idx.minKey();
	            return minKey && minKey.name;
	        } else {
	            return this.children_.minKey();
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {?NamedNode}
	     */
	    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {
	        var minKey = this.getFirstChildName(indexDefinition);
	        if (minKey) {
	            return new _Node.NamedNode(minKey, this.children_.get(minKey));
	        } else {
	            return null;
	        }
	    };
	    /**
	     * Given an index, return the key name of the largest value we have, according to that index
	     * @param {!Index} indexDefinition
	     * @return {?string}
	     */
	    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {
	        var idx = this.resolveIndex_(indexDefinition);
	        if (idx) {
	            var maxKey = idx.maxKey();
	            return maxKey && maxKey.name;
	        } else {
	            return this.children_.maxKey();
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {?NamedNode}
	     */
	    ChildrenNode.prototype.getLastChild = function (indexDefinition) {
	        var maxKey = this.getLastChildName(indexDefinition);
	        if (maxKey) {
	            return new _Node.NamedNode(maxKey, this.children_.get(maxKey));
	        } else {
	            return null;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildrenNode.prototype.forEachChild = function (index, action) {
	        var idx = this.resolveIndex_(index);
	        if (idx) {
	            return idx.inorderTraversal(function (wrappedNode) {
	                return action(wrappedNode.name, wrappedNode.node);
	            });
	        } else {
	            return this.children_.inorderTraversal(action);
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {SortedMapIterator}
	     */
	    ChildrenNode.prototype.getIterator = function (indexDefinition) {
	        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);
	    };
	    /**
	     *
	     * @param {!NamedNode} startPost
	     * @param {!Index} indexDefinition
	     * @return {!SortedMapIterator}
	     */
	    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {
	        var idx = this.resolveIndex_(indexDefinition);
	        if (idx) {
	            return idx.getIteratorFrom(startPost, function (key) {
	                return key;
	            });
	        } else {
	            var iterator = this.children_.getIteratorFrom(startPost.name, _Node.NamedNode.Wrap);
	            var next = iterator.peek();
	            while (next != null && indexDefinition.compare(next, startPost) < 0) {
	                iterator.getNext();
	                next = iterator.peek();
	            }
	            return iterator;
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {!SortedMapIterator}
	     */
	    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {
	        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);
	    };
	    /**
	     * @param {!NamedNode} endPost
	     * @param {!Index} indexDefinition
	     * @return {!SortedMapIterator}
	     */
	    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {
	        var idx = this.resolveIndex_(indexDefinition);
	        if (idx) {
	            return idx.getReverseIteratorFrom(endPost, function (key) {
	                return key;
	            });
	        } else {
	            var iterator = this.children_.getReverseIteratorFrom(endPost.name, _Node.NamedNode.Wrap);
	            var next = iterator.peek();
	            while (next != null && indexDefinition.compare(next, endPost) > 0) {
	                iterator.getNext();
	                next = iterator.peek();
	            }
	            return iterator;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildrenNode.prototype.compareTo = function (other) {
	        if (this.isEmpty()) {
	            if (other.isEmpty()) {
	                return 0;
	            } else {
	                return -1;
	            }
	        } else if (other.isLeafNode() || other.isEmpty()) {
	            return 1;
	        } else if (other === MAX_NODE) {
	            return -1;
	        } else {
	            // Must be another node with children.
	            return 0;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildrenNode.prototype.withIndex = function (indexDefinition) {
	        if (indexDefinition === _KeyIndex.KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {
	            return this;
	        } else {
	            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);
	            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildrenNode.prototype.isIndexed = function (index) {
	        return index === _KeyIndex.KEY_INDEX || this.indexMap_.hasIndex(index);
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildrenNode.prototype.equals = function (other) {
	        if (other === this) {
	            return true;
	        } else if (other.isLeafNode()) {
	            return false;
	        } else {
	            var otherChildrenNode = other;
	            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {
	                return false;
	            } else if (this.children_.count() === otherChildrenNode.children_.count()) {
	                var thisIter = this.getIterator(_PriorityIndex.PRIORITY_INDEX);
	                var otherIter = otherChildrenNode.getIterator(_PriorityIndex.PRIORITY_INDEX);
	                var thisCurrent = thisIter.getNext();
	                var otherCurrent = otherIter.getNext();
	                while (thisCurrent && otherCurrent) {
	                    if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {
	                        return false;
	                    }
	                    thisCurrent = thisIter.getNext();
	                    otherCurrent = otherIter.getNext();
	                }
	                return thisCurrent === null && otherCurrent === null;
	            } else {
	                return false;
	            }
	        }
	    };
	    /**
	     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used
	     * instead.
	     *
	     * @private
	     * @param {!Index} indexDefinition
	     * @return {?SortedMap.<NamedNode, Node>}
	     */
	    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {
	        if (indexDefinition === _KeyIndex.KEY_INDEX) {
	            return null;
	        } else {
	            return this.indexMap_.get(indexDefinition.toString());
	        }
	    };
	    /**
	     * @private
	     * @type {RegExp}
	     */
	    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/;
	    return ChildrenNode;
	}();
	exports.ChildrenNode = ChildrenNode;
	/**
	 * @constructor
	 * @extends {ChildrenNode}
	 * @private
	 */

	var MaxNode = /** @class */function (_super) {
	    __extends(MaxNode, _super);
	    function MaxNode() {
	        return _super.call(this, new _SortedMap.SortedMap(_comparators.NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, _IndexMap.IndexMap.Default) || this;
	    }
	    MaxNode.prototype.compareTo = function (other) {
	        if (other === this) {
	            return 0;
	        } else {
	            return 1;
	        }
	    };
	    MaxNode.prototype.equals = function (other) {
	        // Not that we every compare it, but MAX_NODE is only ever equal to itself
	        return other === this;
	    };
	    MaxNode.prototype.getPriority = function () {
	        return this;
	    };
	    MaxNode.prototype.getImmediateChild = function (childName) {
	        return ChildrenNode.EMPTY_NODE;
	    };
	    MaxNode.prototype.isEmpty = function () {
	        return false;
	    };
	    return MaxNode;
	}(ChildrenNode);
	exports.MaxNode = MaxNode;
	/**
	 * Marker that will sort higher than any other snapshot.
	 * @type {!MAX_NODE}
	 * @const
	 */

	var MAX_NODE = exports.MAX_NODE = new MaxNode();
	Object.defineProperties(_Node.NamedNode, {
	    MIN: {
	        value: new _Node.NamedNode(_util.MIN_NAME, ChildrenNode.EMPTY_NODE)
	    },
	    MAX: {
	        value: new _Node.NamedNode(_util.MAX_NAME, MAX_NODE)
	    }
	});
	/**
	 * Reference Extensions
	 */
	_KeyIndex.KeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;
	_LeafNode.LeafNode.__childrenNodeConstructor = ChildrenNode;
	(0, _snap.setMaxNode)(MAX_NODE);
	(0, _PriorityIndex.setMaxNode)(MAX_NODE);
	//# sourceMappingURL=ChildrenNode.js.map


/***/ }),
/* 52 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * An iterator over an LLRBNode.
	 */
	var SortedMapIterator = /** @class */function () {
	    /**
	     * @template K, V, T
	     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.
	     * @param {?K} startKey
	     * @param {function(K, K): number} comparator
	     * @param {boolean} isReverse_ Whether or not to iterate in reverse
	     * @param {(function(K, V):T)=} resultGenerator_
	     */
	    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {
	        if (resultGenerator_ === void 0) {
	            resultGenerator_ = null;
	        }
	        this.isReverse_ = isReverse_;
	        this.resultGenerator_ = resultGenerator_;
	        /** @private
	         * @type {Array.<!LLRBNode>}
	         */
	        this.nodeStack_ = [];
	        var cmp = 1;
	        while (!node.isEmpty()) {
	            node = node;
	            cmp = startKey ? comparator(node.key, startKey) : 1;
	            // flip the comparison if we're going in reverse
	            if (isReverse_) cmp *= -1;
	            if (cmp < 0) {
	                // This node is less than our start key. ignore it
	                if (this.isReverse_) {
	                    node = node.left;
	                } else {
	                    node = node.right;
	                }
	            } else if (cmp === 0) {
	                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;
	                this.nodeStack_.push(node);
	                break;
	            } else {
	                // This node is greater than our start key, add it to the stack and move to the next one
	                this.nodeStack_.push(node);
	                if (this.isReverse_) {
	                    node = node.right;
	                } else {
	                    node = node.left;
	                }
	            }
	        }
	    }
	    SortedMapIterator.prototype.getNext = function () {
	        if (this.nodeStack_.length === 0) return null;
	        var node = this.nodeStack_.pop();
	        var result;
	        if (this.resultGenerator_) result = this.resultGenerator_(node.key, node.value);else result = { key: node.key, value: node.value };
	        if (this.isReverse_) {
	            node = node.left;
	            while (!node.isEmpty()) {
	                this.nodeStack_.push(node);
	                node = node.right;
	            }
	        } else {
	            node = node.right;
	            while (!node.isEmpty()) {
	                this.nodeStack_.push(node);
	                node = node.left;
	            }
	        }
	        return result;
	    };
	    SortedMapIterator.prototype.hasNext = function () {
	        return this.nodeStack_.length > 0;
	    };
	    SortedMapIterator.prototype.peek = function () {
	        if (this.nodeStack_.length === 0) return null;
	        var node = this.nodeStack_[this.nodeStack_.length - 1];
	        if (this.resultGenerator_) {
	            return this.resultGenerator_(node.key, node.value);
	        } else {
	            return { key: node.key, value: node.value };
	        }
	    };
	    return SortedMapIterator;
	}();
	exports.SortedMapIterator = SortedMapIterator;
	/**
	 * Represents a node in a Left-leaning Red-Black tree.
	 */

	var LLRBNode = /** @class */function () {
	    /**
	     * @template K, V
	     * @param {!K} key Key associated with this node.
	     * @param {!V} value Value associated with this node.
	     * @param {?boolean} color Whether this node is red.
	     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.
	     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.
	     */
	    function LLRBNode(key, value, color, left, right) {
	        this.key = key;
	        this.value = value;
	        this.color = color != null ? color : LLRBNode.RED;
	        this.left = left != null ? left : SortedMap.EMPTY_NODE;
	        this.right = right != null ? right : SortedMap.EMPTY_NODE;
	    }
	    /**
	     * Returns a copy of the current node, optionally replacing pieces of it.
	     *
	     * @param {?K} key New key for the node, or null.
	     * @param {?V} value New value for the node, or null.
	     * @param {?boolean} color New color for the node, or null.
	     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.
	     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.
	     * @return {!LLRBNode} The node copy.
	     */
	    LLRBNode.prototype.copy = function (key, value, color, left, right) {
	        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);
	    };
	    /**
	     * @return {number} The total number of nodes in the tree.
	     */
	    LLRBNode.prototype.count = function () {
	        return this.left.count() + 1 + this.right.count();
	    };
	    /**
	     * @return {boolean} True if the tree is empty.
	     */
	    LLRBNode.prototype.isEmpty = function () {
	        return false;
	    };
	    /**
	     * Traverses the tree in key order and calls the specified action function
	     * for each node.
	     *
	     * @param {function(!K, !V):*} action Callback function to be called for each
	     *   node.  If it returns true, traversal is aborted.
	     * @return {*} The first truthy value returned by action, or the last falsey
	     *   value returned by action
	     */
	    LLRBNode.prototype.inorderTraversal = function (action) {
	        return this.left.inorderTraversal(action) || action(this.key, this.value) || this.right.inorderTraversal(action);
	    };
	    /**
	     * Traverses the tree in reverse key order and calls the specified action function
	     * for each node.
	     *
	     * @param {function(!Object, !Object)} action Callback function to be called for each
	     * node.  If it returns true, traversal is aborted.
	     * @return {*} True if traversal was aborted.
	     */
	    LLRBNode.prototype.reverseTraversal = function (action) {
	        return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);
	    };
	    /**
	     * @return {!Object} The minimum node in the tree.
	     * @private
	     */
	    LLRBNode.prototype.min_ = function () {
	        if (this.left.isEmpty()) {
	            return this;
	        } else {
	            return this.left.min_();
	        }
	    };
	    /**
	     * @return {!K} The maximum key in the tree.
	     */
	    LLRBNode.prototype.minKey = function () {
	        return this.min_().key;
	    };
	    /**
	     * @return {!K} The maximum key in the tree.
	     */
	    LLRBNode.prototype.maxKey = function () {
	        if (this.right.isEmpty()) {
	            return this.key;
	        } else {
	            return this.right.maxKey();
	        }
	    };
	    /**
	     *
	     * @param {!Object} key Key to insert.
	     * @param {!Object} value Value to insert.
	     * @param {Comparator} comparator Comparator.
	     * @return {!LLRBNode} New tree, with the key/value added.
	     */
	    LLRBNode.prototype.insert = function (key, value, comparator) {
	        var cmp, n;
	        n = this;
	        cmp = comparator(key, n.key);
	        if (cmp < 0) {
	            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);
	        } else if (cmp === 0) {
	            n = n.copy(null, value, null, null, null);
	        } else {
	            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));
	        }
	        return n.fixUp_();
	    };
	    /**
	     * @private
	     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.
	     */
	    LLRBNode.prototype.removeMin_ = function () {
	        if (this.left.isEmpty()) {
	            return SortedMap.EMPTY_NODE;
	        }
	        var n = this;
	        if (!n.left.isRed_() && !n.left.left.isRed_()) n = n.moveRedLeft_();
	        n = n.copy(null, null, null, n.left.removeMin_(), null);
	        return n.fixUp_();
	    };
	    /**
	     * @param {!Object} key The key of the item to remove.
	     * @param {Comparator} comparator Comparator.
	     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.
	     */
	    LLRBNode.prototype.remove = function (key, comparator) {
	        var n, smallest;
	        n = this;
	        if (comparator(key, n.key) < 0) {
	            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {
	                n = n.moveRedLeft_();
	            }
	            n = n.copy(null, null, null, n.left.remove(key, comparator), null);
	        } else {
	            if (n.left.isRed_()) n = n.rotateRight_();
	            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {
	                n = n.moveRedRight_();
	            }
	            if (comparator(key, n.key) === 0) {
	                if (n.right.isEmpty()) {
	                    return SortedMap.EMPTY_NODE;
	                } else {
	                    smallest = n.right.min_();
	                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());
	                }
	            }
	            n = n.copy(null, null, null, null, n.right.remove(key, comparator));
	        }
	        return n.fixUp_();
	    };
	    /**
	     * @private
	     * @return {boolean} Whether this is a RED node.
	     */
	    LLRBNode.prototype.isRed_ = function () {
	        return this.color;
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree after performing any needed rotations.
	     */
	    LLRBNode.prototype.fixUp_ = function () {
	        var n = this;
	        if (n.right.isRed_() && !n.left.isRed_()) n = n.rotateLeft_();
	        if (n.left.isRed_() && n.left.left.isRed_()) n = n.rotateRight_();
	        if (n.left.isRed_() && n.right.isRed_()) n = n.colorFlip_();
	        return n;
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree, after moveRedLeft.
	     */
	    LLRBNode.prototype.moveRedLeft_ = function () {
	        var n = this.colorFlip_();
	        if (n.right.left.isRed_()) {
	            n = n.copy(null, null, null, null, n.right.rotateRight_());
	            n = n.rotateLeft_();
	            n = n.colorFlip_();
	        }
	        return n;
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree, after moveRedRight.
	     */
	    LLRBNode.prototype.moveRedRight_ = function () {
	        var n = this.colorFlip_();
	        if (n.left.left.isRed_()) {
	            n = n.rotateRight_();
	            n = n.colorFlip_();
	        }
	        return n;
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree, after rotateLeft.
	     */
	    LLRBNode.prototype.rotateLeft_ = function () {
	        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);
	        return this.right.copy(null, null, this.color, nl, null);
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree, after rotateRight.
	     */
	    LLRBNode.prototype.rotateRight_ = function () {
	        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);
	        return this.left.copy(null, null, this.color, null, nr);
	    };
	    /**
	     * @private
	     * @return {!LLRBNode} New tree, after colorFlip.
	     */
	    LLRBNode.prototype.colorFlip_ = function () {
	        var left = this.left.copy(null, null, !this.left.color, null, null);
	        var right = this.right.copy(null, null, !this.right.color, null, null);
	        return this.copy(null, null, !this.color, left, right);
	    };
	    /**
	     * For testing.
	     *
	     * @private
	     * @return {boolean} True if all is well.
	     */
	    LLRBNode.prototype.checkMaxDepth_ = function () {
	        var blackDepth = this.check_();
	        return Math.pow(2.0, blackDepth) <= this.count() + 1;
	    };
	    /**
	     * @private
	     * @return {number} Not sure what this returns exactly. :-).
	     */
	    LLRBNode.prototype.check_ = function () {
	        var blackDepth;
	        if (this.isRed_() && this.left.isRed_()) {
	            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');
	        }
	        if (this.right.isRed_()) {
	            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');
	        }
	        blackDepth = this.left.check_();
	        if (blackDepth !== this.right.check_()) {
	            throw new Error('Black depths differ');
	        } else {
	            return blackDepth + (this.isRed_() ? 0 : 1);
	        }
	    };
	    LLRBNode.RED = true;
	    LLRBNode.BLACK = false;
	    return LLRBNode;
	}();
	exports.LLRBNode = LLRBNode;
	/**
	 * Represents an empty node (a leaf node in the Red-Black Tree).
	 */

	var LLRBEmptyNode = /** @class */function () {
	    function LLRBEmptyNode() {}
	    /**
	     * Returns a copy of the current node.
	     *
	     * @return {!LLRBEmptyNode} The node copy.
	     */
	    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {
	        return this;
	    };
	    /**
	     * Returns a copy of the tree, with the specified key/value added.
	     *
	     * @param {!K} key Key to be added.
	     * @param {!V} value Value to be added.
	     * @param {Comparator} comparator Comparator.
	     * @return {!LLRBNode} New tree, with item added.
	     */
	    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {
	        return new LLRBNode(key, value, null);
	    };
	    /**
	     * Returns a copy of the tree, with the specified key removed.
	     *
	     * @param {!K} key The key to remove.
	     * @param {Comparator} comparator Comparator.
	     * @return {!LLRBEmptyNode} New tree, with item removed.
	     */
	    LLRBEmptyNode.prototype.remove = function (key, comparator) {
	        return this;
	    };
	    /**
	     * @return {number} The total number of nodes in the tree.
	     */
	    LLRBEmptyNode.prototype.count = function () {
	        return 0;
	    };
	    /**
	     * @return {boolean} True if the tree is empty.
	     */
	    LLRBEmptyNode.prototype.isEmpty = function () {
	        return true;
	    };
	    /**
	     * Traverses the tree in key order and calls the specified action function
	     * for each node.
	     *
	     * @param {function(!K, !V):*} action Callback function to be called for each
	     * node.  If it returns true, traversal is aborted.
	     * @return {boolean} True if traversal was aborted.
	     */
	    LLRBEmptyNode.prototype.inorderTraversal = function (action) {
	        return false;
	    };
	    /**
	     * Traverses the tree in reverse key order and calls the specified action function
	     * for each node.
	     *
	     * @param {function(!K, !V)} action Callback function to be called for each
	     * node.  If it returns true, traversal is aborted.
	     * @return {boolean} True if traversal was aborted.
	     */
	    LLRBEmptyNode.prototype.reverseTraversal = function (action) {
	        return false;
	    };
	    /**
	     * @return {null}
	     */
	    LLRBEmptyNode.prototype.minKey = function () {
	        return null;
	    };
	    /**
	     * @return {null}
	     */
	    LLRBEmptyNode.prototype.maxKey = function () {
	        return null;
	    };
	    /**
	     * @private
	     * @return {number} Not sure what this returns exactly. :-).
	     */
	    LLRBEmptyNode.prototype.check_ = function () {
	        return 0;
	    };
	    /**
	     * @private
	     * @return {boolean} Whether this node is red.
	     */
	    LLRBEmptyNode.prototype.isRed_ = function () {
	        return false;
	    };
	    return LLRBEmptyNode;
	}();
	exports.LLRBEmptyNode = LLRBEmptyNode;
	/**
	 * An immutable sorted map implementation, based on a Left-leaning Red-Black
	 * tree.
	 */

	var SortedMap = /** @class */function () {
	    /**
	     * @template K, V
	     * @param {function(K, K):number} comparator_ Key comparator.
	     * @param {LLRBNode=} root_ (Optional) Root node for the map.
	     */
	    function SortedMap(comparator_, root_) {
	        if (root_ === void 0) {
	            root_ = SortedMap.EMPTY_NODE;
	        }
	        this.comparator_ = comparator_;
	        this.root_ = root_;
	    }
	    /**
	     * Returns a copy of the map, with the specified key/value added or replaced.
	     * (TODO: We should perhaps rename this method to 'put')
	     *
	     * @param {!K} key Key to be added.
	     * @param {!V} value Value to be added.
	     * @return {!SortedMap.<K, V>} New map, with item added.
	     */
	    SortedMap.prototype.insert = function (key, value) {
	        return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));
	    };
	    /**
	     * Returns a copy of the map, with the specified key removed.
	     *
	     * @param {!K} key The key to remove.
	     * @return {!SortedMap.<K, V>} New map, with item removed.
	     */
	    SortedMap.prototype.remove = function (key) {
	        return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));
	    };
	    /**
	     * Returns the value of the node with the given key, or null.
	     *
	     * @param {!K} key The key to look up.
	     * @return {?V} The value of the node with the given key, or null if the
	     * key doesn't exist.
	     */
	    SortedMap.prototype.get = function (key) {
	        var cmp;
	        var node = this.root_;
	        while (!node.isEmpty()) {
	            cmp = this.comparator_(key, node.key);
	            if (cmp === 0) {
	                return node.value;
	            } else if (cmp < 0) {
	                node = node.left;
	            } else if (cmp > 0) {
	                node = node.right;
	            }
	        }
	        return null;
	    };
	    /**
	     * Returns the key of the item *before* the specified key, or null if key is the first item.
	     * @param {K} key The key to find the predecessor of
	     * @return {?K} The predecessor key.
	     */
	    SortedMap.prototype.getPredecessorKey = function (key) {
	        var cmp,
	            node = this.root_,
	            rightParent = null;
	        while (!node.isEmpty()) {
	            cmp = this.comparator_(key, node.key);
	            if (cmp === 0) {
	                if (!node.left.isEmpty()) {
	                    node = node.left;
	                    while (!node.right.isEmpty()) {
	                        node = node.right;
	                    }return node.key;
	                } else if (rightParent) {
	                    return rightParent.key;
	                } else {
	                    return null; // first item.
	                }
	            } else if (cmp < 0) {
	                node = node.left;
	            } else if (cmp > 0) {
	                rightParent = node;
	                node = node.right;
	            }
	        }
	        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');
	    };
	    /**
	     * @return {boolean} True if the map is empty.
	     */
	    SortedMap.prototype.isEmpty = function () {
	        return this.root_.isEmpty();
	    };
	    /**
	     * @return {number} The total number of nodes in the map.
	     */
	    SortedMap.prototype.count = function () {
	        return this.root_.count();
	    };
	    /**
	     * @return {?K} The minimum key in the map.
	     */
	    SortedMap.prototype.minKey = function () {
	        return this.root_.minKey();
	    };
	    /**
	     * @return {?K} The maximum key in the map.
	     */
	    SortedMap.prototype.maxKey = function () {
	        return this.root_.maxKey();
	    };
	    /**
	     * Traverses the map in key order and calls the specified action function
	     * for each key/value pair.
	     *
	     * @param {function(!K, !V):*} action Callback function to be called
	     * for each key/value pair.  If action returns true, traversal is aborted.
	     * @return {*} The first truthy value returned by action, or the last falsey
	     *   value returned by action
	     */
	    SortedMap.prototype.inorderTraversal = function (action) {
	        return this.root_.inorderTraversal(action);
	    };
	    /**
	     * Traverses the map in reverse key order and calls the specified action function
	     * for each key/value pair.
	     *
	     * @param {function(!Object, !Object)} action Callback function to be called
	     * for each key/value pair.  If action returns true, traversal is aborted.
	     * @return {*} True if the traversal was aborted.
	     */
	    SortedMap.prototype.reverseTraversal = function (action) {
	        return this.root_.reverseTraversal(action);
	    };
	    /**
	     * Returns an iterator over the SortedMap.
	     * @template T
	     * @param {(function(K, V):T)=} resultGenerator
	     * @return {SortedMapIterator.<K, V, T>} The iterator.
	     */
	    SortedMap.prototype.getIterator = function (resultGenerator) {
	        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);
	    };
	    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {
	        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);
	    };
	    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {
	        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);
	    };
	    SortedMap.prototype.getReverseIterator = function (resultGenerator) {
	        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);
	    };
	    /**
	     * Always use the same empty node, to reduce memory.
	     * @const
	     */
	    SortedMap.EMPTY_NODE = new LLRBEmptyNode();
	    return SortedMap;
	}();
	exports.SortedMap = SortedMap;
	//# sourceMappingURL=SortedMap.js.map


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.IndexMap = undefined;

	var _assert = __webpack_require__(20);

	var _childSet = __webpack_require__(54);

	var _obj = __webpack_require__(22);

	var _Node = __webpack_require__(45);

	var _PriorityIndex = __webpack_require__(46);

	var _KeyIndex = __webpack_require__(43);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var _defaultIndexMap;
	var fallbackObject = {};
	/**
	 *
	 * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes
	 * @param {Object.<string, Index>} indexSet
	 * @constructor
	 */
	var IndexMap = /** @class */function () {
	    function IndexMap(indexes_, indexSet_) {
	        this.indexes_ = indexes_;
	        this.indexSet_ = indexSet_;
	    }
	    Object.defineProperty(IndexMap, "Default", {
	        /**
	         * The default IndexMap for nodes without a priority
	         * @type {!IndexMap}
	         * @const
	         */
	        get: function get() {
	            (0, _assert.assert)(fallbackObject && _PriorityIndex.PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');
	            _defaultIndexMap = _defaultIndexMap || new IndexMap({ '.priority': fallbackObject }, { '.priority': _PriorityIndex.PRIORITY_INDEX });
	            return _defaultIndexMap;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     *
	     * @param {!string} indexKey
	     * @return {?SortedMap.<NamedNode, Node>}
	     */
	    IndexMap.prototype.get = function (indexKey) {
	        var sortedMap = (0, _obj.safeGet)(this.indexes_, indexKey);
	        if (!sortedMap) throw new Error('No index defined for ' + indexKey);
	        if (sortedMap === fallbackObject) {
	            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the
	            // regular child map
	            return null;
	        } else {
	            return sortedMap;
	        }
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @return {boolean}
	     */
	    IndexMap.prototype.hasIndex = function (indexDefinition) {
	        return (0, _obj.contains)(this.indexSet_, indexDefinition.toString());
	    };
	    /**
	     * @param {!Index} indexDefinition
	     * @param {!SortedMap.<string, !Node>} existingChildren
	     * @return {!IndexMap}
	     */
	    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {
	        (0, _assert.assert)(indexDefinition !== _KeyIndex.KEY_INDEX, "KeyIndex always exists and isn't meant to be added to the IndexMap.");
	        var childList = [];
	        var sawIndexedValue = false;
	        var iter = existingChildren.getIterator(_Node.NamedNode.Wrap);
	        var next = iter.getNext();
	        while (next) {
	            sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);
	            childList.push(next);
	            next = iter.getNext();
	        }
	        var newIndex;
	        if (sawIndexedValue) {
	            newIndex = (0, _childSet.buildChildSet)(childList, indexDefinition.getCompare());
	        } else {
	            newIndex = fallbackObject;
	        }
	        var indexName = indexDefinition.toString();
	        var newIndexSet = (0, _obj.clone)(this.indexSet_);
	        newIndexSet[indexName] = indexDefinition;
	        var newIndexes = (0, _obj.clone)(this.indexes_);
	        newIndexes[indexName] = newIndex;
	        return new IndexMap(newIndexes, newIndexSet);
	    };
	    /**
	     * Ensure that this node is properly tracked in any indexes that we're maintaining
	     * @param {!NamedNode} namedNode
	     * @param {!SortedMap.<string, !Node>} existingChildren
	     * @return {!IndexMap}
	     */
	    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {
	        var _this = this;
	        var newIndexes = (0, _obj.map)(this.indexes_, function (indexedChildren, indexName) {
	            var index = (0, _obj.safeGet)(_this.indexSet_, indexName);
	            (0, _assert.assert)(index, 'Missing index implementation for ' + indexName);
	            if (indexedChildren === fallbackObject) {
	                // Check to see if we need to index everything
	                if (index.isDefinedOn(namedNode.node)) {
	                    // We need to build this index
	                    var childList = [];
	                    var iter = existingChildren.getIterator(_Node.NamedNode.Wrap);
	                    var next = iter.getNext();
	                    while (next) {
	                        if (next.name != namedNode.name) {
	                            childList.push(next);
	                        }
	                        next = iter.getNext();
	                    }
	                    childList.push(namedNode);
	                    return (0, _childSet.buildChildSet)(childList, index.getCompare());
	                } else {
	                    // No change, this remains a fallback
	                    return fallbackObject;
	                }
	            } else {
	                var existingSnap = existingChildren.get(namedNode.name);
	                var newChildren = indexedChildren;
	                if (existingSnap) {
	                    newChildren = newChildren.remove(new _Node.NamedNode(namedNode.name, existingSnap));
	                }
	                return newChildren.insert(namedNode, namedNode.node);
	            }
	        });
	        return new IndexMap(newIndexes, this.indexSet_);
	    };
	    /**
	     * Create a new IndexMap instance with the given value removed
	     * @param {!NamedNode} namedNode
	     * @param {!SortedMap.<string, !Node>} existingChildren
	     * @return {!IndexMap}
	     */
	    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {
	        var newIndexes = (0, _obj.map)(this.indexes_, function (indexedChildren) {
	            if (indexedChildren === fallbackObject) {
	                // This is the fallback. Just return it, nothing to do in this case
	                return indexedChildren;
	            } else {
	                var existingSnap = existingChildren.get(namedNode.name);
	                if (existingSnap) {
	                    return indexedChildren.remove(new _Node.NamedNode(namedNode.name, existingSnap));
	                } else {
	                    // No record of this child
	                    return indexedChildren;
	                }
	            }
	        });
	        return new IndexMap(newIndexes, this.indexSet_);
	    };
	    return IndexMap;
	}();
	exports.IndexMap = IndexMap;
	//# sourceMappingURL=IndexMap.js.map


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.buildChildSet = undefined;

	var _SortedMap = __webpack_require__(52);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var LOG_2 = Math.log(2);
	/**
	 * @constructor
	 */
	var Base12Num = /** @class */function () {
	    /**
	     * @param {number} length
	     */
	    function Base12Num(length) {
	        var logBase2 = function logBase2(num) {
	            return parseInt(Math.log(num) / LOG_2, 10);
	        };
	        var bitMask = function bitMask(bits) {
	            return parseInt(Array(bits + 1).join('1'), 2);
	        };
	        this.count = logBase2(length + 1);
	        this.current_ = this.count - 1;
	        var mask = bitMask(this.count);
	        this.bits_ = length + 1 & mask;
	    }
	    /**
	     * @return {boolean}
	     */
	    Base12Num.prototype.nextBitIsOne = function () {
	        //noinspection JSBitwiseOperatorUsage
	        var result = !(this.bits_ & 0x1 << this.current_);
	        this.current_--;
	        return result;
	    };
	    return Base12Num;
	}();
	/**
	 * Takes a list of child nodes and constructs a SortedSet using the given comparison
	 * function
	 *
	 * Uses the algorithm described in the paper linked here:
	 * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458
	 *
	 * @template K, V
	 * @param {Array.<!NamedNode>} childList Unsorted list of children
	 * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used
	 * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's
	 *                                                        type is not NamedNode
	 * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map
	 * @return {SortedMap.<K, V>}
	 */
	var buildChildSet = exports.buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {
	    childList.sort(cmp);
	    var buildBalancedTree = function buildBalancedTree(low, high) {
	        var length = high - low;
	        var namedNode;
	        var key;
	        if (length == 0) {
	            return null;
	        } else if (length == 1) {
	            namedNode = childList[low];
	            key = keyFn ? keyFn(namedNode) : namedNode;
	            return new _SortedMap.LLRBNode(key, namedNode.node, _SortedMap.LLRBNode.BLACK, null, null);
	        } else {
	            var middle = parseInt(length / 2, 10) + low;
	            var left = buildBalancedTree(low, middle);
	            var right = buildBalancedTree(middle + 1, high);
	            namedNode = childList[middle];
	            key = keyFn ? keyFn(namedNode) : namedNode;
	            return new _SortedMap.LLRBNode(key, namedNode.node, _SortedMap.LLRBNode.BLACK, left, right);
	        }
	    };
	    var buildFrom12Array = function buildFrom12Array(base12) {
	        var node = null;
	        var root = null;
	        var index = childList.length;
	        var buildPennant = function buildPennant(chunkSize, color) {
	            var low = index - chunkSize;
	            var high = index;
	            index -= chunkSize;
	            var childTree = buildBalancedTree(low + 1, high);
	            var namedNode = childList[low];
	            var key = keyFn ? keyFn(namedNode) : namedNode;
	            attachPennant(new _SortedMap.LLRBNode(key, namedNode.node, color, null, childTree));
	        };
	        var attachPennant = function attachPennant(pennant) {
	            if (node) {
	                node.left = pennant;
	                node = pennant;
	            } else {
	                root = pennant;
	                node = pennant;
	            }
	        };
	        for (var i = 0; i < base12.count; ++i) {
	            var isOne = base12.nextBitIsOne();
	            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))
	            var chunkSize = Math.pow(2, base12.count - (i + 1));
	            if (isOne) {
	                buildPennant(chunkSize, _SortedMap.LLRBNode.BLACK);
	            } else {
	                // current == 2
	                buildPennant(chunkSize, _SortedMap.LLRBNode.BLACK);
	                buildPennant(chunkSize, _SortedMap.LLRBNode.RED);
	            }
	        }
	        return root;
	    };
	    var base12 = new Base12Num(childList.length);
	    var root = buildFrom12Array(base12);
	    return new _SortedMap.SortedMap(mapSortFn || cmp, root);
	};
	//# sourceMappingURL=childSet.js.map


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.NAME_ONLY_COMPARATOR = NAME_ONLY_COMPARATOR;
	exports.NAME_COMPARATOR = NAME_COMPARATOR;

	var _util = __webpack_require__(19);

	function NAME_ONLY_COMPARATOR(left, right) {
	    return (0, _util.nameCompare)(left.name, right.name);
	} /**
	   * Copyright 2017 Google Inc.
	   *
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   *   http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   */
	function NAME_COMPARATOR(left, right) {
	    return (0, _util.nameCompare)(left, right);
	}
	//# sourceMappingURL=comparators.js.map


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PathIndex = undefined;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _Index = __webpack_require__(44);

	var _ChildrenNode = __webpack_require__(51);

	var _Node = __webpack_require__(45);

	var _nodeFromJSON = __webpack_require__(50);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * @param {!Path} indexPath
	 * @constructor
	 * @extends {Index}
	 */
	var PathIndex = /** @class */function (_super) {
	    __extends(PathIndex, _super);
	    function PathIndex(indexPath_) {
	        var _this = _super.call(this) || this;
	        _this.indexPath_ = indexPath_;
	        (0, _assert.assert)(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', "Can't create PathIndex with empty path or .priority key");
	        return _this;
	    }
	    /**
	     * @param {!Node} snap
	     * @return {!Node}
	     * @protected
	     */
	    PathIndex.prototype.extractChild = function (snap) {
	        return snap.getChild(this.indexPath_);
	    };
	    /**
	     * @inheritDoc
	     */
	    PathIndex.prototype.isDefinedOn = function (node) {
	        return !node.getChild(this.indexPath_).isEmpty();
	    };
	    /**
	     * @inheritDoc
	     */
	    PathIndex.prototype.compare = function (a, b) {
	        var aChild = this.extractChild(a.node);
	        var bChild = this.extractChild(b.node);
	        var indexCmp = aChild.compareTo(bChild);
	        if (indexCmp === 0) {
	            return (0, _util.nameCompare)(a.name, b.name);
	        } else {
	            return indexCmp;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PathIndex.prototype.makePost = function (indexValue, name) {
	        var valueNode = (0, _nodeFromJSON.nodeFromJSON)(indexValue);
	        var node = _ChildrenNode.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);
	        return new _Node.NamedNode(name, node);
	    };
	    /**
	     * @inheritDoc
	     */
	    PathIndex.prototype.maxPost = function () {
	        var node = _ChildrenNode.ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, _ChildrenNode.MAX_NODE);
	        return new _Node.NamedNode(_util.MAX_NAME, node);
	    };
	    /**
	     * @inheritDoc
	     */
	    PathIndex.prototype.toString = function () {
	        return this.indexPath_.slice().join('/');
	    };
	    return PathIndex;
	}(_Index.Index);
	exports.PathIndex = PathIndex;
	//# sourceMappingURL=PathIndex.js.map


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ChildEventRegistration = exports.ValueEventRegistration = undefined;

	var _DataSnapshot = __webpack_require__(58);

	var _Event = __webpack_require__(59);

	var _obj = __webpack_require__(22);

	var _assert = __webpack_require__(20);

	/**
	 * Represents registration for 'value' events.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ValueEventRegistration = /** @class */function () {
	    /**
	     * @param {?function(!DataSnapshot)} callback_
	     * @param {?function(Error)} cancelCallback_
	     * @param {?Object} context_
	     */
	    function ValueEventRegistration(callback_, cancelCallback_, context_) {
	        this.callback_ = callback_;
	        this.cancelCallback_ = cancelCallback_;
	        this.context_ = context_;
	    }
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.respondsTo = function (eventType) {
	        return eventType === 'value';
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.createEvent = function (change, query) {
	        var index = query.getQueryParams().getIndex();
	        return new _Event.DataEvent('value', this, new _DataSnapshot.DataSnapshot(change.snapshotNode, query.getRef(), index));
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.getEventRunner = function (eventData) {
	        var ctx = this.context_;
	        if (eventData.getEventType() === 'cancel') {
	            (0, _assert.assert)(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');
	            var cancelCB_1 = this.cancelCallback_;
	            return function () {
	                // We know that error exists, we checked above that this is a cancel event
	                cancelCB_1.call(ctx, eventData.error);
	            };
	        } else {
	            var cb_1 = this.callback_;
	            return function () {
	                cb_1.call(ctx, eventData.snapshot);
	            };
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {
	        if (this.cancelCallback_) {
	            return new _Event.CancelEvent(this, error, path);
	        } else {
	            return null;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.matches = function (other) {
	        if (!(other instanceof ValueEventRegistration)) {
	            return false;
	        } else if (!other.callback_ || !this.callback_) {
	            // If no callback specified, we consider it to match any callback.
	            return true;
	        } else {
	            return other.callback_ === this.callback_ && other.context_ === this.context_;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ValueEventRegistration.prototype.hasAnyCallback = function () {
	        return this.callback_ !== null;
	    };
	    return ValueEventRegistration;
	}();
	exports.ValueEventRegistration = ValueEventRegistration;
	/**
	 * Represents the registration of 1 or more child_xxx events.
	 *
	 * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you
	 * register a group of callbacks together in the future.
	 *
	 * @constructor
	 * @implements {EventRegistration}
	 */

	var ChildEventRegistration = /** @class */function () {
	    /**
	     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_
	     * @param {?function(Error)} cancelCallback_
	     * @param {Object=} context_
	     */
	    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {
	        this.callbacks_ = callbacks_;
	        this.cancelCallback_ = cancelCallback_;
	        this.context_ = context_;
	    }
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.respondsTo = function (eventType) {
	        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;
	        eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;
	        return (0, _obj.contains)(this.callbacks_, eventToCheck);
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {
	        if (this.cancelCallback_) {
	            return new _Event.CancelEvent(this, error, path);
	        } else {
	            return null;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.createEvent = function (change, query) {
	        (0, _assert.assert)(change.childName != null, 'Child events should have a childName.');
	        var ref = query.getRef().child /** @type {!string} */(change.childName);
	        var index = query.getQueryParams().getIndex();
	        return new _Event.DataEvent(change.type, this, new _DataSnapshot.DataSnapshot(change.snapshotNode, ref, index), change.prevName);
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.getEventRunner = function (eventData) {
	        var ctx = this.context_;
	        if (eventData.getEventType() === 'cancel') {
	            (0, _assert.assert)(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');
	            var cancelCB_2 = this.cancelCallback_;
	            return function () {
	                // We know that error exists, we checked above that this is a cancel event
	                cancelCB_2.call(ctx, eventData.error);
	            };
	        } else {
	            var cb_2 = this.callbacks_[eventData.eventType];
	            return function () {
	                cb_2.call(ctx, eventData.snapshot, eventData.prevName);
	            };
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.matches = function (other) {
	        if (other instanceof ChildEventRegistration) {
	            if (!this.callbacks_ || !other.callbacks_) {
	                return true;
	            } else if (this.context_ === other.context_) {
	                var otherCount = (0, _obj.getCount)(other.callbacks_);
	                var thisCount = (0, _obj.getCount)(this.callbacks_);
	                if (otherCount === thisCount) {
	                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.
	                    //  If event types don't match, not a match
	                    // If count is not 1, exact match across all
	                    if (otherCount === 1) {
	                        var otherKey /** @type {!string} */ = (0, _obj.getAnyKey)(other.callbacks_);
	                        var thisKey /** @type {!string} */ = (0, _obj.getAnyKey)(this.callbacks_);
	                        return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);
	                    } else {
	                        // Exact match on each key.
	                        return (0, _obj.every)(this.callbacks_, function (eventType, cb) {
	                            return other.callbacks_[eventType] === cb;
	                        });
	                    }
	                }
	            }
	        }
	        return false;
	    };
	    /**
	     * @inheritDoc
	     */
	    ChildEventRegistration.prototype.hasAnyCallback = function () {
	        return this.callbacks_ !== null;
	    };
	    return ChildEventRegistration;
	}();
	exports.ChildEventRegistration = ChildEventRegistration;
	//# sourceMappingURL=EventRegistration.js.map


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DataSnapshot = undefined;

	var _validation = __webpack_require__(38);

	var _validation2 = __webpack_require__(39);

	var _Path = __webpack_require__(33);

	var _PriorityIndex = __webpack_require__(46);

	/**
	 * Class representing a firebase data snapshot.  It wraps a SnapshotNode and
	 * surfaces the public methods (val, forEach, etc.) we want to expose.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var DataSnapshot = /** @class */function () {
	    /**
	     * @param {!Node} node_ A SnapshotNode to wrap.
	     * @param {!Reference} ref_ The ref of the location this snapshot came from.
	     * @param {!Index} index_ The iteration order for this snapshot
	     */
	    function DataSnapshot(node_, ref_, index_) {
	        this.node_ = node_;
	        this.ref_ = ref_;
	        this.index_ = index_;
	    }
	    /**
	     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is
	     * empty.
	     *
	     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
	     */
	    DataSnapshot.prototype.val = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.val', 0, 0, arguments.length);
	        return this.node_.val();
	    };
	    /**
	     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting
	     * the entire node contents.
	     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.
	     */
	    DataSnapshot.prototype.exportVal = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.exportVal', 0, 0, arguments.length);
	        return this.node_.val(true);
	    };
	    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary
	    // for end-users
	    DataSnapshot.prototype.toJSON = function () {
	        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content
	        (0, _validation.validateArgCount)('DataSnapshot.toJSON', 0, 1, arguments.length);
	        return this.exportVal();
	    };
	    /**
	     * Returns whether the snapshot contains a non-null value.
	     *
	     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.
	     */
	    DataSnapshot.prototype.exists = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.exists', 0, 0, arguments.length);
	        return !this.node_.isEmpty();
	    };
	    /**
	     * Returns a DataSnapshot of the specified child node's contents.
	     *
	     * @param {!string} childPathString Path to a child.
	     * @return {!DataSnapshot} DataSnapshot for child node.
	     */
	    DataSnapshot.prototype.child = function (childPathString) {
	        (0, _validation.validateArgCount)('DataSnapshot.child', 0, 1, arguments.length);
	        // Ensure the childPath is a string (can be a number)
	        childPathString = String(childPathString);
	        (0, _validation2.validatePathString)('DataSnapshot.child', 1, childPathString, false);
	        var childPath = new _Path.Path(childPathString);
	        var childRef = this.ref_.child(childPath);
	        return new DataSnapshot(this.node_.getChild(childPath), childRef, _PriorityIndex.PRIORITY_INDEX);
	    };
	    /**
	     * Returns whether the snapshot contains a child at the specified path.
	     *
	     * @param {!string} childPathString Path to a child.
	     * @return {boolean} Whether the child exists.
	     */
	    DataSnapshot.prototype.hasChild = function (childPathString) {
	        (0, _validation.validateArgCount)('DataSnapshot.hasChild', 1, 1, arguments.length);
	        (0, _validation2.validatePathString)('DataSnapshot.hasChild', 1, childPathString, false);
	        var childPath = new _Path.Path(childPathString);
	        return !this.node_.getChild(childPath).isEmpty();
	    };
	    /**
	     * Returns the priority of the object, or null if no priority was set.
	     *
	     * @return {string|number|null} The priority.
	     */
	    DataSnapshot.prototype.getPriority = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.getPriority', 0, 0, arguments.length);
	        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)
	        return this.node_.getPriority().val();
	    };
	    /**
	     * Iterates through child nodes and calls the specified action for each one.
	     *
	     * @param {function(!DataSnapshot)} action Callback function to be called
	     * for each child.
	     * @return {boolean} True if forEach was canceled by action returning true for
	     * one of the child nodes.
	     */
	    DataSnapshot.prototype.forEach = function (action) {
	        var _this = this;
	        (0, _validation.validateArgCount)('DataSnapshot.forEach', 1, 1, arguments.length);
	        (0, _validation.validateCallback)('DataSnapshot.forEach', 1, action, false);
	        if (this.node_.isLeafNode()) return false;
	        var childrenNode = this.node_;
	        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...
	        return !!childrenNode.forEachChild(this.index_, function (key, node) {
	            return action(new DataSnapshot(node, _this.ref_.child(key), _PriorityIndex.PRIORITY_INDEX));
	        });
	    };
	    /**
	     * Returns whether this DataSnapshot has children.
	     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.
	     */
	    DataSnapshot.prototype.hasChildren = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.hasChildren', 0, 0, arguments.length);
	        if (this.node_.isLeafNode()) return false;else return !this.node_.isEmpty();
	    };
	    Object.defineProperty(DataSnapshot.prototype, "key", {
	        get: function get() {
	            return this.ref_.getKey();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Returns the number of children for this DataSnapshot.
	     * @return {number} The number of children that this DataSnapshot contains.
	     */
	    DataSnapshot.prototype.numChildren = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.numChildren', 0, 0, arguments.length);
	        return this.node_.numChildren();
	    };
	    /**
	     * @return {Reference} The Firebase reference for the location this snapshot's data came from.
	     */
	    DataSnapshot.prototype.getRef = function () {
	        (0, _validation.validateArgCount)('DataSnapshot.ref', 0, 0, arguments.length);
	        return this.ref_;
	    };
	    Object.defineProperty(DataSnapshot.prototype, "ref", {
	        get: function get() {
	            return this.getRef();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return DataSnapshot;
	}();
	exports.DataSnapshot = DataSnapshot;
	//# sourceMappingURL=DataSnapshot.js.map


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CancelEvent = exports.DataEvent = undefined;

	var _json = __webpack_require__(27);

	/**
	 * Encapsulates the data needed to raise an event
	 * @implements {Event}
	 */
	var DataEvent = /** @class */function () {
	    /**
	     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed
	     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided
	     * @param {!DataSnapshot} snapshot The data backing the event
	     * @param {?string=} prevName Optional, the name of the previous child for child_* events.
	     */
	    function DataEvent(eventType, eventRegistration, snapshot, prevName) {
	        this.eventType = eventType;
	        this.eventRegistration = eventRegistration;
	        this.snapshot = snapshot;
	        this.prevName = prevName;
	    }
	    /**
	     * @inheritDoc
	     */
	    DataEvent.prototype.getPath = function () {
	        var ref = this.snapshot.getRef();
	        if (this.eventType === 'value') {
	            return ref.path;
	        } else {
	            return ref.getParent().path;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    DataEvent.prototype.getEventType = function () {
	        return this.eventType;
	    };
	    /**
	     * @inheritDoc
	     */
	    DataEvent.prototype.getEventRunner = function () {
	        return this.eventRegistration.getEventRunner(this);
	    };
	    /**
	     * @inheritDoc
	     */
	    DataEvent.prototype.toString = function () {
	        return this.getPath().toString() + ':' + this.eventType + ':' + (0, _json.stringify)(this.snapshot.exportVal());
	    };
	    return DataEvent;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.DataEvent = DataEvent;

	var CancelEvent = /** @class */function () {
	    /**
	     * @param {EventRegistration} eventRegistration
	     * @param {Error} error
	     * @param {!Path} path
	     */
	    function CancelEvent(eventRegistration, error, path) {
	        this.eventRegistration = eventRegistration;
	        this.error = error;
	        this.path = path;
	    }
	    /**
	     * @inheritDoc
	     */
	    CancelEvent.prototype.getPath = function () {
	        return this.path;
	    };
	    /**
	     * @inheritDoc
	     */
	    CancelEvent.prototype.getEventType = function () {
	        return 'cancel';
	    };
	    /**
	     * @inheritDoc
	     */
	    CancelEvent.prototype.getEventRunner = function () {
	        return this.eventRegistration.getEventRunner(this);
	    };
	    /**
	     * @inheritDoc
	     */
	    CancelEvent.prototype.toString = function () {
	        return this.path.toString() + ':cancel';
	    };
	    return CancelEvent;
	}();
	exports.CancelEvent = CancelEvent;
	//# sourceMappingURL=Event.js.map


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Repo = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _ServerValues = __webpack_require__(61);

	var _nodeFromJSON = __webpack_require__(50);

	var _Path = __webpack_require__(33);

	var _SparseSnapshotTree = __webpack_require__(62);

	var _SyncTree = __webpack_require__(64);

	var _SnapshotHolder = __webpack_require__(83);

	var _json = __webpack_require__(27);

	var _util = __webpack_require__(19);

	var _obj = __webpack_require__(22);

	var _AuthTokenProvider = __webpack_require__(84);

	var _StatsManager = __webpack_require__(85);

	var _StatsReporter = __webpack_require__(87);

	var _StatsListener = __webpack_require__(88);

	var _EventQueue = __webpack_require__(89);

	var _PersistentConnection = __webpack_require__(90);

	var _ReadonlyRestClient = __webpack_require__(101);

	var _Database = __webpack_require__(18);

	var INTERRUPT_REASON = 'repo_interrupt';
	/**
	 * A connection to a single data repository.
	 */
	var Repo = /** @class */function () {
	    /**
	     * @param {!RepoInfo} repoInfo_
	     * @param {boolean} forceRestClient
	     * @param {!FirebaseApp} app
	     */
	    function Repo(repoInfo_, forceRestClient, app) {
	        var _this = this;
	        this.repoInfo_ = repoInfo_;
	        this.app = app;
	        this.dataUpdateCount = 0;
	        this.statsListener_ = null;
	        this.eventQueue_ = new _EventQueue.EventQueue();
	        this.nextWriteId_ = 1;
	        this.interceptServerDataCallback_ = null;
	        // A list of data pieces and paths to be set when this client disconnects.
	        this.onDisconnect_ = new _SparseSnapshotTree.SparseSnapshotTree();
	        /**
	         * TODO: This should be @private but it's used by test_access.js and internal.js
	         * @type {?PersistentConnection}
	         */
	        this.persistentConnection_ = null;
	        /** @type {!AuthTokenProvider} */
	        var authTokenProvider = new _AuthTokenProvider.AuthTokenProvider(app);
	        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo_);
	        if (forceRestClient || (0, _util.beingCrawled)()) {
	            this.server_ = new _ReadonlyRestClient.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);
	            // Minor hack: Fire onConnect immediately, since there's no actual connection.
	            setTimeout(this.onConnectStatus_.bind(this, true), 0);
	        } else {
	            var authOverride = app.options['databaseAuthVariableOverride'];
	            // Validate authOverride
	            if (typeof authOverride !== 'undefined' && authOverride !== null) {
	                if ((typeof authOverride === 'undefined' ? 'undefined' : _typeof(authOverride)) !== 'object') {
	                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');
	                }
	                try {
	                    (0, _json.stringify)(authOverride);
	                } catch (e) {
	                    throw new Error('Invalid authOverride provided: ' + e);
	                }
	            }
	            this.persistentConnection_ = new _PersistentConnection.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);
	            this.server_ = this.persistentConnection_;
	        }
	        authTokenProvider.addTokenChangeListener(function (token) {
	            _this.server_.refreshAuthToken(token);
	        });
	        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),
	        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.
	        this.statsReporter_ = _StatsManager.StatsManager.getOrCreateReporter(repoInfo_, function () {
	            return new _StatsReporter.StatsReporter(_this.stats_, _this.server_);
	        });
	        this.transactions_init_();
	        // Used for .info.
	        this.infoData_ = new _SnapshotHolder.SnapshotHolder();
	        this.infoSyncTree_ = new _SyncTree.SyncTree({
	            startListening: function startListening(query, tag, currentHashFn, onComplete) {
	                var infoEvents = [];
	                var node = _this.infoData_.getNode(query.path);
	                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events
	                // on initial data...
	                if (!node.isEmpty()) {
	                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);
	                    setTimeout(function () {
	                        onComplete('ok');
	                    }, 0);
	                }
	                return infoEvents;
	            },
	            stopListening: function stopListening() {}
	        });
	        this.updateInfo_('connected', false);
	        this.serverSyncTree_ = new _SyncTree.SyncTree({
	            startListening: function startListening(query, tag, currentHashFn, onComplete) {
	                _this.server_.listen(query, currentHashFn, tag, function (status, data) {
	                    var events = onComplete(status, data);
	                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);
	                });
	                // No synchronous events for network-backed sync trees
	                return [];
	            },
	            stopListening: function stopListening(query, tag) {
	                _this.server_.unlisten(query, tag);
	            }
	        });
	    }
	    /**
	     * @return {string}  The URL corresponding to the root of this Firebase.
	     */
	    Repo.prototype.toString = function () {
	        return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;
	    };
	    /**
	     * @return {!string} The namespace represented by the repo.
	     */
	    Repo.prototype.name = function () {
	        return this.repoInfo_.namespace;
	    };
	    /**
	     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.
	     */
	    Repo.prototype.serverTime = function () {
	        var offsetNode = this.infoData_.getNode(new _Path.Path('.info/serverTimeOffset'));
	        var offset = offsetNode.val() || 0;
	        return new Date().getTime() + offset;
	    };
	    /**
	     * Generate ServerValues using some variables from the repo object.
	     * @return {!Object}
	     */
	    Repo.prototype.generateServerValues = function () {
	        return (0, _ServerValues.generateWithValues)({
	            timestamp: this.serverTime()
	        });
	    };
	    /**
	     * Called by realtime when we get new messages from the server.
	     *
	     * @private
	     * @param {string} pathString
	     * @param {*} data
	     * @param {boolean} isMerge
	     * @param {?number} tag
	     */
	    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {
	        // For testing.
	        this.dataUpdateCount++;
	        var path = new _Path.Path(pathString);
	        data = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(pathString, data) : data;
	        var events = [];
	        if (tag) {
	            if (isMerge) {
	                var taggedChildren = (0, _obj.map)(data, function (raw) {
	                    return (0, _nodeFromJSON.nodeFromJSON)(raw);
	                });
	                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);
	            } else {
	                var taggedSnap = (0, _nodeFromJSON.nodeFromJSON)(data);
	                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);
	            }
	        } else if (isMerge) {
	            var changedChildren = (0, _obj.map)(data, function (raw) {
	                return (0, _nodeFromJSON.nodeFromJSON)(raw);
	            });
	            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);
	        } else {
	            var snap = (0, _nodeFromJSON.nodeFromJSON)(data);
	            events = this.serverSyncTree_.applyServerOverwrite(path, snap);
	        }
	        var affectedPath = path;
	        if (events.length > 0) {
	            // Since we have a listener outstanding for each transaction, receiving any events
	            // is a proxy for some change having occurred.
	            affectedPath = this.rerunTransactions_(path);
	        }
	        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);
	    };
	    /**
	     * TODO: This should be @private but it's used by test_access.js and internal.js
	     * @param {?function(!string, *):*} callback
	     * @private
	     */
	    Repo.prototype.interceptServerData_ = function (callback) {
	        this.interceptServerDataCallback_ = callback;
	    };
	    /**
	     * @param {!boolean} connectStatus
	     * @private
	     */
	    Repo.prototype.onConnectStatus_ = function (connectStatus) {
	        this.updateInfo_('connected', connectStatus);
	        if (connectStatus === false) {
	            this.runOnDisconnectEvents_();
	        }
	    };
	    /**
	     * @param {!Object} updates
	     * @private
	     */
	    Repo.prototype.onServerInfoUpdate_ = function (updates) {
	        var _this = this;
	        (0, _util.each)(updates, function (value, key) {
	            _this.updateInfo_(key, value);
	        });
	    };
	    /**
	     *
	     * @param {!string} pathString
	     * @param {*} value
	     * @private
	     */
	    Repo.prototype.updateInfo_ = function (pathString, value) {
	        var path = new _Path.Path('/.info/' + pathString);
	        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value);
	        this.infoData_.updateSnapshot(path, newNode);
	        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);
	        this.eventQueue_.raiseEventsForChangedPath(path, events);
	    };
	    /**
	     * @return {!number}
	     * @private
	     */
	    Repo.prototype.getNextWriteId_ = function () {
	        return this.nextWriteId_++;
	    };
	    /**
	     * @param {!Path} path
	     * @param {*} newVal
	     * @param {number|string|null} newPriority
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {
	        var _this = this;
	        this.log_('set', {
	            path: path.toString(),
	            value: newVal,
	            priority: newPriority
	        });
	        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or
	        // (b) store unresolved paths on JSON parse
	        var serverValues = this.generateServerValues();
	        var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(newVal, newPriority);
	        var newNode = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);
	        var writeId = this.getNextWriteId_();
	        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);
	        this.eventQueue_.queueEvents(events);
	        this.server_.put(path.toString(), newNodeUnresolved.val( /*export=*/true), function (status, errorReason) {
	            var success = status === 'ok';
	            if (!success) {
	                (0, _util.warn)('set at ' + path + ' failed: ' + status);
	            }
	            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);
	            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);
	            _this.callOnCompleteCallback(onComplete, status, errorReason);
	        });
	        var affectedPath = this.abortTransactions_(path);
	        this.rerunTransactions_(affectedPath);
	        // We queued the events above, so just flush the queue here
	        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);
	    };
	    /**
	     * @param {!Path} path
	     * @param {!Object} childrenToMerge
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.update = function (path, childrenToMerge, onComplete) {
	        var _this = this;
	        this.log_('update', { path: path.toString(), value: childrenToMerge });
	        // Start with our existing data and merge each child into it.
	        var empty = true;
	        var serverValues = this.generateServerValues();
	        var changedChildren = {};
	        (0, _obj.forEach)(childrenToMerge, function (changedKey, changedValue) {
	            empty = false;
	            var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(changedValue);
	            changedChildren[changedKey] = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);
	        });
	        if (!empty) {
	            var writeId_1 = this.getNextWriteId_();
	            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);
	            this.eventQueue_.queueEvents(events);
	            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {
	                var success = status === 'ok';
	                if (!success) {
	                    (0, _util.warn)('update at ' + path + ' failed: ' + status);
	                }
	                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);
	                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;
	                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);
	                _this.callOnCompleteCallback(onComplete, status, errorReason);
	            });
	            (0, _obj.forEach)(childrenToMerge, function (changedPath) {
	                var affectedPath = _this.abortTransactions_(path.child(changedPath));
	                _this.rerunTransactions_(affectedPath);
	            });
	            // We queued the events above, so just flush the queue here
	            this.eventQueue_.raiseEventsForChangedPath(path, []);
	        } else {
	            (0, _util.log)("update() called with empty data.  Don't do anything.");
	            this.callOnCompleteCallback(onComplete, 'ok');
	        }
	    };
	    /**
	     * Applies all of the changes stored up in the onDisconnect_ tree.
	     * @private
	     */
	    Repo.prototype.runOnDisconnectEvents_ = function () {
	        var _this = this;
	        this.log_('onDisconnectEvents');
	        var serverValues = this.generateServerValues();
	        var resolvedOnDisconnectTree = (0, _ServerValues.resolveDeferredValueTree)(this.onDisconnect_, serverValues);
	        var events = [];
	        resolvedOnDisconnectTree.forEachTree(_Path.Path.Empty, function (path, snap) {
	            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));
	            var affectedPath = _this.abortTransactions_(path);
	            _this.rerunTransactions_(affectedPath);
	        });
	        this.onDisconnect_ = new _SparseSnapshotTree.SparseSnapshotTree();
	        this.eventQueue_.raiseEventsForChangedPath(_Path.Path.Empty, events);
	    };
	    /**
	     * @param {!Path} path
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.onDisconnectCancel = function (path, onComplete) {
	        var _this = this;
	        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {
	            if (status === 'ok') {
	                _this.onDisconnect_.forget(path);
	            }
	            _this.callOnCompleteCallback(onComplete, status, errorReason);
	        });
	    };
	    /**
	     * @param {!Path} path
	     * @param {*} value
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {
	        var _this = this;
	        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value);
	        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {
	            if (status === 'ok') {
	                _this.onDisconnect_.remember(path, newNode);
	            }
	            _this.callOnCompleteCallback(onComplete, status, errorReason);
	        });
	    };
	    /**
	     * @param {!Path} path
	     * @param {*} value
	     * @param {*} priority
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {
	        var _this = this;
	        var newNode = (0, _nodeFromJSON.nodeFromJSON)(value, priority);
	        this.server_.onDisconnectPut(path.toString(), newNode.val( /*export=*/true), function (status, errorReason) {
	            if (status === 'ok') {
	                _this.onDisconnect_.remember(path, newNode);
	            }
	            _this.callOnCompleteCallback(onComplete, status, errorReason);
	        });
	    };
	    /**
	     * @param {!Path} path
	     * @param {*} childrenToMerge
	     * @param {?function(?Error, *=)} onComplete
	     */
	    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {
	        var _this = this;
	        if ((0, _obj.isEmpty)(childrenToMerge)) {
	            (0, _util.log)("onDisconnect().update() called with empty data.  Don't do anything.");
	            this.callOnCompleteCallback(onComplete, 'ok');
	            return;
	        }
	        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {
	            if (status === 'ok') {
	                (0, _obj.forEach)(childrenToMerge, function (childName, childNode) {
	                    var newChildNode = (0, _nodeFromJSON.nodeFromJSON)(childNode);
	                    _this.onDisconnect_.remember(path.child(childName), newChildNode);
	                });
	            }
	            _this.callOnCompleteCallback(onComplete, status, errorReason);
	        });
	    };
	    /**
	     * @param {!Query} query
	     * @param {!EventRegistration} eventRegistration
	     */
	    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {
	        var events;
	        if (query.path.getFront() === '.info') {
	            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);
	        } else {
	            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);
	        }
	        this.eventQueue_.raiseEventsAtPath(query.path, events);
	    };
	    /**
	     * @param {!Query} query
	     * @param {?EventRegistration} eventRegistration
	     */
	    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {
	        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof
	        // a little bit by handling the return values anyways.
	        var events;
	        if (query.path.getFront() === '.info') {
	            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);
	        } else {
	            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);
	        }
	        this.eventQueue_.raiseEventsAtPath(query.path, events);
	    };
	    Repo.prototype.interrupt = function () {
	        if (this.persistentConnection_) {
	            this.persistentConnection_.interrupt(INTERRUPT_REASON);
	        }
	    };
	    Repo.prototype.resume = function () {
	        if (this.persistentConnection_) {
	            this.persistentConnection_.resume(INTERRUPT_REASON);
	        }
	    };
	    Repo.prototype.stats = function (showDelta) {
	        if (showDelta === void 0) {
	            showDelta = false;
	        }
	        if (typeof console === 'undefined') return;
	        var stats;
	        if (showDelta) {
	            if (!this.statsListener_) this.statsListener_ = new _StatsListener.StatsListener(this.stats_);
	            stats = this.statsListener_.get();
	        } else {
	            stats = this.stats_.get();
	        }
	        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {
	            return Math.max(currentValue.length, previousValue);
	        }, 0);
	        (0, _obj.forEach)(stats, function (stat, value) {
	            // pad stat names to be the same length (plus 2 extra spaces).
	            for (var i = stat.length; i < longestName + 2; i++) {
	                stat += ' ';
	            }console.log(stat + value);
	        });
	    };
	    Repo.prototype.statsIncrementCounter = function (metric) {
	        this.stats_.incrementCounter(metric);
	        this.statsReporter_.includeStat(metric);
	    };
	    /**
	     * @param {...*} var_args
	     * @private
	     */
	    Repo.prototype.log_ = function () {
	        var var_args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            var_args[_i] = arguments[_i];
	        }
	        var prefix = '';
	        if (this.persistentConnection_) {
	            prefix = this.persistentConnection_.id + ':';
	        }
	        _util.log.apply(void 0, [prefix].concat(var_args));
	    };
	    /**
	     * @param {?function(?Error, *=)} callback
	     * @param {!string} status
	     * @param {?string=} errorReason
	     */
	    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {
	        if (callback) {
	            (0, _util.exceptionGuard)(function () {
	                if (status == 'ok') {
	                    callback(null);
	                } else {
	                    var code = (status || 'error').toUpperCase();
	                    var message = code;
	                    if (errorReason) message += ': ' + errorReason;
	                    var error = new Error(message);
	                    error.code = code;
	                    callback(error);
	                }
	            });
	        }
	    };
	    Object.defineProperty(Repo.prototype, "database", {
	        get: function get() {
	            return this.__database || (this.__database = new _Database.Database(this));
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Repo;
	}();
	exports.Repo = Repo;
	//# sourceMappingURL=Repo.js.map


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.resolveDeferredValueSnapshot = exports.resolveDeferredValueTree = exports.resolveDeferredValue = exports.generateWithValues = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _assert = __webpack_require__(20);

	var _Path = __webpack_require__(33);

	var _SparseSnapshotTree = __webpack_require__(62);

	var _LeafNode = __webpack_require__(47);

	var _nodeFromJSON = __webpack_require__(50);

	var _PriorityIndex = __webpack_require__(46);

	/**
	 * Generate placeholders for deferred values.
	 * @param {?Object} values
	 * @return {!Object}
	 */
	var generateWithValues = exports.generateWithValues = function generateWithValues(values) {
	    values = values || {};
	    values['timestamp'] = values['timestamp'] || new Date().getTime();
	    return values;
	};
	/**
	 * Value to use when firing local events. When writing server values, fire
	 * local events with an approximate value, otherwise return value as-is.
	 * @param {(Object|string|number|boolean)} value
	 * @param {!Object} serverValues
	 * @return {!(string|number|boolean)}
	 */
	var resolveDeferredValue = exports.resolveDeferredValue = function resolveDeferredValue(value, serverValues) {
	    if (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
	        return value;
	    } else {
	        (0, _assert.assert)('.sv' in value, 'Unexpected leaf node or priority contents');
	        return serverValues[value['.sv']];
	    }
	};
	/**
	 * Recursively replace all deferred values and priorities in the tree with the
	 * specified generated replacement values.
	 * @param {!SparseSnapshotTree} tree
	 * @param {!Object} serverValues
	 * @return {!SparseSnapshotTree}
	 */
	var resolveDeferredValueTree = exports.resolveDeferredValueTree = function resolveDeferredValueTree(tree, serverValues) {
	    var resolvedTree = new _SparseSnapshotTree.SparseSnapshotTree();
	    tree.forEachTree(new _Path.Path(''), function (path, node) {
	        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));
	    });
	    return resolvedTree;
	};
	/**
	 * Recursively replace all deferred values and priorities in the node with the
	 * specified generated replacement values.  If there are no server values in the node,
	 * it'll be returned as-is.
	 * @param {!Node} node
	 * @param {!Object} serverValues
	 * @return {!Node}
	 */
	var resolveDeferredValueSnapshot = exports.resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, serverValues) {
	    var rawPri = node.getPriority().val();
	    var priority = resolveDeferredValue(rawPri, serverValues);
	    var newNode;
	    if (node.isLeafNode()) {
	        var leafNode = node;
	        var value = resolveDeferredValue(leafNode.getValue(), serverValues);
	        if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {
	            return new _LeafNode.LeafNode(value, (0, _nodeFromJSON.nodeFromJSON)(priority));
	        } else {
	            return node;
	        }
	    } else {
	        var childrenNode = node;
	        newNode = childrenNode;
	        if (priority !== childrenNode.getPriority().val()) {
	            newNode = newNode.updatePriority(new _LeafNode.LeafNode(priority));
	        }
	        childrenNode.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {
	            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);
	            if (newChildNode !== childNode) {
	                newNode = newNode.updateImmediateChild(childName, newChildNode);
	            }
	        });
	        return newNode;
	    }
	};
	//# sourceMappingURL=ServerValues.js.map


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SparseSnapshotTree = undefined;

	var _Path = __webpack_require__(33);

	var _PriorityIndex = __webpack_require__(46);

	var _CountedSet = __webpack_require__(63);

	/**
	 * Helper class to store a sparse set of snapshots.
	 *
	 * @constructor
	 */
	var SparseSnapshotTree = /** @class */function () {
	    function SparseSnapshotTree() {
	        /**
	         * @private
	         * @type {Node}
	         */
	        this.value_ = null;
	        /**
	         * @private
	         * @type {CountedSet}
	         */
	        this.children_ = null;
	    }
	    /**
	     * Gets the node stored at the given path if one exists.
	     *
	     * @param {!Path} path Path to look up snapshot for.
	     * @return {?Node} The retrieved node, or null.
	     */
	    SparseSnapshotTree.prototype.find = function (path) {
	        if (this.value_ != null) {
	            return this.value_.getChild(path);
	        } else if (!path.isEmpty() && this.children_ != null) {
	            var childKey = path.getFront();
	            path = path.popFront();
	            if (this.children_.contains(childKey)) {
	                var childTree = this.children_.get(childKey);
	                return childTree.find(path);
	            } else {
	                return null;
	            }
	        } else {
	            return null;
	        }
	    };
	    /**
	     * Stores the given node at the specified path. If there is already a node
	     * at a shallower path, it merges the new data into that snapshot node.
	     *
	     * @param {!Path} path Path to look up snapshot for.
	     * @param {!Node} data The new data, or null.
	     */
	    SparseSnapshotTree.prototype.remember = function (path, data) {
	        if (path.isEmpty()) {
	            this.value_ = data;
	            this.children_ = null;
	        } else if (this.value_ !== null) {
	            this.value_ = this.value_.updateChild(path, data);
	        } else {
	            if (this.children_ == null) {
	                this.children_ = new _CountedSet.CountedSet();
	            }
	            var childKey = path.getFront();
	            if (!this.children_.contains(childKey)) {
	                this.children_.add(childKey, new SparseSnapshotTree());
	            }
	            var child = this.children_.get(childKey);
	            path = path.popFront();
	            child.remember(path, data);
	        }
	    };
	    /**
	     * Purge the data at path from the cache.
	     *
	     * @param {!Path} path Path to look up snapshot for.
	     * @return {boolean} True if this node should now be removed.
	     */
	    SparseSnapshotTree.prototype.forget = function (path) {
	        if (path.isEmpty()) {
	            this.value_ = null;
	            this.children_ = null;
	            return true;
	        } else {
	            if (this.value_ !== null) {
	                if (this.value_.isLeafNode()) {
	                    // We're trying to forget a node that doesn't exist
	                    return false;
	                } else {
	                    var value = this.value_;
	                    this.value_ = null;
	                    var self_1 = this;
	                    value.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, tree) {
	                        self_1.remember(new _Path.Path(key), tree);
	                    });
	                    return this.forget(path);
	                }
	            } else if (this.children_ !== null) {
	                var childKey = path.getFront();
	                path = path.popFront();
	                if (this.children_.contains(childKey)) {
	                    var safeToRemove = this.children_.get(childKey).forget(path);
	                    if (safeToRemove) {
	                        this.children_.remove(childKey);
	                    }
	                }
	                if (this.children_.isEmpty()) {
	                    this.children_ = null;
	                    return true;
	                } else {
	                    return false;
	                }
	            } else {
	                return true;
	            }
	        }
	    };
	    /**
	     * Recursively iterates through all of the stored tree and calls the
	     * callback on each one.
	     *
	     * @param {!Path} prefixPath Path to look up node for.
	     * @param {!Function} func The function to invoke for each tree.
	     */
	    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {
	        if (this.value_ !== null) {
	            func(prefixPath, this.value_);
	        } else {
	            this.forEachChild(function (key, tree) {
	                var path = new _Path.Path(prefixPath.toString() + '/' + key);
	                tree.forEachTree(path, func);
	            });
	        }
	    };
	    /**
	     * Iterates through each immediate child and triggers the callback.
	     *
	     * @param {!Function} func The function to invoke for each child.
	     */
	    SparseSnapshotTree.prototype.forEachChild = function (func) {
	        if (this.children_ !== null) {
	            this.children_.each(function (key, tree) {
	                func(key, tree);
	            });
	        }
	    };
	    return SparseSnapshotTree;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.SparseSnapshotTree = SparseSnapshotTree;
	//# sourceMappingURL=SparseSnapshotTree.js.map


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CountedSet = undefined;

	var _obj = __webpack_require__(22);

	/**
	 * Implements a set with a count of elements.
	 *
	 * @template K, V
	 */
	var CountedSet = /** @class */function () {
	    function CountedSet() {
	        this.set = {};
	    }
	    /**
	     * @param {!K} item
	     * @param {V} val
	     */
	    CountedSet.prototype.add = function (item, val) {
	        this.set[item] = val !== null ? val : true;
	    };
	    /**
	     * @param {!K} key
	     * @return {boolean}
	     */
	    CountedSet.prototype.contains = function (key) {
	        return (0, _obj.contains)(this.set, key);
	    };
	    /**
	     * @param {!K} item
	     * @return {V}
	     */
	    CountedSet.prototype.get = function (item) {
	        return this.contains(item) ? this.set[item] : undefined;
	    };
	    /**
	     * @param {!K} item
	     */
	    CountedSet.prototype.remove = function (item) {
	        delete this.set[item];
	    };
	    /**
	     * Deletes everything in the set
	     */
	    CountedSet.prototype.clear = function () {
	        this.set = {};
	    };
	    /**
	     * True if there's nothing in the set
	     * @return {boolean}
	     */
	    CountedSet.prototype.isEmpty = function () {
	        return (0, _obj.isEmpty)(this.set);
	    };
	    /**
	     * @return {number} The number of items in the set
	     */
	    CountedSet.prototype.count = function () {
	        return (0, _obj.getCount)(this.set);
	    };
	    /**
	     * Run a function on each k,v pair in the set
	     * @param {function(K, V)} fn
	     */
	    CountedSet.prototype.each = function (fn) {
	        (0, _obj.forEach)(this.set, function (k, v) {
	            return fn(k, v);
	        });
	    };
	    /**
	     * Mostly for debugging
	     * @return {Array.<K>} The keys present in this CountedSet
	     */
	    CountedSet.prototype.keys = function () {
	        var keys = [];
	        (0, _obj.forEach)(this.set, function (k) {
	            keys.push(k);
	        });
	        return keys;
	    };
	    return CountedSet;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.CountedSet = CountedSet;
	//# sourceMappingURL=CountedSet.js.map


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SyncTree = undefined;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _AckUserWrite = __webpack_require__(65);

	var _ChildrenNode = __webpack_require__(51);

	var _obj = __webpack_require__(22);

	var _ImmutableTree = __webpack_require__(67);

	var _ListenComplete = __webpack_require__(68);

	var _Merge = __webpack_require__(69);

	var _Operation = __webpack_require__(66);

	var _Overwrite = __webpack_require__(70);

	var _Path = __webpack_require__(33);

	var _SyncPoint = __webpack_require__(71);

	var _WriteTree = __webpack_require__(81);

	/**
	 * SyncTree is the central class for managing event callback registration, data caching, views
	 * (query processing), and event generation.  There are typically two SyncTree instances for
	 * each Repo, one for the normal Firebase data, and one for the .info data.
	 *
	 * It has a number of responsibilities, including:
	 *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).
	 *  - Applying and caching data changes for user set(), transaction(), and update() calls
	 *    (applyUserOverwrite(), applyUserMerge()).
	 *  - Applying and caching data changes for server data changes (applyServerOverwrite(),
	 *    applyServerMerge()).
	 *  - Generating user-facing events for server and user changes (all of the apply* methods
	 *    return the set of events that need to be raised as a result).
	 *  - Maintaining the appropriate set of server listens to ensure we are always subscribed
	 *    to the correct set of paths and queries to satisfy the current set of user event
	 *    callbacks (listens are started/stopped using the provided listenProvider).
	 *
	 * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual
	 * events are returned to the caller rather than raised synchronously.
	 *
	 * @constructor
	 */
	var SyncTree = /** @class */function () {
	    /**
	     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening
	     *   to server data.
	     */
	    function SyncTree(listenProvider_) {
	        this.listenProvider_ = listenProvider_;
	        /**
	         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.
	         * @type {!ImmutableTree.<!SyncPoint>}
	         * @private
	         */
	        this.syncPointTree_ = _ImmutableTree.ImmutableTree.Empty;
	        /**
	         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).
	         * @type {!WriteTree}
	         * @private
	         */
	        this.pendingWriteTree_ = new _WriteTree.WriteTree();
	        this.tagToQueryMap_ = {};
	        this.queryToTagMap_ = {};
	    }
	    /**
	     * Apply the data changes for a user-generated set() or transaction() call.
	     *
	     * @param {!Path} path
	     * @param {!Node} newData
	     * @param {number} writeId
	     * @param {boolean=} visible
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {
	        // Record pending write.
	        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);
	        if (!visible) {
	            return [];
	        } else {
	            return this.applyOperationToSyncPoints_(new _Overwrite.Overwrite(_Operation.OperationSource.User, path, newData));
	        }
	    };
	    /**
	     * Apply the data from a user-generated update() call
	     *
	     * @param {!Path} path
	     * @param {!Object.<string, !Node>} changedChildren
	     * @param {!number} writeId
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {
	        // Record pending merge.
	        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);
	        var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);
	        return this.applyOperationToSyncPoints_(new _Merge.Merge(_Operation.OperationSource.User, path, changeTree));
	    };
	    /**
	     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().
	     *
	     * @param {!number} writeId
	     * @param {boolean=} revert True if the given write failed and needs to be reverted
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.ackUserWrite = function (writeId, revert) {
	        if (revert === void 0) {
	            revert = false;
	        }
	        var write = this.pendingWriteTree_.getWrite(writeId);
	        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);
	        if (!needToReevaluate) {
	            return [];
	        } else {
	            var affectedTree_1 = _ImmutableTree.ImmutableTree.Empty;
	            if (write.snap != null) {
	                // overwrite
	                affectedTree_1 = affectedTree_1.set(_Path.Path.Empty, true);
	            } else {
	                (0, _obj.forEach)(write.children, function (pathString, node) {
	                    affectedTree_1 = affectedTree_1.set(new _Path.Path(pathString), node);
	                });
	            }
	            return this.applyOperationToSyncPoints_(new _AckUserWrite.AckUserWrite(write.path, affectedTree_1, revert));
	        }
	    };
	    /**
	     * Apply new server data for the specified path..
	     *
	     * @param {!Path} path
	     * @param {!Node} newData
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyServerOverwrite = function (path, newData) {
	        return this.applyOperationToSyncPoints_(new _Overwrite.Overwrite(_Operation.OperationSource.Server, path, newData));
	    };
	    /**
	     * Apply new server data to be merged in at the specified path.
	     *
	     * @param {!Path} path
	     * @param {!Object.<string, !Node>} changedChildren
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {
	        var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);
	        return this.applyOperationToSyncPoints_(new _Merge.Merge(_Operation.OperationSource.Server, path, changeTree));
	    };
	    /**
	     * Apply a listen complete for a query
	     *
	     * @param {!Path} path
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyListenComplete = function (path) {
	        return this.applyOperationToSyncPoints_(new _ListenComplete.ListenComplete(_Operation.OperationSource.Server, path));
	    };
	    /**
	     * Apply new server data for the specified tagged query.
	     *
	     * @param {!Path} path
	     * @param {!Node} snap
	     * @param {!number} tag
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {
	        var queryKey = this.queryKeyForTag_(tag);
	        if (queryKey != null) {
	            var r = SyncTree.parseQueryKey_(queryKey);
	            var queryPath = r.path,
	                queryId = r.queryId;
	            var relativePath = _Path.Path.relativePath(queryPath, path);
	            var op = new _Overwrite.Overwrite(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath, snap);
	            return this.applyTaggedOperation_(queryPath, op);
	        } else {
	            // Query must have been removed already
	            return [];
	        }
	    };
	    /**
	     * Apply server data to be merged in for the specified tagged query.
	     *
	     * @param {!Path} path
	     * @param {!Object.<string, !Node>} changedChildren
	     * @param {!number} tag
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {
	        var queryKey = this.queryKeyForTag_(tag);
	        if (queryKey) {
	            var r = SyncTree.parseQueryKey_(queryKey);
	            var queryPath = r.path,
	                queryId = r.queryId;
	            var relativePath = _Path.Path.relativePath(queryPath, path);
	            var changeTree = _ImmutableTree.ImmutableTree.fromObject(changedChildren);
	            var op = new _Merge.Merge(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);
	            return this.applyTaggedOperation_(queryPath, op);
	        } else {
	            // We've already removed the query. No big deal, ignore the update
	            return [];
	        }
	    };
	    /**
	     * Apply a listen complete for a tagged query
	     *
	     * @param {!Path} path
	     * @param {!number} tag
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {
	        var queryKey = this.queryKeyForTag_(tag);
	        if (queryKey) {
	            var r = SyncTree.parseQueryKey_(queryKey);
	            var queryPath = r.path,
	                queryId = r.queryId;
	            var relativePath = _Path.Path.relativePath(queryPath, path);
	            var op = new _ListenComplete.ListenComplete(_Operation.OperationSource.forServerTaggedQuery(queryId), relativePath);
	            return this.applyTaggedOperation_(queryPath, op);
	        } else {
	            // We've already removed the query. No big deal, ignore the update
	            return [];
	        }
	    };
	    /**
	     * Add an event callback for the specified query.
	     *
	     * @param {!Query} query
	     * @param {!EventRegistration} eventRegistration
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {
	        var path = query.path;
	        var serverCache = null;
	        var foundAncestorDefaultView = false;
	        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.
	        // Consider optimizing this once there's a better understanding of what actual behavior will be.
	        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {
	            var relativePath = _Path.Path.relativePath(pathToSyncPoint, path);
	            serverCache = serverCache || sp.getCompleteServerCache(relativePath);
	            foundAncestorDefaultView = foundAncestorDefaultView || sp.hasCompleteView();
	        });
	        var syncPoint = this.syncPointTree_.get(path);
	        if (!syncPoint) {
	            syncPoint = new _SyncPoint.SyncPoint();
	            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);
	        } else {
	            foundAncestorDefaultView = foundAncestorDefaultView || syncPoint.hasCompleteView();
	            serverCache = serverCache || syncPoint.getCompleteServerCache(_Path.Path.Empty);
	        }
	        var serverCacheComplete;
	        if (serverCache != null) {
	            serverCacheComplete = true;
	        } else {
	            serverCacheComplete = false;
	            serverCache = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	            var subtree = this.syncPointTree_.subtree(path);
	            subtree.foreachChild(function (childName, childSyncPoint) {
	                var completeCache = childSyncPoint.getCompleteServerCache(_Path.Path.Empty);
	                if (completeCache) {
	                    serverCache = serverCache.updateImmediateChild(childName, completeCache);
	                }
	            });
	        }
	        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);
	        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {
	            // We need to track a tag for this query
	            var queryKey = SyncTree.makeQueryKey_(query);
	            (0, _assert.assert)(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');
	            var tag = SyncTree.getNextQueryTag_();
	            this.queryToTagMap_[queryKey] = tag;
	            // Coerce to string to avoid sparse arrays.
	            this.tagToQueryMap_['_' + tag] = queryKey;
	        }
	        var writesCache = this.pendingWriteTree_.childWrites(path);
	        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);
	        if (!viewAlreadyExists && !foundAncestorDefaultView) {
	            var view /** @type !View */ = syncPoint.viewForQuery(query);
	            events = events.concat(this.setupListener_(query, view));
	        }
	        return events;
	    };
	    /**
	     * Remove event callback(s).
	     *
	     * If query is the default query, we'll check all queries for the specified eventRegistration.
	     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.
	     *
	     * @param {!Query} query
	     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.
	     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
	     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.
	     */
	    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {
	        var _this = this;
	        // Find the syncPoint first. Then deal with whether or not it has matching listeners
	        var path = query.path;
	        var maybeSyncPoint = this.syncPointTree_.get(path);
	        var cancelEvents = [];
	        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without
	        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and
	        // not loadsAllData().
	        if (maybeSyncPoint && (query.queryIdentifier() === 'default' || maybeSyncPoint.viewExistsForQuery(query))) {
	            /**
	             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}
	             */
	            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);
	            if (maybeSyncPoint.isEmpty()) {
	                this.syncPointTree_ = this.syncPointTree_.remove(path);
	            }
	            var removed = removedAndEvents.removed;
	            cancelEvents = removedAndEvents.events;
	            // We may have just removed one of many listeners and can short-circuit this whole process
	            // We may also not have removed a default listener, in which case all of the descendant listeners should already be
	            // properly set up.
	            //
	            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of
	            // queryId === 'default'
	            var removingDefault = -1 !== removed.findIndex(function (query) {
	                return query.getQueryParams().loadsAllData();
	            });
	            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {
	                return parentSyncPoint.hasCompleteView();
	            });
	            if (removingDefault && !covered) {
	                var subtree = this.syncPointTree_.subtree(path);
	                // There are potentially child listeners. Determine what if any listens we need to send before executing the
	                // removal
	                if (!subtree.isEmpty()) {
	                    // We need to fold over our subtree and collect the listeners to send
	                    var newViews = this.collectDistinctViewsForSubTree_(subtree);
	                    // Ok, we've collected all the listens we need. Set them up.
	                    for (var i = 0; i < newViews.length; ++i) {
	                        var view = newViews[i],
	                            newQuery = view.getQuery();
	                        var listener = this.createListenerForView_(view);
	                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);
	                    }
	                } else {
	                    // There's nothing below us, so nothing we need to start listening on
	                }
	            }
	            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query
	            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.
	            // Also, note that if we have a cancelError, it's already been removed at the provider level.
	            if (!covered && removed.length > 0 && !cancelError) {
	                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one
	                // default. Otherwise, we need to iterate through and cancel each individual query
	                if (removingDefault) {
	                    // We don't tag default listeners
	                    var defaultTag = null;
	                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);
	                } else {
	                    removed.forEach(function (queryToRemove) {
	                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];
	                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);
	                    });
	                }
	            }
	            // Now, clear all of the tags we're tracking for the removed listens
	            this.removeTags_(removed);
	        } else {
	            // No-op, this listener must've been already removed
	        }
	        return cancelEvents;
	    };
	    /**
	     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above
	     * it, but as this is only used by transaction code, that should always be the case anyways.
	     *
	     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.
	     * @param {!Path} path The path to the data we want
	     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded
	     * @return {?Node}
	     */
	    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {
	        var includeHiddenSets = true;
	        var writeTree = this.pendingWriteTree_;
	        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {
	            var relativePath = _Path.Path.relativePath(pathSoFar, path);
	            var serverCache = syncPoint.getCompleteServerCache(relativePath);
	            if (serverCache) {
	                return serverCache;
	            }
	        });
	        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);
	    };
	    /**
	     * This collapses multiple unfiltered views into a single view, since we only need a single
	     * listener for them.
	     *
	     * @param {!ImmutableTree.<!SyncPoint>} subtree
	     * @return {!Array.<!View>}
	     * @private
	     */
	    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {
	        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {
	            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {
	                var completeView = maybeChildSyncPoint.getCompleteView();
	                return [completeView];
	            } else {
	                // No complete view here, flatten any deeper listens into an array
	                var views_1 = [];
	                if (maybeChildSyncPoint) {
	                    views_1 = maybeChildSyncPoint.getQueryViews();
	                }
	                (0, _obj.forEach)(childMap, function (key, childViews) {
	                    views_1 = views_1.concat(childViews);
	                });
	                return views_1;
	            }
	        });
	    };
	    /**
	     * @param {!Array.<!Query>} queries
	     * @private
	     */
	    SyncTree.prototype.removeTags_ = function (queries) {
	        for (var j = 0; j < queries.length; ++j) {
	            var removedQuery = queries[j];
	            if (!removedQuery.getQueryParams().loadsAllData()) {
	                // We should have a tag for this
	                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);
	                var removedQueryTag = this.queryToTagMap_[removedQueryKey];
	                delete this.queryToTagMap_[removedQueryKey];
	                delete this.tagToQueryMap_['_' + removedQueryTag];
	            }
	        }
	    };
	    /**
	     * Normalizes a query to a query we send the server for listening
	     * @param {!Query} query
	     * @return {!Query} The normalized query
	     * @private
	     */
	    SyncTree.queryForListening_ = function (query) {
	        if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {
	            // We treat queries that load all data as default queries
	            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits
	            // from Query
	            return (/** @type {!Query} */query.getRef()
	            );
	        } else {
	            return query;
	        }
	    };
	    /**
	     * For a given new listen, manage the de-duplication of outstanding subscriptions.
	     *
	     * @param {!Query} query
	     * @param {!View} view
	     * @return {!Array.<!Event>} This method can return events to support synchronous data sources
	     * @private
	     */
	    SyncTree.prototype.setupListener_ = function (query, view) {
	        var path = query.path;
	        var tag = this.tagForQuery_(query);
	        var listener = this.createListenerForView_(view);
	        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);
	        var subtree = this.syncPointTree_.subtree(path);
	        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we
	        // may need to shadow other listens as well.
	        if (tag) {
	            (0, _assert.assert)(!subtree.value.hasCompleteView(), "If we're adding a query, it shouldn't be shadowed");
	        } else {
	            // Shadow everything at or below this location, this is a default listener.
	            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {
	                if (!relativePath.isEmpty() && maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {
	                    return [maybeChildSyncPoint.getCompleteView().getQuery()];
	                } else {
	                    // No default listener here, flatten any deeper queries into an array
	                    var queries_1 = [];
	                    if (maybeChildSyncPoint) {
	                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) {
	                            return view.getQuery();
	                        }));
	                    }
	                    (0, _obj.forEach)(childMap, function (key, childQueries) {
	                        queries_1 = queries_1.concat(childQueries);
	                    });
	                    return queries_1;
	                }
	            });
	            for (var i = 0; i < queriesToStop.length; ++i) {
	                var queryToStop = queriesToStop[i];
	                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));
	            }
	        }
	        return events;
	    };
	    /**
	     *
	     * @param {!View} view
	     * @return {{hashFn: function(), onComplete: function(!string, *)}}
	     * @private
	     */
	    SyncTree.prototype.createListenerForView_ = function (view) {
	        var _this = this;
	        var query = view.getQuery();
	        var tag = this.tagForQuery_(query);
	        return {
	            hashFn: function hashFn() {
	                var cache = view.getServerCache() || _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                return cache.hash();
	            },
	            onComplete: function onComplete(status) {
	                if (status === 'ok') {
	                    if (tag) {
	                        return _this.applyTaggedListenComplete(query.path, tag);
	                    } else {
	                        return _this.applyListenComplete(query.path);
	                    }
	                } else {
	                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.
	                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children
	                    var error = (0, _util.errorForServerCode)(status, query);
	                    return _this.removeEventRegistration(query,
	                    /*eventRegistration*/null, error);
	                }
	            }
	        };
	    };
	    /**
	     * Given a query, computes a "queryKey" suitable for use in our queryToTagMap_.
	     * @private
	     * @param {!Query} query
	     * @return {string}
	     */
	    SyncTree.makeQueryKey_ = function (query) {
	        return query.path.toString() + '$' + query.queryIdentifier();
	    };
	    /**
	     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.
	     * @private
	     * @param {!string} queryKey
	     * @return {{queryId: !string, path: !Path}}
	     */
	    SyncTree.parseQueryKey_ = function (queryKey) {
	        var splitIndex = queryKey.indexOf('$');
	        (0, _assert.assert)(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');
	        return {
	            queryId: queryKey.substr(splitIndex + 1),
	            path: new _Path.Path(queryKey.substr(0, splitIndex))
	        };
	    };
	    /**
	     * Return the query associated with the given tag, if we have one
	     * @param {!number} tag
	     * @return {?string}
	     * @private
	     */
	    SyncTree.prototype.queryKeyForTag_ = function (tag) {
	        return this.tagToQueryMap_['_' + tag];
	    };
	    /**
	     * Return the tag associated with the given query.
	     * @param {!Query} query
	     * @return {?number}
	     * @private
	     */
	    SyncTree.prototype.tagForQuery_ = function (query) {
	        var queryKey = SyncTree.makeQueryKey_(query);
	        return (0, _obj.safeGet)(this.queryToTagMap_, queryKey);
	    };
	    /**
	     * Static accessor for query tags.
	     * @return {number}
	     * @private
	     */
	    SyncTree.getNextQueryTag_ = function () {
	        return SyncTree.nextQueryTag_++;
	    };
	    /**
	     * A helper method to apply tagged operations
	     *
	     * @param {!Path} queryPath
	     * @param {!Operation} operation
	     * @return {!Array.<!Event>}
	     * @private
	     */
	    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {
	        var syncPoint = this.syncPointTree_.get(queryPath);
	        (0, _assert.assert)(syncPoint, "Missing sync point for query tag that we're tracking");
	        var writesCache = this.pendingWriteTree_.childWrites(queryPath);
	        return syncPoint.applyOperation(operation, writesCache,
	        /*serverCache=*/null);
	    };
	    /**
	     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.
	     *
	     * NOTES:
	     * - Descendant SyncPoints will be visited first (since we raise events depth-first).
	        * - We call applyOperation() on each SyncPoint passing three things:
	     *   1. A version of the Operation that has been made relative to the SyncPoint location.
	     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.
	     *   3. A snapshot Node with cached server data, if we have it.
	        * - We concatenate all of the events returned by each SyncPoint and return the result.
	     *
	     * @param {!Operation} operation
	     * @return {!Array.<!Event>}
	     * @private
	     */
	    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {
	        return this.applyOperationHelper_(operation, this.syncPointTree_,
	        /*serverCache=*/null, this.pendingWriteTree_.childWrites(_Path.Path.Empty));
	    };
	    /**
	     * Recursive helper for applyOperationToSyncPoints_
	     *
	     * @private
	     * @param {!Operation} operation
	     * @param {ImmutableTree.<!SyncPoint>} syncPointTree
	     * @param {?Node} serverCache
	     * @param {!WriteTreeRef} writesCache
	     * @return {!Array.<!Event>}
	     */
	    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {
	        if (operation.path.isEmpty()) {
	            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);
	        } else {
	            var syncPoint = syncPointTree.get(_Path.Path.Empty);
	            // If we don't have cached server data, see if we can get it from this SyncPoint.
	            if (serverCache == null && syncPoint != null) {
	                serverCache = syncPoint.getCompleteServerCache(_Path.Path.Empty);
	            }
	            var events = [];
	            var childName = operation.path.getFront();
	            var childOperation = operation.operationForChild(childName);
	            var childTree = syncPointTree.children.get(childName);
	            if (childTree && childOperation) {
	                var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;
	                var childWritesCache = writesCache.child(childName);
	                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));
	            }
	            if (syncPoint) {
	                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));
	            }
	            return events;
	        }
	    };
	    /**
	     * Recursive helper for applyOperationToSyncPoints_
	     *
	     * @private
	     * @param {!Operation} operation
	     * @param {ImmutableTree.<!SyncPoint>} syncPointTree
	     * @param {?Node} serverCache
	     * @param {!WriteTreeRef} writesCache
	     * @return {!Array.<!Event>}
	     */
	    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {
	        var _this = this;
	        var syncPoint = syncPointTree.get(_Path.Path.Empty);
	        // If we don't have cached server data, see if we can get it from this SyncPoint.
	        if (serverCache == null && syncPoint != null) {
	            serverCache = syncPoint.getCompleteServerCache(_Path.Path.Empty);
	        }
	        var events = [];
	        syncPointTree.children.inorderTraversal(function (childName, childTree) {
	            var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;
	            var childWritesCache = writesCache.child(childName);
	            var childOperation = operation.operationForChild(childName);
	            if (childOperation) {
	                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));
	            }
	        });
	        if (syncPoint) {
	            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));
	        }
	        return events;
	    };
	    /**
	     * Static tracker for next query tag.
	     * @type {number}
	     * @private
	     */
	    SyncTree.nextQueryTag_ = 1;
	    return SyncTree;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.SyncTree = SyncTree;
	//# sourceMappingURL=SyncTree.js.map


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.AckUserWrite = undefined;

	var _assert = __webpack_require__(20);

	var _Path = __webpack_require__(33);

	var _Operation = __webpack_require__(66);

	var AckUserWrite = /** @class */function () {
	    /**
	     *
	     * @param {!Path} path
	     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.
	     * @param {!boolean} revert
	     */
	    function AckUserWrite(
	    /**@inheritDoc */path,
	    /**@inheritDoc */affectedTree,
	    /**@inheritDoc */revert) {
	        this.path = path;
	        this.affectedTree = affectedTree;
	        this.revert = revert;
	        /** @inheritDoc */
	        this.type = _Operation.OperationType.ACK_USER_WRITE;
	        /** @inheritDoc */
	        this.source = _Operation.OperationSource.User;
	    }
	    /**
	     * @inheritDoc
	     */
	    AckUserWrite.prototype.operationForChild = function (childName) {
	        if (!this.path.isEmpty()) {
	            (0, _assert.assert)(this.path.getFront() === childName, 'operationForChild called for unrelated child.');
	            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);
	        } else if (this.affectedTree.value != null) {
	            (0, _assert.assert)(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');
	            // All child locations are affected as well; just return same operation.
	            return this;
	        } else {
	            var childTree = this.affectedTree.subtree(new _Path.Path(childName));
	            return new AckUserWrite(_Path.Path.Empty, childTree, this.revert);
	        }
	    };
	    return AckUserWrite;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.AckUserWrite = AckUserWrite;
	//# sourceMappingURL=AckUserWrite.js.map


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.OperationSource = exports.OperationType = undefined;

	var _assert = __webpack_require__(20);

	/**
	 *
	 * @enum
	 */
	var OperationType = exports.OperationType = undefined; /**
	                                                        * Copyright 2017 Google Inc.
	                                                        *
	                                                        * Licensed under the Apache License, Version 2.0 (the "License");
	                                                        * you may not use this file except in compliance with the License.
	                                                        * You may obtain a copy of the License at
	                                                        *
	                                                        *   http://www.apache.org/licenses/LICENSE-2.0
	                                                        *
	                                                        * Unless required by applicable law or agreed to in writing, software
	                                                        * distributed under the License is distributed on an "AS IS" BASIS,
	                                                        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                        * See the License for the specific language governing permissions and
	                                                        * limitations under the License.
	                                                        */

	(function (OperationType) {
	  OperationType[OperationType["OVERWRITE"] = 0] = "OVERWRITE";
	  OperationType[OperationType["MERGE"] = 1] = "MERGE";
	  OperationType[OperationType["ACK_USER_WRITE"] = 2] = "ACK_USER_WRITE";
	  OperationType[OperationType["LISTEN_COMPLETE"] = 3] = "LISTEN_COMPLETE";
	})(OperationType || (exports.OperationType = OperationType = {}));
	/**
	 * @param {boolean} fromUser
	 * @param {boolean} fromServer
	 * @param {?string} queryId
	 * @param {boolean} tagged
	 * @constructor
	 */
	var OperationSource = /** @class */function () {
	  function OperationSource(fromUser, fromServer, queryId, tagged) {
	    this.fromUser = fromUser;
	    this.fromServer = fromServer;
	    this.queryId = queryId;
	    this.tagged = tagged;
	    (0, _assert.assert)(!tagged || fromServer, 'Tagged queries must be from server.');
	  }
	  /**
	   * @const
	   * @type {!OperationSource}
	   */
	  OperationSource.User = new OperationSource(
	  /*fromUser=*/true, false, null,
	  /*tagged=*/false);
	  /**
	   * @const
	   * @type {!OperationSource}
	   */
	  OperationSource.Server = new OperationSource(false,
	  /*fromServer=*/true, null,
	  /*tagged=*/false);
	  /**
	   * @param {string} queryId
	   * @return {!OperationSource}
	   */
	  OperationSource.forServerTaggedQuery = function (queryId) {
	    return new OperationSource(false,
	    /*fromServer=*/true, queryId,
	    /*tagged=*/true);
	  };
	  return OperationSource;
	}();
	exports.OperationSource = OperationSource;
	//# sourceMappingURL=Operation.js.map


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ImmutableTree = undefined;

	var _SortedMap = __webpack_require__(52);

	var _Path = __webpack_require__(33);

	var _util = __webpack_require__(19);

	var _obj = __webpack_require__(22);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var emptyChildrenSingleton;
	/**
	 * Singleton empty children collection.
	 *
	 * @const
	 * @type {!SortedMap.<string, !ImmutableTree.<?>>}
	 */
	var EmptyChildren = function EmptyChildren() {
	    if (!emptyChildrenSingleton) {
	        emptyChildrenSingleton = new _SortedMap.SortedMap(_util.stringCompare);
	    }
	    return emptyChildrenSingleton;
	};
	/**
	 * A tree with immutable elements.
	 */
	var ImmutableTree = /** @class */function () {
	    /**
	     * @template T
	     * @param {?T} value
	     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children
	     */
	    function ImmutableTree(value, children) {
	        if (children === void 0) {
	            children = EmptyChildren();
	        }
	        this.value = value;
	        this.children = children;
	    }
	    /**
	     * @template T
	     * @param {!Object.<string, !T>} obj
	     * @return {!ImmutableTree.<!T>}
	     */
	    ImmutableTree.fromObject = function (obj) {
	        var tree = ImmutableTree.Empty;
	        (0, _obj.forEach)(obj, function (childPath, childSnap) {
	            tree = tree.set(new _Path.Path(childPath), childSnap);
	        });
	        return tree;
	    };
	    /**
	     * True if the value is empty and there are no children
	     * @return {boolean}
	     */
	    ImmutableTree.prototype.isEmpty = function () {
	        return this.value === null && this.children.isEmpty();
	    };
	    /**
	     * Given a path and predicate, return the first node and the path to that node
	     * where the predicate returns true.
	     *
	     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects
	     * on the way back out, it may be better to pass down a pathSoFar obj.
	     *
	     * @param {!Path} relativePath The remainder of the path
	     * @param {function(T):boolean} predicate The predicate to satisfy to return a
	     *   node
	     * @return {?{path:!Path, value:!T}}
	     */
	    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {
	        if (this.value != null && predicate(this.value)) {
	            return { path: _Path.Path.Empty, value: this.value };
	        } else {
	            if (relativePath.isEmpty()) {
	                return null;
	            } else {
	                var front = relativePath.getFront();
	                var child = this.children.get(front);
	                if (child !== null) {
	                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);
	                    if (childExistingPathAndValue != null) {
	                        var fullPath = new _Path.Path(front).child(childExistingPathAndValue.path);
	                        return { path: fullPath, value: childExistingPathAndValue.value };
	                    } else {
	                        return null;
	                    }
	                } else {
	                    return null;
	                }
	            }
	        }
	    };
	    /**
	     * Find, if it exists, the shortest subpath of the given path that points a defined
	     * value in the tree
	     * @param {!Path} relativePath
	     * @return {?{path: !Path, value: !T}}
	     */
	    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {
	        return this.findRootMostMatchingPathAndValue(relativePath, function () {
	            return true;
	        });
	    };
	    /**
	     * @param {!Path} relativePath
	     * @return {!ImmutableTree.<T>} The subtree at the given path
	     */
	    ImmutableTree.prototype.subtree = function (relativePath) {
	        if (relativePath.isEmpty()) {
	            return this;
	        } else {
	            var front = relativePath.getFront();
	            var childTree = this.children.get(front);
	            if (childTree !== null) {
	                return childTree.subtree(relativePath.popFront());
	            } else {
	                return ImmutableTree.Empty;
	            }
	        }
	    };
	    /**
	     * Sets a value at the specified path.
	     *
	     * @param {!Path} relativePath Path to set value at.
	     * @param {?T} toSet Value to set.
	     * @return {!ImmutableTree.<T>} Resulting tree.
	     */
	    ImmutableTree.prototype.set = function (relativePath, toSet) {
	        if (relativePath.isEmpty()) {
	            return new ImmutableTree(toSet, this.children);
	        } else {
	            var front = relativePath.getFront();
	            var child = this.children.get(front) || ImmutableTree.Empty;
	            var newChild = child.set(relativePath.popFront(), toSet);
	            var newChildren = this.children.insert(front, newChild);
	            return new ImmutableTree(this.value, newChildren);
	        }
	    };
	    /**
	     * Removes the value at the specified path.
	     *
	     * @param {!Path} relativePath Path to value to remove.
	     * @return {!ImmutableTree.<T>} Resulting tree.
	     */
	    ImmutableTree.prototype.remove = function (relativePath) {
	        if (relativePath.isEmpty()) {
	            if (this.children.isEmpty()) {
	                return ImmutableTree.Empty;
	            } else {
	                return new ImmutableTree(null, this.children);
	            }
	        } else {
	            var front = relativePath.getFront();
	            var child = this.children.get(front);
	            if (child) {
	                var newChild = child.remove(relativePath.popFront());
	                var newChildren = void 0;
	                if (newChild.isEmpty()) {
	                    newChildren = this.children.remove(front);
	                } else {
	                    newChildren = this.children.insert(front, newChild);
	                }
	                if (this.value === null && newChildren.isEmpty()) {
	                    return ImmutableTree.Empty;
	                } else {
	                    return new ImmutableTree(this.value, newChildren);
	                }
	            } else {
	                return this;
	            }
	        }
	    };
	    /**
	     * Gets a value from the tree.
	     *
	     * @param {!Path} relativePath Path to get value for.
	     * @return {?T} Value at path, or null.
	     */
	    ImmutableTree.prototype.get = function (relativePath) {
	        if (relativePath.isEmpty()) {
	            return this.value;
	        } else {
	            var front = relativePath.getFront();
	            var child = this.children.get(front);
	            if (child) {
	                return child.get(relativePath.popFront());
	            } else {
	                return null;
	            }
	        }
	    };
	    /**
	     * Replace the subtree at the specified path with the given new tree.
	     *
	     * @param {!Path} relativePath Path to replace subtree for.
	     * @param {!ImmutableTree} newTree New tree.
	     * @return {!ImmutableTree} Resulting tree.
	     */
	    ImmutableTree.prototype.setTree = function (relativePath, newTree) {
	        if (relativePath.isEmpty()) {
	            return newTree;
	        } else {
	            var front = relativePath.getFront();
	            var child = this.children.get(front) || ImmutableTree.Empty;
	            var newChild = child.setTree(relativePath.popFront(), newTree);
	            var newChildren = void 0;
	            if (newChild.isEmpty()) {
	                newChildren = this.children.remove(front);
	            } else {
	                newChildren = this.children.insert(front, newChild);
	            }
	            return new ImmutableTree(this.value, newChildren);
	        }
	    };
	    /**
	     * Performs a depth first fold on this tree. Transforms a tree into a single
	     * value, given a function that operates on the path to a node, an optional
	     * current value, and a map of child names to folded subtrees
	     * @template V
	     * @param {function(Path, ?T, Object.<string, V>):V} fn
	     * @return {V}
	     */
	    ImmutableTree.prototype.fold = function (fn) {
	        return this.fold_(_Path.Path.Empty, fn);
	    };
	    /**
	     * Recursive helper for public-facing fold() method
	     * @template V
	     * @param {!Path} pathSoFar
	     * @param {function(Path, ?T, Object.<string, V>):V} fn
	     * @return {V}
	     * @private
	     */
	    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {
	        var accum = {};
	        this.children.inorderTraversal(function (childKey, childTree) {
	            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);
	        });
	        return fn(pathSoFar, this.value, accum);
	    };
	    /**
	     * Find the first matching value on the given path. Return the result of applying f to it.
	     * @template V
	     * @param {!Path} path
	     * @param {!function(!Path, !T):?V} f
	     * @return {?V}
	     */
	    ImmutableTree.prototype.findOnPath = function (path, f) {
	        return this.findOnPath_(path, _Path.Path.Empty, f);
	    };
	    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {
	        var result = this.value ? f(pathSoFar, this.value) : false;
	        if (result) {
	            return result;
	        } else {
	            if (pathToFollow.isEmpty()) {
	                return null;
	            } else {
	                var front = pathToFollow.getFront();
	                var nextChild = this.children.get(front);
	                if (nextChild) {
	                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);
	                } else {
	                    return null;
	                }
	            }
	        }
	    };
	    /**
	     *
	     * @param {!Path} path
	     * @param {!function(!Path, !T)} f
	     * @returns {!ImmutableTree.<T>}
	     */
	    ImmutableTree.prototype.foreachOnPath = function (path, f) {
	        return this.foreachOnPath_(path, _Path.Path.Empty, f);
	    };
	    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {
	        if (pathToFollow.isEmpty()) {
	            return this;
	        } else {
	            if (this.value) {
	                f(currentRelativePath, this.value);
	            }
	            var front = pathToFollow.getFront();
	            var nextChild = this.children.get(front);
	            if (nextChild) {
	                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);
	            } else {
	                return ImmutableTree.Empty;
	            }
	        }
	    };
	    /**
	     * Calls the given function for each node in the tree that has a value.
	     *
	     * @param {function(!Path, !T)} f A function to be called with
	     *   the path from the root of the tree to a node, and the value at that node.
	     *   Called in depth-first order.
	     */
	    ImmutableTree.prototype.foreach = function (f) {
	        this.foreach_(_Path.Path.Empty, f);
	    };
	    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {
	        this.children.inorderTraversal(function (childName, childTree) {
	            childTree.foreach_(currentRelativePath.child(childName), f);
	        });
	        if (this.value) {
	            f(currentRelativePath, this.value);
	        }
	    };
	    /**
	     *
	     * @param {function(string, !T)} f
	     */
	    ImmutableTree.prototype.foreachChild = function (f) {
	        this.children.inorderTraversal(function (childName, childTree) {
	            if (childTree.value) {
	                f(childName, childTree.value);
	            }
	        });
	    };
	    ImmutableTree.Empty = new ImmutableTree(null);
	    return ImmutableTree;
	}();
	exports.ImmutableTree = ImmutableTree;
	//# sourceMappingURL=ImmutableTree.js.map


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ListenComplete = undefined;

	var _Path = __webpack_require__(33);

	var _Operation = __webpack_require__(66);

	/**
	 * @param {!OperationSource} source
	 * @param {!Path} path
	 * @constructor
	 * @implements {Operation}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ListenComplete = /** @class */function () {
	    function ListenComplete(source, path) {
	        this.source = source;
	        this.path = path;
	        /** @inheritDoc */
	        this.type = _Operation.OperationType.LISTEN_COMPLETE;
	    }
	    ListenComplete.prototype.operationForChild = function (childName) {
	        if (this.path.isEmpty()) {
	            return new ListenComplete(this.source, _Path.Path.Empty);
	        } else {
	            return new ListenComplete(this.source, this.path.popFront());
	        }
	    };
	    return ListenComplete;
	}();
	exports.ListenComplete = ListenComplete;
	//# sourceMappingURL=ListenComplete.js.map


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Merge = undefined;

	var _Operation = __webpack_require__(66);

	var _Overwrite = __webpack_require__(70);

	var _Path = __webpack_require__(33);

	var _assert = __webpack_require__(20);

	/**
	 * @param {!OperationSource} source
	 * @param {!Path} path
	 * @param {!ImmutableTree.<!Node>} children
	 * @constructor
	 * @implements {Operation}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Merge = /** @class */function () {
	    function Merge(
	    /**@inheritDoc */source,
	    /**@inheritDoc */path,
	    /**@inheritDoc */children) {
	        this.source = source;
	        this.path = path;
	        this.children = children;
	        /** @inheritDoc */
	        this.type = _Operation.OperationType.MERGE;
	    }
	    /**
	     * @inheritDoc
	     */
	    Merge.prototype.operationForChild = function (childName) {
	        if (this.path.isEmpty()) {
	            var childTree = this.children.subtree(new _Path.Path(childName));
	            if (childTree.isEmpty()) {
	                // This child is unaffected
	                return null;
	            } else if (childTree.value) {
	                // We have a snapshot for the child in question.  This becomes an overwrite of the child.
	                return new _Overwrite.Overwrite(this.source, _Path.Path.Empty, childTree.value);
	            } else {
	                // This is a merge at a deeper level
	                return new Merge(this.source, _Path.Path.Empty, childTree);
	            }
	        } else {
	            (0, _assert.assert)(this.path.getFront() === childName, "Can't get a merge for a child not on the path of the operation");
	            return new Merge(this.source, this.path.popFront(), this.children);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    Merge.prototype.toString = function () {
	        return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';
	    };
	    return Merge;
	}();
	exports.Merge = Merge;
	//# sourceMappingURL=Merge.js.map


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Overwrite = undefined;

	var _Operation = __webpack_require__(66);

	var _Path = __webpack_require__(33);

	/**
	 * @param {!OperationSource} source
	 * @param {!Path} path
	 * @param {!Node} snap
	 * @constructor
	 * @implements {Operation}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Overwrite = /** @class */function () {
	    function Overwrite(source, path, snap) {
	        this.source = source;
	        this.path = path;
	        this.snap = snap;
	        /** @inheritDoc */
	        this.type = _Operation.OperationType.OVERWRITE;
	    }
	    Overwrite.prototype.operationForChild = function (childName) {
	        if (this.path.isEmpty()) {
	            return new Overwrite(this.source, _Path.Path.Empty, this.snap.getImmediateChild(childName));
	        } else {
	            return new Overwrite(this.source, this.path.popFront(), this.snap);
	        }
	    };
	    return Overwrite;
	}();
	exports.Overwrite = Overwrite;
	//# sourceMappingURL=Overwrite.js.map


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SyncPoint = undefined;

	var _CacheNode = __webpack_require__(72);

	var _ChildrenNode = __webpack_require__(51);

	var _assert = __webpack_require__(20);

	var _obj = __webpack_require__(22);

	var _ViewCache = __webpack_require__(73);

	var _View = __webpack_require__(74);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __referenceConstructor;
	/**
	 * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to
	 * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes
	 * and user writes (set, transaction, update).
	 *
	 * It's responsible for:
	 *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).
	 *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,
	 *    applyUserOverwrite, etc.)
	 */
	var SyncPoint = /** @class */function () {
	    function SyncPoint() {
	        /**
	         * The Views being tracked at this location in the tree, stored as a map where the key is a
	         * queryId and the value is the View for that query.
	         *
	         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).
	         *
	         * @type {!Object.<!string, !View>}
	         * @private
	         */
	        this.views_ = {};
	    }
	    Object.defineProperty(SyncPoint, "__referenceConstructor", {
	        get: function get() {
	            (0, _assert.assert)(__referenceConstructor, 'Reference.ts has not been loaded');
	            return __referenceConstructor;
	        },
	        set: function set(val) {
	            (0, _assert.assert)(!__referenceConstructor, '__referenceConstructor has already been defined');
	            __referenceConstructor = val;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * @return {boolean}
	     */
	    SyncPoint.prototype.isEmpty = function () {
	        return (0, _obj.isEmpty)(this.views_);
	    };
	    /**
	     *
	     * @param {!Operation} operation
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} optCompleteServerCache
	     * @return {!Array.<!Event>}
	     */
	    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {
	        var queryId = operation.source.queryId;
	        if (queryId !== null) {
	            var view = (0, _obj.safeGet)(this.views_, queryId);
	            (0, _assert.assert)(view != null, 'SyncTree gave us an op for an invalid query.');
	            return view.applyOperation(operation, writesCache, optCompleteServerCache);
	        } else {
	            var events_1 = [];
	            (0, _obj.forEach)(this.views_, function (key, view) {
	                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));
	            });
	            return events_1;
	        }
	    };
	    /**
	     * Add an event callback for the specified query.
	     *
	     * @param {!Query} query
	     * @param {!EventRegistration} eventRegistration
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} serverCache Complete server cache, if we have it.
	     * @param {boolean} serverCacheComplete
	     * @return {!Array.<!Event>} Events to raise.
	     */
	    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {
	        var queryId = query.queryIdentifier();
	        var view = (0, _obj.safeGet)(this.views_, queryId);
	        if (!view) {
	            // TODO: make writesCache take flag for complete server node
	            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);
	            var eventCacheComplete = false;
	            if (eventCache) {
	                eventCacheComplete = true;
	            } else if (serverCache instanceof _ChildrenNode.ChildrenNode) {
	                eventCache = writesCache.calcCompleteEventChildren(serverCache);
	                eventCacheComplete = false;
	            } else {
	                eventCache = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                eventCacheComplete = false;
	            }
	            var viewCache = new _ViewCache.ViewCache(new _CacheNode.CacheNode /** @type {!Node} */ /** @type {!Node} */(eventCache, eventCacheComplete, false), new _CacheNode.CacheNode(serverCache, serverCacheComplete, false));
	            view = new _View.View(query, viewCache);
	            this.views_[queryId] = view;
	        }
	        // This is guaranteed to exist now, we just created anything that was missing
	        view.addEventRegistration(eventRegistration);
	        return view.getInitialEvents(eventRegistration);
	    };
	    /**
	     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.
	     *
	     * If query is the default query, we'll check all views for the specified eventRegistration.
	     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).
	     *
	     * @param {!Query} query
	     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
	     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
	     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events
	     */
	    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {
	        var queryId = query.queryIdentifier();
	        var removed = [];
	        var cancelEvents = [];
	        var hadCompleteView = this.hasCompleteView();
	        if (queryId === 'default') {
	            // When you do ref.off(...), we search all views for the registration to remove.
	            var self_1 = this;
	            (0, _obj.forEach)(this.views_, function (viewQueryId, view) {
	                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));
	                if (view.isEmpty()) {
	                    delete self_1.views_[viewQueryId];
	                    // We'll deal with complete views later.
	                    if (!view.getQuery().getQueryParams().loadsAllData()) {
	                        removed.push(view.getQuery());
	                    }
	                }
	            });
	        } else {
	            // remove the callback from the specific view.
	            var view = (0, _obj.safeGet)(this.views_, queryId);
	            if (view) {
	                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));
	                if (view.isEmpty()) {
	                    delete this.views_[queryId];
	                    // We'll deal with complete views later.
	                    if (!view.getQuery().getQueryParams().loadsAllData()) {
	                        removed.push(view.getQuery());
	                    }
	                }
	            }
	        }
	        if (hadCompleteView && !this.hasCompleteView()) {
	            // We removed our last complete view.
	            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));
	        }
	        return { removed: removed, events: cancelEvents };
	    };
	    /**
	     * @return {!Array.<!View>}
	     */
	    SyncPoint.prototype.getQueryViews = function () {
	        var _this = this;
	        var values = Object.keys(this.views_).map(function (key) {
	            return _this.views_[key];
	        });
	        return values.filter(function (view) {
	            return !view.getQuery().getQueryParams().loadsAllData();
	        });
	    };
	    /**
	     *
	     * @param {!Path} path The path to the desired complete snapshot
	     * @return {?Node} A complete cache, if it exists
	     */
	    SyncPoint.prototype.getCompleteServerCache = function (path) {
	        var serverCache = null;
	        (0, _obj.forEach)(this.views_, function (key, view) {
	            serverCache = serverCache || view.getCompleteServerCache(path);
	        });
	        return serverCache;
	    };
	    /**
	     * @param {!Query} query
	     * @return {?View}
	     */
	    SyncPoint.prototype.viewForQuery = function (query) {
	        var params = query.getQueryParams();
	        if (params.loadsAllData()) {
	            return this.getCompleteView();
	        } else {
	            var queryId = query.queryIdentifier();
	            return (0, _obj.safeGet)(this.views_, queryId);
	        }
	    };
	    /**
	     * @param {!Query} query
	     * @return {boolean}
	     */
	    SyncPoint.prototype.viewExistsForQuery = function (query) {
	        return this.viewForQuery(query) != null;
	    };
	    /**
	     * @return {boolean}
	     */
	    SyncPoint.prototype.hasCompleteView = function () {
	        return this.getCompleteView() != null;
	    };
	    /**
	     * @return {?View}
	     */
	    SyncPoint.prototype.getCompleteView = function () {
	        var completeView = (0, _obj.findValue)(this.views_, function (view) {
	            return view.getQuery().getQueryParams().loadsAllData();
	        });
	        return completeView || null;
	    };
	    return SyncPoint;
	}();
	exports.SyncPoint = SyncPoint;
	//# sourceMappingURL=SyncPoint.js.map


/***/ }),
/* 72 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully
	 * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.
	 * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks
	 * whether a node potentially had children removed due to a filter.
	 */
	var CacheNode = /** @class */function () {
	  /**
	   * @param {!Node} node_
	   * @param {boolean} fullyInitialized_
	   * @param {boolean} filtered_
	   */
	  function CacheNode(node_, fullyInitialized_, filtered_) {
	    this.node_ = node_;
	    this.fullyInitialized_ = fullyInitialized_;
	    this.filtered_ = filtered_;
	  }
	  /**
	   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client
	   * @return {boolean}
	   */
	  CacheNode.prototype.isFullyInitialized = function () {
	    return this.fullyInitialized_;
	  };
	  /**
	   * Returns whether this node is potentially missing children due to a filter applied to the node
	   * @return {boolean}
	   */
	  CacheNode.prototype.isFiltered = function () {
	    return this.filtered_;
	  };
	  /**
	   * @param {!Path} path
	   * @return {boolean}
	   */
	  CacheNode.prototype.isCompleteForPath = function (path) {
	    if (path.isEmpty()) {
	      return this.isFullyInitialized() && !this.filtered_;
	    }
	    var childKey = path.getFront();
	    return this.isCompleteForChild(childKey);
	  };
	  /**
	   * @param {!string} key
	   * @return {boolean}
	   */
	  CacheNode.prototype.isCompleteForChild = function (key) {
	    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);
	  };
	  /**
	   * @return {!Node}
	   */
	  CacheNode.prototype.getNode = function () {
	    return this.node_;
	  };
	  return CacheNode;
	}();
	exports.CacheNode = CacheNode;
	//# sourceMappingURL=CacheNode.js.map


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ViewCache = undefined;

	var _ChildrenNode = __webpack_require__(51);

	var _CacheNode = __webpack_require__(72);

	/**
	 * Stores the data we have cached for a view.
	 *
	 * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).
	 *
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ViewCache = /** @class */function () {
	  /**
	   *
	   * @param {!CacheNode} eventCache_
	   * @param {!CacheNode} serverCache_
	   */
	  function ViewCache(eventCache_, serverCache_) {
	    this.eventCache_ = eventCache_;
	    this.serverCache_ = serverCache_;
	  }
	  /**
	   * @param {!Node} eventSnap
	   * @param {boolean} complete
	   * @param {boolean} filtered
	   * @return {!ViewCache}
	   */
	  ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {
	    return new ViewCache(new _CacheNode.CacheNode(eventSnap, complete, filtered), this.serverCache_);
	  };
	  /**
	   * @param {!Node} serverSnap
	   * @param {boolean} complete
	   * @param {boolean} filtered
	   * @return {!ViewCache}
	   */
	  ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {
	    return new ViewCache(this.eventCache_, new _CacheNode.CacheNode(serverSnap, complete, filtered));
	  };
	  /**
	   * @return {!CacheNode}
	   */
	  ViewCache.prototype.getEventCache = function () {
	    return this.eventCache_;
	  };
	  /**
	   * @return {?Node}
	   */
	  ViewCache.prototype.getCompleteEventSnap = function () {
	    return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;
	  };
	  /**
	   * @return {!CacheNode}
	   */
	  ViewCache.prototype.getServerCache = function () {
	    return this.serverCache_;
	  };
	  /**
	   * @return {?Node}
	   */
	  ViewCache.prototype.getCompleteServerSnap = function () {
	    return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;
	  };
	  /**
	   * @const
	   * @type {ViewCache}
	   */
	  ViewCache.Empty = new ViewCache(new _CacheNode.CacheNode(_ChildrenNode.ChildrenNode.EMPTY_NODE,
	  /*fullyInitialized=*/false,
	  /*filtered=*/false), new _CacheNode.CacheNode(_ChildrenNode.ChildrenNode.EMPTY_NODE,
	  /*fullyInitialized=*/false,
	  /*filtered=*/false));
	  return ViewCache;
	}();
	exports.ViewCache = ViewCache;
	//# sourceMappingURL=ViewCache.js.map


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.View = undefined;

	var _IndexedFilter = __webpack_require__(75);

	var _ViewProcessor = __webpack_require__(77);

	var _ChildrenNode = __webpack_require__(51);

	var _CacheNode = __webpack_require__(72);

	var _ViewCache = __webpack_require__(73);

	var _EventGenerator = __webpack_require__(80);

	var _assert = __webpack_require__(20);

	var _Operation = __webpack_require__(66);

	var _Change = __webpack_require__(76);

	var _PriorityIndex = __webpack_require__(46);

	/**
	 * A view represents a specific location and query that has 1 or more event registrations.
	 *
	 * It does several things:
	 *  - Maintains the list of event registrations for this location/query.
	 *  - Maintains a cache of the data visible for this location/query.
	 *  - Applies new operations (via applyOperation), updates the cache, and based on the event
	 *    registrations returns the set of events to be raised.
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var View = /** @class */function () {
	    /**
	     *
	     * @param {!Query} query_
	     * @param {!ViewCache} initialViewCache
	     */
	    function View(query_, initialViewCache) {
	        this.query_ = query_;
	        this.eventRegistrations_ = [];
	        var params = this.query_.getQueryParams();
	        var indexFilter = new _IndexedFilter.IndexedFilter(params.getIndex());
	        var filter = params.getNodeFilter();
	        /**
	         * @type {ViewProcessor}
	         * @private
	         */
	        this.processor_ = new _ViewProcessor.ViewProcessor(filter);
	        var initialServerCache = initialViewCache.getServerCache();
	        var initialEventCache = initialViewCache.getEventCache();
	        // Don't filter server node with other filter than index, wait for tagged listen
	        var serverSnap = indexFilter.updateFullNode(_ChildrenNode.ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);
	        var eventSnap = filter.updateFullNode(_ChildrenNode.ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);
	        var newServerCache = new _CacheNode.CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());
	        var newEventCache = new _CacheNode.CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());
	        /**
	         * @type {!ViewCache}
	         * @private
	         */
	        this.viewCache_ = new _ViewCache.ViewCache(newEventCache, newServerCache);
	        /**
	         * @type {!EventGenerator}
	         * @private
	         */
	        this.eventGenerator_ = new _EventGenerator.EventGenerator(this.query_);
	    }
	    /**
	     * @return {!Query}
	     */
	    View.prototype.getQuery = function () {
	        return this.query_;
	    };
	    /**
	     * @return {?Node}
	     */
	    View.prototype.getServerCache = function () {
	        return this.viewCache_.getServerCache().getNode();
	    };
	    /**
	     * @param {!Path} path
	     * @return {?Node}
	     */
	    View.prototype.getCompleteServerCache = function (path) {
	        var cache = this.viewCache_.getCompleteServerSnap();
	        if (cache) {
	            // If this isn't a "loadsAllData" view, then cache isn't actually a complete cache and
	            // we need to see if it contains the child we're interested in.
	            if (this.query_.getQueryParams().loadsAllData() || !path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty()) {
	                return cache.getChild(path);
	            }
	        }
	        return null;
	    };
	    /**
	     * @return {boolean}
	     */
	    View.prototype.isEmpty = function () {
	        return this.eventRegistrations_.length === 0;
	    };
	    /**
	     * @param {!EventRegistration} eventRegistration
	     */
	    View.prototype.addEventRegistration = function (eventRegistration) {
	        this.eventRegistrations_.push(eventRegistration);
	    };
	    /**
	     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.
	     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.
	     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.
	     */
	    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {
	        var cancelEvents = [];
	        if (cancelError) {
	            (0, _assert.assert)(eventRegistration == null, 'A cancel should cancel all event registrations.');
	            var path_1 = this.query_.path;
	            this.eventRegistrations_.forEach(function (registration) {
	                cancelError /** @type {!Error} */ = cancelError;
	                var maybeEvent = registration.createCancelEvent(cancelError, path_1);
	                if (maybeEvent) {
	                    cancelEvents.push(maybeEvent);
	                }
	            });
	        }
	        if (eventRegistration) {
	            var remaining = [];
	            for (var i = 0; i < this.eventRegistrations_.length; ++i) {
	                var existing = this.eventRegistrations_[i];
	                if (!existing.matches(eventRegistration)) {
	                    remaining.push(existing);
	                } else if (eventRegistration.hasAnyCallback()) {
	                    // We're removing just this one
	                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));
	                    break;
	                }
	            }
	            this.eventRegistrations_ = remaining;
	        } else {
	            this.eventRegistrations_ = [];
	        }
	        return cancelEvents;
	    };
	    /**
	     * Applies the given Operation, updates our cache, and returns the appropriate events.
	     *
	     * @param {!Operation} operation
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeServerCache
	     * @return {!Array.<!Event>}
	     */
	    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {
	        if (operation.type === _Operation.OperationType.MERGE && operation.source.queryId !== null) {
	            (0, _assert.assert)(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');
	            (0, _assert.assert)(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');
	        }
	        var oldViewCache = this.viewCache_;
	        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);
	        this.processor_.assertIndexed(result.viewCache);
	        (0, _assert.assert)(result.viewCache.getServerCache().isFullyInitialized() || !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');
	        this.viewCache_ = result.viewCache;
	        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);
	    };
	    /**
	     * @param {!EventRegistration} registration
	     * @return {!Array.<!Event>}
	     */
	    View.prototype.getInitialEvents = function (registration) {
	        var eventSnap = this.viewCache_.getEventCache();
	        var initialChanges = [];
	        if (!eventSnap.getNode().isLeafNode()) {
	            var eventNode = eventSnap.getNode();
	            eventNode.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	                initialChanges.push(_Change.Change.childAddedChange(key, childNode));
	            });
	        }
	        if (eventSnap.isFullyInitialized()) {
	            initialChanges.push(_Change.Change.valueChange(eventSnap.getNode()));
	        }
	        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);
	    };
	    /**
	     * @private
	     * @param {!Array.<!Change>} changes
	     * @param {!Node} eventCache
	     * @param {EventRegistration=} eventRegistration
	     * @return {!Array.<!Event>}
	     */
	    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {
	        var registrations = eventRegistration ? [eventRegistration] : this.eventRegistrations_;
	        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);
	    };
	    return View;
	}();
	exports.View = View;
	//# sourceMappingURL=View.js.map


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.IndexedFilter = undefined;

	var _assert = __webpack_require__(20);

	var _Change = __webpack_require__(76);

	var _ChildrenNode = __webpack_require__(51);

	var _PriorityIndex = __webpack_require__(46);

	/**
	 * Doesn't really filter nodes but applies an index to the node and keeps track of any changes
	 *
	 * @constructor
	 * @implements {NodeFilter}
	 * @param {!Index} index
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var IndexedFilter = /** @class */function () {
	    function IndexedFilter(index_) {
	        this.index_ = index_;
	    }
	    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
	        (0, _assert.assert)(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');
	        var oldChild = snap.getImmediateChild(key);
	        // Check if anything actually changed.
	        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {
	            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.
	            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need
	            // to avoid treating these cases as "nothing changed."
	            if (oldChild.isEmpty() == newChild.isEmpty()) {
	                // Nothing changed.
	                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.
	                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');
	                return snap;
	            }
	        }
	        if (optChangeAccumulator != null) {
	            if (newChild.isEmpty()) {
	                if (snap.hasChild(key)) {
	                    optChangeAccumulator.trackChildChange(_Change.Change.childRemovedChange(key, oldChild));
	                } else {
	                    (0, _assert.assert)(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');
	                }
	            } else if (oldChild.isEmpty()) {
	                optChangeAccumulator.trackChildChange(_Change.Change.childAddedChange(key, newChild));
	            } else {
	                optChangeAccumulator.trackChildChange(_Change.Change.childChangedChange(key, newChild, oldChild));
	            }
	        }
	        if (snap.isLeafNode() && newChild.isEmpty()) {
	            return snap;
	        } else {
	            // Make sure the node is indexed
	            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
	        if (optChangeAccumulator != null) {
	            if (!oldSnap.isLeafNode()) {
	                oldSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	                    if (!newSnap.hasChild(key)) {
	                        optChangeAccumulator.trackChildChange(_Change.Change.childRemovedChange(key, childNode));
	                    }
	                });
	            }
	            if (!newSnap.isLeafNode()) {
	                newSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	                    if (oldSnap.hasChild(key)) {
	                        var oldChild = oldSnap.getImmediateChild(key);
	                        if (!oldChild.equals(childNode)) {
	                            optChangeAccumulator.trackChildChange(_Change.Change.childChangedChange(key, childNode, oldChild));
	                        }
	                    } else {
	                        optChangeAccumulator.trackChildChange(_Change.Change.childAddedChange(key, childNode));
	                    }
	                });
	            }
	        }
	        return newSnap.withIndex(this.index_);
	    };
	    /**
	     * @inheritDoc
	     */
	    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
	        if (oldSnap.isEmpty()) {
	            return _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        } else {
	            return oldSnap.updatePriority(newPriority);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    IndexedFilter.prototype.filtersNodes = function () {
	        return false;
	    };
	    /**
	     * @inheritDoc
	     */
	    IndexedFilter.prototype.getIndexedFilter = function () {
	        return this;
	    };
	    /**
	     * @inheritDoc
	     */
	    IndexedFilter.prototype.getIndex = function () {
	        return this.index_;
	    };
	    return IndexedFilter;
	}();
	exports.IndexedFilter = IndexedFilter;
	//# sourceMappingURL=IndexedFilter.js.map


/***/ }),
/* 76 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @constructor
	 * @struct
	 * @param {!string} type The event type
	 * @param {!Node} snapshotNode The data
	 * @param {string=} childName The name for this child, if it's a child event
	 * @param {Node=} oldSnap Used for intermediate processing of child changed events
	 * @param {string=} prevName The name for the previous child, if applicable
	 */
	var Change = /** @class */function () {
	  function Change(type, snapshotNode, childName, oldSnap, prevName) {
	    this.type = type;
	    this.snapshotNode = snapshotNode;
	    this.childName = childName;
	    this.oldSnap = oldSnap;
	    this.prevName = prevName;
	  }
	  /**
	   * @param {!Node} snapshot
	   * @return {!Change}
	   */
	  Change.valueChange = function (snapshot) {
	    return new Change(Change.VALUE, snapshot);
	  };
	  /**
	   * @param {string} childKey
	   * @param {!Node} snapshot
	   * @return {!Change}
	   */
	  Change.childAddedChange = function (childKey, snapshot) {
	    return new Change(Change.CHILD_ADDED, snapshot, childKey);
	  };
	  /**
	   * @param {string} childKey
	   * @param {!Node} snapshot
	   * @return {!Change}
	   */
	  Change.childRemovedChange = function (childKey, snapshot) {
	    return new Change(Change.CHILD_REMOVED, snapshot, childKey);
	  };
	  /**
	   * @param {string} childKey
	   * @param {!Node} newSnapshot
	   * @param {!Node} oldSnapshot
	   * @return {!Change}
	   */
	  Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {
	    return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);
	  };
	  /**
	   * @param {string} childKey
	   * @param {!Node} snapshot
	   * @return {!Change}
	   */
	  Change.childMovedChange = function (childKey, snapshot) {
	    return new Change(Change.CHILD_MOVED, snapshot, childKey);
	  };
	  //event types
	  /** Event type for a child added */
	  Change.CHILD_ADDED = 'child_added';
	  /** Event type for a child removed */
	  Change.CHILD_REMOVED = 'child_removed';
	  /** Event type for a child changed */
	  Change.CHILD_CHANGED = 'child_changed';
	  /** Event type for a child moved */
	  Change.CHILD_MOVED = 'child_moved';
	  /** Event type for a value change */
	  Change.VALUE = 'value';
	  return Change;
	}();
	exports.Change = Change;
	//# sourceMappingURL=Change.js.map


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ViewProcessor = exports.ProcessorResult = undefined;

	var _Operation = __webpack_require__(66);

	var _assert = __webpack_require__(20);

	var _ChildChangeAccumulator = __webpack_require__(78);

	var _Change = __webpack_require__(76);

	var _ChildrenNode = __webpack_require__(51);

	var _KeyIndex = __webpack_require__(43);

	var _ImmutableTree = __webpack_require__(67);

	var _Path = __webpack_require__(33);

	var _CompleteChildSource = __webpack_require__(79);

	/**
	 * @constructor
	 * @struct
	 */
	var ProcessorResult = /** @class */function () {
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Array.<!Change>} changes
	     */
	    function ProcessorResult(viewCache, changes) {
	        this.viewCache = viewCache;
	        this.changes = changes;
	    }
	    return ProcessorResult;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.ProcessorResult = ProcessorResult;
	/**
	 * @constructor
	 */

	var ViewProcessor = /** @class */function () {
	    /**
	     * @param {!NodeFilter} filter_
	     */
	    function ViewProcessor(filter_) {
	        this.filter_ = filter_;
	    }
	    /**
	     * @param {!ViewCache} viewCache
	     */
	    ViewProcessor.prototype.assertIndexed = function (viewCache) {
	        (0, _assert.assert)(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');
	        (0, _assert.assert)(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');
	    };
	    /**
	     * @param {!ViewCache} oldViewCache
	     * @param {!Operation} operation
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeCache
	     * @return {!ProcessorResult}
	     */
	    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {
	        var accumulator = new _ChildChangeAccumulator.ChildChangeAccumulator();
	        var newViewCache, filterServerNode;
	        if (operation.type === _Operation.OperationType.OVERWRITE) {
	            var overwrite = operation;
	            if (overwrite.source.fromUser) {
	                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);
	            } else {
	                (0, _assert.assert)(overwrite.source.fromServer, 'Unknown source.');
	                // We filter the node if it's a tagged update or the node has been previously filtered  and the
	                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered
	                // again
	                filterServerNode = overwrite.source.tagged || oldViewCache.getServerCache().isFiltered() && !overwrite.path.isEmpty();
	                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);
	            }
	        } else if (operation.type === _Operation.OperationType.MERGE) {
	            var merge = operation;
	            if (merge.source.fromUser) {
	                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);
	            } else {
	                (0, _assert.assert)(merge.source.fromServer, 'Unknown source.');
	                // We filter the node if it's a tagged update or the node has been previously filtered
	                filterServerNode = merge.source.tagged || oldViewCache.getServerCache().isFiltered();
	                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);
	            }
	        } else if (operation.type === _Operation.OperationType.ACK_USER_WRITE) {
	            var ackUserWrite = operation;
	            if (!ackUserWrite.revert) {
	                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);
	            } else {
	                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);
	            }
	        } else if (operation.type === _Operation.OperationType.LISTEN_COMPLETE) {
	            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);
	        } else {
	            throw (0, _assert.assertionError)('Unknown operation type: ' + operation.type);
	        }
	        var changes = accumulator.getChanges();
	        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);
	        return new ProcessorResult(newViewCache, changes);
	    };
	    /**
	     * @param {!ViewCache} oldViewCache
	     * @param {!ViewCache} newViewCache
	     * @param {!Array.<!Change>} accumulator
	     * @private
	     */
	    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {
	        var eventSnap = newViewCache.getEventCache();
	        if (eventSnap.isFullyInitialized()) {
	            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();
	            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();
	            if (accumulator.length > 0 || !oldViewCache.getEventCache().isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals /** @type {!Node} */(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {
	                accumulator.push(_Change.Change.valueChange(
	                /** @type {!Node} */newViewCache.getCompleteEventSnap()));
	            }
	        }
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} changePath
	     * @param {!WriteTreeRef} writesCache
	     * @param {!CompleteChildSource} source
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {
	        var oldEventSnap = viewCache.getEventCache();
	        if (writesCache.shadowingWrite(changePath) != null) {
	            // we have a shadowing write, ignore changes
	            return viewCache;
	        } else {
	            var newEventCache = void 0,
	                serverNode = void 0;
	            if (changePath.isEmpty()) {
	                // TODO: figure out how this plays with "sliding ack windows"
	                (0, _assert.assert)(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');
	                if (viewCache.getServerCache().isFiltered()) {
	                    // We need to special case this, because we need to only apply writes to complete children, or
	                    // we might end up raising events for incomplete children. If the server data is filtered deep
	                    // writes cannot be guaranteed to be complete
	                    var serverCache = viewCache.getCompleteServerSnap();
	                    var completeChildren = serverCache instanceof _ChildrenNode.ChildrenNode ? serverCache : _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);
	                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);
	                } else {
	                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
	                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);
	                }
	            } else {
	                var childKey = changePath.getFront();
	                if (childKey == '.priority') {
	                    (0, _assert.assert)(changePath.getLength() == 1, "Can't have a priority with additional path components");
	                    var oldEventNode = oldEventSnap.getNode();
	                    serverNode = viewCache.getServerCache().getNode();
	                    // we might have overwrites for this priority
	                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);
	                    if (updatedPriority != null) {
	                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);
	                    } else {
	                        // priority didn't change, keep old node
	                        newEventCache = oldEventSnap.getNode();
	                    }
	                } else {
	                    var childChangePath = changePath.popFront();
	                    // update child
	                    var newEventChild = void 0;
	                    if (oldEventSnap.isCompleteForChild(childKey)) {
	                        serverNode = viewCache.getServerCache().getNode();
	                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);
	                        if (eventChildUpdate != null) {
	                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);
	                        } else {
	                            // Nothing changed, just keep the old child
	                            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);
	                        }
	                    } else {
	                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());
	                    }
	                    if (newEventChild != null) {
	                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);
	                    } else {
	                        // no complete child available or no change
	                        newEventCache = oldEventSnap.getNode();
	                    }
	                }
	            }
	            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());
	        }
	    };
	    /**
	     * @param {!ViewCache} oldViewCache
	     * @param {!Path} changePath
	     * @param {!Node} changedSnap
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeCache
	     * @param {boolean} filterServerNode
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {
	        var oldServerSnap = oldViewCache.getServerCache();
	        var newServerCache;
	        var serverFilter = filterServerNode ? this.filter_ : this.filter_.getIndexedFilter();
	        if (changePath.isEmpty()) {
	            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);
	        } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {
	            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update
	            var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);
	            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);
	        } else {
	            var childKey = changePath.getFront();
	            if (!oldServerSnap.isCompleteForPath(changePath) && changePath.getLength() > 1) {
	                // We don't update incomplete nodes with updates intended for other listeners
	                return oldViewCache;
	            }
	            var childChangePath = changePath.popFront();
	            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);
	            var newChildNode = childNode.updateChild(childChangePath, changedSnap);
	            if (childKey == '.priority') {
	                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);
	            } else {
	                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, _CompleteChildSource.NO_COMPLETE_CHILD_SOURCE, null);
	            }
	        }
	        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());
	        var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);
	        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);
	    };
	    /**
	     * @param {!ViewCache} oldViewCache
	     * @param {!Path} changePath
	     * @param {!Node} changedSnap
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeCache
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {
	        var oldEventSnap = oldViewCache.getEventCache();
	        var newViewCache, newEventCache;
	        var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);
	        if (changePath.isEmpty()) {
	            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);
	            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());
	        } else {
	            var childKey = changePath.getFront();
	            if (childKey === '.priority') {
	                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);
	                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());
	            } else {
	                var childChangePath = changePath.popFront();
	                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);
	                var newChild = void 0;
	                if (childChangePath.isEmpty()) {
	                    // Child overwrite, we can replace the child
	                    newChild = changedSnap;
	                } else {
	                    var childNode = source.getCompleteChild(childKey);
	                    if (childNode != null) {
	                        if (childChangePath.getBack() === '.priority' && childNode.getChild(childChangePath.parent()).isEmpty()) {
	                            // This is a priority update on an empty node. If this node exists on the server, the
	                            // server will send down the priority in the update, so ignore for now
	                            newChild = childNode;
	                        } else {
	                            newChild = childNode.updateChild(childChangePath, changedSnap);
	                        }
	                    } else {
	                        // There is no complete child node available
	                        newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                    }
	                }
	                if (!oldChild.equals(newChild)) {
	                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);
	                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());
	                } else {
	                    newViewCache = oldViewCache;
	                }
	            }
	        }
	        return newViewCache;
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {string} childKey
	     * @return {boolean}
	     * @private
	     */
	    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {
	        return viewCache.getEventCache().isCompleteForChild(childKey);
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} path
	     * @param {ImmutableTree.<!Node>} changedChildren
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} serverCache
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {
	        var _this = this;
	        // HACK: In the case of a limit query, there may be some changes that bump things out of the
	        // window leaving room for new items.  It's important we process these changes first, so we
	        // iterate the changes twice, first processing any that affect items currently in view.
	        // TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
	        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but
	        // not the other.
	        var curViewCache = viewCache;
	        changedChildren.foreach(function (relativePath, childNode) {
	            var writePath = path.child(relativePath);
	            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {
	                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);
	            }
	        });
	        changedChildren.foreach(function (relativePath, childNode) {
	            var writePath = path.child(relativePath);
	            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {
	                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);
	            }
	        });
	        return curViewCache;
	    };
	    /**
	     * @param {!Node} node
	     * @param {ImmutableTree.<!Node>} merge
	     * @return {!Node}
	     * @private
	     */
	    ViewProcessor.prototype.applyMerge_ = function (node, merge) {
	        merge.foreach(function (relativePath, childNode) {
	            node = node.updateChild(relativePath, childNode);
	        });
	        return node;
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} path
	     * @param {!ImmutableTree.<!Node>} changedChildren
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} serverCache
	     * @param {boolean} filterServerNode
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {
	        var _this = this;
	        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and
	        // wait for the complete data update coming soon.
	        if (viewCache.getServerCache().getNode().isEmpty() && !viewCache.getServerCache().isFullyInitialized()) {
	            return viewCache;
	        }
	        // HACK: In the case of a limit query, there may be some changes that bump things out of the
	        // window leaving room for new items.  It's important we process these changes first, so we
	        // iterate the changes twice, first processing any that affect items currently in view.
	        // TODO: I consider an item "in view" if cacheHasChild is true, which checks both the server
	        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but
	        // not the other.
	        var curViewCache = viewCache;
	        var viewMergeTree;
	        if (path.isEmpty()) {
	            viewMergeTree = changedChildren;
	        } else {
	            viewMergeTree = _ImmutableTree.ImmutableTree.Empty.setTree(path, changedChildren);
	        }
	        var serverNode = viewCache.getServerCache().getNode();
	        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {
	            if (serverNode.hasChild(childKey)) {
	                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);
	                var newChild = _this.applyMerge_(serverChild, childTree);
	                curViewCache = _this.applyServerOverwrite_(curViewCache, new _Path.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);
	            }
	        });
	        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {
	            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) && childMergeTree.value == null;
	            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {
	                var serverChild = viewCache.getServerCache().getNode().getImmediateChild(childKey);
	                var newChild = _this.applyMerge_(serverChild, childMergeTree);
	                curViewCache = _this.applyServerOverwrite_(curViewCache, new _Path.Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);
	            }
	        });
	        return curViewCache;
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} ackPath
	     * @param {!ImmutableTree<!boolean>} affectedTree
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeCache
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {
	        if (writesCache.shadowingWrite(ackPath) != null) {
	            return viewCache;
	        }
	        // Only filter server node if it is currently filtered
	        var filterServerNode = viewCache.getServerCache().isFiltered();
	        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update
	        // now that it won't be shadowed.
	        var serverCache = viewCache.getServerCache();
	        if (affectedTree.value != null) {
	            // This is an overwrite.
	            if (ackPath.isEmpty() && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {
	                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);
	            } else if (ackPath.isEmpty()) {
	                // This is a goofy edge case where we are acking data at this location but don't have full data.  We
	                // should just re-apply whatever we have in our cache as a merge.
	                var changedChildren_1 = _ImmutableTree.ImmutableTree.Empty;
	                serverCache.getNode().forEachChild(_KeyIndex.KEY_INDEX, function (name, node) {
	                    changedChildren_1 = changedChildren_1.set(new _Path.Path(name), node);
	                });
	                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);
	            } else {
	                return viewCache;
	            }
	        } else {
	            // This is a merge.
	            var changedChildren_2 = _ImmutableTree.ImmutableTree.Empty;
	            affectedTree.foreach(function (mergePath, value) {
	                var serverCachePath = ackPath.child(mergePath);
	                if (serverCache.isCompleteForPath(serverCachePath)) {
	                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));
	                }
	            });
	            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);
	        }
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} path
	     * @param {!WriteTreeRef} writesCache
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {
	        var oldServerNode = viewCache.getServerCache();
	        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());
	        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, _CompleteChildSource.NO_COMPLETE_CHILD_SOURCE, accumulator);
	    };
	    /**
	     * @param {!ViewCache} viewCache
	     * @param {!Path} path
	     * @param {!WriteTreeRef} writesCache
	     * @param {?Node} completeServerCache
	     * @param {!ChildChangeAccumulator} accumulator
	     * @return {!ViewCache}
	     * @private
	     */
	    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {
	        var complete;
	        if (writesCache.shadowingWrite(path) != null) {
	            return viewCache;
	        } else {
	            var source = new _CompleteChildSource.WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);
	            var oldEventCache = viewCache.getEventCache().getNode();
	            var newEventCache = void 0;
	            if (path.isEmpty() || path.getFront() === '.priority') {
	                var newNode = void 0;
	                if (viewCache.getServerCache().isFullyInitialized()) {
	                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
	                } else {
	                    var serverChildren = viewCache.getServerCache().getNode();
	                    (0, _assert.assert)(serverChildren instanceof _ChildrenNode.ChildrenNode, 'serverChildren would be complete if leaf node');
	                    newNode = writesCache.calcCompleteEventChildren(serverChildren);
	                }
	                newNode = newNode;
	                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);
	            } else {
	                var childKey = path.getFront();
	                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());
	                if (newChild == null && viewCache.getServerCache().isCompleteForChild(childKey)) {
	                    newChild = oldEventCache.getImmediateChild(childKey);
	                }
	                if (newChild != null) {
	                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);
	                } else if (viewCache.getEventCache().getNode().hasChild(childKey)) {
	                    // No complete child available, delete the existing one, if any
	                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, _ChildrenNode.ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);
	                } else {
	                    newEventCache = oldEventCache;
	                }
	                if (newEventCache.isEmpty() && viewCache.getServerCache().isFullyInitialized()) {
	                    // We might have reverted all child writes. Maybe the old event was a leaf node
	                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());
	                    if (complete.isLeafNode()) {
	                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);
	                    }
	                }
	            }
	            complete = viewCache.getServerCache().isFullyInitialized() || writesCache.shadowingWrite(_Path.Path.Empty) != null;
	            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());
	        }
	    };
	    return ViewProcessor;
	}();
	exports.ViewProcessor = ViewProcessor;
	//# sourceMappingURL=ViewProcessor.js.map


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ChildChangeAccumulator = undefined;

	var _obj = __webpack_require__(22);

	var _Change = __webpack_require__(76);

	var _assert = __webpack_require__(20);

	/**
	 * @constructor
	 */
	var ChildChangeAccumulator = /** @class */function () {
	    function ChildChangeAccumulator() {
	        this.changeMap_ = {};
	    }
	    /**
	     * @param {!Change} change
	     */
	    ChildChangeAccumulator.prototype.trackChildChange = function (change) {
	        var type = change.type;
	        var childKey /** @type {!string} */ = change.childName;
	        (0, _assert.assert)(type == _Change.Change.CHILD_ADDED || type == _Change.Change.CHILD_CHANGED || type == _Change.Change.CHILD_REMOVED, 'Only child changes supported for tracking');
	        (0, _assert.assert)(childKey !== '.priority', 'Only non-priority child changes can be tracked.');
	        var oldChange = (0, _obj.safeGet)(this.changeMap_, childKey);
	        if (oldChange) {
	            var oldType = oldChange.type;
	            if (type == _Change.Change.CHILD_ADDED && oldType == _Change.Change.CHILD_REMOVED) {
	                this.changeMap_[childKey] = _Change.Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);
	            } else if (type == _Change.Change.CHILD_REMOVED && oldType == _Change.Change.CHILD_ADDED) {
	                delete this.changeMap_[childKey];
	            } else if (type == _Change.Change.CHILD_REMOVED && oldType == _Change.Change.CHILD_CHANGED) {
	                this.changeMap_[childKey] = _Change.Change.childRemovedChange(childKey, oldChange.oldSnap);
	            } else if (type == _Change.Change.CHILD_CHANGED && oldType == _Change.Change.CHILD_ADDED) {
	                this.changeMap_[childKey] = _Change.Change.childAddedChange(childKey, change.snapshotNode);
	            } else if (type == _Change.Change.CHILD_CHANGED && oldType == _Change.Change.CHILD_CHANGED) {
	                this.changeMap_[childKey] = _Change.Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);
	            } else {
	                throw (0, _assert.assertionError)('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);
	            }
	        } else {
	            this.changeMap_[childKey] = change;
	        }
	    };
	    /**
	     * @return {!Array.<!Change>}
	     */
	    ChildChangeAccumulator.prototype.getChanges = function () {
	        return (0, _obj.getValues)(this.changeMap_);
	    };
	    return ChildChangeAccumulator;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.ChildChangeAccumulator = ChildChangeAccumulator;
	//# sourceMappingURL=ChildChangeAccumulator.js.map


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.WriteTreeCompleteChildSource = exports.NO_COMPLETE_CHILD_SOURCE = exports.NoCompleteChildSource_ = undefined;

	var _CacheNode = __webpack_require__(72);

	/**
	 * An implementation of CompleteChildSource that never returns any additional children
	 *
	 * @private
	 * @constructor
	 * @implements CompleteChildSource
	 */
	var NoCompleteChildSource_ = /** @class */function () {
	    function NoCompleteChildSource_() {}
	    /**
	     * @inheritDoc
	     */
	    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {
	        return null;
	    };
	    /**
	     * @inheritDoc
	     */
	    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {
	        return null;
	    };
	    return NoCompleteChildSource_;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.NoCompleteChildSource_ = NoCompleteChildSource_;
	/**
	 * Singleton instance.
	 * @const
	 * @type {!CompleteChildSource}
	 */

	var NO_COMPLETE_CHILD_SOURCE = exports.NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();
	/**
	 * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or
	 * old event caches available to calculate complete children.
	 *
	 *
	 * @implements CompleteChildSource
	 */
	var WriteTreeCompleteChildSource = /** @class */function () {
	    /**
	     * @param {!WriteTreeRef} writes_
	     * @param {!ViewCache} viewCache_
	     * @param {?Node} optCompleteServerCache_
	     */
	    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {
	        if (optCompleteServerCache_ === void 0) {
	            optCompleteServerCache_ = null;
	        }
	        this.writes_ = writes_;
	        this.viewCache_ = viewCache_;
	        this.optCompleteServerCache_ = optCompleteServerCache_;
	    }
	    /**
	     * @inheritDoc
	     */
	    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {
	        var node = this.viewCache_.getEventCache();
	        if (node.isCompleteForChild(childKey)) {
	            return node.getNode().getImmediateChild(childKey);
	        } else {
	            var serverNode = this.optCompleteServerCache_ != null ? new _CacheNode.CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.getServerCache();
	            return this.writes_.calcCompleteChild(childKey, serverNode);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {
	        var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();
	        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);
	        if (nodes.length === 0) {
	            return null;
	        } else {
	            return nodes[0];
	        }
	    };
	    return WriteTreeCompleteChildSource;
	}();
	exports.WriteTreeCompleteChildSource = WriteTreeCompleteChildSource;
	//# sourceMappingURL=CompleteChildSource.js.map


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.EventGenerator = undefined;

	var _Node = __webpack_require__(45);

	var _Change = __webpack_require__(76);

	var _assert = __webpack_require__(20);

	/**
	 * An EventGenerator is used to convert "raw" changes (Change) as computed by the
	 * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()
	 * for details.
	 *
	 * @constructor
	 */
	var EventGenerator = /** @class */function () {
	    /**
	     *
	     * @param {!Query} query_
	     */
	    function EventGenerator(query_) {
	        this.query_ = query_;
	        /**
	         * @private
	         * @type {!Index}
	         */
	        this.index_ = this.query_.getQueryParams().getIndex();
	    }
	    /**
	     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of
	     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.
	     *
	     * Notes:
	     *  - child_moved events will be synthesized at this time for any child_changed events that affect
	     *    our index.
	     *  - prevName will be calculated based on the index ordering.
	     *
	     * @param {!Array.<!Change>} changes
	     * @param {!Node} eventCache
	     * @param {!Array.<!EventRegistration>} eventRegistrations
	     * @return {!Array.<!Event>}
	     */
	    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {
	        var _this = this;
	        var events = [];
	        var moves = [];
	        changes.forEach(function (change) {
	            if (change.type === _Change.Change.CHILD_CHANGED && _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {
	                moves.push(_Change.Change.childMovedChange(change.childName, change.snapshotNode));
	            }
	        });
	        this.generateEventsForType_(events, _Change.Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);
	        this.generateEventsForType_(events, _Change.Change.CHILD_ADDED, changes, eventRegistrations, eventCache);
	        this.generateEventsForType_(events, _Change.Change.CHILD_MOVED, moves, eventRegistrations, eventCache);
	        this.generateEventsForType_(events, _Change.Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);
	        this.generateEventsForType_(events, _Change.Change.VALUE, changes, eventRegistrations, eventCache);
	        return events;
	    };
	    /**
	     * Given changes of a single change type, generate the corresponding events.
	     *
	     * @param {!Array.<!Event>} events
	     * @param {!string} eventType
	     * @param {!Array.<!Change>} changes
	     * @param {!Array.<!EventRegistration>} registrations
	     * @param {!Node} eventCache
	     * @private
	     */
	    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {
	        var _this = this;
	        var filteredChanges = changes.filter(function (change) {
	            return change.type === eventType;
	        });
	        filteredChanges.sort(this.compareChanges_.bind(this));
	        filteredChanges.forEach(function (change) {
	            var materializedChange = _this.materializeSingleChange_(change, eventCache);
	            registrations.forEach(function (registration) {
	                if (registration.respondsTo(change.type)) {
	                    events.push(registration.createEvent(materializedChange, _this.query_));
	                }
	            });
	        });
	    };
	    /**
	     * @param {!Change} change
	     * @param {!Node} eventCache
	     * @return {!Change}
	     * @private
	     */
	    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {
	        if (change.type === 'value' || change.type === 'child_removed') {
	            return change;
	        } else {
	            change.prevName = eventCache.getPredecessorChildName(
	            /** @type {!string} */
	            change.childName, change.snapshotNode, this.index_);
	            return change;
	        }
	    };
	    /**
	     * @param {!Change} a
	     * @param {!Change} b
	     * @return {number}
	     * @private
	     */
	    EventGenerator.prototype.compareChanges_ = function (a, b) {
	        if (a.childName == null || b.childName == null) {
	            throw (0, _assert.assertionError)('Should only compare child_ events.');
	        }
	        var aWrapped = new _Node.NamedNode(a.childName, a.snapshotNode);
	        var bWrapped = new _Node.NamedNode(b.childName, b.snapshotNode);
	        return this.index_.compare(aWrapped, bWrapped);
	    };
	    return EventGenerator;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.EventGenerator = EventGenerator;
	//# sourceMappingURL=EventGenerator.js.map


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.WriteTreeRef = exports.WriteTree = undefined;

	var _obj = __webpack_require__(22);

	var _assert = __webpack_require__(20);

	var _Path = __webpack_require__(33);

	var _CompoundWrite = __webpack_require__(82);

	var _PriorityIndex = __webpack_require__(46);

	var _ChildrenNode = __webpack_require__(51);

	/**
	 * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them
	 * with underlying server data (to create "event cache" data).  Pending writes are added with addOverwrite()
	 * and addMerge(), and removed with removeWrite().
	 *
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var WriteTree = /** @class */function () {
	    function WriteTree() {
	        /**
	         * A tree tracking the result of applying all visible writes.  This does not include transactions with
	         * applyLocally=false or writes that are completely shadowed by other writes.
	         *
	         * @type {!CompoundWrite}
	         * @private
	         */
	        this.visibleWrites_ = _CompoundWrite.CompoundWrite.Empty;
	        /**
	         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary
	         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also
	         * used by transactions).
	         *
	         * @type {!Array.<!WriteRecord>}
	         * @private
	         */
	        this.allWrites_ = [];
	        this.lastWriteId_ = -1;
	    }
	    /**
	     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.
	     *
	     * @param {!Path} path
	     * @return {!WriteTreeRef}
	     */
	    WriteTree.prototype.childWrites = function (path) {
	        return new WriteTreeRef(path, this);
	    };
	    /**
	     * Record a new overwrite from user code.
	     *
	     * @param {!Path} path
	     * @param {!Node} snap
	     * @param {!number} writeId
	     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches
	     */
	    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {
	        (0, _assert.assert)(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');
	        if (visible === undefined) {
	            visible = true;
	        }
	        this.allWrites_.push({
	            path: path,
	            snap: snap,
	            writeId: writeId,
	            visible: visible
	        });
	        if (visible) {
	            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);
	        }
	        this.lastWriteId_ = writeId;
	    };
	    /**
	     * Record a new merge from user code.
	     *
	     * @param {!Path} path
	     * @param {!Object.<string, !Node>} changedChildren
	     * @param {!number} writeId
	     */
	    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {
	        (0, _assert.assert)(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');
	        this.allWrites_.push({
	            path: path,
	            children: changedChildren,
	            writeId: writeId,
	            visible: true
	        });
	        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);
	        this.lastWriteId_ = writeId;
	    };
	    /**
	     * @param {!number} writeId
	     * @return {?WriteRecord}
	     */
	    WriteTree.prototype.getWrite = function (writeId) {
	        for (var i = 0; i < this.allWrites_.length; i++) {
	            var record = this.allWrites_[i];
	            if (record.writeId === writeId) {
	                return record;
	            }
	        }
	        return null;
	    };
	    /**
	     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates
	     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.
	     *
	     * @param {!number} writeId
	     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise
	     * events as a result).
	     */
	    WriteTree.prototype.removeWrite = function (writeId) {
	        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied
	        // out of order.
	        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;
	        //assert(validClear, "Either we don't have this write, or it's the first one in the queue");
	        var _this = this;
	        var idx = this.allWrites_.findIndex(function (s) {
	            return s.writeId === writeId;
	        });
	        (0, _assert.assert)(idx >= 0, 'removeWrite called with nonexistent writeId.');
	        var writeToRemove = this.allWrites_[idx];
	        this.allWrites_.splice(idx, 1);
	        var removedWriteWasVisible = writeToRemove.visible;
	        var removedWriteOverlapsWithOtherWrites = false;
	        var i = this.allWrites_.length - 1;
	        while (removedWriteWasVisible && i >= 0) {
	            var currentWrite = this.allWrites_[i];
	            if (currentWrite.visible) {
	                if (i >= idx && this.recordContainsPath_(currentWrite, writeToRemove.path)) {
	                    // The removed write was completely shadowed by a subsequent write.
	                    removedWriteWasVisible = false;
	                } else if (writeToRemove.path.contains(currentWrite.path)) {
	                    // Either we're covering some writes or they're covering part of us (depending on which came first).
	                    removedWriteOverlapsWithOtherWrites = true;
	                }
	            }
	            i--;
	        }
	        if (!removedWriteWasVisible) {
	            return false;
	        } else if (removedWriteOverlapsWithOtherWrites) {
	            // There's some shadowing going on. Just rebuild the visible writes from scratch.
	            this.resetTree_();
	            return true;
	        } else {
	            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.
	            if (writeToRemove.snap) {
	                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);
	            } else {
	                var children = writeToRemove.children;
	                (0, _obj.forEach)(children, function (childName) {
	                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));
	                });
	            }
	            return true;
	        }
	    };
	    /**
	     * Return a complete snapshot for the given path if there's visible write data at that path, else null.
	     * No server data is considered.
	     *
	     * @param {!Path} path
	     * @return {?Node}
	     */
	    WriteTree.prototype.getCompleteWriteData = function (path) {
	        return this.visibleWrites_.getCompleteNode(path);
	    };
	    /**
	     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden
	     * writes), attempt to calculate a complete snapshot for the given path
	     *
	     * @param {!Path} treePath
	     * @param {?Node} completeServerCache
	     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded
	     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
	     * @return {?Node}
	     */
	    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {
	        if (!writeIdsToExclude && !includeHiddenWrites) {
	            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);
	            if (shadowingNode != null) {
	                return shadowingNode;
	            } else {
	                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);
	                if (subMerge.isEmpty()) {
	                    return completeServerCache;
	                } else if (completeServerCache == null && !subMerge.hasCompleteWrite(_Path.Path.Empty)) {
	                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow
	                    return null;
	                } else {
	                    var layeredCache = completeServerCache || _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                    return subMerge.apply(layeredCache);
	                }
	            }
	        } else {
	            var merge = this.visibleWrites_.childCompoundWrite(treePath);
	            if (!includeHiddenWrites && merge.isEmpty()) {
	                return completeServerCache;
	            } else {
	                // If the server cache is null, and we don't have a complete cache, we need to return null
	                if (!includeHiddenWrites && completeServerCache == null && !merge.hasCompleteWrite(_Path.Path.Empty)) {
	                    return null;
	                } else {
	                    var filter = function filter(write) {
	                        return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (write.path.contains(treePath) || treePath.contains(write.path));
	                    };
	                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);
	                    var layeredCache = completeServerCache || _ChildrenNode.ChildrenNode.EMPTY_NODE;
	                    return mergeAtPath.apply(layeredCache);
	                }
	            }
	        }
	    };
	    /**
	     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.
	     * Used when creating new views, to pre-fill their complete event children snapshot.
	     *
	     * @param {!Path} treePath
	     * @param {?ChildrenNode} completeServerChildren
	     * @return {!ChildrenNode}
	     */
	    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {
	        var completeChildren = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);
	        if (topLevelSet) {
	            if (!topLevelSet.isLeafNode()) {
	                // we're shadowing everything. Return the children.
	                topLevelSet.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childSnap) {
	                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);
	                });
	            }
	            return completeChildren;
	        } else if (completeServerChildren) {
	            // Layer any children we have on top of this
	            // We know we don't have a top-level set, so just enumerate existing children
	            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);
	            completeServerChildren.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {
	                var node = merge_1.childCompoundWrite(new _Path.Path(childName)).apply(childNode);
	                completeChildren = completeChildren.updateImmediateChild(childName, node);
	            });
	            // Add any complete children we have from the set
	            merge_1.getCompleteChildren().forEach(function (namedNode) {
	                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);
	            });
	            return completeChildren;
	        } else {
	            // We don't have anything to layer on top of. Layer on any children we have
	            // Note that we can return an empty snap if we have a defined delete
	            var merge = this.visibleWrites_.childCompoundWrite(treePath);
	            merge.getCompleteChildren().forEach(function (namedNode) {
	                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);
	            });
	            return completeChildren;
	        }
	    };
	    /**
	     * Given that the underlying server data has updated, determine what, if anything, needs to be
	     * applied to the event cache.
	     *
	     * Possibilities:
	     *
	     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
	     *
	     * 2. Some write is completely shadowing. No events to be raised
	     *
	     * 3. Is partially shadowed. Events
	     *
	     * Either existingEventSnap or existingServerSnap must exist
	     *
	     * @param {!Path} treePath
	     * @param {!Path} childPath
	     * @param {?Node} existingEventSnap
	     * @param {?Node} existingServerSnap
	     * @return {?Node}
	     */
	    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {
	        (0, _assert.assert)(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');
	        var path = treePath.child(childPath);
	        if (this.visibleWrites_.hasCompleteWrite(path)) {
	            // At this point we can probably guarantee that we're in case 2, meaning no events
	            // May need to check visibility while doing the findRootMostValueAndPath call
	            return null;
	        } else {
	            // No complete shadowing. We're either partially shadowing or not shadowing at all.
	            var childMerge = this.visibleWrites_.childCompoundWrite(path);
	            if (childMerge.isEmpty()) {
	                // We're not shadowing at all. Case 1
	                return existingServerSnap.getChild(childPath);
	            } else {
	                // This could be more efficient if the serverNode + updates doesn't change the eventSnap
	                // However this is tricky to find out, since user updates don't necessary change the server
	                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server
	                // adds nodes, but doesn't change any existing writes. It is therefore not enough to
	                // only check if the updates change the serverNode.
	                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?
	                return childMerge.apply(existingServerSnap.getChild(childPath));
	            }
	        }
	    };
	    /**
	     * Returns a complete child for a given server snap after applying all user writes or null if there is no
	     * complete child for this ChildKey.
	     *
	     * @param {!Path} treePath
	     * @param {!string} childKey
	     * @param {!CacheNode} existingServerSnap
	     * @return {?Node}
	     */
	    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {
	        var path = treePath.child(childKey);
	        var shadowingNode = this.visibleWrites_.getCompleteNode(path);
	        if (shadowingNode != null) {
	            return shadowingNode;
	        } else {
	            if (existingServerSnap.isCompleteForChild(childKey)) {
	                var childMerge = this.visibleWrites_.childCompoundWrite(path);
	                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));
	            } else {
	                return null;
	            }
	        }
	    };
	    /**
	     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
	     * a higher path, this will return the child of that write relative to the write and this path.
	     * Returns null if there is no write at this path.
	     *
	     * @param {!Path} path
	     * @return {?Node}
	     */
	    WriteTree.prototype.shadowingWrite = function (path) {
	        return this.visibleWrites_.getCompleteNode(path);
	    };
	    /**
	     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
	     * the window, but may now be in the window.
	     *
	     * @param {!Path} treePath
	     * @param {?Node} completeServerData
	     * @param {!NamedNode} startPost
	     * @param {!number} count
	     * @param {boolean} reverse
	     * @param {!Index} index
	     * @return {!Array.<!NamedNode>}
	     */
	    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {
	        var toIterate;
	        var merge = this.visibleWrites_.childCompoundWrite(treePath);
	        var shadowingNode = merge.getCompleteNode(_Path.Path.Empty);
	        if (shadowingNode != null) {
	            toIterate = shadowingNode;
	        } else if (completeServerData != null) {
	            toIterate = merge.apply(completeServerData);
	        } else {
	            // no children to iterate on
	            return [];
	        }
	        toIterate = toIterate.withIndex(index);
	        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {
	            var nodes = [];
	            var cmp = index.getCompare();
	            var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);
	            var next = iter.getNext();
	            while (next && nodes.length < count) {
	                if (cmp(next, startPost) !== 0) {
	                    nodes.push(next);
	                }
	                next = iter.getNext();
	            }
	            return nodes;
	        } else {
	            return [];
	        }
	    };
	    /**
	     * @param {!WriteRecord} writeRecord
	     * @param {!Path} path
	     * @return {boolean}
	     * @private
	     */
	    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {
	        if (writeRecord.snap) {
	            return writeRecord.path.contains(path);
	        } else {
	            // findKey can return undefined, so use !! to coerce to boolean
	            return !!(0, _obj.findKey)(writeRecord.children, function (childSnap, childName) {
	                return writeRecord.path.child(childName).contains(path);
	            });
	        }
	    };
	    /**
	     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots
	     * @private
	     */
	    WriteTree.prototype.resetTree_ = function () {
	        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, _Path.Path.Empty);
	        if (this.allWrites_.length > 0) {
	            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;
	        } else {
	            this.lastWriteId_ = -1;
	        }
	    };
	    /**
	     * The default filter used when constructing the tree. Keep everything that's visible.
	     *
	     * @param {!WriteRecord} write
	     * @return {boolean}
	     * @private
	     */
	    WriteTree.DefaultFilter_ = function (write) {
	        return write.visible;
	    };
	    /**
	     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of
	     * event data at that path.
	     *
	     * @param {!Array.<!WriteRecord>} writes
	     * @param {!function(!WriteRecord):boolean} filter
	     * @param {!Path} treeRoot
	     * @return {!CompoundWrite}
	     * @private
	     */
	    WriteTree.layerTree_ = function (writes, filter, treeRoot) {
	        var compoundWrite = _CompoundWrite.CompoundWrite.Empty;
	        for (var i = 0; i < writes.length; ++i) {
	            var write = writes[i];
	            // Theory, a later set will either:
	            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction
	            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction
	            if (filter(write)) {
	                var writePath = write.path;
	                var relativePath = void 0;
	                if (write.snap) {
	                    if (treeRoot.contains(writePath)) {
	                        relativePath = _Path.Path.relativePath(treeRoot, writePath);
	                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);
	                    } else if (writePath.contains(treeRoot)) {
	                        relativePath = _Path.Path.relativePath(writePath, treeRoot);
	                        compoundWrite = compoundWrite.addWrite(_Path.Path.Empty, write.snap.getChild(relativePath));
	                    } else {
	                        // There is no overlap between root path and write path, ignore write
	                    }
	                } else if (write.children) {
	                    if (treeRoot.contains(writePath)) {
	                        relativePath = _Path.Path.relativePath(treeRoot, writePath);
	                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);
	                    } else if (writePath.contains(treeRoot)) {
	                        relativePath = _Path.Path.relativePath(writePath, treeRoot);
	                        if (relativePath.isEmpty()) {
	                            compoundWrite = compoundWrite.addWrites(_Path.Path.Empty, write.children);
	                        } else {
	                            var child = (0, _obj.safeGet)(write.children, relativePath.getFront());
	                            if (child) {
	                                // There exists a child in this node that matches the root path
	                                var deepNode = child.getChild(relativePath.popFront());
	                                compoundWrite = compoundWrite.addWrite(_Path.Path.Empty, deepNode);
	                            }
	                        }
	                    } else {
	                        // There is no overlap between root path and write path, ignore write
	                    }
	                } else {
	                    throw (0, _assert.assertionError)('WriteRecord should have .snap or .children');
	                }
	            }
	        }
	        return compoundWrite;
	    };
	    return WriteTree;
	}();
	exports.WriteTree = WriteTree;
	/**
	 * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods
	 * just proxy to the underlying WriteTree.
	 *
	 * @constructor
	 */

	var WriteTreeRef = /** @class */function () {
	    /**
	     * @param {!Path} path
	     * @param {!WriteTree} writeTree
	     */
	    function WriteTreeRef(path, writeTree) {
	        this.treePath_ = path;
	        this.writeTree_ = writeTree;
	    }
	    /**
	     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used
	     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node
	     * can lead to a more expensive calculation.
	     *
	     * @param {?Node} completeServerCache
	     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.
	     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false
	     * @return {?Node}
	     */
	    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {
	        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);
	    };
	    /**
	     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a
	     * mix of the given server data and write data.
	     *
	     * @param {?ChildrenNode} completeServerChildren
	     * @return {!ChildrenNode}
	     */
	    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {
	        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);
	    };
	    /**
	     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,
	     * if anything, needs to be applied to the event cache.
	     *
	     * Possibilities:
	     *
	     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data
	     *
	     * 2. Some write is completely shadowing. No events to be raised
	     *
	     * 3. Is partially shadowed. Events should be raised
	     *
	     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert
	     *
	     * @param {!Path} path
	     * @param {?Node} existingEventSnap
	     * @param {?Node} existingServerSnap
	     * @return {?Node}
	     */
	    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {
	        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);
	    };
	    /**
	     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at
	     * a higher path, this will return the child of that write relative to the write and this path.
	     * Returns null if there is no write at this path.
	     *
	     * @param {!Path} path
	     * @return {?Node}
	     */
	    WriteTreeRef.prototype.shadowingWrite = function (path) {
	        return this.writeTree_.shadowingWrite(this.treePath_.child(path));
	    };
	    /**
	     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside
	     * the window, but may now be in the window
	     *
	     * @param {?Node} completeServerData
	     * @param {!NamedNode} startPost
	     * @param {!number} count
	     * @param {boolean} reverse
	     * @param {!Index} index
	     * @return {!Array.<!NamedNode>}
	     */
	    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {
	        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);
	    };
	    /**
	     * Returns a complete child for a given server snap after applying all user writes or null if there is no
	     * complete child for this ChildKey.
	     *
	     * @param {!string} childKey
	     * @param {!CacheNode} existingServerCache
	     * @return {?Node}
	     */
	    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {
	        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);
	    };
	    /**
	     * Return a WriteTreeRef for a child.
	     *
	     * @param {string} childName
	     * @return {!WriteTreeRef}
	     */
	    WriteTreeRef.prototype.child = function (childName) {
	        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);
	    };
	    return WriteTreeRef;
	}();
	exports.WriteTreeRef = WriteTreeRef;
	//# sourceMappingURL=WriteTree.js.map


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CompoundWrite = undefined;

	var _ImmutableTree = __webpack_require__(67);

	var _Path = __webpack_require__(33);

	var _obj = __webpack_require__(22);

	var _Node = __webpack_require__(45);

	var _PriorityIndex = __webpack_require__(46);

	var _assert = __webpack_require__(20);

	/**
	 * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with
	 * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write
	 * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write
	 * to reflect the write added.
	 *
	 * @constructor
	 * @param {!ImmutableTree.<!Node>} writeTree
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var CompoundWrite = /** @class */function () {
	    function CompoundWrite(writeTree_) {
	        this.writeTree_ = writeTree_;
	    }
	    /**
	     * @param {!Path} path
	     * @param {!Node} node
	     * @return {!CompoundWrite}
	     */
	    CompoundWrite.prototype.addWrite = function (path, node) {
	        if (path.isEmpty()) {
	            return new CompoundWrite(new _ImmutableTree.ImmutableTree(node));
	        } else {
	            var rootmost = this.writeTree_.findRootMostValueAndPath(path);
	            if (rootmost != null) {
	                var rootMostPath = rootmost.path;
	                var value = rootmost.value;
	                var relativePath = _Path.Path.relativePath(rootMostPath, path);
	                value = value.updateChild(relativePath, node);
	                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));
	            } else {
	                var subtree = new _ImmutableTree.ImmutableTree(node);
	                var newWriteTree = this.writeTree_.setTree(path, subtree);
	                return new CompoundWrite(newWriteTree);
	            }
	        }
	    };
	    /**
	     * @param {!Path} path
	     * @param {!Object.<string, !Node>} updates
	     * @return {!CompoundWrite}
	     */
	    CompoundWrite.prototype.addWrites = function (path, updates) {
	        var newWrite = this;
	        (0, _obj.forEach)(updates, function (childKey, node) {
	            newWrite = newWrite.addWrite(path.child(childKey), node);
	        });
	        return newWrite;
	    };
	    /**
	     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher
	     * location, which must be removed by calling this method with that path.
	     *
	     * @param {!Path} path The path at which a write and all deeper writes should be removed
	     * @return {!CompoundWrite} The new CompoundWrite with the removed path
	     */
	    CompoundWrite.prototype.removeWrite = function (path) {
	        if (path.isEmpty()) {
	            return CompoundWrite.Empty;
	        } else {
	            var newWriteTree = this.writeTree_.setTree(path, _ImmutableTree.ImmutableTree.Empty);
	            return new CompoundWrite(newWriteTree);
	        }
	    };
	    /**
	     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be
	     * considered "complete".
	     *
	     * @param {!Path} path The path to check for
	     * @return {boolean} Whether there is a complete write at that path
	     */
	    CompoundWrite.prototype.hasCompleteWrite = function (path) {
	        return this.getCompleteNode(path) != null;
	    };
	    /**
	     * Returns a node for a path if and only if the node is a "complete" overwrite at that path. This will not aggregate
	     * writes from deeper paths, but will return child nodes from a more shallow path.
	     *
	     * @param {!Path} path The path to get a complete write
	     * @return {?Node} The node if complete at that path, or null otherwise.
	     */
	    CompoundWrite.prototype.getCompleteNode = function (path) {
	        var rootmost = this.writeTree_.findRootMostValueAndPath(path);
	        if (rootmost != null) {
	            return this.writeTree_.get(rootmost.path).getChild(_Path.Path.relativePath(rootmost.path, path));
	        } else {
	            return null;
	        }
	    };
	    /**
	     * Returns all children that are guaranteed to be a complete overwrite.
	     *
	     * @return {!Array.<NamedNode>} A list of all complete children.
	     */
	    CompoundWrite.prototype.getCompleteChildren = function () {
	        var children = [];
	        var node = this.writeTree_.value;
	        if (node != null) {
	            // If it's a leaf node, it has no children; so nothing to do.
	            if (!node.isLeafNode()) {
	                node.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (childName, childNode) {
	                    children.push(new _Node.NamedNode(childName, childNode));
	                });
	            }
	        } else {
	            this.writeTree_.children.inorderTraversal(function (childName, childTree) {
	                if (childTree.value != null) {
	                    children.push(new _Node.NamedNode(childName, childTree.value));
	                }
	            });
	        }
	        return children;
	    };
	    /**
	     * @param {!Path} path
	     * @return {!CompoundWrite}
	     */
	    CompoundWrite.prototype.childCompoundWrite = function (path) {
	        if (path.isEmpty()) {
	            return this;
	        } else {
	            var shadowingNode = this.getCompleteNode(path);
	            if (shadowingNode != null) {
	                return new CompoundWrite(new _ImmutableTree.ImmutableTree(shadowingNode));
	            } else {
	                return new CompoundWrite(this.writeTree_.subtree(path));
	            }
	        }
	    };
	    /**
	     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.
	     * @return {boolean} Whether this CompoundWrite is empty
	     */
	    CompoundWrite.prototype.isEmpty = function () {
	        return this.writeTree_.isEmpty();
	    };
	    /**
	     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the
	     * node
	     * @param {!Node} node The node to apply this CompoundWrite to
	     * @return {!Node} The node with all writes applied
	     */
	    CompoundWrite.prototype.apply = function (node) {
	        return CompoundWrite.applySubtreeWrite_(_Path.Path.Empty, this.writeTree_, node);
	    };
	    /**
	     * @type {!CompoundWrite}
	     */
	    CompoundWrite.Empty = new CompoundWrite(new _ImmutableTree.ImmutableTree(null));
	    /**
	     * @param {!Path} relativePath
	     * @param {!ImmutableTree.<!Node>} writeTree
	     * @param {!Node} node
	     * @return {!Node}
	     * @private
	     */
	    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {
	        if (writeTree.value != null) {
	            // Since there a write is always a leaf, we're done here
	            return node.updateChild(relativePath, writeTree.value);
	        } else {
	            var priorityWrite_1 = null;
	            writeTree.children.inorderTraversal(function (childKey, childTree) {
	                if (childKey === '.priority') {
	                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget
	                    // to apply priorities to empty nodes that are later filled
	                    (0, _assert.assert)(childTree.value !== null, 'Priority writes must always be leaf nodes');
	                    priorityWrite_1 = childTree.value;
	                } else {
	                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);
	                }
	            });
	            // If there was a priority write, we only apply it if the node is not empty
	            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {
	                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);
	            }
	            return node;
	        }
	    };
	    return CompoundWrite;
	}();
	exports.CompoundWrite = CompoundWrite;
	//# sourceMappingURL=CompoundWrite.js.map


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SnapshotHolder = undefined;

	var _ChildrenNode = __webpack_require__(51);

	/**
	 * Mutable object which basically just stores a reference to the "latest" immutable snapshot.
	 *
	 * @constructor
	 */
	var SnapshotHolder = /** @class */function () {
	    function SnapshotHolder() {
	        this.rootNode_ = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	    }
	    SnapshotHolder.prototype.getNode = function (path) {
	        return this.rootNode_.getChild(path);
	    };
	    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {
	        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);
	    };
	    return SnapshotHolder;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.SnapshotHolder = SnapshotHolder;
	//# sourceMappingURL=SnapshotHolder.js.map


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.AuthTokenProvider = undefined;

	var _util = __webpack_require__(19);

	/**
	 * Abstraction around FirebaseApp's token fetching capabilities.
	 */
	var AuthTokenProvider = /** @class */function () {
	    /**
	     * @param {!FirebaseApp} app_
	     */
	    function AuthTokenProvider(app_) {
	        this.app_ = app_;
	    }
	    /**
	     * @param {boolean} forceRefresh
	     * @return {!Promise<FirebaseAuthTokenData>}
	     */
	    AuthTokenProvider.prototype.getToken = function (forceRefresh) {
	        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null,
	        // .catch
	        function (error) {
	            // TODO: Need to figure out all the cases this is raised and whether
	            // this makes sense.
	            if (error && error.code === 'auth/token-not-initialized') {
	                (0, _util.log)('Got auth/token-not-initialized error.  Treating as null token.');
	                return null;
	            } else {
	                return Promise.reject(error);
	            }
	        });
	    };
	    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {
	        // TODO: We might want to wrap the listener and call it with no args to
	        // avoid a leaky abstraction, but that makes removing the listener harder.
	        this.app_['INTERNAL']['addAuthTokenListener'](listener);
	    };
	    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {
	        this.app_['INTERNAL']['removeAuthTokenListener'](listener);
	    };
	    AuthTokenProvider.prototype.notifyForInvalidToken = function () {
	        var errorMessage = 'Provided authentication credentials for the app named "' + this.app_.name + '" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';
	        if ('credential' in this.app_.options) {
	            errorMessage += 'Make sure the "credential" property provided to initializeApp() ' + 'is authorized to access the specified "databaseURL" and is from the correct ' + 'project.';
	        } else if ('serviceAccount' in this.app_.options) {
	            errorMessage += 'Make sure the "serviceAccount" property provided to initializeApp() ' + 'is authorized to access the specified "databaseURL" and is from the correct ' + 'project.';
	        } else {
	            errorMessage += 'Make sure the "apiKey" and "databaseURL" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';
	        }
	        (0, _util.warn)(errorMessage);
	    };
	    return AuthTokenProvider;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.AuthTokenProvider = AuthTokenProvider;
	//# sourceMappingURL=AuthTokenProvider.js.map


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.StatsManager = undefined;

	var _StatsCollection = __webpack_require__(86);

	var StatsManager = /** @class */function () {
	    function StatsManager() {}
	    StatsManager.getCollection = function (repoInfo) {
	        var hashString = repoInfo.toString();
	        if (!this.collections_[hashString]) {
	            this.collections_[hashString] = new _StatsCollection.StatsCollection();
	        }
	        return this.collections_[hashString];
	    };
	    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {
	        var hashString = repoInfo.toString();
	        if (!this.reporters_[hashString]) {
	            this.reporters_[hashString] = creatorFunction();
	        }
	        return this.reporters_[hashString];
	    };
	    StatsManager.collections_ = {};
	    StatsManager.reporters_ = {};
	    return StatsManager;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.StatsManager = StatsManager;
	//# sourceMappingURL=StatsManager.js.map


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.StatsCollection = undefined;

	var _deep_copy = __webpack_require__(15);

	var _obj = __webpack_require__(22);

	/**
	 * Tracks a collection of stats.
	 *
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var StatsCollection = /** @class */function () {
	    function StatsCollection() {
	        this.counters_ = {};
	    }
	    StatsCollection.prototype.incrementCounter = function (name, amount) {
	        if (amount === void 0) {
	            amount = 1;
	        }
	        if (!(0, _obj.contains)(this.counters_, name)) this.counters_[name] = 0;
	        this.counters_[name] += amount;
	    };
	    StatsCollection.prototype.get = function () {
	        return (0, _deep_copy.deepCopy)(this.counters_);
	    };
	    return StatsCollection;
	}();
	exports.StatsCollection = StatsCollection;
	//# sourceMappingURL=StatsCollection.js.map


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.StatsReporter = undefined;

	var _obj = __webpack_require__(22);

	var _util = __webpack_require__(19);

	var _StatsListener = __webpack_require__(88);

	// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably
	// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10
	// seconds to try to ensure the Firebase connection is established / settled.
	var FIRST_STATS_MIN_TIME = 10 * 1000; /**
	                                       * Copyright 2017 Google Inc.
	                                       *
	                                       * Licensed under the Apache License, Version 2.0 (the "License");
	                                       * you may not use this file except in compliance with the License.
	                                       * You may obtain a copy of the License at
	                                       *
	                                       *   http://www.apache.org/licenses/LICENSE-2.0
	                                       *
	                                       * Unless required by applicable law or agreed to in writing, software
	                                       * distributed under the License is distributed on an "AS IS" BASIS,
	                                       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                       * See the License for the specific language governing permissions and
	                                       * limitations under the License.
	                                       */

	var FIRST_STATS_MAX_TIME = 30 * 1000;
	// We'll continue to report stats on average every 5 minutes.
	var REPORT_STATS_INTERVAL = 5 * 60 * 1000;
	/**
	 * @constructor
	 */
	var StatsReporter = /** @class */function () {
	    /**
	     * @param collection
	     * @param server_
	     */
	    function StatsReporter(collection, server_) {
	        this.server_ = server_;
	        this.statsToReport_ = {};
	        this.statsListener_ = new _StatsListener.StatsListener(collection);
	        var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();
	        (0, _util.setTimeoutNonBlocking)(this.reportStats_.bind(this), Math.floor(timeout));
	    }
	    StatsReporter.prototype.includeStat = function (stat) {
	        this.statsToReport_[stat] = true;
	    };
	    StatsReporter.prototype.reportStats_ = function () {
	        var _this = this;
	        var stats = this.statsListener_.get();
	        var reportedStats = {};
	        var haveStatsToReport = false;
	        (0, _obj.forEach)(stats, function (stat, value) {
	            if (value > 0 && (0, _obj.contains)(_this.statsToReport_, stat)) {
	                reportedStats[stat] = value;
	                haveStatsToReport = true;
	            }
	        });
	        if (haveStatsToReport) {
	            this.server_.reportStats(reportedStats);
	        }
	        // queue our next run.
	        (0, _util.setTimeoutNonBlocking)(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));
	    };
	    return StatsReporter;
	}();
	exports.StatsReporter = StatsReporter;
	//# sourceMappingURL=StatsReporter.js.map


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.StatsListener = undefined;

	var _obj = __webpack_require__(22);

	/**
	 * Returns the delta from the previous call to get stats.
	 *
	 * @param collection_ The collection to "listen" to.
	 * @constructor
	 */
	var StatsListener = /** @class */function () {
	    function StatsListener(collection_) {
	        this.collection_ = collection_;
	        this.last_ = null;
	    }
	    StatsListener.prototype.get = function () {
	        var newStats = this.collection_.get();
	        var delta = (0, _obj.clone)(newStats);
	        if (this.last_) {
	            (0, _obj.forEach)(this.last_, function (stat, value) {
	                delta[stat] = delta[stat] - value;
	            });
	        }
	        this.last_ = newStats;
	        return delta;
	    };
	    return StatsListener;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.StatsListener = StatsListener;
	//# sourceMappingURL=StatsListener.js.map


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.EventList = exports.EventQueue = undefined;

	var _util = __webpack_require__(19);

	/**
	 * The event queue serves a few purposes:
	 * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more
	 *    events being queued.
	 * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,
	 *    raiseQueuedEvents() is called again, the "inner" call will pick up raising events where the "outer" call
	 *    left off, ensuring that the events are still raised synchronously and in order.
	 * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued
	 *    events are raised synchronously.
	 *
	 * NOTE: This can all go away if/when we move to async events.
	 *
	 * @constructor
	 */
	var EventQueue = /** @class */function () {
	    function EventQueue() {
	        /**
	         * @private
	         * @type {!Array.<EventList>}
	         */
	        this.eventLists_ = [];
	        /**
	         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.
	         * @private
	         * @type {!number}
	         */
	        this.recursionDepth_ = 0;
	    }
	    /**
	     * @param {!Array.<Event>} eventDataList The new events to queue.
	     */
	    EventQueue.prototype.queueEvents = function (eventDataList) {
	        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.
	        var currList = null;
	        for (var i = 0; i < eventDataList.length; i++) {
	            var eventData = eventDataList[i];
	            var eventPath = eventData.getPath();
	            if (currList !== null && !eventPath.equals(currList.getPath())) {
	                this.eventLists_.push(currList);
	                currList = null;
	            }
	            if (currList === null) {
	                currList = new EventList(eventPath);
	            }
	            currList.add(eventData);
	        }
	        if (currList) {
	            this.eventLists_.push(currList);
	        }
	    };
	    /**
	     * Queues the specified events and synchronously raises all events (including previously queued ones)
	     * for the specified path.
	     *
	     * It is assumed that the new events are all for the specified path.
	     *
	     * @param {!Path} path The path to raise events for.
	     * @param {!Array.<Event>} eventDataList The new events to raise.
	     */
	    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {
	        this.queueEvents(eventDataList);
	        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {
	            return eventPath.equals(path);
	        });
	    };
	    /**
	     * Queues the specified events and synchronously raises all events (including previously queued ones) for
	     * locations related to the specified change path (i.e. all ancestors and descendants).
	     *
	     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.
	     *
	     * @param {!Path} changedPath The path to raise events for.
	     * @param {!Array.<!Event>} eventDataList The events to raise
	     */
	    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {
	        this.queueEvents(eventDataList);
	        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {
	            return eventPath.contains(changedPath) || changedPath.contains(eventPath);
	        });
	    };
	    /**
	     * @param {!function(!Path):boolean} predicate
	     * @private
	     */
	    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {
	        this.recursionDepth_++;
	        var sentAll = true;
	        for (var i = 0; i < this.eventLists_.length; i++) {
	            var eventList = this.eventLists_[i];
	            if (eventList) {
	                var eventPath = eventList.getPath();
	                if (predicate(eventPath)) {
	                    this.eventLists_[i].raise();
	                    this.eventLists_[i] = null;
	                } else {
	                    sentAll = false;
	                }
	            }
	        }
	        if (sentAll) {
	            this.eventLists_ = [];
	        }
	        this.recursionDepth_--;
	    };
	    return EventQueue;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.EventQueue = EventQueue;
	/**
	 * @param {!Path} path
	 * @constructor
	 */

	var EventList = /** @class */function () {
	    function EventList(path_) {
	        this.path_ = path_;
	        /**
	         * @type {!Array.<Event>}
	         * @private
	         */
	        this.events_ = [];
	    }
	    /**
	     * @param {!Event} eventData
	     */
	    EventList.prototype.add = function (eventData) {
	        this.events_.push(eventData);
	    };
	    /**
	     * Iterates through the list and raises each event
	     */
	    EventList.prototype.raise = function () {
	        for (var i = 0; i < this.events_.length; i++) {
	            var eventData = this.events_[i];
	            if (eventData !== null) {
	                this.events_[i] = null;
	                var eventFn = eventData.getEventRunner();
	                if (_util.logger) {
	                    (0, _util.log)('event: ' + eventData.toString());
	                }
	                (0, _util.exceptionGuard)(eventFn);
	            }
	        }
	    };
	    /**
	     * @return {!Path}
	     */
	    EventList.prototype.getPath = function () {
	        return this.path_;
	    };
	    return EventList;
	}();
	exports.EventList = EventList;
	//# sourceMappingURL=EventQueue.js.map


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PersistentConnection = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	var _obj = __webpack_require__(22);

	var _json = __webpack_require__(27);

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _Path = __webpack_require__(33);

	var _VisibilityMonitor = __webpack_require__(91);

	var _OnlineMonitor = __webpack_require__(93);

	var _jwt = __webpack_require__(94);

	var _Connection = __webpack_require__(95);

	var _constants = __webpack_require__(21);

	var _environment = __webpack_require__(31);

	var _ServerActions = __webpack_require__(100);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var RECONNECT_MIN_DELAY = 1000;
	var RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)
	var RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)
	var RECONNECT_DELAY_MULTIPLIER = 1.3;
	var RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.
	var SERVER_KILL_INTERRUPT_REASON = 'server_kill';
	// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.
	var INVALID_AUTH_TOKEN_THRESHOLD = 3;
	/**
	 * Firebase connection.  Abstracts wire protocol and handles reconnecting.
	 *
	 * NOTE: All JSON objects sent to the realtime connection must have property names enclosed
	 * in quotes to make sure the closure compiler does not minify them.
	 */
	var PersistentConnection = /** @class */function (_super) {
	    __extends(PersistentConnection, _super);
	    /**
	     * @implements {ServerActions}
	     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to
	     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server
	     * @param onConnectStatus_
	     * @param onServerInfoUpdate_
	     * @param authTokenProvider_
	     * @param authOverride_
	     */
	    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {
	        var _this = _super.call(this) || this;
	        _this.repoInfo_ = repoInfo_;
	        _this.onDataUpdate_ = onDataUpdate_;
	        _this.onConnectStatus_ = onConnectStatus_;
	        _this.onServerInfoUpdate_ = onServerInfoUpdate_;
	        _this.authTokenProvider_ = authTokenProvider_;
	        _this.authOverride_ = authOverride_;
	        // Used for diagnostic logging.
	        _this.id = PersistentConnection.nextPersistentConnectionId_++;
	        _this.log_ = (0, _util.logWrapper)('p:' + _this.id + ':');
	        /** @private {Object} */
	        _this.interruptReasons_ = {};
	        _this.listens_ = {};
	        _this.outstandingPuts_ = [];
	        _this.outstandingPutCount_ = 0;
	        _this.onDisconnectRequestQueue_ = [];
	        _this.connected_ = false;
	        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;
	        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;
	        _this.securityDebugCallback_ = null;
	        _this.lastSessionId = null;
	        /** @private {number|null} */
	        _this.establishConnectionTimer_ = null;
	        /** @private {boolean} */
	        _this.visible_ = false;
	        // Before we get connected, we keep a queue of pending messages to send.
	        _this.requestCBHash_ = {};
	        _this.requestNumber_ = 0;
	        /** @private {?{
	         *   sendRequest(Object),
	         *   close()
	         * }} */
	        _this.realtime_ = null;
	        /** @private {string|null} */
	        _this.authToken_ = null;
	        _this.forceTokenRefresh_ = false;
	        _this.invalidAuthTokenCount_ = 0;
	        _this.firstConnection_ = true;
	        _this.lastConnectionAttemptTime_ = null;
	        _this.lastConnectionEstablishedTime_ = null;
	        if (authOverride_ && !(0, _environment.isNodeSdk)()) {
	            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');
	        }
	        _this.scheduleConnect_(0);
	        _VisibilityMonitor.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);
	        if (repoInfo_.host.indexOf('fblocal') === -1) {
	            _OnlineMonitor.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);
	        }
	        return _this;
	    }
	    /**
	     * @param {!string} action
	     * @param {*} body
	     * @param {function(*)=} onResponse
	     * @protected
	     */
	    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {
	        var curReqNum = ++this.requestNumber_;
	        var msg = { r: curReqNum, a: action, b: body };
	        this.log_((0, _json.stringify)(msg));
	        (0, _assert.assert)(this.connected_, "sendRequest call when we're not connected not allowed.");
	        this.realtime_.sendRequest(msg);
	        if (onResponse) {
	            this.requestCBHash_[curReqNum] = onResponse;
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {
	        var queryId = query.queryIdentifier();
	        var pathString = query.path.toString();
	        this.log_('Listen called for ' + pathString + ' ' + queryId);
	        this.listens_[pathString] = this.listens_[pathString] || {};
	        (0, _assert.assert)(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');
	        (0, _assert.assert)(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');
	        var listenSpec = {
	            onComplete: onComplete,
	            hashFn: currentHashFn,
	            query: query,
	            tag: tag
	        };
	        this.listens_[pathString][queryId] = listenSpec;
	        if (this.connected_) {
	            this.sendListen_(listenSpec);
	        }
	    };
	    /**
	     * @param {!{onComplete(),
	     *           hashFn():!string,
	     *           query: !Query,
	     *           tag: ?number}} listenSpec
	     * @private
	     */
	    PersistentConnection.prototype.sendListen_ = function (listenSpec) {
	        var _this = this;
	        var query = listenSpec.query;
	        var pathString = query.path.toString();
	        var queryId = query.queryIdentifier();
	        this.log_('Listen on ' + pathString + ' for ' + queryId);
	        var req = { /*path*/p: pathString };
	        var action = 'q';
	        // Only bother to send query if it's non-default.
	        if (listenSpec.tag) {
	            req['q'] = query.queryObject();
	            req['t'] = listenSpec.tag;
	        }
	        req['h'] = listenSpec.hashFn();
	        this.sendRequest(action, req, function (message) {
	            var payload = message['d'];
	            var status = message['s'];
	            // print warnings in any case...
	            PersistentConnection.warnOnListenWarnings_(payload, query);
	            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];
	            // only trigger actions if the listen hasn't been removed and readded
	            if (currentListenSpec === listenSpec) {
	                _this.log_('listen response', message);
	                if (status !== 'ok') {
	                    _this.removeListen_(pathString, queryId);
	                }
	                if (listenSpec.onComplete) {
	                    listenSpec.onComplete(status, payload);
	                }
	            }
	        });
	    };
	    /**
	     * @param {*} payload
	     * @param {!Query} query
	     * @private
	     */
	    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {
	        if (payload && (typeof payload === 'undefined' ? 'undefined' : _typeof(payload)) === 'object' && (0, _obj.contains)(payload, 'w')) {
	            var warnings = (0, _obj.safeGet)(payload, 'w');
	            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {
	                var indexSpec = '".indexOn": "' + query.getQueryParams().getIndex().toString() + '"';
	                var indexPath = query.path.toString();
	                (0, _util.warn)("Using an unspecified index. Your data will be downloaded and " + ("filtered on the client. Consider adding " + indexSpec + " at ") + (indexPath + " to your security rules for better performance."));
	            }
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.refreshAuthToken = function (token) {
	        this.authToken_ = token;
	        this.log_('Auth token refreshed');
	        if (this.authToken_) {
	            this.tryAuth();
	        } else {
	            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete
	            //the credential so we dont become authenticated next time we connect.
	            if (this.connected_) {
	                this.sendRequest('unauth', {}, function () {});
	            }
	        }
	        this.reduceReconnectDelayIfAdminCredential_(token);
	    };
	    /**
	     * @param {!string} credential
	     * @private
	     */
	    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {
	        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).
	        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.
	        var isFirebaseSecret = credential && credential.length === 40;
	        if (isFirebaseSecret || (0, _jwt.isAdmin)(credential)) {
	            this.log_('Admin auth credential detected.  Reducing max reconnect time.');
	            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;
	        }
	    };
	    /**
	     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like
	     * a auth revoked (the connection is closed).
	     */
	    PersistentConnection.prototype.tryAuth = function () {
	        var _this = this;
	        if (this.connected_ && this.authToken_) {
	            var token_1 = this.authToken_;
	            var authMethod = (0, _jwt.isValidFormat)(token_1) ? 'auth' : 'gauth';
	            var requestData = { cred: token_1 };
	            if (this.authOverride_ === null) {
	                requestData['noauth'] = true;
	            } else if (_typeof(this.authOverride_) === 'object') {
	                requestData['authvar'] = this.authOverride_;
	            }
	            this.sendRequest(authMethod, requestData, function (res) {
	                var status = res['s'];
	                var data = res['d'] || 'error';
	                if (_this.authToken_ === token_1) {
	                    if (status === 'ok') {
	                        _this.invalidAuthTokenCount_ = 0;
	                    } else {
	                        // Triggers reconnect and force refresh for auth token
	                        _this.onAuthRevoked_(status, data);
	                    }
	                }
	            });
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.unlisten = function (query, tag) {
	        var pathString = query.path.toString();
	        var queryId = query.queryIdentifier();
	        this.log_('Unlisten called for ' + pathString + ' ' + queryId);
	        (0, _assert.assert)(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');
	        var listen = this.removeListen_(pathString, queryId);
	        if (listen && this.connected_) {
	            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);
	        }
	    };
	    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {
	        this.log_('Unlisten on ' + pathString + ' for ' + queryId);
	        var req = { /*path*/p: pathString };
	        var action = 'n';
	        // Only bother sending queryId if it's non-default.
	        if (tag) {
	            req['q'] = queryObj;
	            req['t'] = tag;
	        }
	        this.sendRequest(action, req);
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {
	        if (this.connected_) {
	            this.sendOnDisconnect_('o', pathString, data, onComplete);
	        } else {
	            this.onDisconnectRequestQueue_.push({
	                pathString: pathString,
	                action: 'o',
	                data: data,
	                onComplete: onComplete
	            });
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {
	        if (this.connected_) {
	            this.sendOnDisconnect_('om', pathString, data, onComplete);
	        } else {
	            this.onDisconnectRequestQueue_.push({
	                pathString: pathString,
	                action: 'om',
	                data: data,
	                onComplete: onComplete
	            });
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {
	        if (this.connected_) {
	            this.sendOnDisconnect_('oc', pathString, null, onComplete);
	        } else {
	            this.onDisconnectRequestQueue_.push({
	                pathString: pathString,
	                action: 'oc',
	                data: null,
	                onComplete: onComplete
	            });
	        }
	    };
	    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {
	        var request = { /*path*/p: pathString, /*data*/d: data };
	        this.log_('onDisconnect ' + action, request);
	        this.sendRequest(action, request, function (response) {
	            if (onComplete) {
	                setTimeout(function () {
	                    onComplete(response['s'], response['d']);
	                }, Math.floor(0));
	            }
	        });
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {
	        this.putInternal('p', pathString, data, onComplete, hash);
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {
	        this.putInternal('m', pathString, data, onComplete, hash);
	    };
	    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {
	        var request = {
	            /*path*/p: pathString,
	            /*data*/d: data
	        };
	        if (hash !== undefined) request['h'] = hash;
	        // TODO: Only keep track of the most recent put for a given path?
	        this.outstandingPuts_.push({
	            action: action,
	            request: request,
	            onComplete: onComplete
	        });
	        this.outstandingPutCount_++;
	        var index = this.outstandingPuts_.length - 1;
	        if (this.connected_) {
	            this.sendPut_(index);
	        } else {
	            this.log_('Buffering put: ' + pathString);
	        }
	    };
	    PersistentConnection.prototype.sendPut_ = function (index) {
	        var _this = this;
	        var action = this.outstandingPuts_[index].action;
	        var request = this.outstandingPuts_[index].request;
	        var onComplete = this.outstandingPuts_[index].onComplete;
	        this.outstandingPuts_[index].queued = this.connected_;
	        this.sendRequest(action, request, function (message) {
	            _this.log_(action + ' response', message);
	            delete _this.outstandingPuts_[index];
	            _this.outstandingPutCount_--;
	            // Clean up array occasionally.
	            if (_this.outstandingPutCount_ === 0) {
	                _this.outstandingPuts_ = [];
	            }
	            if (onComplete) onComplete(message['s'], message['d']);
	        });
	    };
	    /**
	     * @inheritDoc
	     */
	    PersistentConnection.prototype.reportStats = function (stats) {
	        var _this = this;
	        // If we're not connected, we just drop the stats.
	        if (this.connected_) {
	            var request = { /*counters*/c: stats };
	            this.log_('reportStats', request);
	            this.sendRequest( /*stats*/'s', request, function (result) {
	                var status = result['s'];
	                if (status !== 'ok') {
	                    var errorReason = result['d'];
	                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);
	                }
	            });
	        }
	    };
	    /**
	     * @param {*} message
	     * @private
	     */
	    PersistentConnection.prototype.onDataMessage_ = function (message) {
	        if ('r' in message) {
	            // this is a response
	            this.log_('from server: ' + (0, _json.stringify)(message));
	            var reqNum = message['r'];
	            var onResponse = this.requestCBHash_[reqNum];
	            if (onResponse) {
	                delete this.requestCBHash_[reqNum];
	                onResponse(message['b']);
	            }
	        } else if ('error' in message) {
	            throw 'A server-side error has occurred: ' + message['error'];
	        } else if ('a' in message) {
	            // a and b are action and body, respectively
	            this.onDataPush_(message['a'], message['b']);
	        }
	    };
	    PersistentConnection.prototype.onDataPush_ = function (action, body) {
	        this.log_('handleServerMessage', action, body);
	        if (action === 'd') this.onDataUpdate_(body['p'], body['d'],
	        /*isMerge*/false, body['t']);else if (action === 'm') this.onDataUpdate_(body['p'], body['d'],
	        /*isMerge=*/true, body['t']);else if (action === 'c') this.onListenRevoked_(body['p'], body['q']);else if (action === 'ac') this.onAuthRevoked_(body['s'], body['d']);else if (action === 'sd') this.onSecurityDebugPacket_(body);else (0, _util.error)('Unrecognized action received from server: ' + (0, _json.stringify)(action) + '\nAre you using the latest client?');
	    };
	    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {
	        this.log_('connection ready');
	        this.connected_ = true;
	        this.lastConnectionEstablishedTime_ = new Date().getTime();
	        this.handleTimestamp_(timestamp);
	        this.lastSessionId = sessionId;
	        if (this.firstConnection_) {
	            this.sendConnectStats_();
	        }
	        this.restoreState_();
	        this.firstConnection_ = false;
	        this.onConnectStatus_(true);
	    };
	    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {
	        var _this = this;
	        (0, _assert.assert)(!this.realtime_, "Scheduling a connect when we're already connected/ing?");
	        if (this.establishConnectionTimer_) {
	            clearTimeout(this.establishConnectionTimer_);
	        }
	        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating "Security Error" in
	        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).
	        this.establishConnectionTimer_ = setTimeout(function () {
	            _this.establishConnectionTimer_ = null;
	            _this.establishConnection_();
	        }, Math.floor(timeout));
	    };
	    /**
	     * @param {boolean} visible
	     * @private
	     */
	    PersistentConnection.prototype.onVisible_ = function (visible) {
	        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.
	        if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {
	            this.log_('Window became visible.  Reducing delay.');
	            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
	            if (!this.realtime_) {
	                this.scheduleConnect_(0);
	            }
	        }
	        this.visible_ = visible;
	    };
	    PersistentConnection.prototype.onOnline_ = function (online) {
	        if (online) {
	            this.log_('Browser went online.');
	            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
	            if (!this.realtime_) {
	                this.scheduleConnect_(0);
	            }
	        } else {
	            this.log_('Browser went offline.  Killing connection.');
	            if (this.realtime_) {
	                this.realtime_.close();
	            }
	        }
	    };
	    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {
	        this.log_('data client disconnected');
	        this.connected_ = false;
	        this.realtime_ = null;
	        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.
	        this.cancelSentTransactions_();
	        // Clear out the pending requests.
	        this.requestCBHash_ = {};
	        if (this.shouldReconnect_()) {
	            if (!this.visible_) {
	                this.log_("Window isn't visible.  Delaying reconnect.");
	                this.reconnectDelay_ = this.maxReconnectDelay_;
	                this.lastConnectionAttemptTime_ = new Date().getTime();
	            } else if (this.lastConnectionEstablishedTime_) {
	                // If we've been connected long enough, reset reconnect delay to minimum.
	                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;
	                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) this.reconnectDelay_ = RECONNECT_MIN_DELAY;
	                this.lastConnectionEstablishedTime_ = null;
	            }
	            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;
	            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);
	            reconnectDelay = Math.random() * reconnectDelay;
	            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');
	            this.scheduleConnect_(reconnectDelay);
	            // Adjust reconnect delay for next time.
	            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);
	        }
	        this.onConnectStatus_(false);
	    };
	    PersistentConnection.prototype.establishConnection_ = function () {
	        if (this.shouldReconnect_()) {
	            this.log_('Making a connection attempt');
	            this.lastConnectionAttemptTime_ = new Date().getTime();
	            this.lastConnectionEstablishedTime_ = null;
	            var onDataMessage_1 = this.onDataMessage_.bind(this);
	            var onReady_1 = this.onReady_.bind(this);
	            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);
	            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;
	            var self_1 = this;
	            var lastSessionId_1 = this.lastSessionId;
	            var canceled_1 = false;
	            var connection_1 = null;
	            var closeFn_1 = function closeFn_1() {
	                if (connection_1) {
	                    connection_1.close();
	                } else {
	                    canceled_1 = true;
	                    onDisconnect_1();
	                }
	            };
	            var sendRequestFn = function sendRequestFn(msg) {
	                (0, _assert.assert)(connection_1, "sendRequest call when we're not connected not allowed.");
	                connection_1.sendRequest(msg);
	            };
	            this.realtime_ = {
	                close: closeFn_1,
	                sendRequest: sendRequestFn
	            };
	            var forceRefresh = this.forceTokenRefresh_;
	            this.forceTokenRefresh_ = false;
	            // First fetch auth token, and establish connection after fetching the token was successful
	            this.authTokenProvider_.getToken(forceRefresh).then(function (result) {
	                if (!canceled_1) {
	                    (0, _util.log)('getToken() completed. Creating connection.');
	                    self_1.authToken_ = result && result.accessToken;
	                    connection_1 = new _Connection.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1,
	                    /* onKill= */function (reason) {
	                        (0, _util.warn)(reason + ' (' + self_1.repoInfo_.toString() + ')');
	                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);
	                    }, lastSessionId_1);
	                } else {
	                    (0, _util.log)('getToken() completed but was canceled');
	                }
	            }).then(null, function (error) {
	                self_1.log_('Failed to get token: ' + error);
	                if (!canceled_1) {
	                    if (_constants.CONSTANTS.NODE_ADMIN) {
	                        // This may be a critical error for the Admin Node.js SDK, so log a warning.
	                        // But getToken() may also just have temporarily failed, so we still want to
	                        // continue retrying.
	                        (0, _util.warn)(error);
	                    }
	                    closeFn_1();
	                }
	            });
	        }
	    };
	    /**
	     * @param {string} reason
	     */
	    PersistentConnection.prototype.interrupt = function (reason) {
	        (0, _util.log)('Interrupting connection for reason: ' + reason);
	        this.interruptReasons_[reason] = true;
	        if (this.realtime_) {
	            this.realtime_.close();
	        } else {
	            if (this.establishConnectionTimer_) {
	                clearTimeout(this.establishConnectionTimer_);
	                this.establishConnectionTimer_ = null;
	            }
	            if (this.connected_) {
	                this.onRealtimeDisconnect_();
	            }
	        }
	    };
	    /**
	     * @param {string} reason
	     */
	    PersistentConnection.prototype.resume = function (reason) {
	        (0, _util.log)('Resuming connection for reason: ' + reason);
	        delete this.interruptReasons_[reason];
	        if ((0, _obj.isEmpty)(this.interruptReasons_)) {
	            this.reconnectDelay_ = RECONNECT_MIN_DELAY;
	            if (!this.realtime_) {
	                this.scheduleConnect_(0);
	            }
	        }
	    };
	    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {
	        var delta = timestamp - new Date().getTime();
	        this.onServerInfoUpdate_({ serverTimeOffset: delta });
	    };
	    PersistentConnection.prototype.cancelSentTransactions_ = function () {
	        for (var i = 0; i < this.outstandingPuts_.length; i++) {
	            var put = this.outstandingPuts_[i];
	            if (put && /*hash*/'h' in put.request && put.queued) {
	                if (put.onComplete) put.onComplete('disconnect');
	                delete this.outstandingPuts_[i];
	                this.outstandingPutCount_--;
	            }
	        }
	        // Clean up array occasionally.
	        if (this.outstandingPutCount_ === 0) this.outstandingPuts_ = [];
	    };
	    /**
	     * @param {!string} pathString
	     * @param {Array.<*>=} query
	     * @private
	     */
	    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {
	        // Remove the listen and manufacture a "permission_denied" error for the failed listen.
	        var queryId;
	        if (!query) {
	            queryId = 'default';
	        } else {
	            queryId = query.map(function (q) {
	                return (0, _util.ObjectToUniqueKey)(q);
	            }).join('$');
	        }
	        var listen = this.removeListen_(pathString, queryId);
	        if (listen && listen.onComplete) listen.onComplete('permission_denied');
	    };
	    /**
	     * @param {!string} pathString
	     * @param {!string} queryId
	     * @return {{queries:Array.<Query>, onComplete:function(string)}}
	     * @private
	     */
	    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {
	        var normalizedPathString = new _Path.Path(pathString).toString(); // normalize path.
	        var listen;
	        if (this.listens_[normalizedPathString] !== undefined) {
	            listen = this.listens_[normalizedPathString][queryId];
	            delete this.listens_[normalizedPathString][queryId];
	            if ((0, _obj.getCount)(this.listens_[normalizedPathString]) === 0) {
	                delete this.listens_[normalizedPathString];
	            }
	        } else {
	            // all listens for this path has already been removed
	            listen = undefined;
	        }
	        return listen;
	    };
	    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {
	        (0, _util.log)('Auth token revoked: ' + statusCode + '/' + explanation);
	        this.authToken_ = null;
	        this.forceTokenRefresh_ = true;
	        this.realtime_.close();
	        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {
	            // We'll wait a couple times before logging the warning / increasing the
	            // retry period since oauth tokens will report as "invalid" if they're
	            // just expired. Plus there may be transient issues that resolve themselves.
	            this.invalidAuthTokenCount_++;
	            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {
	                // Set a long reconnect delay because recovery is unlikely
	                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;
	                // Notify the auth token provider that the token is invalid, which will log
	                // a warning
	                this.authTokenProvider_.notifyForInvalidToken();
	            }
	        }
	    };
	    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {
	        if (this.securityDebugCallback_) {
	            this.securityDebugCallback_(body);
	        } else {
	            if ('msg' in body && typeof console !== 'undefined') {
	                console.log('FIREBASE: ' + body['msg'].replace('\n', '\nFIREBASE: '));
	            }
	        }
	    };
	    PersistentConnection.prototype.restoreState_ = function () {
	        var _this = this;
	        //Re-authenticate ourselves if we have a credential stored.
	        this.tryAuth();
	        // Puts depend on having received the corresponding data update from the server before they complete, so we must
	        // make sure to send listens before puts.
	        (0, _obj.forEach)(this.listens_, function (pathString, queries) {
	            (0, _obj.forEach)(queries, function (key, listenSpec) {
	                _this.sendListen_(listenSpec);
	            });
	        });
	        for (var i = 0; i < this.outstandingPuts_.length; i++) {
	            if (this.outstandingPuts_[i]) this.sendPut_(i);
	        }
	        while (this.onDisconnectRequestQueue_.length) {
	            var request = this.onDisconnectRequestQueue_.shift();
	            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);
	        }
	    };
	    /**
	     * Sends client stats for first connection
	     * @private
	     */
	    PersistentConnection.prototype.sendConnectStats_ = function () {
	        var stats = {};
	        var clientName = 'js';
	        if (_constants.CONSTANTS.NODE_ADMIN) {
	            clientName = 'admin_node';
	        } else if (_constants.CONSTANTS.NODE_CLIENT) {
	            clientName = 'node';
	        }
	        stats['sdk.' + clientName + '.' + _app2.default.SDK_VERSION.replace(/\./g, '-')] = 1;
	        if ((0, _environment.isMobileCordova)()) {
	            stats['framework.cordova'] = 1;
	        } else if ((0, _environment.isReactNative)()) {
	            stats['framework.reactnative'] = 1;
	        }
	        this.reportStats(stats);
	    };
	    /**
	     * @return {boolean}
	     * @private
	     */
	    PersistentConnection.prototype.shouldReconnect_ = function () {
	        var online = _OnlineMonitor.OnlineMonitor.getInstance().currentlyOnline();
	        return (0, _obj.isEmpty)(this.interruptReasons_) && online;
	    };
	    /**
	     * @private
	     */
	    PersistentConnection.nextPersistentConnectionId_ = 0;
	    /**
	     * Counter for number of connections created. Mainly used for tagging in the logs
	     * @type {number}
	     * @private
	     */
	    PersistentConnection.nextConnectionId_ = 0;
	    return PersistentConnection;
	}(_ServerActions.ServerActions);
	exports.PersistentConnection = PersistentConnection;
	//# sourceMappingURL=PersistentConnection.js.map


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.VisibilityMonitor = undefined;

	var _EventEmitter = __webpack_require__(92);

	var _assert = __webpack_require__(20);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * @extends {EventEmitter}
	 */
	var VisibilityMonitor = /** @class */function (_super) {
	    __extends(VisibilityMonitor, _super);
	    function VisibilityMonitor() {
	        var _this = _super.call(this, ['visible']) || this;
	        var hidden;
	        var visibilityChange;
	        if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {
	            if (typeof document['hidden'] !== 'undefined') {
	                // Opera 12.10 and Firefox 18 and later support
	                visibilityChange = 'visibilitychange';
	                hidden = 'hidden';
	            } else if (typeof document['mozHidden'] !== 'undefined') {
	                visibilityChange = 'mozvisibilitychange';
	                hidden = 'mozHidden';
	            } else if (typeof document['msHidden'] !== 'undefined') {
	                visibilityChange = 'msvisibilitychange';
	                hidden = 'msHidden';
	            } else if (typeof document['webkitHidden'] !== 'undefined') {
	                visibilityChange = 'webkitvisibilitychange';
	                hidden = 'webkitHidden';
	            }
	        }
	        // Initially, we always assume we are visible. This ensures that in browsers
	        // without page visibility support or in cases where we are never visible
	        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay
	        // reconnects
	        _this.visible_ = true;
	        if (visibilityChange) {
	            document.addEventListener(visibilityChange, function () {
	                var visible = !document[hidden];
	                if (visible !== _this.visible_) {
	                    _this.visible_ = visible;
	                    _this.trigger('visible', visible);
	                }
	            }, false);
	        }
	        return _this;
	    }
	    VisibilityMonitor.getInstance = function () {
	        return new VisibilityMonitor();
	    };
	    /**
	     * @param {!string} eventType
	     * @return {Array.<boolean>}
	     */
	    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {
	        (0, _assert.assert)(eventType === 'visible', 'Unknown event type: ' + eventType);
	        return [this.visible_];
	    };
	    return VisibilityMonitor;
	}(_EventEmitter.EventEmitter);
	exports.VisibilityMonitor = VisibilityMonitor;
	//# sourceMappingURL=VisibilityMonitor.js.map


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.EventEmitter = undefined;

	var _assert = __webpack_require__(20);

	/**
	 * Base class to be used if you want to emit events. Call the constructor with
	 * the set of allowed event names.
	 */
	var EventEmitter = /** @class */function () {
	    /**
	     * @param {!Array.<string>} allowedEvents_
	     */
	    function EventEmitter(allowedEvents_) {
	        this.allowedEvents_ = allowedEvents_;
	        this.listeners_ = {};
	        (0, _assert.assert)(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');
	    }
	    /**
	     * To be called by derived classes to trigger events.
	     * @param {!string} eventType
	     * @param {...*} var_args
	     */
	    EventEmitter.prototype.trigger = function (eventType) {
	        var var_args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            var_args[_i - 1] = arguments[_i];
	        }
	        if (Array.isArray(this.listeners_[eventType])) {
	            // Clone the list, since callbacks could add/remove listeners.
	            var listeners = this.listeners_[eventType].slice();
	            for (var i = 0; i < listeners.length; i++) {
	                listeners[i].callback.apply(listeners[i].context, var_args);
	            }
	        }
	    };
	    EventEmitter.prototype.on = function (eventType, callback, context) {
	        this.validateEventType_(eventType);
	        this.listeners_[eventType] = this.listeners_[eventType] || [];
	        this.listeners_[eventType].push({ callback: callback, context: context });
	        var eventData = this.getInitialEvent(eventType);
	        if (eventData) {
	            callback.apply(context, eventData);
	        }
	    };
	    EventEmitter.prototype.off = function (eventType, callback, context) {
	        this.validateEventType_(eventType);
	        var listeners = this.listeners_[eventType] || [];
	        for (var i = 0; i < listeners.length; i++) {
	            if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {
	                listeners.splice(i, 1);
	                return;
	            }
	        }
	    };
	    EventEmitter.prototype.validateEventType_ = function (eventType) {
	        (0, _assert.assert)(this.allowedEvents_.find(function (et) {
	            return et === eventType;
	        }), 'Unknown event: ' + eventType);
	    };
	    return EventEmitter;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.EventEmitter = EventEmitter;
	//# sourceMappingURL=EventEmitter.js.map


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.OnlineMonitor = undefined;

	var _assert = __webpack_require__(20);

	var _EventEmitter = __webpack_require__(92);

	var _environment = __webpack_require__(31);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * Monitors online state (as reported by window.online/offline events).
	 *
	 * The expectation is that this could have many false positives (thinks we are online
	 * when we're not), but no false negatives.  So we can safely use it to determine when
	 * we definitely cannot reach the internet.
	 *
	 * @extends {EventEmitter}
	 */
	var OnlineMonitor = /** @class */function (_super) {
	    __extends(OnlineMonitor, _super);
	    function OnlineMonitor() {
	        var _this = _super.call(this, ['online']) || this;
	        _this.online_ = true;
	        // We've had repeated complaints that Cordova apps can get stuck "offline", e.g.
	        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810
	        // It would seem that the 'online' event does not always fire consistently. So we disable it
	        // for Cordova.
	        if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !(0, _environment.isMobileCordova)()) {
	            window.addEventListener('online', function () {
	                if (!_this.online_) {
	                    _this.online_ = true;
	                    _this.trigger('online', true);
	                }
	            }, false);
	            window.addEventListener('offline', function () {
	                if (_this.online_) {
	                    _this.online_ = false;
	                    _this.trigger('online', false);
	                }
	            }, false);
	        }
	        return _this;
	    }
	    OnlineMonitor.getInstance = function () {
	        return new OnlineMonitor();
	    };
	    /**
	     * @param {!string} eventType
	     * @return {Array.<boolean>}
	     */
	    OnlineMonitor.prototype.getInitialEvent = function (eventType) {
	        (0, _assert.assert)(eventType === 'online', 'Unknown event type: ' + eventType);
	        return [this.online_];
	    };
	    /**
	     * @return {boolean}
	     */
	    OnlineMonitor.prototype.currentlyOnline = function () {
	        return this.online_;
	    };
	    return OnlineMonitor;
	}(_EventEmitter.EventEmitter);
	exports.OnlineMonitor = OnlineMonitor;
	//# sourceMappingURL=OnlineMonitor.js.map


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isAdmin = exports.isValidFormat = exports.issuedAtTime = exports.isValidTimestamp = exports.decode = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _util = __webpack_require__(19);

	var _json = __webpack_require__(27);

	/**
	 * Decodes a Firebase auth. token into constituent parts.
	 *
	 * Notes:
	 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 *
	 * @param {?string} token
	 * @return {{header: *, claims: *, data: *, signature: string}}
	 */
	var decode = exports.decode = function decode(token) {
	    var header = {},
	        claims = {},
	        data = {},
	        signature = '';
	    try {
	        var parts = token.split('.');
	        header = (0, _json.jsonEval)((0, _util.base64Decode)(parts[0]) || '');
	        claims = (0, _json.jsonEval)((0, _util.base64Decode)(parts[1]) || '');
	        signature = parts[2];
	        data = claims['d'] || {};
	        delete claims['d'];
	    } catch (e) {}
	    return {
	        header: header,
	        claims: claims,
	        data: data,
	        signature: signature
	    };
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
	 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 *
	 * @param {?string} token
	 * @return {boolean}
	 */
	var isValidTimestamp = exports.isValidTimestamp = function isValidTimestamp(token) {
	    var claims = decode(token).claims,
	        now = Math.floor(new Date().getTime() / 1000),
	        validSince,
	        validUntil;
	    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object') {
	        if (claims.hasOwnProperty('nbf')) {
	            validSince = claims['nbf'];
	        } else if (claims.hasOwnProperty('iat')) {
	            validSince = claims['iat'];
	        }
	        if (claims.hasOwnProperty('exp')) {
	            validUntil = claims['exp'];
	        } else {
	            // token will expire after 24h by default
	            validUntil = validSince + 86400;
	        }
	    }
	    return now && validSince && validUntil && now >= validSince && now <= validUntil;
	};
	/**
	 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
	 *
	 * Notes:
	 * - May return null if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 *
	 * @param {?string} token
	 * @return {?number}
	 */
	var issuedAtTime = exports.issuedAtTime = function issuedAtTime(token) {
	    var claims = decode(token).claims;
	    if ((typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat')) {
	        return claims['iat'];
	    }
	    return null;
	};
	/**
	 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty
	 * signature.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 *
	 * @param {?string} token
	 * @return {boolean}
	 */
	var isValidFormat = exports.isValidFormat = function isValidFormat(token) {
	    var decoded = decode(token),
	        claims = decoded.claims;
	    return !!decoded.signature && !!claims && (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims.hasOwnProperty('iat');
	};
	/**
	 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
	 *
	 * Notes:
	 * - May return a false negative if there's no native base64 decoding support.
	 * - Doesn't check if the token is actually valid.
	 *
	 * @param {?string} token
	 * @return {boolean}
	 */
	var isAdmin = exports.isAdmin = function isAdmin(token) {
	    var claims = decode(token).claims;
	    return (typeof claims === 'undefined' ? 'undefined' : _typeof(claims)) === 'object' && claims['admin'] === true;
	};
	//# sourceMappingURL=jwt.js.map


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Connection = undefined;

	var _util = __webpack_require__(19);

	var _storage = __webpack_require__(28);

	var _Constants = __webpack_require__(35);

	var _TransportManager = __webpack_require__(96);

	// Abort upgrade attempt if it takes longer than 60s.
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var UPGRADE_TIMEOUT = 60000;
	// For some transports (WebSockets), we need to "validate" the transport by exchanging a few requests and responses.
	// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.
	var DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;
	// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)
	// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout
	// but we've sent/received enough bytes, we don't cancel the connection.
	var BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;
	var BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;
	var MESSAGE_TYPE = 't';
	var MESSAGE_DATA = 'd';
	var CONTROL_SHUTDOWN = 's';
	var CONTROL_RESET = 'r';
	var CONTROL_ERROR = 'e';
	var CONTROL_PONG = 'o';
	var SWITCH_ACK = 'a';
	var END_TRANSMISSION = 'n';
	var PING = 'p';
	var SERVER_HELLO = 'h';
	/**
	 * Creates a new real-time connection to the server using whichever method works
	 * best in the current browser.
	 *
	 * @constructor
	 */
	var Connection = /** @class */function () {
	    /**
	     * @param {!string} id - an id for this connection
	     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to
	     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives
	     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.
	     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost
	     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.
	     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server
	     */
	    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {
	        this.id = id;
	        this.repoInfo_ = repoInfo_;
	        this.onMessage_ = onMessage_;
	        this.onReady_ = onReady_;
	        this.onDisconnect_ = onDisconnect_;
	        this.onKill_ = onKill_;
	        this.lastSessionId = lastSessionId;
	        this.connectionCount = 0;
	        this.pendingDataMessages = [];
	        this.state_ = 0 /* CONNECTING */;
	        this.log_ = (0, _util.logWrapper)('c:' + this.id + ':');
	        this.transportManager_ = new _TransportManager.TransportManager(repoInfo_);
	        this.log_('Connection created');
	        this.start_();
	    }
	    /**
	     * Starts a connection attempt
	     * @private
	     */
	    Connection.prototype.start_ = function () {
	        var _this = this;
	        var conn = this.transportManager_.initialTransport();
	        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);
	        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we
	        // can consider the transport healthy.
	        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;
	        var onMessageReceived = this.connReceiver_(this.conn_);
	        var onConnectionLost = this.disconnReceiver_(this.conn_);
	        this.tx_ = this.conn_;
	        this.rx_ = this.conn_;
	        this.secondaryConn_ = null;
	        this.isHealthy_ = false;
	        /*
	         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.
	         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.
	         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should
	         * still have the context of your originating frame.
	         */
	        setTimeout(function () {
	            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it
	            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);
	        }, Math.floor(0));
	        var healthyTimeout_ms = conn['healthyTimeout'] || 0;
	        if (healthyTimeout_ms > 0) {
	            this.healthyTimeout_ = (0, _util.setTimeoutNonBlocking)(function () {
	                _this.healthyTimeout_ = null;
	                if (!_this.isHealthy_) {
	                    if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {
	                        _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');
	                        _this.isHealthy_ = true;
	                        _this.conn_.markConnectionHealthy();
	                    } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {
	                        _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.');
	                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to
	                        // the server.
	                    } else {
	                        _this.log_('Closing unhealthy connection after timeout.');
	                        _this.close();
	                    }
	                }
	            }, Math.floor(healthyTimeout_ms));
	        }
	    };
	    /**
	     * @return {!string}
	     * @private
	     */
	    Connection.prototype.nextTransportId_ = function () {
	        return 'c:' + this.id + ':' + this.connectionCount++;
	    };
	    Connection.prototype.disconnReceiver_ = function (conn) {
	        var _this = this;
	        return function (everConnected) {
	            if (conn === _this.conn_) {
	                _this.onConnectionLost_(everConnected);
	            } else if (conn === _this.secondaryConn_) {
	                _this.log_('Secondary connection lost.');
	                _this.onSecondaryConnectionLost_();
	            } else {
	                _this.log_('closing an old connection');
	            }
	        };
	    };
	    Connection.prototype.connReceiver_ = function (conn) {
	        var _this = this;
	        return function (message) {
	            if (_this.state_ != 2 /* DISCONNECTED */) {
	                    if (conn === _this.rx_) {
	                        _this.onPrimaryMessageReceived_(message);
	                    } else if (conn === _this.secondaryConn_) {
	                        _this.onSecondaryMessageReceived_(message);
	                    } else {
	                        _this.log_('message on old connection');
	                    }
	                }
	        };
	    };
	    /**
	     *
	     * @param {Object} dataMsg An arbitrary data message to be sent to the server
	     */
	    Connection.prototype.sendRequest = function (dataMsg) {
	        // wrap in a data message envelope and send it on
	        var msg = { t: 'd', d: dataMsg };
	        this.sendData_(msg);
	    };
	    Connection.prototype.tryCleanupConnection = function () {
	        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {
	            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);
	            this.conn_ = this.secondaryConn_;
	            this.secondaryConn_ = null;
	            // the server will shutdown the old connection
	        }
	    };
	    Connection.prototype.onSecondaryControl_ = function (controlData) {
	        if (MESSAGE_TYPE in controlData) {
	            var cmd = controlData[MESSAGE_TYPE];
	            if (cmd === SWITCH_ACK) {
	                this.upgradeIfSecondaryHealthy_();
	            } else if (cmd === CONTROL_RESET) {
	                // Most likely the session wasn't valid. Abandon the switch attempt
	                this.log_('Got a reset on secondary, closing it');
	                this.secondaryConn_.close();
	                // If we were already using this connection for something, than we need to fully close
	                if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {
	                    this.close();
	                }
	            } else if (cmd === CONTROL_PONG) {
	                this.log_('got pong on secondary.');
	                this.secondaryResponsesRequired_--;
	                this.upgradeIfSecondaryHealthy_();
	            }
	        }
	    };
	    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {
	        var layer = (0, _util.requireKey)('t', parsedData);
	        var data = (0, _util.requireKey)('d', parsedData);
	        if (layer == 'c') {
	            this.onSecondaryControl_(data);
	        } else if (layer == 'd') {
	            // got a data message, but we're still second connection. Need to buffer it up
	            this.pendingDataMessages.push(data);
	        } else {
	            throw new Error('Unknown protocol layer: ' + layer);
	        }
	    };
	    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {
	        if (this.secondaryResponsesRequired_ <= 0) {
	            this.log_('Secondary connection is healthy.');
	            this.isHealthy_ = true;
	            this.secondaryConn_.markConnectionHealthy();
	            this.proceedWithUpgrade_();
	        } else {
	            // Send a ping to make sure the connection is healthy.
	            this.log_('sending ping on secondary.');
	            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });
	        }
	    };
	    Connection.prototype.proceedWithUpgrade_ = function () {
	        // tell this connection to consider itself open
	        this.secondaryConn_.start();
	        // send ack
	        this.log_('sending client ack on secondary');
	        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });
	        // send end packet on primary transport, switch to sending on this one
	        // can receive on this one, buffer responses until end received on primary transport
	        this.log_('Ending transmission on primary');
	        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });
	        this.tx_ = this.secondaryConn_;
	        this.tryCleanupConnection();
	    };
	    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {
	        // Must refer to parsedData properties in quotes, so closure doesn't touch them.
	        var layer = (0, _util.requireKey)('t', parsedData);
	        var data = (0, _util.requireKey)('d', parsedData);
	        if (layer == 'c') {
	            this.onControl_(data);
	        } else if (layer == 'd') {
	            this.onDataMessage_(data);
	        }
	    };
	    Connection.prototype.onDataMessage_ = function (message) {
	        this.onPrimaryResponse_();
	        // We don't do anything with data messages, just kick them up a level
	        this.onMessage_(message);
	    };
	    Connection.prototype.onPrimaryResponse_ = function () {
	        if (!this.isHealthy_) {
	            this.primaryResponsesRequired_--;
	            if (this.primaryResponsesRequired_ <= 0) {
	                this.log_('Primary connection is healthy.');
	                this.isHealthy_ = true;
	                this.conn_.markConnectionHealthy();
	            }
	        }
	    };
	    Connection.prototype.onControl_ = function (controlData) {
	        var cmd = (0, _util.requireKey)(MESSAGE_TYPE, controlData);
	        if (MESSAGE_DATA in controlData) {
	            var payload = controlData[MESSAGE_DATA];
	            if (cmd === SERVER_HELLO) {
	                this.onHandshake_(payload);
	            } else if (cmd === END_TRANSMISSION) {
	                this.log_('recvd end transmission on primary');
	                this.rx_ = this.secondaryConn_;
	                for (var i = 0; i < this.pendingDataMessages.length; ++i) {
	                    this.onDataMessage_(this.pendingDataMessages[i]);
	                }
	                this.pendingDataMessages = [];
	                this.tryCleanupConnection();
	            } else if (cmd === CONTROL_SHUTDOWN) {
	                // This was previously the 'onKill' callback passed to the lower-level connection
	                // payload in this case is the reason for the shutdown. Generally a human-readable error
	                this.onConnectionShutdown_(payload);
	            } else if (cmd === CONTROL_RESET) {
	                // payload in this case is the host we should contact
	                this.onReset_(payload);
	            } else if (cmd === CONTROL_ERROR) {
	                (0, _util.error)('Server Error: ' + payload);
	            } else if (cmd === CONTROL_PONG) {
	                this.log_('got pong on primary.');
	                this.onPrimaryResponse_();
	                this.sendPingOnPrimaryIfNecessary_();
	            } else {
	                (0, _util.error)('Unknown control packet command: ' + cmd);
	            }
	        }
	    };
	    /**
	     *
	     * @param {Object} handshake The handshake data returned from the server
	     * @private
	     */
	    Connection.prototype.onHandshake_ = function (handshake) {
	        var timestamp = handshake.ts;
	        var version = handshake.v;
	        var host = handshake.h;
	        this.sessionId = handshake.s;
	        this.repoInfo_.updateHost(host);
	        // if we've already closed the connection, then don't bother trying to progress further
	        if (this.state_ == 0 /* CONNECTING */) {
	                this.conn_.start();
	                this.onConnectionEstablished_(this.conn_, timestamp);
	                if (_Constants.PROTOCOL_VERSION !== version) {
	                    (0, _util.warn)('Protocol version mismatch detected');
	                }
	                // TODO: do we want to upgrade? when? maybe a delay?
	                this.tryStartUpgrade_();
	            }
	    };
	    Connection.prototype.tryStartUpgrade_ = function () {
	        var conn = this.transportManager_.upgradeTransport();
	        if (conn) {
	            this.startUpgrade_(conn);
	        }
	    };
	    Connection.prototype.startUpgrade_ = function (conn) {
	        var _this = this;
	        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);
	        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we
	        // can consider the transport healthy.
	        this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;
	        var onMessage = this.connReceiver_(this.secondaryConn_);
	        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);
	        this.secondaryConn_.open(onMessage, onDisconnect);
	        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.
	        (0, _util.setTimeoutNonBlocking)(function () {
	            if (_this.secondaryConn_) {
	                _this.log_('Timed out trying to upgrade.');
	                _this.secondaryConn_.close();
	            }
	        }, Math.floor(UPGRADE_TIMEOUT));
	    };
	    Connection.prototype.onReset_ = function (host) {
	        this.log_('Reset packet received.  New host: ' + host);
	        this.repoInfo_.updateHost(host);
	        // TODO: if we're already "connected", we need to trigger a disconnect at the next layer up.
	        // We don't currently support resets after the connection has already been established
	        if (this.state_ === 1 /* CONNECTED */) {
	                this.close();
	            } else {
	            // Close whatever connections we have open and start again.
	            this.closeConnections_();
	            this.start_();
	        }
	    };
	    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {
	        var _this = this;
	        this.log_('Realtime connection established.');
	        this.conn_ = conn;
	        this.state_ = 1 /* CONNECTED */;
	        if (this.onReady_) {
	            this.onReady_(timestamp, this.sessionId);
	            this.onReady_ = null;
	        }
	        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,
	        // send some pings.
	        if (this.primaryResponsesRequired_ === 0) {
	            this.log_('Primary connection is healthy.');
	            this.isHealthy_ = true;
	        } else {
	            (0, _util.setTimeoutNonBlocking)(function () {
	                _this.sendPingOnPrimaryIfNecessary_();
	            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));
	        }
	    };
	    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {
	        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.
	        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {
	                this.log_('sending ping on primary.');
	                this.sendData_({ t: 'c', d: { t: PING, d: {} } });
	            }
	    };
	    Connection.prototype.onSecondaryConnectionLost_ = function () {
	        var conn = this.secondaryConn_;
	        this.secondaryConn_ = null;
	        if (this.tx_ === conn || this.rx_ === conn) {
	            // we are relying on this connection already in some capacity. Therefore, a failure is real
	            this.close();
	        }
	    };
	    /**
	     *
	     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if
	     * we should flush the host cache
	     * @private
	     */
	    Connection.prototype.onConnectionLost_ = function (everConnected) {
	        this.conn_ = null;
	        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting
	        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.
	        if (!everConnected && this.state_ === 0 /* CONNECTING */) {
	                this.log_('Realtime connection failed.');
	                // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away
	                if (this.repoInfo_.isCacheableHost()) {
	                    _storage.PersistentStorage.remove('host:' + this.repoInfo_.host);
	                    // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com
	                    this.repoInfo_.internalHost = this.repoInfo_.host;
	                }
	            } else if (this.state_ === 1 /* CONNECTED */) {
	                this.log_('Realtime connection lost.');
	            }
	        this.close();
	    };
	    /**
	     *
	     * @param {string} reason
	     * @private
	     */
	    Connection.prototype.onConnectionShutdown_ = function (reason) {
	        this.log_('Connection shutdown command received. Shutting down...');
	        if (this.onKill_) {
	            this.onKill_(reason);
	            this.onKill_ = null;
	        }
	        // We intentionally don't want to fire onDisconnect (kill is a different case),
	        // so clear the callback.
	        this.onDisconnect_ = null;
	        this.close();
	    };
	    Connection.prototype.sendData_ = function (data) {
	        if (this.state_ !== 1 /* CONNECTED */) {
	                throw 'Connection is not connected';
	            } else {
	            this.tx_.send(data);
	        }
	    };
	    /**
	     * Cleans up this connection, calling the appropriate callbacks
	     */
	    Connection.prototype.close = function () {
	        if (this.state_ !== 2 /* DISCONNECTED */) {
	                this.log_('Closing realtime connection.');
	                this.state_ = 2 /* DISCONNECTED */;
	                this.closeConnections_();
	                if (this.onDisconnect_) {
	                    this.onDisconnect_();
	                    this.onDisconnect_ = null;
	                }
	            }
	    };
	    /**
	     *
	     * @private
	     */
	    Connection.prototype.closeConnections_ = function () {
	        this.log_('Shutting down all connections');
	        if (this.conn_) {
	            this.conn_.close();
	            this.conn_ = null;
	        }
	        if (this.secondaryConn_) {
	            this.secondaryConn_.close();
	            this.secondaryConn_ = null;
	        }
	        if (this.healthyTimeout_) {
	            clearTimeout(this.healthyTimeout_);
	            this.healthyTimeout_ = null;
	        }
	    };
	    return Connection;
	}();
	exports.Connection = Connection;
	//# sourceMappingURL=Connection.js.map


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TransportManager = undefined;

	var _BrowserPollConnection = __webpack_require__(97);

	var _WebSocketConnection = __webpack_require__(99);

	var _util = __webpack_require__(19);

	/**
	 * Currently simplistic, this class manages what transport a Connection should use at various stages of its
	 * lifecycle.
	 *
	 * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if
	 * they are available.
	 * @constructor
	 */
	var TransportManager = /** @class */function () {
	    /**
	     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to
	     */
	    function TransportManager(repoInfo) {
	        this.initTransports_(repoInfo);
	    }
	    Object.defineProperty(TransportManager, "ALL_TRANSPORTS", {
	        /**
	         * @const
	         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}
	         */
	        get: function get() {
	            return [_BrowserPollConnection.BrowserPollConnection, _WebSocketConnection.WebSocketConnection];
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * @param {!RepoInfo} repoInfo
	     * @private
	     */
	    TransportManager.prototype.initTransports_ = function (repoInfo) {
	        var isWebSocketsAvailable = _WebSocketConnection.WebSocketConnection && _WebSocketConnection.WebSocketConnection['isAvailable']();
	        var isSkipPollConnection = isWebSocketsAvailable && !_WebSocketConnection.WebSocketConnection.previouslyFailed();
	        if (repoInfo.webSocketOnly) {
	            if (!isWebSocketsAvailable) (0, _util.warn)("wss:// URL used, but browser isn't known to support websockets.  Trying anyway.");
	            isSkipPollConnection = true;
	        }
	        if (isSkipPollConnection) {
	            this.transports_ = [_WebSocketConnection.WebSocketConnection];
	        } else {
	            var transports_1 = this.transports_ = [];
	            (0, _util.each)(TransportManager.ALL_TRANSPORTS, function (i, transport) {
	                if (transport && transport['isAvailable']()) {
	                    transports_1.push(transport);
	                }
	            });
	        }
	    };
	    /**
	     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the
	     * initial transport to use
	     */
	    TransportManager.prototype.initialTransport = function () {
	        if (this.transports_.length > 0) {
	            return this.transports_[0];
	        } else {
	            throw new Error('No transports available');
	        }
	    };
	    /**
	     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next
	     * transport, or null
	     */
	    TransportManager.prototype.upgradeTransport = function () {
	        if (this.transports_.length > 1) {
	            return this.transports_[1];
	        } else {
	            return null;
	        }
	    };
	    return TransportManager;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.TransportManager = TransportManager;
	//# sourceMappingURL=TransportManager.js.map


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.FirebaseIFrameScriptHolder = exports.BrowserPollConnection = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = exports.FIREBASE_LONGPOLL_DATA_PARAM = exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = exports.FIREBASE_LONGPOLL_SERIAL_PARAM = exports.FIREBASE_LONGPOLL_PW_PARAM = exports.FIREBASE_LONGPOLL_ID_PARAM = exports.FIREBASE_LONGPOLL_DATA_CB_NAME = exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = exports.FIREBASE_LONGPOLL_CLOSE_COMMAND = exports.FIREBASE_LONGPOLL_START_PARAM = undefined;

	var _util = __webpack_require__(19);

	var _CountedSet = __webpack_require__(63);

	var _StatsManager = __webpack_require__(85);

	var _PacketReceiver = __webpack_require__(98);

	var _Constants = __webpack_require__(35);

	var _json = __webpack_require__(27);

	var _environment = __webpack_require__(31);

	// URL query parameters associated with longpolling
	var FIREBASE_LONGPOLL_START_PARAM = exports.FIREBASE_LONGPOLL_START_PARAM = 'start'; /**
	                                                                                      * Copyright 2017 Google Inc.
	                                                                                      *
	                                                                                      * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                      * you may not use this file except in compliance with the License.
	                                                                                      * You may obtain a copy of the License at
	                                                                                      *
	                                                                                      *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                      *
	                                                                                      * Unless required by applicable law or agreed to in writing, software
	                                                                                      * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                      * See the License for the specific language governing permissions and
	                                                                                      * limitations under the License.
	                                                                                      */
	var FIREBASE_LONGPOLL_CLOSE_COMMAND = exports.FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';
	var FIREBASE_LONGPOLL_COMMAND_CB_NAME = exports.FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';
	var FIREBASE_LONGPOLL_DATA_CB_NAME = exports.FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';
	var FIREBASE_LONGPOLL_ID_PARAM = exports.FIREBASE_LONGPOLL_ID_PARAM = 'id';
	var FIREBASE_LONGPOLL_PW_PARAM = exports.FIREBASE_LONGPOLL_PW_PARAM = 'pw';
	var FIREBASE_LONGPOLL_SERIAL_PARAM = exports.FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';
	var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = exports.FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';
	var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = exports.FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';
	var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = exports.FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';
	var FIREBASE_LONGPOLL_DATA_PARAM = exports.FIREBASE_LONGPOLL_DATA_PARAM = 'd';
	var FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';
	var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = exports.FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';
	//Data size constants.
	//TODO: Perf: the maximum length actually differs from browser to browser.
	// We should check what browser we're on and set accordingly.
	var MAX_URL_DATA_SIZE = 1870;
	var SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=
	var MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;
	/**
	 * Keepalive period
	 * send a fresh request at minimum every 25 seconds. Opera has a maximum request
	 * length of 30 seconds that we can't exceed.
	 * @const
	 * @type {number}
	 */
	var KEEPALIVE_REQUEST_INTERVAL = 25000;
	/**
	 * How long to wait before aborting a long-polling connection attempt.
	 * @const
	 * @type {number}
	 */
	var LP_CONNECT_TIMEOUT = 30000;
	/**
	 * This class manages a single long-polling connection.
	 *
	 * @constructor
	 * @implements {Transport}
	 */
	var BrowserPollConnection = /** @class */function () {
	    /**
	     * @param {string} connId An identifier for this connection, used for logging
	     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.
	     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing
	     *                                         transport session
	     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a
	     *                                     connection previously
	     */
	    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {
	        this.connId = connId;
	        this.repoInfo = repoInfo;
	        this.transportSessionId = transportSessionId;
	        this.lastSessionId = lastSessionId;
	        this.bytesSent = 0;
	        this.bytesReceived = 0;
	        this.everConnected_ = false;
	        this.log_ = (0, _util.logWrapper)(connId);
	        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo);
	        this.urlFn = function (params) {
	            return repoInfo.connectionURL(_Constants.LONG_POLLING, params);
	        };
	    }
	    /**
	     *
	     * @param {function(Object)} onMessage Callback when messages arrive
	     * @param {function()} onDisconnect Callback with connection lost.
	     */
	    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {
	        var _this = this;
	        this.curSegmentNum = 0;
	        this.onDisconnect_ = onDisconnect;
	        this.myPacketOrderer = new _PacketReceiver.PacketReceiver(onMessage);
	        this.isClosed_ = false;
	        this.connectTimeoutTimer_ = setTimeout(function () {
	            _this.log_('Timed out trying to connect.');
	            // Make sure we clear the host cache
	            _this.onClosed_();
	            _this.connectTimeoutTimer_ = null;
	        }, Math.floor(LP_CONNECT_TIMEOUT));
	        // Ensure we delay the creation of the iframe until the DOM is loaded.
	        (0, _util.executeWhenDOMReady)(function () {
	            if (_this.isClosed_) return;
	            //Set up a callback that gets triggered once a connection is set up.
	            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {
	                var args = [];
	                for (var _i = 0; _i < arguments.length; _i++) {
	                    args[_i] = arguments[_i];
	                }
	                var command = args[0],
	                    arg1 = args[1],
	                    arg2 = args[2],
	                    arg3 = args[3],
	                    arg4 = args[4];
	                _this.incrementIncomingBytes_(args);
	                if (!_this.scriptTagHolder) return; // we closed the connection.
	                if (_this.connectTimeoutTimer_) {
	                    clearTimeout(_this.connectTimeoutTimer_);
	                    _this.connectTimeoutTimer_ = null;
	                }
	                _this.everConnected_ = true;
	                if (command == FIREBASE_LONGPOLL_START_PARAM) {
	                    _this.id = arg1;
	                    _this.password = arg2;
	                } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {
	                    // Don't clear the host cache. We got a response from the server, so we know it's reachable
	                    if (arg1) {
	                        // We aren't expecting any more data (other than what the server's already in the process of sending us
	                        // through our already open polls), so don't send any more.
	                        _this.scriptTagHolder.sendNewPolls = false;
	                        // arg1 in this case is the last response number sent by the server. We should try to receive
	                        // all of the responses up to this one before closing
	                        _this.myPacketOrderer.closeAfter(arg1, function () {
	                            _this.onClosed_();
	                        });
	                    } else {
	                        _this.onClosed_();
	                    }
	                } else {
	                    throw new Error('Unrecognized command received: ' + command);
	                }
	            }, function () {
	                var args = [];
	                for (var _i = 0; _i < arguments.length; _i++) {
	                    args[_i] = arguments[_i];
	                }
	                var pN = args[0],
	                    data = args[1];
	                _this.incrementIncomingBytes_(args);
	                _this.myPacketOrderer.handleResponse(pN, data);
	            }, function () {
	                _this.onClosed_();
	            }, _this.urlFn);
	            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results
	            //from cache.
	            var urlParams = {};
	            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';
	            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);
	            if (_this.scriptTagHolder.uniqueCallbackIdentifier) urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;
	            urlParams[_Constants.VERSION_PARAM] = _Constants.PROTOCOL_VERSION;
	            if (_this.transportSessionId) {
	                urlParams[_Constants.TRANSPORT_SESSION_PARAM] = _this.transportSessionId;
	            }
	            if (_this.lastSessionId) {
	                urlParams[_Constants.LAST_SESSION_PARAM] = _this.lastSessionId;
	            }
	            if (!(0, _environment.isNodeSdk)() && typeof location !== 'undefined' && location.href && location.href.indexOf(_Constants.FORGE_DOMAIN) !== -1) {
	                urlParams[_Constants.REFERER_PARAM] = _Constants.FORGE_REF;
	            }
	            var connectURL = _this.urlFn(urlParams);
	            _this.log_('Connecting via long-poll to ' + connectURL);
	            _this.scriptTagHolder.addTag(connectURL, function () {
	                /* do nothing */
	            });
	        });
	    };
	    /**
	     * Call this when a handshake has completed successfully and we want to consider the connection established
	     */
	    BrowserPollConnection.prototype.start = function () {
	        this.scriptTagHolder.startLongPoll(this.id, this.password);
	        this.addDisconnectPingFrame(this.id, this.password);
	    };
	    /**
	     * Forces long polling to be considered as a potential transport
	     */
	    BrowserPollConnection.forceAllow = function () {
	        BrowserPollConnection.forceAllow_ = true;
	    };
	    /**
	     * Forces longpolling to not be considered as a potential transport
	     */
	    BrowserPollConnection.forceDisallow = function () {
	        BrowserPollConnection.forceDisallow_ = true;
	    };
	    // Static method, use string literal so it can be accessed in a generic way
	    BrowserPollConnection.isAvailable = function () {
	        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in
	        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).
	        return BrowserPollConnection.forceAllow_ || !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !(0, _util.isChromeExtensionContentScript)() && !(0, _util.isWindowsStoreApp)() && !(0, _environment.isNodeSdk)();
	    };
	    /**
	     * No-op for polling
	     */
	    BrowserPollConnection.prototype.markConnectionHealthy = function () {};
	    /**
	     * Stops polling and cleans up the iframe
	     * @private
	     */
	    BrowserPollConnection.prototype.shutdown_ = function () {
	        this.isClosed_ = true;
	        if (this.scriptTagHolder) {
	            this.scriptTagHolder.close();
	            this.scriptTagHolder = null;
	        }
	        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.
	        if (this.myDisconnFrame) {
	            document.body.removeChild(this.myDisconnFrame);
	            this.myDisconnFrame = null;
	        }
	        if (this.connectTimeoutTimer_) {
	            clearTimeout(this.connectTimeoutTimer_);
	            this.connectTimeoutTimer_ = null;
	        }
	    };
	    /**
	     * Triggered when this transport is closed
	     * @private
	     */
	    BrowserPollConnection.prototype.onClosed_ = function () {
	        if (!this.isClosed_) {
	            this.log_('Longpoll is closing itself');
	            this.shutdown_();
	            if (this.onDisconnect_) {
	                this.onDisconnect_(this.everConnected_);
	                this.onDisconnect_ = null;
	            }
	        }
	    };
	    /**
	     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server
	     * that we've left.
	     */
	    BrowserPollConnection.prototype.close = function () {
	        if (!this.isClosed_) {
	            this.log_('Longpoll is being closed.');
	            this.shutdown_();
	        }
	    };
	    /**
	     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then
	     * broken into chunks (since URLs have a small maximum length).
	     * @param {!Object} data The JSON data to transmit.
	     */
	    BrowserPollConnection.prototype.send = function (data) {
	        var dataStr = (0, _json.stringify)(data);
	        this.bytesSent += dataStr.length;
	        this.stats_.incrementCounter('bytes_sent', dataStr.length);
	        //first, lets get the base64-encoded data
	        var base64data = (0, _util.base64Encode)(dataStr);
	        //We can only fit a certain amount in each URL, so we need to split this request
	        //up into multiple pieces if it doesn't fit in one request.
	        var dataSegs = (0, _util.splitStringBySize)(base64data, MAX_PAYLOAD_SIZE);
	        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number
	        //of segments so that we can reassemble the packet on the server.
	        for (var i = 0; i < dataSegs.length; i++) {
	            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);
	            this.curSegmentNum++;
	        }
	    };
	    /**
	     * This is how we notify the server that we're leaving.
	     * We aren't able to send requests with DHTML on a window close event, but we can
	     * trigger XHR requests in some browsers (everything but Opera basically).
	     * @param {!string} id
	     * @param {!string} pw
	     */
	    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {
	        if ((0, _environment.isNodeSdk)()) return;
	        this.myDisconnFrame = document.createElement('iframe');
	        var urlParams = {};
	        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';
	        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;
	        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;
	        this.myDisconnFrame.src = this.urlFn(urlParams);
	        this.myDisconnFrame.style.display = 'none';
	        document.body.appendChild(this.myDisconnFrame);
	    };
	    /**
	     * Used to track the bytes received by this client
	     * @param {*} args
	     * @private
	     */
	    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {
	        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.
	        var bytesReceived = (0, _json.stringify)(args).length;
	        this.bytesReceived += bytesReceived;
	        this.stats_.incrementCounter('bytes_received', bytesReceived);
	    };
	    return BrowserPollConnection;
	}();
	exports.BrowserPollConnection = BrowserPollConnection;
	/*********************************************************************************************
	 * A wrapper around an iframe that is used as a long-polling script holder.
	 * @constructor
	 *********************************************************************************************/

	var FirebaseIFrameScriptHolder = /** @class */function () {
	    /**
	     * @param commandCB - The callback to be called when control commands are recevied from the server.
	     * @param onMessageCB - The callback to be triggered when responses arrive from the server.
	     * @param onDisconnect - The callback to be triggered when this tag holder is closed
	     * @param urlFn - A function that provides the URL of the endpoint to send data to.
	     */
	    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {
	        this.onDisconnect = onDisconnect;
	        this.urlFn = urlFn;
	        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause
	        //problems in some browsers.
	        /**
	         * @type {CountedSet.<number, number>}
	         */
	        this.outstandingRequests = new _CountedSet.CountedSet();
	        //A queue of the pending segments waiting for transmission to the server.
	        this.pendingSegs = [];
	        //A serial number. We use this for two things:
	        // 1) A way to ensure the browser doesn't cache responses to polls
	        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The
	        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute
	        //    JSONP code in the order it was added to the iframe.
	        this.currentSerial = Math.floor(Math.random() * 100000000);
	        // This gets set to false when we're "closing down" the connection (e.g. we're switching transports but there's still
	        // incoming data from the server that we're waiting for).
	        this.sendNewPolls = true;
	        if (!(0, _environment.isNodeSdk)()) {
	            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the
	            //iframes where we put the long-polling script tags. We have two callbacks:
	            //   1) Command Callback - Triggered for control issues, like starting a connection.
	            //   2) Message Callback - Triggered when new data arrives.
	            this.uniqueCallbackIdentifier = (0, _util.LUIDGenerator)();
	            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;
	            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;
	            //Create an iframe for us to add script tags to.
	            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();
	            // Set the iframe's contents.
	            var script = '';
	            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient
	            // for ie9, but ie8 needs to do it again in the document itself.
	            if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {
	                var currentDomain = document.domain;
	                script = '<script>document.domain="' + currentDomain + '";</script>';
	            }
	            var iframeContents = '<html><body>' + script + '</body></html>';
	            try {
	                this.myIFrame.doc.open();
	                this.myIFrame.doc.write(iframeContents);
	                this.myIFrame.doc.close();
	            } catch (e) {
	                (0, _util.log)('frame writing exception');
	                if (e.stack) {
	                    (0, _util.log)(e.stack);
	                }
	                (0, _util.log)(e);
	            }
	        } else {
	            this.commandCB = commandCB;
	            this.onMessageCB = onMessageCB;
	        }
	    }
	    /**
	     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can
	     * actually use.
	     * @private
	     * @return {Element}
	     */
	    FirebaseIFrameScriptHolder.createIFrame_ = function () {
	        var iframe = document.createElement('iframe');
	        iframe.style.display = 'none';
	        // This is necessary in order to initialize the document inside the iframe
	        if (document.body) {
	            document.body.appendChild(iframe);
	            try {
	                // If document.domain has been modified in IE, this will throw an error, and we need to set the
	                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute
	                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.
	                var a = iframe.contentWindow.document;
	                if (!a) {
	                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.
	                    (0, _util.log)('No IE domain setting required');
	                }
	            } catch (e) {
	                var domain = document.domain;
	                iframe.src = "javascript:void((function(){document.open();document.domain='" + domain + "';document.close();})())";
	            }
	        } else {
	            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this
	            // never gets hit.
	            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';
	        }
	        // Get the document of the iframe in a browser-specific way.
	        if (iframe.contentDocument) {
	            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari
	        } else if (iframe.contentWindow) {
	            iframe.doc = iframe.contentWindow.document; // Internet Explorer
	        } else if (iframe.document) {
	            iframe.doc = iframe.document; //others?
	        }
	        return iframe;
	    };
	    /**
	     * Cancel all outstanding queries and remove the frame.
	     */
	    FirebaseIFrameScriptHolder.prototype.close = function () {
	        var _this = this;
	        //Mark this iframe as dead, so no new requests are sent.
	        this.alive = false;
	        if (this.myIFrame) {
	            //We have to actually remove all of the html inside this iframe before removing it from the
	            //window, or IE will continue loading and executing the script tags we've already added, which
	            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.
	            this.myIFrame.doc.body.innerHTML = '';
	            setTimeout(function () {
	                if (_this.myIFrame !== null) {
	                    document.body.removeChild(_this.myIFrame);
	                    _this.myIFrame = null;
	                }
	            }, Math.floor(0));
	        }
	        if ((0, _environment.isNodeSdk)() && this.myID) {
	            var urlParams = {};
	            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';
	            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;
	            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;
	            var theURL = this.urlFn(urlParams);
	            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);
	        }
	        // Protect from being called recursively.
	        var onDisconnect = this.onDisconnect;
	        if (onDisconnect) {
	            this.onDisconnect = null;
	            onDisconnect();
	        }
	    };
	    /**
	     * Actually start the long-polling session by adding the first script tag(s) to the iframe.
	     * @param {!string} id - The ID of this connection
	     * @param {!string} pw - The password for this connection
	     */
	    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {
	        this.myID = id;
	        this.myPW = pw;
	        this.alive = true;
	        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.
	        while (this.newRequest_()) {}
	    };
	    /**
	     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't
	     * too many outstanding requests and we are still alive.
	     *
	     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if
	     * needed.
	     */
	    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {
	        // We keep one outstanding request open all the time to receive data, but if we need to send data
	        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically
	        // close the old request.
	        if (this.alive && this.sendNewPolls && this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {
	            //construct our url
	            this.currentSerial++;
	            var urlParams = {};
	            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;
	            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;
	            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;
	            var theURL = this.urlFn(urlParams);
	            //Now add as much data as we can.
	            var curDataString = '';
	            var i = 0;
	            while (this.pendingSegs.length > 0) {
	                //first, lets see if the next segment will fit.
	                var nextSeg = this.pendingSegs[0];
	                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {
	                    //great, the segment will fit. Lets append it.
	                    var theSeg = this.pendingSegs.shift();
	                    curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;
	                    i++;
	                } else {
	                    break;
	                }
	            }
	            theURL = theURL + curDataString;
	            this.addLongPollTag_(theURL, this.currentSerial);
	            return true;
	        } else {
	            return false;
	        }
	    };
	    /**
	     * Queue a packet for transmission to the server.
	     * @param segnum - A sequential id for this packet segment used for reassembly
	     * @param totalsegs - The total number of segments in this packet
	     * @param data - The data for this segment.
	     */
	    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {
	        //add this to the queue of segments to send.
	        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });
	        //send the data immediately if there isn't already data being transmitted, unless
	        //startLongPoll hasn't been called yet.
	        if (this.alive) {
	            this.newRequest_();
	        }
	    };
	    /**
	     * Add a script tag for a regular long-poll request.
	     * @param {!string} url - The URL of the script tag.
	     * @param {!number} serial - The serial number of the request.
	     * @private
	     */
	    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {
	        var _this = this;
	        //remember that we sent this request.
	        this.outstandingRequests.add(serial, 1);
	        var doNewRequest = function doNewRequest() {
	            _this.outstandingRequests.remove(serial);
	            _this.newRequest_();
	        };
	        // If this request doesn't return on its own accord (by the server sending us some data), we'll
	        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.
	        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));
	        var readyStateCB = function readyStateCB() {
	            // Request completed.  Cancel the keepalive.
	            clearTimeout(keepaliveTimeout);
	            // Trigger a new request so we can continue receiving data.
	            doNewRequest();
	        };
	        this.addTag(url, readyStateCB);
	    };
	    /**
	     * Add an arbitrary script tag to the iframe.
	     * @param {!string} url - The URL for the script tag source.
	     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.
	     */
	    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {
	        var _this = this;
	        if ((0, _environment.isNodeSdk)()) {
	            this.doNodeLongPoll(url, loadCB);
	        } else {
	            setTimeout(function () {
	                try {
	                    // if we're already closed, don't add this poll
	                    if (!_this.sendNewPolls) return;
	                    var newScript_1 = _this.myIFrame.doc.createElement('script');
	                    newScript_1.type = 'text/javascript';
	                    newScript_1.async = true;
	                    newScript_1.src = url;
	                    newScript_1.onload = newScript_1.onreadystatechange = function () {
	                        var rstate = newScript_1.readyState;
	                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {
	                            newScript_1.onload = newScript_1.onreadystatechange = null;
	                            if (newScript_1.parentNode) {
	                                newScript_1.parentNode.removeChild(newScript_1);
	                            }
	                            loadCB();
	                        }
	                    };
	                    newScript_1.onerror = function () {
	                        (0, _util.log)('Long-poll script failed to load: ' + url);
	                        _this.sendNewPolls = false;
	                        _this.close();
	                    };
	                    _this.myIFrame.doc.body.appendChild(newScript_1);
	                } catch (e) {
	                    // TODO: we should make this error visible somehow
	                }
	            }, Math.floor(1));
	        }
	    };
	    return FirebaseIFrameScriptHolder;
	}();
	exports.FirebaseIFrameScriptHolder = FirebaseIFrameScriptHolder;
	//# sourceMappingURL=BrowserPollConnection.js.map


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PacketReceiver = undefined;

	var _util = __webpack_require__(19);

	/**
	 * This class ensures the packets from the server arrive in order
	 * This class takes data from the server and ensures it gets passed into the callbacks in order.
	 * @constructor
	 */
	var PacketReceiver = /** @class */function () {
	    /**
	     * @param onMessage_
	     */
	    function PacketReceiver(onMessage_) {
	        this.onMessage_ = onMessage_;
	        this.pendingResponses = [];
	        this.currentResponseNum = 0;
	        this.closeAfterResponse = -1;
	        this.onClose = null;
	    }
	    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {
	        this.closeAfterResponse = responseNum;
	        this.onClose = callback;
	        if (this.closeAfterResponse < this.currentResponseNum) {
	            this.onClose();
	            this.onClose = null;
	        }
	    };
	    /**
	     * Each message from the server comes with a response number, and an array of data. The responseNumber
	     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all
	     * browsers will respond in the same order as the requests we sent
	     * @param {number} requestNum
	     * @param {Array} data
	     */
	    PacketReceiver.prototype.handleResponse = function (requestNum, data) {
	        var _this = this;
	        this.pendingResponses[requestNum] = data;
	        var _loop_1 = function _loop_1() {
	            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];
	            delete this_1.pendingResponses[this_1.currentResponseNum];
	            var _loop_2 = function _loop_2(i) {
	                if (toProcess[i]) {
	                    (0, _util.exceptionGuard)(function () {
	                        _this.onMessage_(toProcess[i]);
	                    });
	                }
	            };
	            for (var i = 0; i < toProcess.length; ++i) {
	                _loop_2(i);
	            }
	            if (this_1.currentResponseNum === this_1.closeAfterResponse) {
	                if (this_1.onClose) {
	                    this_1.onClose();
	                    this_1.onClose = null;
	                }
	                return "break";
	            }
	            this_1.currentResponseNum++;
	        };
	        var this_1 = this;
	        while (this.pendingResponses[this.currentResponseNum]) {
	            var state_1 = _loop_1();
	            if (state_1 === "break") break;
	        }
	    };
	    return PacketReceiver;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.PacketReceiver = PacketReceiver;
	//# sourceMappingURL=PacketReceiver.js.map


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.WebSocketConnection = undefined;
	exports.setWebSocketImpl = setWebSocketImpl;

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _StatsManager = __webpack_require__(85);

	var _Constants = __webpack_require__(35);

	var _constants = __webpack_require__(21);

	var _storage = __webpack_require__(28);

	var _json = __webpack_require__(27);

	var _environment = __webpack_require__(31);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var WEBSOCKET_MAX_FRAME_SIZE = 16384; /**
	                                       * Copyright 2017 Google Inc.
	                                       *
	                                       * Licensed under the Apache License, Version 2.0 (the "License");
	                                       * you may not use this file except in compliance with the License.
	                                       * You may obtain a copy of the License at
	                                       *
	                                       *   http://www.apache.org/licenses/LICENSE-2.0
	                                       *
	                                       * Unless required by applicable law or agreed to in writing, software
	                                       * distributed under the License is distributed on an "AS IS" BASIS,
	                                       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                       * See the License for the specific language governing permissions and
	                                       * limitations under the License.
	                                       */

	var WEBSOCKET_KEEPALIVE_INTERVAL = 45000;
	var WebSocketImpl = null;
	if (typeof MozWebSocket !== 'undefined') {
	    WebSocketImpl = MozWebSocket;
	} else if (typeof WebSocket !== 'undefined') {
	    WebSocketImpl = WebSocket;
	}
	function setWebSocketImpl(impl) {
	    WebSocketImpl = impl;
	}
	/**
	 * Create a new websocket connection with the given callbacks.
	 * @constructor
	 * @implements {Transport}
	 */
	var WebSocketConnection = /** @class */function () {
	    /**
	     * @param {string} connId identifier for this transport
	     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
	     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
	     *                                         session
	     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
	     */
	    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {
	        this.connId = connId;
	        this.keepaliveTimer = null;
	        this.frames = null;
	        this.totalFrames = 0;
	        this.bytesSent = 0;
	        this.bytesReceived = 0;
	        this.log_ = (0, _util.logWrapper)(this.connId);
	        this.stats_ = _StatsManager.StatsManager.getCollection(repoInfo);
	        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);
	    }
	    /**
	     * @param {RepoInfo} repoInfo The info for the websocket endpoint.
	     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport
	     *                                         session
	     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection
	     * @return {string} connection url
	     * @private
	     */
	    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {
	        var urlParams = {};
	        urlParams[_Constants.VERSION_PARAM] = _Constants.PROTOCOL_VERSION;
	        if (!(0, _environment.isNodeSdk)() && typeof location !== 'undefined' && location.href && location.href.indexOf(_Constants.FORGE_DOMAIN) !== -1) {
	            urlParams[_Constants.REFERER_PARAM] = _Constants.FORGE_REF;
	        }
	        if (transportSessionId) {
	            urlParams[_Constants.TRANSPORT_SESSION_PARAM] = transportSessionId;
	        }
	        if (lastSessionId) {
	            urlParams[_Constants.LAST_SESSION_PARAM] = lastSessionId;
	        }
	        return repoInfo.connectionURL(_Constants.WEBSOCKET, urlParams);
	    };
	    /**
	     *
	     * @param onMessage Callback when messages arrive
	     * @param onDisconnect Callback with connection lost.
	     */
	    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {
	        var _this = this;
	        this.onDisconnect = onDisconnect;
	        this.onMessage = onMessage;
	        this.log_('Websocket connecting to ' + this.connURL);
	        this.everConnected_ = false;
	        // Assume failure until proven otherwise.
	        _storage.PersistentStorage.set('previous_websocket_failure', true);
	        try {
	            if ((0, _environment.isNodeSdk)()) {
	                var device = _constants.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';
	                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>
	                var options = {
	                    headers: {
	                        'User-Agent': "Firebase/" + _Constants.PROTOCOL_VERSION + "/" + _app2.default.SDK_VERSION + "/" + process.platform + "/" + device
	                    }
	                };
	                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.
	                var env = process['env'];
	                var proxy = this.connURL.indexOf('wss://') == 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];
	                if (proxy) {
	                    options['proxy'] = { origin: proxy };
	                }
	                this.mySock = new WebSocketImpl(this.connURL, [], options);
	            } else {
	                this.mySock = new WebSocketImpl(this.connURL);
	            }
	        } catch (e) {
	            this.log_('Error instantiating WebSocket.');
	            var error = e.message || e.data;
	            if (error) {
	                this.log_(error);
	            }
	            this.onClosed_();
	            return;
	        }
	        this.mySock.onopen = function () {
	            _this.log_('Websocket connected.');
	            _this.everConnected_ = true;
	        };
	        this.mySock.onclose = function () {
	            _this.log_('Websocket connection was disconnected.');
	            _this.mySock = null;
	            _this.onClosed_();
	        };
	        this.mySock.onmessage = function (m) {
	            _this.handleIncomingFrame(m);
	        };
	        this.mySock.onerror = function (e) {
	            _this.log_('WebSocket error.  Closing connection.');
	            var error = e.message || e.data;
	            if (error) {
	                _this.log_(error);
	            }
	            _this.onClosed_();
	        };
	    };
	    /**
	     * No-op for websockets, we don't need to do anything once the connection is confirmed as open
	     */
	    WebSocketConnection.prototype.start = function () {};
	    WebSocketConnection.forceDisallow = function () {
	        WebSocketConnection.forceDisallow_ = true;
	    };
	    WebSocketConnection.isAvailable = function () {
	        var isOldAndroid = false;
	        if (typeof navigator !== 'undefined' && navigator.userAgent) {
	            var oldAndroidRegex = /Android ([0-9]{0,}\.[0-9]{0,})/;
	            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);
	            if (oldAndroidMatch && oldAndroidMatch.length > 1) {
	                if (parseFloat(oldAndroidMatch[1]) < 4.4) {
	                    isOldAndroid = true;
	                }
	            }
	        }
	        return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;
	    };
	    /**
	     * Returns true if we previously failed to connect with this transport.
	     * @return {boolean}
	     */
	    WebSocketConnection.previouslyFailed = function () {
	        // If our persistent storage is actually only in-memory storage,
	        // we default to assuming that it previously failed to be safe.
	        return _storage.PersistentStorage.isInMemoryStorage || _storage.PersistentStorage.get('previous_websocket_failure') === true;
	    };
	    WebSocketConnection.prototype.markConnectionHealthy = function () {
	        _storage.PersistentStorage.remove('previous_websocket_failure');
	    };
	    WebSocketConnection.prototype.appendFrame_ = function (data) {
	        this.frames.push(data);
	        if (this.frames.length == this.totalFrames) {
	            var fullMess = this.frames.join('');
	            this.frames = null;
	            var jsonMess = (0, _json.jsonEval)(fullMess);
	            //handle the message
	            this.onMessage(jsonMess);
	        }
	    };
	    /**
	     * @param {number} frameCount The number of frames we are expecting from the server
	     * @private
	     */
	    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {
	        this.totalFrames = frameCount;
	        this.frames = [];
	    };
	    /**
	     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1
	     * @param {!String} data
	     * @return {?String} Any remaining data to be process, or null if there is none
	     * @private
	     */
	    WebSocketConnection.prototype.extractFrameCount_ = function (data) {
	        (0, _assert.assert)(this.frames === null, 'We already have a frame buffer');
	        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced
	        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508
	        if (data.length <= 6) {
	            var frameCount = Number(data);
	            if (!isNaN(frameCount)) {
	                this.handleNewFrameCount_(frameCount);
	                return null;
	            }
	        }
	        this.handleNewFrameCount_(1);
	        return data;
	    };
	    /**
	     * Process a websocket frame that has arrived from the server.
	     * @param mess The frame data
	     */
	    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {
	        if (this.mySock === null) return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.
	        var data = mess['data'];
	        this.bytesReceived += data.length;
	        this.stats_.incrementCounter('bytes_received', data.length);
	        this.resetKeepAlive();
	        if (this.frames !== null) {
	            // we're buffering
	            this.appendFrame_(data);
	        } else {
	            // try to parse out a frame count, otherwise, assume 1 and process it
	            var remainingData = this.extractFrameCount_(data);
	            if (remainingData !== null) {
	                this.appendFrame_(remainingData);
	            }
	        }
	    };
	    /**
	     * Send a message to the server
	     * @param {Object} data The JSON object to transmit
	     */
	    WebSocketConnection.prototype.send = function (data) {
	        this.resetKeepAlive();
	        var dataStr = (0, _json.stringify)(data);
	        this.bytesSent += dataStr.length;
	        this.stats_.incrementCounter('bytes_sent', dataStr.length);
	        //We can only fit a certain amount in each websocket frame, so we need to split this request
	        //up into multiple pieces if it doesn't fit in one request.
	        var dataSegs = (0, _util.splitStringBySize)(dataStr, WEBSOCKET_MAX_FRAME_SIZE);
	        //Send the length header
	        if (dataSegs.length > 1) {
	            this.sendString_(String(dataSegs.length));
	        }
	        //Send the actual data in segments.
	        for (var i = 0; i < dataSegs.length; i++) {
	            this.sendString_(dataSegs[i]);
	        }
	    };
	    WebSocketConnection.prototype.shutdown_ = function () {
	        this.isClosed_ = true;
	        if (this.keepaliveTimer) {
	            clearInterval(this.keepaliveTimer);
	            this.keepaliveTimer = null;
	        }
	        if (this.mySock) {
	            this.mySock.close();
	            this.mySock = null;
	        }
	    };
	    WebSocketConnection.prototype.onClosed_ = function () {
	        if (!this.isClosed_) {
	            this.log_('WebSocket is closing itself');
	            this.shutdown_();
	            // since this is an internal close, trigger the close listener
	            if (this.onDisconnect) {
	                this.onDisconnect(this.everConnected_);
	                this.onDisconnect = null;
	            }
	        }
	    };
	    /**
	     * External-facing close handler.
	     * Close the websocket and kill the connection.
	     */
	    WebSocketConnection.prototype.close = function () {
	        if (!this.isClosed_) {
	            this.log_('WebSocket is being closed');
	            this.shutdown_();
	        }
	    };
	    /**
	     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after
	     * the last activity.
	     */
	    WebSocketConnection.prototype.resetKeepAlive = function () {
	        var _this = this;
	        clearInterval(this.keepaliveTimer);
	        this.keepaliveTimer = setInterval(function () {
	            //If there has been no websocket activity for a while, send a no-op
	            if (_this.mySock) {
	                _this.sendString_('0');
	            }
	            _this.resetKeepAlive();
	        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));
	    };
	    /**
	     * Send a string over the websocket.
	     *
	     * @param {string} str String to send.
	     * @private
	     */
	    WebSocketConnection.prototype.sendString_ = function (str) {
	        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()
	        // calls for some unknown reason.  We treat these as an error and disconnect.
	        // See https://app.asana.com/0/58926111402292/68021340250410
	        try {
	            this.mySock.send(str);
	        } catch (e) {
	            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');
	            setTimeout(this.onClosed_.bind(this), 0);
	        }
	    };
	    /**
	     * Number of response before we consider the connection "healthy."
	     * @type {number}
	     */
	    WebSocketConnection.responsesRequiredToBeHealthy = 2;
	    /**
	     * Time to wait for the connection te become healthy before giving up.
	     * @type {number}
	     */
	    WebSocketConnection.healthyTimeout = 30000;
	    return WebSocketConnection;
	}();
	exports.WebSocketConnection = WebSocketConnection;
	//# sourceMappingURL=WebSocketConnection.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 100 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Interface defining the set of actions that can be performed against the Firebase server
	 * (basically corresponds to our wire protocol).
	 *
	 * @interface
	 */
	var ServerActions = /** @class */function () {
	  function ServerActions() {}
	  /**
	   * @param {string} pathString
	   * @param {*} data
	   * @param {function(string, string)=} onComplete
	   * @param {string=} hash
	   */
	  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};
	  /**
	   * @param {string} pathString
	   * @param {*} data
	   * @param {function(string, ?string)} onComplete
	   * @param {string=} hash
	   */
	  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};
	  /**
	   * Refreshes the auth token for the current connection.
	   * @param {string} token The authentication token
	   */
	  ServerActions.prototype.refreshAuthToken = function (token) {};
	  /**
	   * @param {string} pathString
	   * @param {*} data
	   * @param {function(string, string)=} onComplete
	   */
	  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};
	  /**
	   * @param {string} pathString
	   * @param {*} data
	   * @param {function(string, string)=} onComplete
	   */
	  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};
	  /**
	   * @param {string} pathString
	   * @param {function(string, string)=} onComplete
	   */
	  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};
	  /**
	   * @param {Object.<string, *>} stats
	   */
	  ServerActions.prototype.reportStats = function (stats) {};
	  return ServerActions;
	}();
	exports.ServerActions = ServerActions;
	//# sourceMappingURL=ServerActions.js.map


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ReadonlyRestClient = undefined;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _json = __webpack_require__(27);

	var _obj = __webpack_require__(22);

	var _util2 = __webpack_require__(102);

	var _ServerActions = __webpack_require__(100);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	/**
	 * An implementation of ServerActions that communicates with the server via REST requests.
	 * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full
	 * persistent connection (using WebSockets or long-polling)
	 */
	var ReadonlyRestClient = /** @class */function (_super) {
	    __extends(ReadonlyRestClient, _super);
	    /**
	     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to
	     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server
	     * @param {AuthTokenProvider} authTokenProvider_
	     * @implements {ServerActions}
	     */
	    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {
	        var _this = _super.call(this) || this;
	        _this.repoInfo_ = repoInfo_;
	        _this.onDataUpdate_ = onDataUpdate_;
	        _this.authTokenProvider_ = authTokenProvider_;
	        /** @private {function(...[*])} */
	        _this.log_ = (0, _util.logWrapper)('p:rest:');
	        /**
	         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen
	         * that's been removed. :-/
	         *
	         * @private {!Object.<string, !Object>}
	         */
	        _this.listens_ = {};
	        return _this;
	    }
	    ReadonlyRestClient.prototype.reportStats = function (stats) {
	        throw new Error('Method not implemented.');
	    };
	    /**
	     * @param {!Query} query
	     * @param {?number=} tag
	     * @return {string}
	     * @private
	     */
	    ReadonlyRestClient.getListenId_ = function (query, tag) {
	        if (tag !== undefined) {
	            return 'tag$' + tag;
	        } else {
	            (0, _assert.assert)(query.getQueryParams().isDefault(), "should have a tag if it's not a default query.");
	            return query.path.toString();
	        }
	    };
	    /** @inheritDoc */
	    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {
	        var _this = this;
	        var pathString = query.path.toString();
	        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());
	        // Mark this listener so we can tell if it's removed.
	        var listenId = ReadonlyRestClient.getListenId_(query, tag);
	        var thisListen = {};
	        this.listens_[listenId] = thisListen;
	        var queryStringParamaters = query.getQueryParams().toRestQueryStringParameters();
	        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {
	            var data = result;
	            if (error === 404) {
	                data = null;
	                error = null;
	            }
	            if (error === null) {
	                _this.onDataUpdate_(pathString, data, /*isMerge=*/false, tag);
	            }
	            if ((0, _obj.safeGet)(_this.listens_, listenId) === thisListen) {
	                var status_1;
	                if (!error) {
	                    status_1 = 'ok';
	                } else if (error == 401) {
	                    status_1 = 'permission_denied';
	                } else {
	                    status_1 = 'rest_error:' + error;
	                }
	                onComplete(status_1, null);
	            }
	        });
	    };
	    /** @inheritDoc */
	    ReadonlyRestClient.prototype.unlisten = function (query, tag) {
	        var listenId = ReadonlyRestClient.getListenId_(query, tag);
	        delete this.listens_[listenId];
	    };
	    /** @inheritDoc */
	    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {
	        // no-op since we just always call getToken.
	    };
	    /**
	     * Performs a REST request to the given path, with the provided query string parameters,
	     * and any auth credentials we have.
	     *
	     * @param {!string} pathString
	     * @param {!Object.<string, *>} queryStringParameters
	     * @param {?function(?number, *=)} callback
	     * @private
	     */
	    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {
	        var _this = this;
	        if (queryStringParameters === void 0) {
	            queryStringParameters = {};
	        }
	        queryStringParameters['format'] = 'export';
	        this.authTokenProvider_.getToken( /*forceRefresh=*/false).then(function (authTokenData) {
	            var authToken = authTokenData && authTokenData.accessToken;
	            if (authToken) {
	                queryStringParameters['auth'] = authToken;
	            }
	            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + (0, _util2.querystring)(queryStringParameters);
	            _this.log_('Sending REST request for ' + url);
	            var xhr = new XMLHttpRequest();
	            xhr.onreadystatechange = function () {
	                if (callback && xhr.readyState === 4) {
	                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);
	                    var res = null;
	                    if (xhr.status >= 200 && xhr.status < 300) {
	                        try {
	                            res = (0, _json.jsonEval)(xhr.responseText);
	                        } catch (e) {
	                            (0, _util.warn)('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);
	                        }
	                        callback(null, res);
	                    } else {
	                        // 401 and 404 are expected.
	                        if (xhr.status !== 401 && xhr.status !== 404) {
	                            (0, _util.warn)('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);
	                        }
	                        callback(xhr.status);
	                    }
	                    callback = null;
	                }
	            };
	            xhr.open('GET', url, /*asynchronous=*/true);
	            xhr.send();
	        });
	    };
	    return ReadonlyRestClient;
	}(_ServerActions.ServerActions);
	exports.ReadonlyRestClient = ReadonlyRestClient;
	//# sourceMappingURL=ReadonlyRestClient.js.map


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.querystringDecode = exports.querystring = undefined;

	var _obj = __webpack_require__(22);

	/**
	 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params
	 * object (e.g. {arg: 'val', arg2: 'val2'})
	 * Note: You must prepend it with ? when adding it to a URL.
	 *
	 * @param {!Object} querystringParams
	 * @return {string}
	 */
	var querystring = exports.querystring = function querystring(querystringParams) {
	    var params = [];
	    (0, _obj.forEach)(querystringParams, function (key, value) {
	        if (Array.isArray(value)) {
	            value.forEach(function (arrayVal) {
	                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
	            });
	        } else {
	            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
	        }
	    });
	    return params.length ? '&' + params.join('&') : '';
	};
	/**
	 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})
	 *
	 * @param {string} querystring
	 * @return {!Object}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var querystringDecode = exports.querystringDecode = function querystringDecode(querystring) {
	    var obj = {};
	    var tokens = querystring.replace(/^\?/, '').split('&');
	    tokens.forEach(function (token) {
	        if (token) {
	            var key = token.split('=');
	            obj[key[0]] = key[1];
	        }
	    });
	    return obj;
	};
	//# sourceMappingURL=util.js.map


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.QueryParams = undefined;

	var _assert = __webpack_require__(20);

	var _util = __webpack_require__(19);

	var _KeyIndex = __webpack_require__(43);

	var _PriorityIndex = __webpack_require__(46);

	var _ValueIndex = __webpack_require__(49);

	var _PathIndex = __webpack_require__(56);

	var _IndexedFilter = __webpack_require__(75);

	var _LimitedFilter = __webpack_require__(104);

	var _RangedFilter = __webpack_require__(105);

	var _json = __webpack_require__(27);

	/**
	 * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a
	 * range to be returned for a particular location. It is assumed that validation of parameters is done at the
	 * user-facing API level, so it is not done here.
	 * @constructor
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var QueryParams = /** @class */function () {
	    function QueryParams() {
	        this.limitSet_ = false;
	        this.startSet_ = false;
	        this.startNameSet_ = false;
	        this.endSet_ = false;
	        this.endNameSet_ = false;
	        this.limit_ = 0;
	        this.viewFrom_ = '';
	        this.indexStartValue_ = null;
	        this.indexStartName_ = '';
	        this.indexEndValue_ = null;
	        this.indexEndName_ = '';
	        this.index_ = _PriorityIndex.PRIORITY_INDEX;
	    }
	    /**
	     * @return {boolean}
	     */
	    QueryParams.prototype.hasStart = function () {
	        return this.startSet_;
	    };
	    /**
	     * @return {boolean} True if it would return from left.
	     */
	    QueryParams.prototype.isViewFromLeft = function () {
	        if (this.viewFrom_ === '') {
	            // limit(), rather than limitToFirst or limitToLast was called.
	            // This means that only one of startSet_ and endSet_ is true. Use them
	            // to calculate which side of the view to anchor to. If neither is set,
	            // anchor to the end.
	            return this.startSet_;
	        } else {
	            return this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;
	        }
	    };
	    /**
	     * Only valid to call if hasStart() returns true
	     * @return {*}
	     */
	    QueryParams.prototype.getIndexStartValue = function () {
	        (0, _assert.assert)(this.startSet_, 'Only valid if start has been set');
	        return this.indexStartValue_;
	    };
	    /**
	     * Only valid to call if hasStart() returns true.
	     * Returns the starting key name for the range defined by these query parameters
	     * @return {!string}
	     */
	    QueryParams.prototype.getIndexStartName = function () {
	        (0, _assert.assert)(this.startSet_, 'Only valid if start has been set');
	        if (this.startNameSet_) {
	            return this.indexStartName_;
	        } else {
	            return _util.MIN_NAME;
	        }
	    };
	    /**
	     * @return {boolean}
	     */
	    QueryParams.prototype.hasEnd = function () {
	        return this.endSet_;
	    };
	    /**
	     * Only valid to call if hasEnd() returns true.
	     * @return {*}
	     */
	    QueryParams.prototype.getIndexEndValue = function () {
	        (0, _assert.assert)(this.endSet_, 'Only valid if end has been set');
	        return this.indexEndValue_;
	    };
	    /**
	     * Only valid to call if hasEnd() returns true.
	     * Returns the end key name for the range defined by these query parameters
	     * @return {!string}
	     */
	    QueryParams.prototype.getIndexEndName = function () {
	        (0, _assert.assert)(this.endSet_, 'Only valid if end has been set');
	        if (this.endNameSet_) {
	            return this.indexEndName_;
	        } else {
	            return _util.MAX_NAME;
	        }
	    };
	    /**
	     * @return {boolean}
	     */
	    QueryParams.prototype.hasLimit = function () {
	        return this.limitSet_;
	    };
	    /**
	     * @return {boolean} True if a limit has been set and it has been explicitly anchored
	     */
	    QueryParams.prototype.hasAnchoredLimit = function () {
	        return this.limitSet_ && this.viewFrom_ !== '';
	    };
	    /**
	     * Only valid to call if hasLimit() returns true
	     * @return {!number}
	     */
	    QueryParams.prototype.getLimit = function () {
	        (0, _assert.assert)(this.limitSet_, 'Only valid if limit has been set');
	        return this.limit_;
	    };
	    /**
	     * @return {!Index}
	     */
	    QueryParams.prototype.getIndex = function () {
	        return this.index_;
	    };
	    /**
	     * @return {!QueryParams}
	     * @private
	     */
	    QueryParams.prototype.copy_ = function () {
	        var copy = new QueryParams();
	        copy.limitSet_ = this.limitSet_;
	        copy.limit_ = this.limit_;
	        copy.startSet_ = this.startSet_;
	        copy.indexStartValue_ = this.indexStartValue_;
	        copy.startNameSet_ = this.startNameSet_;
	        copy.indexStartName_ = this.indexStartName_;
	        copy.endSet_ = this.endSet_;
	        copy.indexEndValue_ = this.indexEndValue_;
	        copy.endNameSet_ = this.endNameSet_;
	        copy.indexEndName_ = this.indexEndName_;
	        copy.index_ = this.index_;
	        copy.viewFrom_ = this.viewFrom_;
	        return copy;
	    };
	    /**
	     * @param {!number} newLimit
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.limit = function (newLimit) {
	        var newParams = this.copy_();
	        newParams.limitSet_ = true;
	        newParams.limit_ = newLimit;
	        newParams.viewFrom_ = '';
	        return newParams;
	    };
	    /**
	     * @param {!number} newLimit
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.limitToFirst = function (newLimit) {
	        var newParams = this.copy_();
	        newParams.limitSet_ = true;
	        newParams.limit_ = newLimit;
	        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;
	        return newParams;
	    };
	    /**
	     * @param {!number} newLimit
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.limitToLast = function (newLimit) {
	        var newParams = this.copy_();
	        newParams.limitSet_ = true;
	        newParams.limit_ = newLimit;
	        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;
	        return newParams;
	    };
	    /**
	     * @param {*} indexValue
	     * @param {?string=} key
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.startAt = function (indexValue, key) {
	        var newParams = this.copy_();
	        newParams.startSet_ = true;
	        if (!(indexValue !== undefined)) {
	            indexValue = null;
	        }
	        newParams.indexStartValue_ = indexValue;
	        if (key != null) {
	            newParams.startNameSet_ = true;
	            newParams.indexStartName_ = key;
	        } else {
	            newParams.startNameSet_ = false;
	            newParams.indexStartName_ = '';
	        }
	        return newParams;
	    };
	    /**
	     * @param {*} indexValue
	     * @param {?string=} key
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.endAt = function (indexValue, key) {
	        var newParams = this.copy_();
	        newParams.endSet_ = true;
	        if (!(indexValue !== undefined)) {
	            indexValue = null;
	        }
	        newParams.indexEndValue_ = indexValue;
	        if (key !== undefined) {
	            newParams.endNameSet_ = true;
	            newParams.indexEndName_ = key;
	        } else {
	            newParams.endNameSet_ = false;
	            newParams.indexEndName_ = '';
	        }
	        return newParams;
	    };
	    /**
	     * @param {!Index} index
	     * @return {!QueryParams}
	     */
	    QueryParams.prototype.orderBy = function (index) {
	        var newParams = this.copy_();
	        newParams.index_ = index;
	        return newParams;
	    };
	    /**
	     * @return {!Object}
	     */
	    QueryParams.prototype.getQueryObject = function () {
	        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;
	        var obj = {};
	        if (this.startSet_) {
	            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;
	            if (this.startNameSet_) {
	                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;
	            }
	        }
	        if (this.endSet_) {
	            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;
	            if (this.endNameSet_) {
	                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;
	            }
	        }
	        if (this.limitSet_) {
	            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;
	            var viewFrom = this.viewFrom_;
	            if (viewFrom === '') {
	                if (this.isViewFromLeft()) {
	                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;
	                } else {
	                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;
	                }
	            }
	            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;
	        }
	        // For now, priority index is the default, so we only specify if it's some other index
	        if (this.index_ !== _PriorityIndex.PRIORITY_INDEX) {
	            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();
	        }
	        return obj;
	    };
	    /**
	     * @return {boolean}
	     */
	    QueryParams.prototype.loadsAllData = function () {
	        return !(this.startSet_ || this.endSet_ || this.limitSet_);
	    };
	    /**
	     * @return {boolean}
	     */
	    QueryParams.prototype.isDefault = function () {
	        return this.loadsAllData() && this.index_ == _PriorityIndex.PRIORITY_INDEX;
	    };
	    /**
	     * @return {!NodeFilter}
	     */
	    QueryParams.prototype.getNodeFilter = function () {
	        if (this.loadsAllData()) {
	            return new _IndexedFilter.IndexedFilter(this.getIndex());
	        } else if (this.hasLimit()) {
	            return new _LimitedFilter.LimitedFilter(this);
	        } else {
	            return new _RangedFilter.RangedFilter(this);
	        }
	    };
	    /**
	     * Returns a set of REST query string parameters representing this query.
	     *
	     * @return {!Object.<string,*>} query string parameters
	     */
	    QueryParams.prototype.toRestQueryStringParameters = function () {
	        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;
	        var qs = {};
	        if (this.isDefault()) {
	            return qs;
	        }
	        var orderBy;
	        if (this.index_ === _PriorityIndex.PRIORITY_INDEX) {
	            orderBy = REST_CONSTANTS.PRIORITY_INDEX;
	        } else if (this.index_ === _ValueIndex.VALUE_INDEX) {
	            orderBy = REST_CONSTANTS.VALUE_INDEX;
	        } else if (this.index_ === _KeyIndex.KEY_INDEX) {
	            orderBy = REST_CONSTANTS.KEY_INDEX;
	        } else {
	            (0, _assert.assert)(this.index_ instanceof _PathIndex.PathIndex, 'Unrecognized index type!');
	            orderBy = this.index_.toString();
	        }
	        qs[REST_CONSTANTS.ORDER_BY] = (0, _json.stringify)(orderBy);
	        if (this.startSet_) {
	            qs[REST_CONSTANTS.START_AT] = (0, _json.stringify)(this.indexStartValue_);
	            if (this.startNameSet_) {
	                qs[REST_CONSTANTS.START_AT] += ',' + (0, _json.stringify)(this.indexStartName_);
	            }
	        }
	        if (this.endSet_) {
	            qs[REST_CONSTANTS.END_AT] = (0, _json.stringify)(this.indexEndValue_);
	            if (this.endNameSet_) {
	                qs[REST_CONSTANTS.END_AT] += ',' + (0, _json.stringify)(this.indexEndName_);
	            }
	        }
	        if (this.limitSet_) {
	            if (this.isViewFromLeft()) {
	                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;
	            } else {
	                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;
	            }
	        }
	        return qs;
	    };
	    /**
	     * Wire Protocol Constants
	     * @const
	     * @enum {string}
	     * @private
	     */
	    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {
	        INDEX_START_VALUE: 'sp',
	        INDEX_START_NAME: 'sn',
	        INDEX_END_VALUE: 'ep',
	        INDEX_END_NAME: 'en',
	        LIMIT: 'l',
	        VIEW_FROM: 'vf',
	        VIEW_FROM_LEFT: 'l',
	        VIEW_FROM_RIGHT: 'r',
	        INDEX: 'i'
	    };
	    /**
	     * REST Query Constants
	     * @const
	     * @enum {string}
	     * @private
	     */
	    QueryParams.REST_QUERY_CONSTANTS_ = {
	        ORDER_BY: 'orderBy',
	        PRIORITY_INDEX: '$priority',
	        VALUE_INDEX: '$value',
	        KEY_INDEX: '$key',
	        START_AT: 'startAt',
	        END_AT: 'endAt',
	        LIMIT_TO_FIRST: 'limitToFirst',
	        LIMIT_TO_LAST: 'limitToLast'
	    };
	    /**
	     * Default, empty query parameters
	     * @type {!QueryParams}
	     * @const
	     */
	    QueryParams.DEFAULT = new QueryParams();
	    return QueryParams;
	}();
	exports.QueryParams = QueryParams;
	//# sourceMappingURL=QueryParams.js.map


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LimitedFilter = undefined;

	var _RangedFilter = __webpack_require__(105);

	var _ChildrenNode = __webpack_require__(51);

	var _Node = __webpack_require__(45);

	var _assert = __webpack_require__(20);

	var _Change = __webpack_require__(76);

	/**
	 * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible
	 *
	 * @constructor
	 * @implements {NodeFilter}
	 */
	var LimitedFilter = /** @class */function () {
	    /**
	     * @param {!QueryParams} params
	     */
	    function LimitedFilter(params) {
	        this.rangedFilter_ = new _RangedFilter.RangedFilter(params);
	        this.index_ = params.getIndex();
	        this.limit_ = params.getLimit();
	        this.reverse_ = !params.isViewFromLeft();
	    }
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
	        if (!this.rangedFilter_.matches(new _Node.NamedNode(key, newChild))) {
	            newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        }
	        if (snap.getImmediateChild(key).equals(newChild)) {
	            // No change
	            return snap;
	        } else if (snap.numChildren() < this.limit_) {
	            return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);
	        } else {
	            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);
	        }
	    };
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
	        var filtered;
	        if (newSnap.isLeafNode() || newSnap.isEmpty()) {
	            // Make sure we have a children node with the correct index, not a leaf node;
	            filtered = _ChildrenNode.ChildrenNode.EMPTY_NODE.withIndex(this.index_);
	        } else {
	            if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {
	                // Easier to build up a snapshot, since what we're given has more than twice the elements we want
	                filtered = _ChildrenNode.ChildrenNode.EMPTY_NODE.withIndex(this.index_);
	                // anchor to the startPost, endPost, or last element as appropriate
	                var iterator = void 0;
	                if (this.reverse_) {
	                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);
	                } else {
	                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);
	                }
	                var count = 0;
	                while (iterator.hasNext() && count < this.limit_) {
	                    var next = iterator.getNext();
	                    var inRange = void 0;
	                    if (this.reverse_) {
	                        inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;
	                    } else {
	                        inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;
	                    }
	                    if (inRange) {
	                        filtered = filtered.updateImmediateChild(next.name, next.node);
	                        count++;
	                    } else {
	                        // if we have reached the end post, we cannot keep adding elemments
	                        break;
	                    }
	                }
	            } else {
	                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one
	                filtered = newSnap.withIndex(this.index_);
	                // Don't support priorities on queries
	                filtered = filtered.updatePriority(_ChildrenNode.ChildrenNode.EMPTY_NODE);
	                var startPost = void 0;
	                var endPost = void 0;
	                var cmp = void 0;
	                var iterator = void 0;
	                if (this.reverse_) {
	                    iterator = filtered.getReverseIterator(this.index_);
	                    startPost = this.rangedFilter_.getEndPost();
	                    endPost = this.rangedFilter_.getStartPost();
	                    var indexCompare_1 = this.index_.getCompare();
	                    cmp = function cmp(a, b) {
	                        return indexCompare_1(b, a);
	                    };
	                } else {
	                    iterator = filtered.getIterator(this.index_);
	                    startPost = this.rangedFilter_.getStartPost();
	                    endPost = this.rangedFilter_.getEndPost();
	                    cmp = this.index_.getCompare();
	                }
	                var count = 0;
	                var foundStartPost = false;
	                while (iterator.hasNext()) {
	                    var next = iterator.getNext();
	                    if (!foundStartPost && cmp(startPost, next) <= 0) {
	                        // start adding
	                        foundStartPost = true;
	                    }
	                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;
	                    if (inRange) {
	                        count++;
	                    } else {
	                        filtered = filtered.updateImmediateChild(next.name, _ChildrenNode.ChildrenNode.EMPTY_NODE);
	                    }
	                }
	            }
	        }
	        return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);
	    };
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
	        // Don't support priorities on queries
	        return oldSnap;
	    };
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.filtersNodes = function () {
	        return true;
	    };
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.getIndexedFilter = function () {
	        return this.rangedFilter_.getIndexedFilter();
	    };
	    /**
	     * @inheritDoc
	     */
	    LimitedFilter.prototype.getIndex = function () {
	        return this.index_;
	    };
	    /**
	     * @param {!Node} snap
	     * @param {string} childKey
	     * @param {!Node} childSnap
	     * @param {!CompleteChildSource} source
	     * @param {?ChildChangeAccumulator} changeAccumulator
	     * @return {!Node}
	     * @private
	     */
	    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {
	        // TODO: rename all cache stuff etc to general snap terminology
	        var cmp;
	        if (this.reverse_) {
	            var indexCmp_1 = this.index_.getCompare();
	            cmp = function cmp(a, b) {
	                return indexCmp_1(b, a);
	            };
	        } else {
	            cmp = this.index_.getCompare();
	        }
	        var oldEventCache = snap;
	        (0, _assert.assert)(oldEventCache.numChildren() == this.limit_, '');
	        var newChildNamedNode = new _Node.NamedNode(childKey, childSnap);
	        var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);
	        var inRange = this.rangedFilter_.matches(newChildNamedNode);
	        if (oldEventCache.hasChild(childKey)) {
	            var oldChildSnap = oldEventCache.getImmediateChild(childKey);
	            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);
	            while (nextChild != null && (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {
	                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't
	                // been applied to the limited filter yet. Ignore this next child which will be updated later in
	                // the limited filter...
	                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);
	            }
	            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);
	            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;
	            if (remainsInWindow) {
	                if (changeAccumulator != null) {
	                    changeAccumulator.trackChildChange(_Change.Change.childChangedChange(childKey, childSnap, oldChildSnap));
	                }
	                return oldEventCache.updateImmediateChild(childKey, childSnap);
	            } else {
	                if (changeAccumulator != null) {
	                    changeAccumulator.trackChildChange(_Change.Change.childRemovedChange(childKey, oldChildSnap));
	                }
	                var newEventCache = oldEventCache.updateImmediateChild(childKey, _ChildrenNode.ChildrenNode.EMPTY_NODE);
	                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);
	                if (nextChildInRange) {
	                    if (changeAccumulator != null) {
	                        changeAccumulator.trackChildChange(_Change.Change.childAddedChange(nextChild.name, nextChild.node));
	                    }
	                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);
	                } else {
	                    return newEventCache;
	                }
	            }
	        } else if (childSnap.isEmpty()) {
	            // we're deleting a node, but it was not in the window, so ignore it
	            return snap;
	        } else if (inRange) {
	            if (cmp(windowBoundary, newChildNamedNode) >= 0) {
	                if (changeAccumulator != null) {
	                    changeAccumulator.trackChildChange(_Change.Change.childRemovedChange(windowBoundary.name, windowBoundary.node));
	                    changeAccumulator.trackChildChange(_Change.Change.childAddedChange(childKey, childSnap));
	                }
	                return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, _ChildrenNode.ChildrenNode.EMPTY_NODE);
	            } else {
	                return snap;
	            }
	        } else {
	            return snap;
	        }
	    };
	    return LimitedFilter;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.LimitedFilter = LimitedFilter;
	//# sourceMappingURL=LimitedFilter.js.map


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RangedFilter = undefined;

	var _IndexedFilter = __webpack_require__(75);

	var _PriorityIndex = __webpack_require__(46);

	var _Node = __webpack_require__(45);

	var _ChildrenNode = __webpack_require__(51);

	/**
	 * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node
	 *
	 * @constructor
	 * @implements {NodeFilter}
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var RangedFilter = /** @class */function () {
	    /**
	     * @param {!QueryParams} params
	     */
	    function RangedFilter(params) {
	        this.indexedFilter_ = new _IndexedFilter.IndexedFilter(params.getIndex());
	        this.index_ = params.getIndex();
	        this.startPost_ = RangedFilter.getStartPost_(params);
	        this.endPost_ = RangedFilter.getEndPost_(params);
	    }
	    /**
	     * @return {!NamedNode}
	     */
	    RangedFilter.prototype.getStartPost = function () {
	        return this.startPost_;
	    };
	    /**
	     * @return {!NamedNode}
	     */
	    RangedFilter.prototype.getEndPost = function () {
	        return this.endPost_;
	    };
	    /**
	     * @param {!NamedNode} node
	     * @return {boolean}
	     */
	    RangedFilter.prototype.matches = function (node) {
	        return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {
	        if (!this.matches(new _Node.NamedNode(key, newChild))) {
	            newChild = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        }
	        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {
	        if (newSnap.isLeafNode()) {
	            // Make sure we have a children node with the correct index, not a leaf node;
	            newSnap = _ChildrenNode.ChildrenNode.EMPTY_NODE;
	        }
	        var filtered = newSnap.withIndex(this.index_);
	        // Don't support priorities on queries
	        filtered = filtered.updatePriority(_ChildrenNode.ChildrenNode.EMPTY_NODE);
	        var self = this;
	        newSnap.forEachChild(_PriorityIndex.PRIORITY_INDEX, function (key, childNode) {
	            if (!self.matches(new _Node.NamedNode(key, childNode))) {
	                filtered = filtered.updateImmediateChild(key, _ChildrenNode.ChildrenNode.EMPTY_NODE);
	            }
	        });
	        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {
	        // Don't support priorities on queries
	        return oldSnap;
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.filtersNodes = function () {
	        return true;
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.getIndexedFilter = function () {
	        return this.indexedFilter_;
	    };
	    /**
	     * @inheritDoc
	     */
	    RangedFilter.prototype.getIndex = function () {
	        return this.index_;
	    };
	    /**
	     * @param {!QueryParams} params
	     * @return {!NamedNode}
	     * @private
	     */
	    RangedFilter.getStartPost_ = function (params) {
	        if (params.hasStart()) {
	            var startName = params.getIndexStartName();
	            return params.getIndex().makePost(params.getIndexStartValue(), startName);
	        } else {
	            return params.getIndex().minPost();
	        }
	    };
	    /**
	     * @param {!QueryParams} params
	     * @return {!NamedNode}
	     * @private
	     */
	    RangedFilter.getEndPost_ = function (params) {
	        if (params.hasEnd()) {
	            var endName = params.getIndexEndName();
	            return params.getIndex().makePost(params.getIndexEndValue(), endName);
	        } else {
	            return params.getIndex().maxPost();
	        }
	    };
	    return RangedFilter;
	}();
	exports.RangedFilter = RangedFilter;
	//# sourceMappingURL=RangedFilter.js.map


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RepoManager = undefined;

	var _obj = __webpack_require__(22);

	var _Repo = __webpack_require__(60);

	var _util = __webpack_require__(19);

	var _parser = __webpack_require__(32);

	var _validation = __webpack_require__(39);

	__webpack_require__(107);

	/** @const {string} */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var DATABASE_URL_OPTION = 'databaseURL';
	var _staticInstance;
	/**
	 * Creates and caches Repo instances.
	 */
	var RepoManager = /** @class */function () {
	    function RepoManager() {
	        /**
	         * @private {!Object.<string, Object<string, !fb.core.Repo>>}
	         */
	        this.repos_ = {};
	        /**
	         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).
	         * @private {boolean}
	         */
	        this.useRestClient_ = false;
	    }
	    RepoManager.getInstance = function () {
	        if (!_staticInstance) {
	            _staticInstance = new RepoManager();
	        }
	        return _staticInstance;
	    };
	    // TODO(koss): Remove these functions unless used in tests?
	    RepoManager.prototype.interrupt = function () {
	        for (var appName in this.repos_) {
	            for (var dbUrl in this.repos_[appName]) {
	                this.repos_[appName][dbUrl].interrupt();
	            }
	        }
	    };
	    RepoManager.prototype.resume = function () {
	        for (var appName in this.repos_) {
	            for (var dbUrl in this.repos_[appName]) {
	                this.repos_[appName][dbUrl].resume();
	            }
	        }
	    };
	    /**
	     * This function should only ever be called to CREATE a new database instance.
	     *
	     * @param {!FirebaseApp} app
	     * @return {!Database}
	     */
	    RepoManager.prototype.databaseFromApp = function (app, url) {
	        var dbUrl = url || app.options[DATABASE_URL_OPTION];
	        if (dbUrl === undefined) {
	            (0, _util.fatal)("Can't determine Firebase Database URL.  Be sure to include " + DATABASE_URL_OPTION + ' option when calling firebase.intializeApp().');
	        }
	        var parsedUrl = (0, _parser.parseRepoInfo)(dbUrl);
	        var repoInfo = parsedUrl.repoInfo;
	        (0, _validation.validateUrl)('Invalid Firebase Database URL', 1, parsedUrl);
	        if (!parsedUrl.path.isEmpty()) {
	            (0, _util.fatal)('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');
	        }
	        var repo = this.createRepo(repoInfo, app);
	        return repo.database;
	    };
	    /**
	     * Remove the repo and make sure it is disconnected.
	     *
	     * @param {!Repo} repo
	     */
	    RepoManager.prototype.deleteRepo = function (repo) {
	        var appRepos = (0, _obj.safeGet)(this.repos_, repo.app.name);
	        // This should never happen...
	        if (!appRepos || (0, _obj.safeGet)(appRepos, repo.repoInfo_.toURLString()) !== repo) {
	            (0, _util.fatal)("Database " + repo.app.name + "(" + repo.repoInfo_ + ") has already been deleted.");
	        }
	        repo.interrupt();
	        delete appRepos[repo.repoInfo_.toURLString()];
	    };
	    /**
	     * Ensures a repo doesn't already exist and then creates one using the
	     * provided app.
	     *
	     * @param {!RepoInfo} repoInfo The metadata about the Repo
	     * @param {!FirebaseApp} app
	     * @return {!Repo} The Repo object for the specified server / repoName.
	     */
	    RepoManager.prototype.createRepo = function (repoInfo, app) {
	        var appRepos = (0, _obj.safeGet)(this.repos_, app.name);
	        if (!appRepos) {
	            appRepos = {};
	            this.repos_[app.name] = appRepos;
	        }
	        var repo = (0, _obj.safeGet)(appRepos, repoInfo.toURLString());
	        if (repo) {
	            (0, _util.fatal)('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');
	        }
	        repo = new _Repo.Repo(repoInfo, this.useRestClient_, app);
	        appRepos[repoInfo.toURLString()] = repo;
	        return repo;
	    };
	    /**
	     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.
	     * @param {boolean} forceRestClient
	     */
	    RepoManager.prototype.forceRestClient = function (forceRestClient) {
	        this.useRestClient_ = forceRestClient;
	    };
	    return RepoManager;
	}();
	exports.RepoManager = RepoManager;
	//# sourceMappingURL=RepoManager.js.map


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TransactionStatus = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
	                                                                                                                                                                                                                                                                               * Copyright 2017 Google Inc.
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Licensed under the Apache License, Version 2.0 (the "License");
	                                                                                                                                                                                                                                                                               * you may not use this file except in compliance with the License.
	                                                                                                                                                                                                                                                                               * You may obtain a copy of the License at
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               *   http://www.apache.org/licenses/LICENSE-2.0
	                                                                                                                                                                                                                                                                               *
	                                                                                                                                                                                                                                                                               * Unless required by applicable law or agreed to in writing, software
	                                                                                                                                                                                                                                                                               * distributed under the License is distributed on an "AS IS" BASIS,
	                                                                                                                                                                                                                                                                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                                                                                                                                                                                                                                                                               * See the License for the specific language governing permissions and
	                                                                                                                                                                                                                                                                               * limitations under the License.
	                                                                                                                                                                                                                                                                               */


	var _assert = __webpack_require__(20);

	var _Reference = __webpack_require__(36);

	var _DataSnapshot = __webpack_require__(58);

	var _Path = __webpack_require__(33);

	var _Tree = __webpack_require__(108);

	var _PriorityIndex = __webpack_require__(46);

	var _util = __webpack_require__(19);

	var _ServerValues = __webpack_require__(61);

	var _validation = __webpack_require__(39);

	var _obj = __webpack_require__(22);

	var _nodeFromJSON = __webpack_require__(50);

	var _ChildrenNode = __webpack_require__(51);

	var _Repo = __webpack_require__(60);

	// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific
	// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well
	// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.
	// For now it's part of Repo, but in its own file.
	/**
	 * @enum {number}
	 */
	var TransactionStatus = exports.TransactionStatus = undefined;
	(function (TransactionStatus) {
	    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the
	    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to
	    // mismatched hash.
	    TransactionStatus[TransactionStatus["RUN"] = 0] = "RUN";
	    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted
	    // or rejected yet).
	    TransactionStatus[TransactionStatus["SENT"] = 1] = "SENT";
	    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be
	    // removed when we get a chance to prune completed ones.
	    TransactionStatus[TransactionStatus["COMPLETED"] = 2] = "COMPLETED";
	    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).
	    // If it comes back as unsuccessful, we'll abort it.
	    TransactionStatus[TransactionStatus["SENT_NEEDS_ABORT"] = 3] = "SENT_NEEDS_ABORT";
	    // Temporary state used to mark transactions that need to be aborted.
	    TransactionStatus[TransactionStatus["NEEDS_ABORT"] = 4] = "NEEDS_ABORT";
	})(TransactionStatus || (exports.TransactionStatus = TransactionStatus = {}));
	/**
	 * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's
	 * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.
	 * @type {number}
	 * @const
	 * @private
	 */
	_Repo.Repo.MAX_TRANSACTION_RETRIES_ = 25;
	/**
	 * Setup the transaction data structures
	 * @private
	 */
	_Repo.Repo.prototype.transactions_init_ = function () {
	    /**
	     * Stores queues of outstanding transactions for Firebase locations.
	     *
	     * @type {!Tree.<Array.<!Transaction>>}
	     * @private
	     */
	    this.transactionQueueTree_ = new _Tree.Tree();
	};
	/**
	 * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.
	 *
	 * @param {!Path} path Path at which to do transaction.
	 * @param {function(*):*} transactionUpdate Update callback.
	 * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.
	 * @param {boolean} applyLocally Whether or not to make intermediate results visible
	 */
	_Repo.Repo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {
	    this.log_('transaction on ' + path);
	    // Add a watch to make sure we get server updates.
	    var valueCallback = function valueCallback() {};
	    var watchRef = new _Reference.Reference(this, path);
	    watchRef.on('value', valueCallback);
	    var unwatcher = function unwatcher() {
	        watchRef.off('value', valueCallback);
	    };
	    // Initialize transaction.
	    var transaction = {
	        path: path,
	        update: transactionUpdate,
	        onComplete: onComplete,
	        // One of TransactionStatus enums.
	        status: null,
	        // Used when combining transactions at different locations to figure out which one goes first.
	        order: (0, _util.LUIDGenerator)(),
	        // Whether to raise local events for this transaction.
	        applyLocally: applyLocally,
	        // Count of how many times we've retried the transaction.
	        retryCount: 0,
	        // Function to call to clean up our .on() listener.
	        unwatcher: unwatcher,
	        // Stores why a transaction was aborted.
	        abortReason: null,
	        currentWriteId: null,
	        currentInputSnapshot: null,
	        currentOutputSnapshotRaw: null,
	        currentOutputSnapshotResolved: null
	    };
	    // Run transaction initially.
	    var currentState = this.getLatestState_(path);
	    transaction.currentInputSnapshot = currentState;
	    var newVal = transaction.update(currentState.val());
	    if (newVal === undefined) {
	        // Abort transaction.
	        transaction.unwatcher();
	        transaction.currentOutputSnapshotRaw = null;
	        transaction.currentOutputSnapshotResolved = null;
	        if (transaction.onComplete) {
	            // We just set the input snapshot, so this cast should be safe
	            var snapshot = new _DataSnapshot.DataSnapshot(transaction.currentInputSnapshot, new _Reference.Reference(this, transaction.path), _PriorityIndex.PRIORITY_INDEX);
	            transaction.onComplete(null, false, snapshot);
	        }
	    } else {
	        (0, _validation.validateFirebaseData)('transaction failed: Data returned ', newVal, transaction.path);
	        // Mark as run and add to our queue.
	        transaction.status = TransactionStatus.RUN;
	        var queueNode = this.transactionQueueTree_.subTree(path);
	        var nodeQueue = queueNode.getValue() || [];
	        nodeQueue.push(transaction);
	        queueNode.setValue(nodeQueue);
	        // Update visibleData and raise events
	        // Note: We intentionally raise events after updating all of our transaction state, since the user could
	        // start new transactions from the event callbacks.
	        var priorityForNode = void 0;
	        if ((typeof newVal === 'undefined' ? 'undefined' : _typeof(newVal)) === 'object' && newVal !== null && (0, _obj.contains)(newVal, '.priority')) {
	            priorityForNode = (0, _obj.safeGet)(newVal, '.priority');
	            (0, _assert.assert)((0, _validation.isValidPriority)(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');
	        } else {
	            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) || _ChildrenNode.ChildrenNode.EMPTY_NODE;
	            priorityForNode = currentNode.getPriority().val();
	        }
	        priorityForNode /** @type {null|number|string} */ = priorityForNode;
	        var serverValues = this.generateServerValues();
	        var newNodeUnresolved = (0, _nodeFromJSON.nodeFromJSON)(newVal, priorityForNode);
	        var newNode = (0, _ServerValues.resolveDeferredValueSnapshot)(newNodeUnresolved, serverValues);
	        transaction.currentOutputSnapshotRaw = newNodeUnresolved;
	        transaction.currentOutputSnapshotResolved = newNode;
	        transaction.currentWriteId = this.getNextWriteId_();
	        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);
	        this.eventQueue_.raiseEventsForChangedPath(path, events);
	        this.sendReadyTransactions_();
	    }
	};
	/**
	 * @param {!Path} path
	 * @param {Array.<number>=} excludeSets A specific set to exclude
	 * @return {Node}
	 * @private
	 */
	_Repo.Repo.prototype.getLatestState_ = function (path, excludeSets) {
	    return this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) || _ChildrenNode.ChildrenNode.EMPTY_NODE;
	};
	/**
	 * Sends any already-run transactions that aren't waiting for outstanding transactions to
	 * complete.
	 *
	 * Externally it's called with no arguments, but it calls itself recursively with a particular
	 * transactionQueueTree node to recurse through the tree.
	 *
	 * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.
	 * @private
	 */
	_Repo.Repo.prototype.sendReadyTransactions_ = function (node) {
	    var _this = this;
	    if (node === void 0) {
	        node = this.transactionQueueTree_;
	    }
	    // Before recursing, make sure any completed transactions are removed.
	    if (!node) {
	        this.pruneCompletedTransactionsBelowNode_(node);
	    }
	    if (node.getValue() !== null) {
	        var queue = this.buildTransactionQueue_(node);
	        (0, _assert.assert)(queue.length > 0, 'Sending zero length transaction queue');
	        var allRun = queue.every(function (transaction) {
	            return transaction.status === TransactionStatus.RUN;
	        });
	        // If they're all run (and not sent), we can send them.  Else, we must wait.
	        if (allRun) {
	            this.sendTransactionQueue_(node.path(), queue);
	        }
	    } else if (node.hasChildren()) {
	        node.forEachChild(function (childNode) {
	            _this.sendReadyTransactions_(childNode);
	        });
	    }
	};
	/**
	 * Given a list of run transactions, send them to the server and then handle the result (success or failure).
	 *
	 * @param {!Path} path The location of the queue.
	 * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.
	 * @private
	 */
	_Repo.Repo.prototype.sendTransactionQueue_ = function (path, queue) {
	    var _this = this;
	    // Mark transactions as sent and increment retry count!
	    var setsToIgnore = queue.map(function (txn) {
	        return txn.currentWriteId;
	    });
	    var latestState = this.getLatestState_(path, setsToIgnore);
	    var snapToSend = latestState;
	    var latestHash = latestState.hash();
	    for (var i = 0; i < queue.length; i++) {
	        var txn = queue[i];
	        (0, _assert.assert)(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');
	        txn.status = TransactionStatus.SENT;
	        txn.retryCount++;
	        var relativePath = _Path.Path.relativePath(path, txn.path);
	        // If we've gotten to this point, the output snapshot must be defined.
	        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);
	    }
	    var dataToSend = snapToSend.val(true);
	    var pathToSend = path;
	    // Send the put.
	    this.server_.put(pathToSend.toString(), dataToSend, function (status) {
	        _this.log_('transaction put response', {
	            path: pathToSend.toString(),
	            status: status
	        });
	        var events = [];
	        if (status === 'ok') {
	            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
	            // the callback could trigger more transactions or sets.
	            var callbacks = [];
	            for (var i = 0; i < queue.length; i++) {
	                queue[i].status = TransactionStatus.COMPLETED;
	                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));
	                if (queue[i].onComplete) {
	                    // We never unset the output snapshot, and given that this transaction is complete, it should be set
	                    var node = queue[i].currentOutputSnapshotResolved;
	                    var ref = new _Reference.Reference(_this, queue[i].path);
	                    var snapshot = new _DataSnapshot.DataSnapshot(node, ref, _PriorityIndex.PRIORITY_INDEX);
	                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));
	                }
	                queue[i].unwatcher();
	            }
	            // Now remove the completed transactions.
	            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));
	            // There may be pending transactions that we can now send.
	            _this.sendReadyTransactions_();
	            _this.eventQueue_.raiseEventsForChangedPath(path, events);
	            // Finally, trigger onComplete callbacks.
	            for (var i = 0; i < callbacks.length; i++) {
	                (0, _util.exceptionGuard)(callbacks[i]);
	            }
	        } else {
	            // transactions are no longer sent.  Update their status appropriately.
	            if (status === 'datastale') {
	                for (var i = 0; i < queue.length; i++) {
	                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) queue[i].status = TransactionStatus.NEEDS_ABORT;else queue[i].status = TransactionStatus.RUN;
	                }
	            } else {
	                (0, _util.warn)('transaction at ' + pathToSend.toString() + ' failed: ' + status);
	                for (var i = 0; i < queue.length; i++) {
	                    queue[i].status = TransactionStatus.NEEDS_ABORT;
	                    queue[i].abortReason = status;
	                }
	            }
	            _this.rerunTransactions_(path);
	        }
	    }, latestHash);
	};
	/**
	 * Finds all transactions dependent on the data at changedPath and reruns them.
	 *
	 * Should be called any time cached data changes.
	 *
	 * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to
	 * be raised for.
	 *
	 * @param {!Path} changedPath The path in mergedData that changed.
	 * @return {!Path} The rootmost path that was affected by rerunning transactions.
	 * @private
	 */
	_Repo.Repo.prototype.rerunTransactions_ = function (changedPath) {
	    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);
	    var path = rootMostTransactionNode.path();
	    var queue = this.buildTransactionQueue_(rootMostTransactionNode);
	    this.rerunTransactionQueue_(queue, path);
	    return path;
	};
	/**
	 * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).
	 *
	 * @param {Array.<Transaction>} queue The queue of transactions to run.
	 * @param {!Path} path The path the queue is for.
	 * @private
	 */
	_Repo.Repo.prototype.rerunTransactionQueue_ = function (queue, path) {
	    if (queue.length === 0) {
	        return; // Nothing to do!
	    }
	    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
	    // the callback could trigger more transactions or sets.
	    var callbacks = [];
	    var events = [];
	    // Ignore all of the sets we're going to re-run.
	    var txnsToRerun = queue.filter(function (q) {
	        return q.status === TransactionStatus.RUN;
	    });
	    var setsToIgnore = txnsToRerun.map(function (q) {
	        return q.currentWriteId;
	    });
	    for (var i = 0; i < queue.length; i++) {
	        var transaction = queue[i];
	        var relativePath = _Path.Path.relativePath(path, transaction.path);
	        var abortTransaction = false,
	            abortReason = void 0;
	        (0, _assert.assert)(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');
	        if (transaction.status === TransactionStatus.NEEDS_ABORT) {
	            abortTransaction = true;
	            abortReason = transaction.abortReason;
	            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
	        } else if (transaction.status === TransactionStatus.RUN) {
	            if (transaction.retryCount >= _Repo.Repo.MAX_TRANSACTION_RETRIES_) {
	                abortTransaction = true;
	                abortReason = 'maxretry';
	                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
	            } else {
	                // This code reruns a transaction
	                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);
	                transaction.currentInputSnapshot = currentNode;
	                var newData = queue[i].update(currentNode.val());
	                if (newData !== undefined) {
	                    (0, _validation.validateFirebaseData)('transaction failed: Data returned ', newData, transaction.path);
	                    var newDataNode = (0, _nodeFromJSON.nodeFromJSON)(newData);
	                    var hasExplicitPriority = (typeof newData === 'undefined' ? 'undefined' : _typeof(newData)) === 'object' && newData != null && (0, _obj.contains)(newData, '.priority');
	                    if (!hasExplicitPriority) {
	                        // Keep the old priority if there wasn't a priority explicitly specified.
	                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());
	                    }
	                    var oldWriteId = transaction.currentWriteId;
	                    var serverValues = this.generateServerValues();
	                    var newNodeResolved = (0, _ServerValues.resolveDeferredValueSnapshot)(newDataNode, serverValues);
	                    transaction.currentOutputSnapshotRaw = newDataNode;
	                    transaction.currentOutputSnapshotResolved = newNodeResolved;
	                    transaction.currentWriteId = this.getNextWriteId_();
	                    // Mutates setsToIgnore in place
	                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);
	                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));
	                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));
	                } else {
	                    abortTransaction = true;
	                    abortReason = 'nodata';
	                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));
	                }
	            }
	        }
	        this.eventQueue_.raiseEventsForChangedPath(path, events);
	        events = [];
	        if (abortTransaction) {
	            // Abort.
	            queue[i].status = TransactionStatus.COMPLETED;
	            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).
	            // So defer the unwatcher until we're done.
	            (function (unwatcher) {
	                setTimeout(unwatcher, Math.floor(0));
	            })(queue[i].unwatcher);
	            if (queue[i].onComplete) {
	                if (abortReason === 'nodata') {
	                    var ref = new _Reference.Reference(this, queue[i].path);
	                    // We set this field immediately, so it's safe to cast to an actual snapshot
	                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;
	                    var snapshot = new _DataSnapshot.DataSnapshot(lastInput, ref, _PriorityIndex.PRIORITY_INDEX);
	                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));
	                } else {
	                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));
	                }
	            }
	        }
	    }
	    // Clean up completed transactions.
	    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);
	    // Now fire callbacks, now that we're in a good, known state.
	    for (var i = 0; i < callbacks.length; i++) {
	        (0, _util.exceptionGuard)(callbacks[i]);
	    }
	    // Try to send the transaction result to the server.
	    this.sendReadyTransactions_();
	};
	/**
	 * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns
	 * the node for the given path if there are no pending transactions on any ancestor.
	 *
	 * @param {!Path} path The location to start at.
	 * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.
	 * @private
	 */
	_Repo.Repo.prototype.getAncestorTransactionNode_ = function (path) {
	    var front;
	    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.
	    var transactionNode = this.transactionQueueTree_;
	    while ((front = path.getFront()) !== null && transactionNode.getValue() === null) {
	        transactionNode = transactionNode.subTree(front);
	        path = path.popFront();
	    }
	    return transactionNode;
	};
	/**
	 * Builds the queue of all transactions at or below the specified transactionNode.
	 *
	 * @param {!Tree.<Array.<Transaction>>} transactionNode
	 * @return {Array.<Transaction>} The generated queue.
	 * @private
	 */
	_Repo.Repo.prototype.buildTransactionQueue_ = function (transactionNode) {
	    // Walk any child transaction queues and aggregate them into a single queue.
	    var transactionQueue = [];
	    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);
	    // Sort them by the order the transactions were created.
	    transactionQueue.sort(function (a, b) {
	        return a.order - b.order;
	    });
	    return transactionQueue;
	};
	/**
	 * @param {!Tree.<Array.<Transaction>>} node
	 * @param {Array.<Transaction>} queue
	 * @private
	 */
	_Repo.Repo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {
	    var _this = this;
	    var nodeQueue = node.getValue();
	    if (nodeQueue !== null) {
	        for (var i = 0; i < nodeQueue.length; i++) {
	            queue.push(nodeQueue[i]);
	        }
	    }
	    node.forEachChild(function (child) {
	        _this.aggregateTransactionQueuesForNode_(child, queue);
	    });
	};
	/**
	 * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.
	 *
	 * @param {!Tree.<Array.<!Transaction>>} node
	 * @private
	 */
	_Repo.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {
	    var _this = this;
	    var queue = node.getValue();
	    if (queue) {
	        var to = 0;
	        for (var from = 0; from < queue.length; from++) {
	            if (queue[from].status !== TransactionStatus.COMPLETED) {
	                queue[to] = queue[from];
	                to++;
	            }
	        }
	        queue.length = to;
	        node.setValue(queue.length > 0 ? queue : null);
	    }
	    node.forEachChild(function (childNode) {
	        _this.pruneCompletedTransactionsBelowNode_(childNode);
	    });
	};
	/**
	 * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()
	 * since we consider them incompatible with transactions.
	 *
	 * @param {!Path} path Path for which we want to abort related transactions.
	 * @return {!Path}
	 * @private
	 */
	_Repo.Repo.prototype.abortTransactions_ = function (path) {
	    var _this = this;
	    var affectedPath = this.getAncestorTransactionNode_(path).path();
	    var transactionNode = this.transactionQueueTree_.subTree(path);
	    transactionNode.forEachAncestor(function (node) {
	        _this.abortTransactionsOnNode_(node);
	    });
	    this.abortTransactionsOnNode_(transactionNode);
	    transactionNode.forEachDescendant(function (node) {
	        _this.abortTransactionsOnNode_(node);
	    });
	    return affectedPath;
	};
	/**
	 * Abort transactions stored in this transaction queue node.
	 *
	 * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.
	 * @private
	 */
	_Repo.Repo.prototype.abortTransactionsOnNode_ = function (node) {
	    var queue = node.getValue();
	    if (queue !== null) {
	        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since
	        // the callback could trigger more transactions or sets.
	        var callbacks = [];
	        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones
	        // can be immediately aborted and removed.
	        var events = [];
	        var lastSent = -1;
	        for (var i = 0; i < queue.length; i++) {
	            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {
	                // Already marked.  No action needed.
	            } else if (queue[i].status === TransactionStatus.SENT) {
	                (0, _assert.assert)(lastSent === i - 1, 'All SENT items should be at beginning of queue.');
	                lastSent = i;
	                // Mark transaction for abort when it comes back.
	                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;
	                queue[i].abortReason = 'set';
	            } else {
	                (0, _assert.assert)(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');
	                // We can abort it immediately.
	                queue[i].unwatcher();
	                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));
	                if (queue[i].onComplete) {
	                    var snapshot = null;
	                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));
	                }
	            }
	        }
	        if (lastSent === -1) {
	            // We're not waiting for any sent transactions.  We can clear the queue.
	            node.setValue(null);
	        } else {
	            // Remove the transactions we aborted.
	            queue.length = lastSent + 1;
	        }
	        // Now fire the callbacks.
	        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);
	        for (var i = 0; i < callbacks.length; i++) {
	            (0, _util.exceptionGuard)(callbacks[i]);
	        }
	    }
	};
	//# sourceMappingURL=Repo_transaction.js.map


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Tree = exports.TreeNode = undefined;

	var _assert = __webpack_require__(20);

	var _Path = __webpack_require__(33);

	var _obj = __webpack_require__(22);

	/**
	 * Node in a Tree.
	 */
	var TreeNode = /** @class */function () {
	    function TreeNode() {
	        // TODO: Consider making accessors that create children and value lazily or
	        // separate Internal / Leaf 'types'.
	        this.children = {};
	        this.childCount = 0;
	        this.value = null;
	    }
	    return TreeNode;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.TreeNode = TreeNode;
	/**
	 * A light-weight tree, traversable by path.  Nodes can have both values and children.
	 * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty
	 * children.
	 */

	var Tree = /** @class */function () {
	    /**
	     * @template T
	     * @param {string=} name_ Optional name of the node.
	     * @param {Tree=} parent_ Optional parent node.
	     * @param {TreeNode=} node_ Optional node to wrap.
	     */
	    function Tree(name_, parent_, node_) {
	        if (name_ === void 0) {
	            name_ = '';
	        }
	        if (parent_ === void 0) {
	            parent_ = null;
	        }
	        if (node_ === void 0) {
	            node_ = new TreeNode();
	        }
	        this.name_ = name_;
	        this.parent_ = parent_;
	        this.node_ = node_;
	    }
	    /**
	     * Returns a sub-Tree for the given path.
	     *
	     * @param {!(string|Path)} pathObj Path to look up.
	     * @return {!Tree.<T>} Tree for path.
	     */
	    Tree.prototype.subTree = function (pathObj) {
	        // TODO: Require pathObj to be Path?
	        var path = pathObj instanceof _Path.Path ? pathObj : new _Path.Path(pathObj);
	        var child = this,
	            next;
	        while ((next = path.getFront()) !== null) {
	            var childNode = (0, _obj.safeGet)(child.node_.children, next) || new TreeNode();
	            child = new Tree(next, child, childNode);
	            path = path.popFront();
	        }
	        return child;
	    };
	    /**
	     * Returns the data associated with this tree node.
	     *
	     * @return {?T} The data or null if no data exists.
	     */
	    Tree.prototype.getValue = function () {
	        return this.node_.value;
	    };
	    /**
	     * Sets data to this tree node.
	     *
	     * @param {!T} value Value to set.
	     */
	    Tree.prototype.setValue = function (value) {
	        (0, _assert.assert)(typeof value !== 'undefined', 'Cannot set value to undefined');
	        this.node_.value = value;
	        this.updateParents_();
	    };
	    /**
	     * Clears the contents of the tree node (its value and all children).
	     */
	    Tree.prototype.clear = function () {
	        this.node_.value = null;
	        this.node_.children = {};
	        this.node_.childCount = 0;
	        this.updateParents_();
	    };
	    /**
	     * @return {boolean} Whether the tree has any children.
	     */
	    Tree.prototype.hasChildren = function () {
	        return this.node_.childCount > 0;
	    };
	    /**
	     * @return {boolean} Whether the tree is empty (no value or children).
	     */
	    Tree.prototype.isEmpty = function () {
	        return this.getValue() === null && !this.hasChildren();
	    };
	    /**
	     * Calls action for each child of this tree node.
	     *
	     * @param {function(!Tree.<T>)} action Action to be called for each child.
	     */
	    Tree.prototype.forEachChild = function (action) {
	        var _this = this;
	        (0, _obj.forEach)(this.node_.children, function (child, childTree) {
	            action(new Tree(child, _this, childTree));
	        });
	    };
	    /**
	     * Does a depth-first traversal of this node's descendants, calling action for each one.
	     *
	     * @param {function(!Tree.<T>)} action Action to be called for each child.
	     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to
	     *   false.
	     * @param {boolean=} childrenFirst Whether to call action on children before calling it on
	     *   parent.
	     */
	    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {
	        if (includeSelf && !childrenFirst) action(this);
	        this.forEachChild(function (child) {
	            child.forEachDescendant(action, /*includeSelf=*/true, childrenFirst);
	        });
	        if (includeSelf && childrenFirst) action(this);
	    };
	    /**
	     * Calls action on each ancestor node.
	     *
	     * @param {function(!Tree.<T>)} action Action to be called on each parent; return
	     *   true to abort.
	     * @param {boolean=} includeSelf Whether to call action on this node as well.
	     * @return {boolean} true if the action callback returned true.
	     */
	    Tree.prototype.forEachAncestor = function (action, includeSelf) {
	        var node = includeSelf ? this : this.parent();
	        while (node !== null) {
	            if (action(node)) {
	                return true;
	            }
	            node = node.parent();
	        }
	        return false;
	    };
	    /**
	     * Does a depth-first traversal of this node's descendants.  When a descendant with a value
	     * is found, action is called on it and traversal does not continue inside the node.
	     * Action is *not* called on this node.
	     *
	     * @param {function(!Tree.<T>)} action Action to be called for each child.
	     */
	    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {
	        this.forEachChild(function (child) {
	            if (child.getValue() !== null) action(child);else child.forEachImmediateDescendantWithValue(action);
	        });
	    };
	    /**
	     * @return {!Path} The path of this tree node, as a Path.
	     */
	    Tree.prototype.path = function () {
	        return new _Path.Path(this.parent_ === null ? this.name_ : this.parent_.path() + '/' + this.name_);
	    };
	    /**
	     * @return {string} The name of the tree node.
	     */
	    Tree.prototype.name = function () {
	        return this.name_;
	    };
	    /**
	     * @return {?Tree} The parent tree node, or null if this is the root of the tree.
	     */
	    Tree.prototype.parent = function () {
	        return this.parent_;
	    };
	    /**
	     * Adds or removes this child from its parent based on whether it's empty or not.
	     *
	     * @private
	     */
	    Tree.prototype.updateParents_ = function () {
	        if (this.parent_ !== null) this.parent_.updateChild_(this.name_, this);
	    };
	    /**
	     * Adds or removes the passed child to this tree node, depending on whether it's empty.
	     *
	     * @param {string} childName The name of the child to update.
	     * @param {!Tree.<T>} child The child to update.
	     * @private
	     */
	    Tree.prototype.updateChild_ = function (childName, child) {
	        var childEmpty = child.isEmpty();
	        var childExists = (0, _obj.contains)(this.node_.children, childName);
	        if (childEmpty && childExists) {
	            delete this.node_.children[childName];
	            this.node_.childCount--;
	            this.updateParents_();
	        } else if (!childEmpty && !childExists) {
	            this.node_.children[childName] = child.node_;
	            this.node_.childCount++;
	            this.updateParents_();
	        }
	    };
	    return Tree;
	}();
	exports.Tree = Tree;
	//# sourceMappingURL=Tree.js.map


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.interceptServerData = exports.dataUpdateCount = exports.statsIncrementCounter = exports.stats = exports.setSecurityDebugCallback = exports.isWebSocketsAvailable = exports.forceWebSockets = exports.forceLongPolling = undefined;

	var _WebSocketConnection = __webpack_require__(99);

	var _BrowserPollConnection = __webpack_require__(97);

	/**
	 * INTERNAL methods for internal-use only (tests, etc.).
	 *
	 * Customers shouldn't use these or else should be aware that they could break at any time.
	 *
	 * @const
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var forceLongPolling = exports.forceLongPolling = function forceLongPolling() {
	    _WebSocketConnection.WebSocketConnection.forceDisallow();
	    _BrowserPollConnection.BrowserPollConnection.forceAllow();
	};
	var forceWebSockets = exports.forceWebSockets = function forceWebSockets() {
	    _BrowserPollConnection.BrowserPollConnection.forceDisallow();
	};
	/* Used by App Manager */
	var isWebSocketsAvailable = exports.isWebSocketsAvailable = function isWebSocketsAvailable() {
	    return _WebSocketConnection.WebSocketConnection['isAvailable']();
	};
	var setSecurityDebugCallback = exports.setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {
	    ref.repo.persistentConnection_.securityDebugCallback_ = callback;
	};
	var stats = exports.stats = function stats(ref, showDelta) {
	    ref.repo.stats(showDelta);
	};
	var statsIncrementCounter = exports.statsIncrementCounter = function statsIncrementCounter(ref, metric) {
	    ref.repo.statsIncrementCounter(metric);
	};
	var dataUpdateCount = exports.dataUpdateCount = function dataUpdateCount(ref) {
	    return ref.repo.dataUpdateCount;
	};
	var interceptServerData = exports.interceptServerData = function interceptServerData(ref, callback) {
	    return ref.repo.interceptServerData_(callback);
	};
	//# sourceMappingURL=internal.js.map


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.forceRestClient = exports.listens = exports.queryIdentifier = exports.ConnectionTarget = exports.hijackHash = exports.RealTimeConnection = exports.DataConnection = undefined;

	var _RepoInfo = __webpack_require__(34);

	var _PersistentConnection = __webpack_require__(90);

	var _RepoManager = __webpack_require__(106);

	var _Connection = __webpack_require__(95);

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var DataConnection = exports.DataConnection = _PersistentConnection.PersistentConnection;
	/**
	 * @param {!string} pathString
	 * @param {function(*)} onComplete
	 */
	_PersistentConnection.PersistentConnection.prototype.simpleListen = function (pathString, onComplete) {
	    this.sendRequest('q', { p: pathString }, onComplete);
	};
	/**
	 * @param {*} data
	 * @param {function(*)} onEcho
	 */
	_PersistentConnection.PersistentConnection.prototype.echo = function (data, onEcho) {
	    this.sendRequest('echo', { d: data }, onEcho);
	};
	// RealTimeConnection properties that we use in tests.
	var RealTimeConnection = exports.RealTimeConnection = _Connection.Connection;
	/**
	 * @param {function(): string} newHash
	 * @return {function()}
	 */
	var hijackHash = exports.hijackHash = function hijackHash(newHash) {
	    var oldPut = _PersistentConnection.PersistentConnection.prototype.put;
	    _PersistentConnection.PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {
	        if (opt_hash !== undefined) {
	            opt_hash = newHash();
	        }
	        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);
	    };
	    return function () {
	        _PersistentConnection.PersistentConnection.prototype.put = oldPut;
	    };
	};
	/**
	 * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}
	 */
	var ConnectionTarget = exports.ConnectionTarget = _RepoInfo.RepoInfo;
	/**
	 * @param {!Query} query
	 * @return {!string}
	 */
	var queryIdentifier = exports.queryIdentifier = function queryIdentifier(query) {
	    return query.queryIdentifier();
	};
	/**
	 * @param {!Query} firebaseRef
	 * @return {!Object}
	 */
	var listens = exports.listens = function listens(firebaseRef) {
	    return firebaseRef.repo.persistentConnection_.listens_;
	};
	/**
	 * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.
	 *
	 * @param {boolean} forceRestClient
	 */
	var forceRestClient = exports.forceRestClient = function forceRestClient(_forceRestClient) {
	    _RepoManager.RepoManager.getInstance().forceRestClient(_forceRestClient);
	};
	//# sourceMappingURL=test_access.js.map


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.registerStorage = registerStorage;

	var _string = __webpack_require__(112);

	var _taskenums = __webpack_require__(115);

	var _xhriopool = __webpack_require__(116);

	var _reference = __webpack_require__(122);

	var _service = __webpack_require__(138);

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Type constant for Firebase Storage.
	 */
	var STORAGE_TYPE = 'storage'; /**
	                               * Copyright 2017 Google Inc.
	                               *
	                               * Licensed under the Apache License, Version 2.0 (the "License");
	                               * you may not use this file except in compliance with the License.
	                               * You may obtain a copy of the License at
	                               *
	                               *   http://www.apache.org/licenses/LICENSE-2.0
	                               *
	                               * Unless required by applicable law or agreed to in writing, software
	                               * distributed under the License is distributed on an "AS IS" BASIS,
	                               * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	                               * See the License for the specific language governing permissions and
	                               * limitations under the License.
	                               */

	function factory(app, unused, opt_url) {
	    return new _service.Service(app, new _xhriopool.XhrIoPool(), opt_url);
	}
	function registerStorage(instance) {
	    var namespaceExports = {
	        // no-inline
	        TaskState: _taskenums.TaskState,
	        TaskEvent: _taskenums.TaskEvent,
	        StringFormat: _string.StringFormat,
	        Storage: _service.Service,
	        Reference: _reference.Reference
	    };
	    instance.INTERNAL.registerService(STORAGE_TYPE, factory, namespaceExports, undefined,
	    // Allow multiple storage instances per app.
	    true);
	}
	registerStorage(_app2.default);
	//# sourceMappingURL=storage.js.map


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.StringData = exports.StringFormat = undefined;
	exports.formatValidator = formatValidator;
	exports.dataFromString = dataFromString;
	exports.utf8Bytes_ = utf8Bytes_;
	exports.percentEncodedBytes_ = percentEncodedBytes_;
	exports.base64Bytes_ = base64Bytes_;
	exports.dataURLBytes_ = dataURLBytes_;
	exports.dataURLContentType_ = dataURLContentType_;

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	var StringFormat = exports.StringFormat = {
	    RAW: 'raw',
	    BASE64: 'base64',
	    BASE64URL: 'base64url',
	    DATA_URL: 'data_url'
	}; /**
	    * Copyright 2017 Google Inc.
	    *
	    * Licensed under the Apache License, Version 2.0 (the "License");
	    * you may not use this file except in compliance with the License.
	    * You may obtain a copy of the License at
	    *
	    *   http://www.apache.org/licenses/LICENSE-2.0
	    *
	    * Unless required by applicable law or agreed to in writing, software
	    * distributed under the License is distributed on an "AS IS" BASIS,
	    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	    * See the License for the specific language governing permissions and
	    * limitations under the License.
	    */
	function formatValidator(stringFormat) {
	    switch (stringFormat) {
	        case StringFormat.RAW:
	        case StringFormat.BASE64:
	        case StringFormat.BASE64URL:
	        case StringFormat.DATA_URL:
	            return;
	        default:
	            throw 'Expected one of the event types: [' + StringFormat.RAW + ', ' + StringFormat.BASE64 + ', ' + StringFormat.BASE64URL + ', ' + StringFormat.DATA_URL + '].';
	    }
	}
	/**
	 * @struct
	 */
	var StringData = /** @class */function () {
	    function StringData(data, opt_contentType) {
	        this.data = data;
	        this.contentType = opt_contentType || null;
	    }
	    return StringData;
	}();
	exports.StringData = StringData;
	function dataFromString(format, string) {
	    switch (format) {
	        case StringFormat.RAW:
	            return new StringData(utf8Bytes_(string));
	        case StringFormat.BASE64:
	        case StringFormat.BASE64URL:
	            return new StringData(base64Bytes_(format, string));
	        case StringFormat.DATA_URL:
	            return new StringData(dataURLBytes_(string), dataURLContentType_(string));
	    }
	    // assert(false);
	    throw errorsExports.unknown();
	}
	function utf8Bytes_(string) {
	    var b = [];
	    for (var i = 0; i < string.length; i++) {
	        var c = string.charCodeAt(i);
	        if (c <= 127) {
	            b.push(c);
	        } else {
	            if (c <= 2047) {
	                b.push(192 | c >> 6, 128 | c & 63);
	            } else {
	                if ((c & 64512) == 55296) {
	                    // The start of a surrogate pair.
	                    var valid = i < string.length - 1 && (string.charCodeAt(i + 1) & 64512) == 56320;
	                    if (!valid) {
	                        // The second surrogate wasn't there.
	                        b.push(239, 191, 189);
	                    } else {
	                        var hi = c;
	                        var lo = string.charCodeAt(++i);
	                        c = 65536 | (hi & 1023) << 10 | lo & 1023;
	                        b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);
	                    }
	                } else {
	                    if ((c & 64512) == 56320) {
	                        // Invalid low surrogate.
	                        b.push(239, 191, 189);
	                    } else {
	                        b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);
	                    }
	                }
	            }
	        }
	    }
	    return new Uint8Array(b);
	}
	function percentEncodedBytes_(string) {
	    var decoded;
	    try {
	        decoded = decodeURIComponent(string);
	    } catch (e) {
	        throw errorsExports.invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');
	    }
	    return utf8Bytes_(decoded);
	}
	function base64Bytes_(format, string) {
	    switch (format) {
	        case StringFormat.BASE64:
	            {
	                var hasMinus = string.indexOf('-') !== -1;
	                var hasUnder = string.indexOf('_') !== -1;
	                if (hasMinus || hasUnder) {
	                    var invalidChar = hasMinus ? '-' : '_';
	                    throw errorsExports.invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64url encoded?");
	                }
	                break;
	            }
	        case StringFormat.BASE64URL:
	            {
	                var hasPlus = string.indexOf('+') !== -1;
	                var hasSlash = string.indexOf('/') !== -1;
	                if (hasPlus || hasSlash) {
	                    var invalidChar = hasPlus ? '+' : '/';
	                    throw errorsExports.invalidFormat(format, "Invalid character '" + invalidChar + "' found: is it base64 encoded?");
	                }
	                string = string.replace(/-/g, '+').replace(/_/g, '/');
	                break;
	            }
	    }
	    var bytes;
	    try {
	        bytes = atob(string);
	    } catch (e) {
	        throw errorsExports.invalidFormat(format, 'Invalid character found');
	    }
	    var array = new Uint8Array(bytes.length);
	    for (var i = 0; i < bytes.length; i++) {
	        array[i] = bytes.charCodeAt(i);
	    }
	    return array;
	}
	/**
	 * @struct
	 */
	var DataURLParts = /** @class */function () {
	    function DataURLParts(dataURL) {
	        this.base64 = false;
	        this.contentType = null;
	        var matches = dataURL.match(/^data:([^,]+)?,/);
	        if (matches === null) {
	            throw errorsExports.invalidFormat(StringFormat.DATA_URL, "Must be formatted 'data:[<mediatype>][;base64],<data>");
	        }
	        var middle = matches[1] || null;
	        if (middle != null) {
	            this.base64 = endsWith(middle, ';base64');
	            this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;
	        }
	        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);
	    }
	    return DataURLParts;
	}();
	function dataURLBytes_(string) {
	    var parts = new DataURLParts(string);
	    if (parts.base64) {
	        return base64Bytes_(StringFormat.BASE64, parts.rest);
	    } else {
	        return percentEncodedBytes_(parts.rest);
	    }
	}
	function dataURLContentType_(string) {
	    var parts = new DataURLParts(string);
	    return parts.contentType;
	}
	function endsWith(s, end) {
	    var longEnough = s.length >= end.length;
	    if (!longEnough) {
	        return false;
	    }
	    return s.substring(s.length - end.length) === end;
	}
	//# sourceMappingURL=string.js.map


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Code = exports.errors = exports.FirebaseStorageError = undefined;
	exports.prependCode = prependCode;
	exports.unknown = unknown;
	exports.objectNotFound = objectNotFound;
	exports.bucketNotFound = bucketNotFound;
	exports.projectNotFound = projectNotFound;
	exports.quotaExceeded = quotaExceeded;
	exports.unauthenticated = unauthenticated;
	exports.unauthorized = unauthorized;
	exports.retryLimitExceeded = retryLimitExceeded;
	exports.invalidChecksum = invalidChecksum;
	exports.canceled = canceled;
	exports.invalidEventName = invalidEventName;
	exports.invalidUrl = invalidUrl;
	exports.invalidDefaultBucket = invalidDefaultBucket;
	exports.noDefaultBucket = noDefaultBucket;
	exports.cannotSliceBlob = cannotSliceBlob;
	exports.serverFileWrongSize = serverFileWrongSize;
	exports.noDownloadURL = noDownloadURL;
	exports.invalidArgument = invalidArgument;
	exports.invalidArgumentCount = invalidArgumentCount;
	exports.appDeleted = appDeleted;
	exports.invalidRootOperation = invalidRootOperation;
	exports.invalidFormat = invalidFormat;
	exports.internalError = internalError;

	var _constants = __webpack_require__(114);

	var FirebaseStorageError = /** @class */function () {
	    function FirebaseStorageError(code, message) {
	        this.code_ = prependCode(code);
	        this.message_ = 'Firebase Storage: ' + message;
	        this.serverResponse_ = null;
	        this.name_ = 'FirebaseError';
	    }
	    FirebaseStorageError.prototype.codeProp = function () {
	        return this.code;
	    };
	    FirebaseStorageError.prototype.codeEquals = function (code) {
	        return prependCode(code) === this.codeProp();
	    };
	    FirebaseStorageError.prototype.serverResponseProp = function () {
	        return this.serverResponse_;
	    };
	    FirebaseStorageError.prototype.setServerResponseProp = function (serverResponse) {
	        this.serverResponse_ = serverResponse;
	    };
	    Object.defineProperty(FirebaseStorageError.prototype, "name", {
	        get: function get() {
	            return this.name_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseStorageError.prototype, "code", {
	        get: function get() {
	            return this.code_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseStorageError.prototype, "message", {
	        get: function get() {
	            return this.message_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(FirebaseStorageError.prototype, "serverResponse", {
	        get: function get() {
	            return this.serverResponse_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return FirebaseStorageError;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.FirebaseStorageError = FirebaseStorageError;
	var errors = exports.errors = {};
	var Code = exports.Code = {
	    // Shared between all platforms
	    UNKNOWN: 'unknown',
	    OBJECT_NOT_FOUND: 'object-not-found',
	    BUCKET_NOT_FOUND: 'bucket-not-found',
	    PROJECT_NOT_FOUND: 'project-not-found',
	    QUOTA_EXCEEDED: 'quota-exceeded',
	    UNAUTHENTICATED: 'unauthenticated',
	    UNAUTHORIZED: 'unauthorized',
	    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',
	    INVALID_CHECKSUM: 'invalid-checksum',
	    CANCELED: 'canceled',
	    // JS specific
	    INVALID_EVENT_NAME: 'invalid-event-name',
	    INVALID_URL: 'invalid-url',
	    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',
	    NO_DEFAULT_BUCKET: 'no-default-bucket',
	    CANNOT_SLICE_BLOB: 'cannot-slice-blob',
	    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',
	    NO_DOWNLOAD_URL: 'no-download-url',
	    INVALID_ARGUMENT: 'invalid-argument',
	    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',
	    APP_DELETED: 'app-deleted',
	    INVALID_ROOT_OPERATION: 'invalid-root-operation',
	    INVALID_FORMAT: 'invalid-format',
	    INTERNAL_ERROR: 'internal-error'
	};
	function prependCode(code) {
	    return 'storage/' + code;
	}
	function unknown() {
	    var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';
	    return new FirebaseStorageError(Code.UNKNOWN, message);
	}
	function objectNotFound(path) {
	    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, "Object '" + path + "' does not exist.");
	}
	function bucketNotFound(bucket) {
	    return new FirebaseStorageError(Code.BUCKET_NOT_FOUND, "Bucket '" + bucket + "' does not exist.");
	}
	function projectNotFound(project) {
	    return new FirebaseStorageError(Code.PROJECT_NOT_FOUND, "Project '" + project + "' does not exist.");
	}
	function quotaExceeded(bucket) {
	    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, "Quota for bucket '" + bucket + "' exceeded, please view quota on " + 'https://firebase.google.com/pricing/.');
	}
	function unauthenticated() {
	    var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';
	    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);
	}
	function unauthorized(path) {
	    return new FirebaseStorageError(Code.UNAUTHORIZED, "User does not have permission to access '" + path + "'.");
	}
	function retryLimitExceeded() {
	    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');
	}
	function invalidChecksum(path, checksum, calculated) {
	    return new FirebaseStorageError(Code.INVALID_CHECKSUM, "Uploaded/downloaded object '" + path + "' has checksum '" + checksum + "' which does not match '" + calculated + "'. Please retry the upload/download.");
	}
	function canceled() {
	    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');
	}
	function invalidEventName(name) {
	    return new FirebaseStorageError(Code.INVALID_EVENT_NAME, "Invalid event name '" + name + "'.");
	}
	function invalidUrl(url) {
	    return new FirebaseStorageError(Code.INVALID_URL, "Invalid URL '" + url + "'.");
	}
	function invalidDefaultBucket(bucket) {
	    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, "Invalid default bucket '" + bucket + "'.");
	}
	function noDefaultBucket() {
	    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' + "found. Did you set the '" + _constants.configOption + "' property when initializing the app?");
	}
	function cannotSliceBlob() {
	    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');
	}
	function serverFileWrongSize() {
	    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');
	}
	function noDownloadURL() {
	    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');
	}
	function invalidArgument(index, fnName, message) {
	    return new FirebaseStorageError(Code.INVALID_ARGUMENT, 'Invalid argument in `' + fnName + '` at index ' + index + ': ' + message);
	}
	function invalidArgumentCount(argMin, argMax, fnName, real) {
	    var countPart;
	    var plural;
	    if (argMin === argMax) {
	        countPart = argMin;
	        plural = argMin === 1 ? 'argument' : 'arguments';
	    } else {
	        countPart = 'between ' + argMin + ' and ' + argMax;
	        plural = 'arguments';
	    }
	    return new FirebaseStorageError(Code.INVALID_ARGUMENT_COUNT, 'Invalid argument count in `' + fnName + '`: Expected ' + countPart + ' ' + plural + ', received ' + real + '.');
	}
	function appDeleted() {
	    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');
	}
	/**
	 * @param name The name of the operation that was invalid.
	 */
	function invalidRootOperation(name) {
	    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, "The operation '" + name + "' cannot be performed on a root reference, create a non-root " + "reference using child, such as .child('file.png').");
	}
	/**
	 * @param format The format that was not valid.
	 * @param message A message describing the format violation.
	 */
	function invalidFormat(format, message) {
	    return new FirebaseStorageError(Code.INVALID_FORMAT, "String does not match format '" + format + "': " + message);
	}
	/**
	 * @param message A message describing the internal error.
	 */
	function internalError(message) {
	    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);
	}
	//# sourceMappingURL=error.js.map


/***/ }),
/* 114 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.setDomainBase = setDomainBase;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Constants used in the Firebase Storage library.
	 */
	/**
	 * Domain and scheme for API calls.
	 */
	var domainBase = exports.domainBase = 'https://firebasestorage.googleapis.com';
	/**
	 * Domain and scheme for object downloads.
	 */
	var downloadBase = exports.downloadBase = 'https://firebasestorage.googleapis.com';
	/**
	 * Base URL for non-upload calls to the API.
	 */
	var apiBaseUrl = exports.apiBaseUrl = '/v0';
	/**
	 * Base URL for upload calls to the API.
	 */
	var apiUploadBaseUrl = exports.apiUploadBaseUrl = '/v0';
	function setDomainBase(domainBase) {
	  domainBase = domainBase;
	}
	var configOption = exports.configOption = 'storageBucket';
	/**
	 * 1 minute
	 */
	var shortMaxOperationRetryTime = exports.shortMaxOperationRetryTime = 1 * 60 * 1000;
	/**
	 * 2 minutes
	 */
	var defaultMaxOperationRetryTime = exports.defaultMaxOperationRetryTime = 2 * 60 * 1000;
	/**
	 * 10 minutes
	 */
	var defaultMaxUploadRetryTime = exports.defaultMaxUploadRetryTime = 10 * 60 * 100;
	/**
	 * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported
	 * enough for us to use it directly.
	 */
	var minSafeInteger = exports.minSafeInteger = -9007199254740991;
	//# sourceMappingURL=constants.js.map


/***/ }),
/* 115 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.taskStateFromInternalTaskState = taskStateFromInternalTaskState;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var TaskEvent = exports.TaskEvent = {
	    /** Triggered whenever the task changes or progress is updated. */
	    STATE_CHANGED: 'state_changed'
	};
	var InternalTaskState = exports.InternalTaskState = {
	    RUNNING: 'running',
	    PAUSING: 'pausing',
	    PAUSED: 'paused',
	    SUCCESS: 'success',
	    CANCELING: 'canceling',
	    CANCELED: 'canceled',
	    ERROR: 'error'
	};
	var TaskState = exports.TaskState = {
	    /** The task is currently transferring data. */
	    RUNNING: 'running',
	    /** The task was paused by the user. */
	    PAUSED: 'paused',
	    /** The task completed successfully. */
	    SUCCESS: 'success',
	    /** The task was canceled. */
	    CANCELED: 'canceled',
	    /** The task failed with an error. */
	    ERROR: 'error'
	};
	function taskStateFromInternalTaskState(state) {
	    switch (state) {
	        case InternalTaskState.RUNNING:
	        case InternalTaskState.PAUSING:
	        case InternalTaskState.CANCELING:
	            return TaskState.RUNNING;
	        case InternalTaskState.PAUSED:
	            return TaskState.PAUSED;
	        case InternalTaskState.SUCCESS:
	            return TaskState.SUCCESS;
	        case InternalTaskState.CANCELED:
	            return TaskState.CANCELED;
	        case InternalTaskState.ERROR:
	            return TaskState.ERROR;
	        default:
	            // TODO(andysoto): assert(false);
	            return TaskState.ERROR;
	    }
	}
	//# sourceMappingURL=taskenums.js.map


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.XhrIoPool = undefined;

	var _xhrio_network = __webpack_require__(117);

	/**
	 * Factory-like class for creating XhrIo instances.
	 */
	var XhrIoPool = /** @class */function () {
	  function XhrIoPool() {}
	  XhrIoPool.prototype.createXhrIo = function () {
	    return new _xhrio_network.NetworkXhrIo();
	  };
	  return XhrIoPool;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.XhrIoPool = XhrIoPool;
	//# sourceMappingURL=xhriopool.js.map


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.NetworkXhrIo = undefined;

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	var _promise_external = __webpack_require__(119);

	var promiseimpl = _interopRequireWildcard(_promise_external);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	var _xhrio = __webpack_require__(121);

	var XhrIoExports = _interopRequireWildcard(_xhrio);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and
	 * doesn't work in React Native on Android.
	 */
	var NetworkXhrIo = /** @class */function () {
	    function NetworkXhrIo() {
	        var _this = this;
	        this.sent_ = false;
	        this.xhr_ = new XMLHttpRequest();
	        this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;
	        this.sendPromise_ = promiseimpl.make(function (resolve, reject) {
	            _this.xhr_.addEventListener('abort', function (event) {
	                _this.errorCode_ = XhrIoExports.ErrorCode.ABORT;
	                resolve(_this);
	            });
	            _this.xhr_.addEventListener('error', function (event) {
	                _this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;
	                resolve(_this);
	            });
	            _this.xhr_.addEventListener('load', function (event) {
	                resolve(_this);
	            });
	        });
	    }
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {
	        var _this = this;
	        if (this.sent_) {
	            throw errorsExports.internalError('cannot .send() more than once');
	        }
	        this.sent_ = true;
	        this.xhr_.open(method, url, true);
	        if (type.isDef(opt_headers)) {
	            var headers = opt_headers;
	            object.forEach(headers, function (key, val) {
	                _this.xhr_.setRequestHeader(key, val.toString());
	            });
	        }
	        if (type.isDef(opt_body)) {
	            this.xhr_.send(opt_body);
	        } else {
	            this.xhr_.send();
	        }
	        return this.sendPromise_;
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.getErrorCode = function () {
	        if (!this.sent_) {
	            throw errorsExports.internalError('cannot .getErrorCode() before sending');
	        }
	        return this.errorCode_;
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.getStatus = function () {
	        if (!this.sent_) {
	            throw errorsExports.internalError('cannot .getStatus() before sending');
	        }
	        try {
	            return this.xhr_.status;
	        } catch (e) {
	            return -1;
	        }
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.getResponseText = function () {
	        if (!this.sent_) {
	            throw errorsExports.internalError('cannot .getResponseText() before sending');
	        }
	        return this.xhr_.responseText;
	    };
	    /**
	     * Aborts the request.
	     * @override
	     */
	    NetworkXhrIo.prototype.abort = function () {
	        this.xhr_.abort();
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.getResponseHeader = function (header) {
	        return this.xhr_.getResponseHeader(header);
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {
	        if (type.isDef(this.xhr_.upload)) {
	            this.xhr_.upload.addEventListener('progress', listener);
	        }
	    };
	    /**
	     * @override
	     */
	    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {
	        if (type.isDef(this.xhr_.upload)) {
	            this.xhr_.upload.removeEventListener('progress', listener);
	        }
	    };
	    return NetworkXhrIo;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.NetworkXhrIo = NetworkXhrIo;
	//# sourceMappingURL=xhrio_network.js.map


/***/ }),
/* 118 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.contains = contains;
	exports.forEach = forEach;
	exports.clone = clone;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Contains methods for working with objects.
	 */
	function contains(obj, prop) {
	    return Object.prototype.hasOwnProperty.call(obj, prop);
	}
	function forEach(obj, f) {
	    for (var key in obj) {
	        if (contains(obj, key)) {
	            f(key, obj[key]);
	        }
	    }
	}
	function clone(obj) {
	    if (obj == null) {
	        return {};
	    }
	    var c = {};
	    forEach(obj, function (key, val) {
	        c[key] = val;
	    });
	    return c;
	}
	//# sourceMappingURL=object.js.map


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.make = make;
	exports.resolve = resolve;
	exports.reject = reject;

	var _promise = __webpack_require__(8);

	function make(resolver) {
	  return new _promise.PromiseImpl(resolver);
	}
	/**
	 * @template T
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Implements the promise abstraction interface for external
	 * (public SDK) packaging, which just passes through to the firebase-app impl.
	 */
	/**
	 * @template T
	 * @param {function((function(T): void),
	 *                  (function(!Error): void))} resolver
	 */
	function resolve(value) {
	  return _promise.PromiseImpl.resolve(value);
	}
	function reject(error) {
	  return _promise.PromiseImpl.reject(error);
	}
	//# sourceMappingURL=promise_external.js.map


/***/ }),
/* 120 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	exports.isDef = isDef;
	exports.isJustDef = isJustDef;
	exports.isFunction = isFunction;
	exports.isObject = isObject;
	exports.isNonNullObject = isNonNullObject;
	exports.isNonArrayObject = isNonArrayObject;
	exports.isString = isString;
	exports.isNumber = isNumber;
	exports.isNativeBlob = isNativeBlob;
	exports.isNativeBlobDefined = isNativeBlobDefined;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @return False if the object is undefined or null, true otherwise.
	 */
	function isDef(p) {
	    return p != null;
	}
	function isJustDef(p) {
	    return p !== void 0;
	}
	function isFunction(p) {
	    return typeof p === 'function';
	}
	function isObject(p) {
	    return (typeof p === 'undefined' ? 'undefined' : _typeof(p)) === 'object';
	}
	function isNonNullObject(p) {
	    return isObject(p) && p !== null;
	}
	function isNonArrayObject(p) {
	    return isObject(p) && !Array.isArray(p);
	}
	function isString(p) {
	    return typeof p === 'string' || p instanceof String;
	}
	function isNumber(p) {
	    return typeof p === 'number' || p instanceof Number;
	}
	function isNativeBlob(p) {
	    return isNativeBlobDefined() && p instanceof Blob;
	}
	function isNativeBlobDefined() {
	    return typeof Blob !== 'undefined';
	}
	//# sourceMappingURL=type.js.map


/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @enum{number}
	 */
	var ErrorCode = exports.ErrorCode = undefined;
	(function (ErrorCode) {
	  ErrorCode[ErrorCode["NO_ERROR"] = 0] = "NO_ERROR";
	  ErrorCode[ErrorCode["NETWORK_ERROR"] = 1] = "NETWORK_ERROR";
	  ErrorCode[ErrorCode["ABORT"] = 2] = "ABORT";
	})(ErrorCode || (exports.ErrorCode = ErrorCode = {}));
	//# sourceMappingURL=xhrio.js.map


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Reference = undefined;

	var _args = __webpack_require__(123);

	var args = _interopRequireWildcard(_args);

	var _blob = __webpack_require__(129);

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	var _location = __webpack_require__(126);

	var _metadata = __webpack_require__(124);

	var metadata = _interopRequireWildcard(_metadata);

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	var _path = __webpack_require__(127);

	var path = _interopRequireWildcard(_path);

	var _requests = __webpack_require__(131);

	var requests = _interopRequireWildcard(_requests);

	var _string = __webpack_require__(112);

	var fbsString = _interopRequireWildcard(_string);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	var _task = __webpack_require__(134);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Provides methods to interact with a bucket in the Firebase Storage service.
	 * @param location An fbs.location, or the URL at
	 *     which to base this object, in one of the following forms:
	 *         gs://<bucket>/<object-path>
	 *         http[s]://firebasestorage.googleapis.com/
	 *                     <api-version>/b/<bucket>/o/<object-path>
	 *     Any query or fragment strings will be ignored in the http[s]
	 *     format. If no value is passed, the storage object will use a URL based on
	 *     the project ID of the base firebase.App instance.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Defines the Firebase Storage Reference class.
	 */
	var Reference = /** @class */function () {
	    function Reference(authWrapper, location) {
	        this.authWrapper = authWrapper;
	        if (location instanceof _location.Location) {
	            this.location = location;
	        } else {
	            this.location = _location.Location.makeFromUrl(location);
	        }
	    }
	    /**
	     * @return The URL for the bucket and path this object references,
	     *     in the form gs://<bucket>/<object-path>
	     * @override
	     */
	    Reference.prototype.toString = function () {
	        args.validate('toString', [], arguments);
	        return 'gs://' + this.location.bucket + '/' + this.location.path;
	    };
	    Reference.prototype.newRef = function (authWrapper, location) {
	        return new Reference(authWrapper, location);
	    };
	    Reference.prototype.mappings = function () {
	        return metadata.getMappings();
	    };
	    /**
	     * @return A reference to the object obtained by
	     *     appending childPath, removing any duplicate, beginning, or trailing
	     *     slashes.
	     */
	    Reference.prototype.child = function (childPath) {
	        args.validate('child', [args.stringSpec()], arguments);
	        var newPath = path.child(this.location.path, childPath);
	        var location = new _location.Location(this.location.bucket, newPath);
	        return this.newRef(this.authWrapper, location);
	    };
	    Object.defineProperty(Reference.prototype, "parent", {
	        /**
	         * @return A reference to the parent of the
	         *     current object, or null if the current object is the root.
	         */
	        get: function get() {
	            var newPath = path.parent(this.location.path);
	            if (newPath === null) {
	                return null;
	            }
	            var location = new _location.Location(this.location.bucket, newPath);
	            return this.newRef(this.authWrapper, location);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "root", {
	        /**
	         * @return An reference to the root of this
	         *     object's bucket.
	         */
	        get: function get() {
	            var location = new _location.Location(this.location.bucket, '');
	            return this.newRef(this.authWrapper, location);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "bucket", {
	        get: function get() {
	            return this.location.bucket;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "fullPath", {
	        get: function get() {
	            return this.location.path;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "name", {
	        get: function get() {
	            return path.lastComponent(this.location.path);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Reference.prototype, "storage", {
	        get: function get() {
	            return this.authWrapper.service();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Uploads a blob to this object's location.
	     * @param data The blob to upload.
	     * @return An UploadTask that lets you control and
	     *     observe the upload.
	     */
	    Reference.prototype.put = function (data, metadata) {
	        if (metadata === void 0) {
	            metadata = null;
	        }
	        args.validate('put', [args.uploadDataSpec(), args.metadataSpec(true)], arguments);
	        this.throwIfRoot_('put');
	        return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data), metadata);
	    };
	    /**
	     * Uploads a string to this object's location.
	     * @param string The string to upload.
	     * @param opt_format The format of the string to upload.
	     * @return An UploadTask that lets you control and
	     *     observe the upload.
	     */
	    Reference.prototype.putString = function (string, format, opt_metadata) {
	        if (format === void 0) {
	            format = _string.StringFormat.RAW;
	        }
	        args.validate('putString', [args.stringSpec(), args.stringSpec(fbsString.formatValidator, true), args.metadataSpec(true)], arguments);
	        this.throwIfRoot_('putString');
	        var data = fbsString.dataFromString(format, string);
	        var metadata = object.clone(opt_metadata);
	        if (!type.isDef(metadata['contentType']) && type.isDef(data.contentType)) {
	            metadata['contentType'] = data.contentType;
	        }
	        return new _task.UploadTask(this, this.authWrapper, this.location, this.mappings(), new _blob.FbsBlob(data.data, true), metadata);
	    };
	    /**
	     * Deletes the object at this location.
	     * @return A promise that resolves if the deletion succeeds.
	     */
	    Reference.prototype.delete = function () {
	        args.validate('delete', [], arguments);
	        this.throwIfRoot_('delete');
	        var self = this;
	        return this.authWrapper.getAuthToken().then(function (authToken) {
	            var requestInfo = requests.deleteObject(self.authWrapper, self.location);
	            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
	        });
	    };
	    /**
	     *     A promise that resolves with the metadata for this object. If this
	     *     object doesn't exist or metadata cannot be retreived, the promise is
	     *     rejected.
	     */
	    Reference.prototype.getMetadata = function () {
	        args.validate('getMetadata', [], arguments);
	        this.throwIfRoot_('getMetadata');
	        var self = this;
	        return this.authWrapper.getAuthToken().then(function (authToken) {
	            var requestInfo = requests.getMetadata(self.authWrapper, self.location, self.mappings());
	            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
	        });
	    };
	    /**
	     * Updates the metadata for this object.
	     * @param metadata The new metadata for the object.
	     *     Only values that have been explicitly set will be changed. Explicitly
	     *     setting a value to null will remove the metadata.
	     * @return A promise that resolves
	     *     with the new metadata for this object.
	     *     @see firebaseStorage.Reference.prototype.getMetadata
	     */
	    Reference.prototype.updateMetadata = function (metadata) {
	        args.validate('updateMetadata', [args.metadataSpec()], arguments);
	        this.throwIfRoot_('updateMetadata');
	        var self = this;
	        return this.authWrapper.getAuthToken().then(function (authToken) {
	            var requestInfo = requests.updateMetadata(self.authWrapper, self.location, metadata, self.mappings());
	            return self.authWrapper.makeRequest(requestInfo, authToken).getPromise();
	        });
	    };
	    /**
	     * @return A promise that resolves with the download
	     *     URL for this object.
	     */
	    Reference.prototype.getDownloadURL = function () {
	        args.validate('getDownloadURL', [], arguments);
	        this.throwIfRoot_('getDownloadURL');
	        return this.getMetadata().then(function (metadata) {
	            var url = metadata['downloadURLs'][0];
	            if (type.isDef(url)) {
	                return url;
	            } else {
	                throw errorsExports.noDownloadURL();
	            }
	        });
	    };
	    Reference.prototype.throwIfRoot_ = function (name) {
	        if (this.location.path === '') {
	            throw errorsExports.invalidRootOperation(name);
	        }
	    };
	    return Reference;
	}();
	exports.Reference = Reference;
	//# sourceMappingURL=reference.js.map


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ArgSpec = undefined;
	exports.validate = validate;
	exports.and_ = and_;
	exports.stringSpec = stringSpec;
	exports.uploadDataSpec = uploadDataSpec;
	exports.metadataSpec = metadataSpec;
	exports.nonNegativeNumberSpec = nonNegativeNumberSpec;
	exports.looseObjectSpec = looseObjectSpec;
	exports.nullFunctionSpec = nullFunctionSpec;

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	var _metadata = __webpack_require__(124);

	var MetadataUtils = _interopRequireWildcard(_metadata);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @param name Name of the function.
	 * @param specs Argument specs.
	 * @param passed The actual arguments passed to the function.
	 * @throws {fbs.Error} If the arguments are invalid.
	 */
	function validate(name, specs, passed) {
	    var minArgs = specs.length;
	    var maxArgs = specs.length;
	    for (var i = 0; i < specs.length; i++) {
	        if (specs[i].optional) {
	            minArgs = i;
	            break;
	        }
	    }
	    var validLength = minArgs <= passed.length && passed.length <= maxArgs;
	    if (!validLength) {
	        throw errorsExports.invalidArgumentCount(minArgs, maxArgs, name, passed.length);
	    }
	    for (var i = 0; i < passed.length; i++) {
	        try {
	            specs[i].validator(passed[i]);
	        } catch (e) {
	            if (e instanceof Error) {
	                throw errorsExports.invalidArgument(i, name, e.message);
	            } else {
	                throw errorsExports.invalidArgument(i, name, e);
	            }
	        }
	    }
	}
	/**
	 * @struct
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var ArgSpec = /** @class */function () {
	    function ArgSpec(validator, opt_optional) {
	        var self = this;
	        this.validator = function (p) {
	            if (self.optional && !type.isJustDef(p)) {
	                return;
	            }
	            validator(p);
	        };
	        this.optional = !!opt_optional;
	    }
	    return ArgSpec;
	}();
	exports.ArgSpec = ArgSpec;
	function and_(v1, v2) {
	    return function (p) {
	        v1(p);
	        v2(p);
	    };
	}
	function stringSpec(opt_validator, opt_optional) {
	    function stringValidator(p) {
	        if (!type.isString(p)) {
	            throw 'Expected string.';
	        }
	    }
	    var validator;
	    if (opt_validator) {
	        validator = and_(stringValidator, opt_validator);
	    } else {
	        validator = stringValidator;
	    }
	    return new ArgSpec(validator, opt_optional);
	}
	function uploadDataSpec() {
	    function validator(p) {
	        var valid = p instanceof Uint8Array || p instanceof ArrayBuffer || type.isNativeBlobDefined() && p instanceof Blob;
	        if (!valid) {
	            throw 'Expected Blob or File.';
	        }
	    }
	    return new ArgSpec(validator);
	}
	function metadataSpec(opt_optional) {
	    return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);
	}
	function nonNegativeNumberSpec() {
	    function validator(p) {
	        var valid = type.isNumber(p) && p >= 0;
	        if (!valid) {
	            throw 'Expected a number 0 or greater.';
	        }
	    }
	    return new ArgSpec(validator);
	}
	function looseObjectSpec(opt_validator, opt_optional) {
	    function validator(p) {
	        var isLooseObject = p === null || type.isDef(p) && p instanceof Object;
	        if (!isLooseObject) {
	            throw 'Expected an Object.';
	        }
	        if (opt_validator !== undefined && opt_validator !== null) {
	            opt_validator(p);
	        }
	    }
	    return new ArgSpec(validator, opt_optional);
	}
	function nullFunctionSpec(opt_optional) {
	    function validator(p) {
	        var valid = p === null || type.isFunction(p);
	        if (!valid) {
	            throw 'Expected a Function.';
	        }
	    }
	    return new ArgSpec(validator, opt_optional);
	}
	//# sourceMappingURL=args.js.map


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Mapping = undefined;
	exports.noXform_ = noXform_;
	exports.xformPath = xformPath;
	exports.getMappings = getMappings;
	exports.addRef = addRef;
	exports.fromResource = fromResource;
	exports.fromResourceString = fromResourceString;
	exports.toResourceString = toResourceString;
	exports.metadataValidator = metadataValidator;

	var _json = __webpack_require__(125);

	var json = _interopRequireWildcard(_json);

	var _location = __webpack_require__(126);

	var _path = __webpack_require__(127);

	var path = _interopRequireWildcard(_path);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	var _url = __webpack_require__(128);

	var UrlUtils = _interopRequireWildcard(_url);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function noXform_(metadata, value) {
	    return value;
	}
	/**
	 * @struct
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Mapping = /** @class */function () {
	    function Mapping(server, opt_local, opt_writable, opt_xform) {
	        this.server = server;
	        this.local = opt_local || server;
	        this.writable = !!opt_writable;
	        this.xform = opt_xform || noXform_;
	    }
	    return Mapping;
	}();
	exports.Mapping = Mapping;

	var mappings_ = null;
	function xformPath(fullPath) {
	    var valid = type.isString(fullPath);
	    if (!valid || fullPath.length < 2) {
	        return fullPath;
	    } else {
	        fullPath = fullPath;
	        return path.lastComponent(fullPath);
	    }
	}
	function getMappings() {
	    if (mappings_) {
	        return mappings_;
	    }
	    var mappings = [];
	    mappings.push(new Mapping('bucket'));
	    mappings.push(new Mapping('generation'));
	    mappings.push(new Mapping('metageneration'));
	    mappings.push(new Mapping('name', 'fullPath', true));
	    function mappingsXformPath(metadata, fullPath) {
	        return xformPath(fullPath);
	    }
	    var nameMapping = new Mapping('name');
	    nameMapping.xform = mappingsXformPath;
	    mappings.push(nameMapping);
	    /**
	     * Coerces the second param to a number, if it is defined.
	     */
	    function xformSize(metadata, size) {
	        if (type.isDef(size)) {
	            return +size;
	        } else {
	            return size;
	        }
	    }
	    var sizeMapping = new Mapping('size');
	    sizeMapping.xform = xformSize;
	    mappings.push(sizeMapping);
	    mappings.push(new Mapping('timeCreated'));
	    mappings.push(new Mapping('updated'));
	    mappings.push(new Mapping('md5Hash', null, true));
	    mappings.push(new Mapping('cacheControl', null, true));
	    mappings.push(new Mapping('contentDisposition', null, true));
	    mappings.push(new Mapping('contentEncoding', null, true));
	    mappings.push(new Mapping('contentLanguage', null, true));
	    mappings.push(new Mapping('contentType', null, true));
	    mappings.push(new Mapping('metadata', 'customMetadata', true));
	    /**
	     * Transforms a comma-separated string of tokens into a list of download
	     * URLs.
	     */
	    function xformTokens(metadata, tokens) {
	        var valid = type.isString(tokens) && tokens.length > 0;
	        if (!valid) {
	            // This can happen if objects are uploaded through GCS and retrieved
	            // through list, so we don't want to throw an Error.
	            return [];
	        }
	        var encode = encodeURIComponent;
	        var tokensList = tokens.split(',');
	        var urls = tokensList.map(function (token) {
	            var bucket = metadata['bucket'];
	            var path = metadata['fullPath'];
	            var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);
	            var base = UrlUtils.makeDownloadUrl(urlPart);
	            var queryString = UrlUtils.makeQueryString({
	                alt: 'media',
	                token: token
	            });
	            return base + queryString;
	        });
	        return urls;
	    }
	    mappings.push(new Mapping('downloadTokens', 'downloadURLs', false, xformTokens));
	    mappings_ = mappings;
	    return mappings_;
	}
	function addRef(metadata, authWrapper) {
	    function generateRef() {
	        var bucket = metadata['bucket'];
	        var path = metadata['fullPath'];
	        var loc = new _location.Location(bucket, path);
	        return authWrapper.makeStorageReference(loc);
	    }
	    Object.defineProperty(metadata, 'ref', { get: generateRef });
	}
	function fromResource(authWrapper, resource, mappings) {
	    var metadata = {};
	    metadata['type'] = 'file';
	    var len = mappings.length;
	    for (var i = 0; i < len; i++) {
	        var mapping = mappings[i];
	        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);
	    }
	    addRef(metadata, authWrapper);
	    return metadata;
	}
	function fromResourceString(authWrapper, resourceString, mappings) {
	    var obj = json.jsonObjectOrNull(resourceString);
	    if (obj === null) {
	        return null;
	    }
	    var resource = obj;
	    return fromResource(authWrapper, resource, mappings);
	}
	function toResourceString(metadata, mappings) {
	    var resource = {};
	    var len = mappings.length;
	    for (var i = 0; i < len; i++) {
	        var mapping = mappings[i];
	        if (mapping.writable) {
	            resource[mapping.server] = metadata[mapping.local];
	        }
	    }
	    return JSON.stringify(resource);
	}
	function metadataValidator(p) {
	    var validType = p && type.isObject(p);
	    if (!validType) {
	        throw 'Expected Metadata object.';
	    }
	    for (var key in p) {
	        var val = p[key];
	        if (key === 'customMetadata') {
	            if (!type.isObject(val)) {
	                throw 'Expected object for \'customMetadata\' mapping.';
	            }
	        } else {
	            if (type.isNonNullObject(val)) {
	                throw "Mapping for '" + key + "' cannot be an object.";
	            }
	        }
	    }
	}
	//# sourceMappingURL=metadata.js.map


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.jsonObjectOrNull = jsonObjectOrNull;

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Returns the Object resulting from parsing the given JSON, or null if the
	 * given string does not represent a JSON object.
	 */
	function jsonObjectOrNull(s) {
	    var obj;
	    try {
	        obj = JSON.parse(s);
	    } catch (e) {
	        return null;
	    }
	    if (type.isNonArrayObject(obj)) {
	        return obj;
	    } else {
	        return null;
	    }
	} /**
	   * Copyright 2017 Google Inc.
	   *
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   *   http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   */
	//# sourceMappingURL=json.js.map


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Location = undefined;

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @struct
	 */
	var Location = /** @class */function () {
	    function Location(bucket, path) {
	        this.bucket = bucket;
	        this.path_ = path;
	    }
	    Object.defineProperty(Location.prototype, "path", {
	        get: function get() {
	            return this.path_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Location.prototype.fullServerUrl = function () {
	        var encode = encodeURIComponent;
	        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);
	    };
	    Location.prototype.bucketOnlyServerUrl = function () {
	        var encode = encodeURIComponent;
	        return '/b/' + encode(this.bucket) + '/o';
	    };
	    Location.makeFromBucketSpec = function (bucketString) {
	        var bucketLocation;
	        try {
	            bucketLocation = Location.makeFromUrl(bucketString);
	        } catch (e) {
	            // Not valid URL, use as-is. This lets you put bare bucket names in
	            // config.
	            return new Location(bucketString, '');
	        }
	        if (bucketLocation.path === '') {
	            return bucketLocation;
	        } else {
	            throw errorsExports.invalidDefaultBucket(bucketString);
	        }
	    };
	    Location.makeFromUrl = function (url) {
	        var location = null;
	        var bucketDomain = '([A-Za-z0-9.\\-]+)';
	        function gsModify(loc) {
	            if (loc.path.charAt(loc.path.length - 1) === '/') {
	                loc.path_ = loc.path_.slice(0, -1);
	            }
	        }
	        var gsPath = '(/(.*))?$';
	        var path = '(/([^?#]*).*)?$';
	        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');
	        var gsIndices = { bucket: 1, path: 3 };
	        function httpModify(loc) {
	            loc.path_ = decodeURIComponent(loc.path);
	        }
	        var version = 'v[A-Za-z0-9_]+';
	        var httpRegex = new RegExp('^https?://firebasestorage\\.googleapis\\.com/' + version + '/b/' + bucketDomain + '/o' + path, 'i');
	        var httpIndices = { bucket: 1, path: 3 };
	        var groups = [{ regex: gsRegex, indices: gsIndices, postModify: gsModify }, { regex: httpRegex, indices: httpIndices, postModify: httpModify }];
	        for (var i = 0; i < groups.length; i++) {
	            var group = groups[i];
	            var captures = group.regex.exec(url);
	            if (captures) {
	                var bucketValue = captures[group.indices.bucket];
	                var pathValue = captures[group.indices.path];
	                if (!pathValue) {
	                    pathValue = '';
	                }
	                location = new Location(bucketValue, pathValue);
	                group.postModify(location);
	                break;
	            }
	        }
	        if (location == null) {
	            throw errorsExports.invalidUrl(url);
	        }
	        return location;
	    };
	    return Location;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	/**
	 * @fileoverview Functionality related to the parsing/composition of bucket/
	 * object location.
	 */
	exports.Location = Location;
	//# sourceMappingURL=location.js.map


/***/ }),
/* 127 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.parent = parent;
	exports.child = child;
	exports.lastComponent = lastComponent;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Contains helper methods for manipulating paths.
	 */
	/**
	 * @return Null if the path is already at the root.
	 */
	function parent(path) {
	    if (path.length == 0) {
	        return null;
	    }
	    var index = path.lastIndexOf('/');
	    if (index === -1) {
	        return '';
	    }
	    var newPath = path.slice(0, index);
	    return newPath;
	}
	function child(path, childPath) {
	    var canonicalChildPath = childPath.split('/').filter(function (component) {
	        return component.length > 0;
	    }).join('/');
	    if (path.length === 0) {
	        return canonicalChildPath;
	    } else {
	        return path + '/' + canonicalChildPath;
	    }
	}
	/**
	 * Returns the last component of a path.
	 * '/foo/bar' -> 'bar'
	 * '/foo/bar/baz/' -> 'baz/'
	 * '/a' -> 'a'
	 */
	function lastComponent(path) {
	    var index = path.lastIndexOf('/', path.length - 2);
	    if (index === -1) {
	        return path;
	    } else {
	        return path.slice(index + 1);
	    }
	}
	//# sourceMappingURL=path.js.map


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.makeNormalUrl = makeNormalUrl;
	exports.makeDownloadUrl = makeDownloadUrl;
	exports.makeUploadUrl = makeUploadUrl;
	exports.makeQueryString = makeQueryString;

	var _constants = __webpack_require__(114);

	var constants = _interopRequireWildcard(_constants);

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Functions to create and manipulate URLs for the server API.
	 */
	function makeNormalUrl(urlPart) {
	    return constants.domainBase + constants.apiBaseUrl + urlPart;
	}
	function makeDownloadUrl(urlPart) {
	    return constants.downloadBase + constants.apiBaseUrl + urlPart;
	}
	function makeUploadUrl(urlPart) {
	    return constants.domainBase + constants.apiUploadBaseUrl + urlPart;
	}
	function makeQueryString(params) {
	    var encode = encodeURIComponent;
	    var queryPart = '?';
	    object.forEach(params, function (key, val) {
	        var nextPart = encode(key) + '=' + encode(val);
	        queryPart = queryPart + nextPart + '&';
	    });
	    // Chop off the extra '&' or '?' on the end
	    queryPart = queryPart.slice(0, -1);
	    return queryPart;
	}
	//# sourceMappingURL=url.js.map


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.FbsBlob = undefined;

	var _fs = __webpack_require__(130);

	var fs = _interopRequireWildcard(_fs);

	var _string = __webpack_require__(112);

	var string = _interopRequireWildcard(_string);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @param opt_elideCopy If true, doesn't copy mutable input data
	 *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be
	 *     modified after this blob's construction.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @file Provides a Blob-like wrapper for various binary types (including the
	 * native Blob type). This makes it possible to upload types like ArrayBuffers,
	 * making uploads possible in environments without the native Blob type.
	 */
	var FbsBlob = /** @class */function () {
	    function FbsBlob(data, opt_elideCopy) {
	        var size = 0;
	        var blobType = '';
	        if (type.isNativeBlob(data)) {
	            this.data_ = data;
	            size = data.size;
	            blobType = data.type;
	        } else if (data instanceof ArrayBuffer) {
	            if (opt_elideCopy) {
	                this.data_ = new Uint8Array(data);
	            } else {
	                this.data_ = new Uint8Array(data.byteLength);
	                this.data_.set(new Uint8Array(data));
	            }
	            size = this.data_.length;
	        } else if (data instanceof Uint8Array) {
	            if (opt_elideCopy) {
	                this.data_ = data;
	            } else {
	                this.data_ = new Uint8Array(data.length);
	                this.data_.set(data);
	            }
	            size = data.length;
	        }
	        this.size_ = size;
	        this.type_ = blobType;
	    }
	    FbsBlob.prototype.size = function () {
	        return this.size_;
	    };
	    FbsBlob.prototype.type = function () {
	        return this.type_;
	    };
	    FbsBlob.prototype.slice = function (startByte, endByte) {
	        if (type.isNativeBlob(this.data_)) {
	            var realBlob = this.data_;
	            var sliced = fs.sliceBlob(realBlob, startByte, endByte);
	            if (sliced === null) {
	                return null;
	            }
	            return new FbsBlob(sliced);
	        } else {
	            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);
	            return new FbsBlob(slice, true);
	        }
	    };
	    FbsBlob.getBlob = function () {
	        var var_args = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            var_args[_i] = arguments[_i];
	        }
	        if (type.isNativeBlobDefined()) {
	            var blobby = var_args.map(function (val) {
	                if (val instanceof FbsBlob) {
	                    return val.data_;
	                } else {
	                    return val;
	                }
	            });
	            return new FbsBlob(fs.getBlob.apply(null, blobby));
	        } else {
	            var uint8Arrays = var_args.map(function (val) {
	                if (type.isString(val)) {
	                    return string.dataFromString(_string.StringFormat.RAW, val).data;
	                } else {
	                    // Blobs don't exist, so this has to be a Uint8Array.
	                    return val.data_;
	                }
	            });
	            var finalLength_1 = 0;
	            uint8Arrays.forEach(function (array) {
	                finalLength_1 += array.byteLength;
	            });
	            var merged_1 = new Uint8Array(finalLength_1);
	            var index_1 = 0;
	            uint8Arrays.forEach(function (array) {
	                for (var i = 0; i < array.length; i++) {
	                    merged_1[index_1++] = array[i];
	                }
	            });
	            return new FbsBlob(merged_1, true);
	        }
	    };
	    FbsBlob.prototype.uploadData = function () {
	        return this.data_;
	    };
	    return FbsBlob;
	}();
	exports.FbsBlob = FbsBlob;
	//# sourceMappingURL=blob.js.map


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getBlob = getBlob;
	exports.sliceBlob = sliceBlob;

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function getBlobBuilder() {
	    if (typeof BlobBuilder !== 'undefined') {
	        return BlobBuilder;
	    } else if (typeof WebKitBlobBuilder !== 'undefined') {
	        return WebKitBlobBuilder;
	    } else {
	        return undefined;
	    }
	}
	/**
	 * Concatenates one or more values together and converts them to a Blob.
	 *
	 * @param var_args The values that will make up the resulting blob.
	 * @return The blob.
	 */
	function getBlob() {
	    var var_args = [];
	    for (var _i = 0; _i < arguments.length; _i++) {
	        var_args[_i] = arguments[_i];
	    }
	    var BlobBuilder = getBlobBuilder();
	    if (BlobBuilder !== undefined) {
	        var bb = new BlobBuilder();
	        for (var i = 0; i < var_args.length; i++) {
	            bb.append(var_args[i]);
	        }
	        return bb.getBlob();
	    } else {
	        if (type.isNativeBlobDefined()) {
	            return new Blob(var_args);
	        } else {
	            throw Error("This browser doesn't seem to support creating Blobs");
	        }
	    }
	}
	/**
	 * Slices the blob. The returned blob contains data from the start byte
	 * (inclusive) till the end byte (exclusive). Negative indices cannot be used.
	 *
	 * @param blob The blob to be sliced.
	 * @param start Index of the starting byte.
	 * @param end Index of the ending byte.
	 * @return The blob slice or null if not supported.
	 */
	function sliceBlob(blob, start, end) {
	    if (blob.webkitSlice) {
	        return blob.webkitSlice(start, end);
	    } else if (blob.mozSlice) {
	        return blob.mozSlice(start, end);
	    } else if (blob.slice) {
	        return blob.slice(start, end);
	    }
	    return null;
	}
	//# sourceMappingURL=fs.js.map


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.resumableUploadChunkSize = exports.ResumableUploadStatus = undefined;
	exports.handlerCheck = handlerCheck;
	exports.metadataHandler = metadataHandler;
	exports.sharedErrorHandler = sharedErrorHandler;
	exports.objectErrorHandler = objectErrorHandler;
	exports.getMetadata = getMetadata;
	exports.updateMetadata = updateMetadata;
	exports.deleteObject = deleteObject;
	exports.determineContentType_ = determineContentType_;
	exports.metadataForUpload_ = metadataForUpload_;
	exports.multipartUpload = multipartUpload;
	exports.checkResumeHeader_ = checkResumeHeader_;
	exports.createResumableUpload = createResumableUpload;
	exports.getResumableUploadStatus = getResumableUploadStatus;
	exports.continueResumableUpload = continueResumableUpload;

	var _array = __webpack_require__(132);

	var array = _interopRequireWildcard(_array);

	var _blob = __webpack_require__(129);

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	var _metadata = __webpack_require__(124);

	var MetadataUtils = _interopRequireWildcard(_metadata);

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	var _requestinfo = __webpack_require__(133);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	var _url = __webpack_require__(128);

	var UrlUtils = _interopRequireWildcard(_url);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Throws the UNKNOWN FirebaseStorageError if cndn is false.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function handlerCheck(cndn) {
	    if (!cndn) {
	        throw errorsExports.unknown();
	    }
	}
	function metadataHandler(authWrapper, mappings) {
	    function handler(xhr, text) {
	        var metadata = MetadataUtils.fromResourceString(authWrapper, text, mappings);
	        handlerCheck(metadata !== null);
	        return metadata;
	    }
	    return handler;
	}
	function sharedErrorHandler(location) {
	    function errorHandler(xhr, err) {
	        var newErr;
	        if (xhr.getStatus() === 401) {
	            newErr = errorsExports.unauthenticated();
	        } else {
	            if (xhr.getStatus() === 402) {
	                newErr = errorsExports.quotaExceeded(location.bucket);
	            } else {
	                if (xhr.getStatus() === 403) {
	                    newErr = errorsExports.unauthorized(location.path);
	                } else {
	                    newErr = err;
	                }
	            }
	        }
	        newErr.setServerResponseProp(err.serverResponseProp());
	        return newErr;
	    }
	    return errorHandler;
	}
	function objectErrorHandler(location) {
	    var shared = sharedErrorHandler(location);
	    function errorHandler(xhr, err) {
	        var newErr = shared(xhr, err);
	        if (xhr.getStatus() === 404) {
	            newErr = errorsExports.objectNotFound(location.path);
	        }
	        newErr.setServerResponseProp(err.serverResponseProp());
	        return newErr;
	    }
	    return errorHandler;
	}
	function getMetadata(authWrapper, location, mappings) {
	    var urlPart = location.fullServerUrl();
	    var url = UrlUtils.makeNormalUrl(urlPart);
	    var method = 'GET';
	    var timeout = authWrapper.maxOperationRetryTime();
	    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
	    requestInfo.errorHandler = objectErrorHandler(location);
	    return requestInfo;
	}
	function updateMetadata(authWrapper, location, metadata, mappings) {
	    var urlPart = location.fullServerUrl();
	    var url = UrlUtils.makeNormalUrl(urlPart);
	    var method = 'PATCH';
	    var body = MetadataUtils.toResourceString(metadata, mappings);
	    var headers = { 'Content-Type': 'application/json; charset=utf-8' };
	    var timeout = authWrapper.maxOperationRetryTime();
	    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
	    requestInfo.headers = headers;
	    requestInfo.body = body;
	    requestInfo.errorHandler = objectErrorHandler(location);
	    return requestInfo;
	}
	function deleteObject(authWrapper, location) {
	    var urlPart = location.fullServerUrl();
	    var url = UrlUtils.makeNormalUrl(urlPart);
	    var method = 'DELETE';
	    var timeout = authWrapper.maxOperationRetryTime();
	    function handler(xhr, text) {}
	    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);
	    requestInfo.successCodes = [200, 204];
	    requestInfo.errorHandler = objectErrorHandler(location);
	    return requestInfo;
	}
	function determineContentType_(metadata, blob) {
	    return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';
	}
	function metadataForUpload_(location, blob, opt_metadata) {
	    var metadata = object.clone(opt_metadata);
	    metadata['fullPath'] = location.path;
	    metadata['size'] = blob.size();
	    if (!metadata['contentType']) {
	        metadata['contentType'] = determineContentType_(null, blob);
	    }
	    return metadata;
	}
	function multipartUpload(authWrapper, location, mappings, blob, opt_metadata) {
	    var urlPart = location.bucketOnlyServerUrl();
	    var headers = {
	        'X-Goog-Upload-Protocol': 'multipart'
	    };
	    function genBoundary() {
	        var str = '';
	        for (var i = 0; i < 2; i++) {
	            str = str + Math.random().toString().slice(2);
	        }
	        return str;
	    }
	    var boundary = genBoundary();
	    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;
	    var metadata = metadataForUpload_(location, blob, opt_metadata);
	    var metadataString = MetadataUtils.toResourceString(metadata, mappings);
	    var preBlobPart = '--' + boundary + '\r\n' + 'Content-Type: application/json; charset=utf-8\r\n\r\n' + metadataString + '\r\n--' + boundary + '\r\n' + 'Content-Type: ' + metadata['contentType'] + '\r\n\r\n';
	    var postBlobPart = '\r\n--' + boundary + '--';
	    var body = _blob.FbsBlob.getBlob(preBlobPart, blob, postBlobPart);
	    if (body === null) {
	        throw errorsExports.cannotSliceBlob();
	    }
	    var urlParams = { name: metadata['fullPath'] };
	    var url = UrlUtils.makeUploadUrl(urlPart);
	    var method = 'POST';
	    var timeout = authWrapper.maxUploadRetryTime();
	    var requestInfo = new _requestinfo.RequestInfo(url, method, metadataHandler(authWrapper, mappings), timeout);
	    requestInfo.urlParams = urlParams;
	    requestInfo.headers = headers;
	    requestInfo.body = body.uploadData();
	    requestInfo.errorHandler = sharedErrorHandler(location);
	    return requestInfo;
	}
	/**
	 * @param current The number of bytes that have been uploaded so far.
	 * @param total The total number of bytes in the upload.
	 * @param opt_finalized True if the server has finished the upload.
	 * @param opt_metadata The upload metadata, should
	 *     only be passed if opt_finalized is true.
	 * @struct
	 */
	var ResumableUploadStatus = /** @class */function () {
	    function ResumableUploadStatus(current, total, finalized, metadata) {
	        this.current = current;
	        this.total = total;
	        this.finalized = !!finalized;
	        this.metadata = metadata || null;
	    }
	    return ResumableUploadStatus;
	}();
	exports.ResumableUploadStatus = ResumableUploadStatus;
	function checkResumeHeader_(xhr, opt_allowed) {
	    var status;
	    try {
	        status = xhr.getResponseHeader('X-Goog-Upload-Status');
	    } catch (e) {
	        handlerCheck(false);
	    }
	    var allowed = opt_allowed || ['active'];
	    handlerCheck(array.contains(allowed, status));
	    return status;
	}
	function createResumableUpload(authWrapper, location, mappings, blob, opt_metadata) {
	    var urlPart = location.bucketOnlyServerUrl();
	    var metadata = metadataForUpload_(location, blob, opt_metadata);
	    var urlParams = { name: metadata['fullPath'] };
	    var url = UrlUtils.makeUploadUrl(urlPart);
	    var method = 'POST';
	    var headers = {
	        'X-Goog-Upload-Protocol': 'resumable',
	        'X-Goog-Upload-Command': 'start',
	        'X-Goog-Upload-Header-Content-Length': blob.size(),
	        'X-Goog-Upload-Header-Content-Type': metadata['contentType'],
	        'Content-Type': 'application/json; charset=utf-8'
	    };
	    var body = MetadataUtils.toResourceString(metadata, mappings);
	    var timeout = authWrapper.maxUploadRetryTime();
	    function handler(xhr, text) {
	        checkResumeHeader_(xhr);
	        var url;
	        try {
	            url = xhr.getResponseHeader('X-Goog-Upload-URL');
	        } catch (e) {
	            handlerCheck(false);
	        }
	        handlerCheck(type.isString(url));
	        return url;
	    }
	    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);
	    requestInfo.urlParams = urlParams;
	    requestInfo.headers = headers;
	    requestInfo.body = body;
	    requestInfo.errorHandler = sharedErrorHandler(location);
	    return requestInfo;
	}
	/**
	 * @param url From a call to fbs.requests.createResumableUpload.
	 */
	function getResumableUploadStatus(authWrapper, location, url, blob) {
	    var headers = { 'X-Goog-Upload-Command': 'query' };
	    function handler(xhr, text) {
	        var status = checkResumeHeader_(xhr, ['active', 'final']);
	        var sizeString;
	        try {
	            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');
	        } catch (e) {
	            handlerCheck(false);
	        }
	        var size = parseInt(sizeString, 10);
	        handlerCheck(!isNaN(size));
	        return new ResumableUploadStatus(size, blob.size(), status === 'final');
	    }
	    var method = 'POST';
	    var timeout = authWrapper.maxUploadRetryTime();
	    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);
	    requestInfo.headers = headers;
	    requestInfo.errorHandler = sharedErrorHandler(location);
	    return requestInfo;
	}
	/**
	 * Any uploads via the resumable upload API must transfer a number of bytes
	 * that is a multiple of this number.
	 */
	var resumableUploadChunkSize = exports.resumableUploadChunkSize = 256 * 1024;
	/**
	 * @param url From a call to fbs.requests.createResumableUpload.
	 * @param chunkSize Number of bytes to upload.
	 * @param opt_status The previous status.
	 *     If not passed or null, we start from the beginning.
	 * @throws fbs.Error If the upload is already complete, the passed in status
	 *     has a final size inconsistent with the blob, or the blob cannot be sliced
	 *     for upload.
	 */
	function continueResumableUpload(location, authWrapper, url, blob, chunkSize, mappings, opt_status, opt_progressCallback) {
	    // TODO(andysoto): standardize on internal asserts
	    // assert(!(opt_status && opt_status.finalized));
	    var status = new ResumableUploadStatus(0, 0);
	    if (opt_status) {
	        status.current = opt_status.current;
	        status.total = opt_status.total;
	    } else {
	        status.current = 0;
	        status.total = blob.size();
	    }
	    if (blob.size() !== status.total) {
	        throw errorsExports.serverFileWrongSize();
	    }
	    var bytesLeft = status.total - status.current;
	    var bytesToUpload = bytesLeft;
	    if (chunkSize > 0) {
	        bytesToUpload = Math.min(bytesToUpload, chunkSize);
	    }
	    var startByte = status.current;
	    var endByte = startByte + bytesToUpload;
	    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';
	    var headers = {
	        'X-Goog-Upload-Command': uploadCommand,
	        'X-Goog-Upload-Offset': status.current
	    };
	    var body = blob.slice(startByte, endByte);
	    if (body === null) {
	        throw errorsExports.cannotSliceBlob();
	    }
	    function handler(xhr, text) {
	        // TODO(andysoto): Verify the MD5 of each uploaded range:
	        // the 'x-range-md5' header comes back with status code 308 responses.
	        // We'll only be able to bail out though, because you can't re-upload a
	        // range that you previously uploaded.
	        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);
	        var newCurrent = status.current + bytesToUpload;
	        var size = blob.size();
	        var metadata;
	        if (uploadStatus === 'final') {
	            metadata = metadataHandler(authWrapper, mappings)(xhr, text);
	        } else {
	            metadata = null;
	        }
	        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);
	    }
	    var method = 'POST';
	    var timeout = authWrapper.maxUploadRetryTime();
	    var requestInfo = new _requestinfo.RequestInfo(url, method, handler, timeout);
	    requestInfo.headers = headers;
	    requestInfo.body = body.uploadData();
	    requestInfo.progressCallback = opt_progressCallback || null;
	    requestInfo.errorHandler = sharedErrorHandler(location);
	    return requestInfo;
	}
	//# sourceMappingURL=requests.js.map


/***/ }),
/* 132 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.contains = contains;
	exports.clone = clone;
	exports.remove = remove;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * Returns true if the object is contained in the array (compared with ===).
	 * @template T
	 */
	function contains(array, elem) {
	  return array.indexOf(elem) !== -1;
	}
	/**
	 * Returns a shallow copy of the array or array-like object (e.g. arguments).
	 * @template T
	 */
	function clone(arraylike) {
	  return Array.prototype.slice.call(arraylike);
	}
	/**
	 * Removes the given element from the given array, if it is contained.
	 * Directly modifies the passed-in array.
	 * @template T
	 */
	function remove(array, elem) {
	  var i = array.indexOf(elem);
	  if (i !== -1) {
	    array.splice(i, 1);
	  }
	}
	//# sourceMappingURL=array.js.map


/***/ }),
/* 133 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var RequestInfo = /** @class */function () {
	    function RequestInfo(url, method,
	    /**
	       * Returns the value with which to resolve the request's promise. Only called
	       * if the request is successful. Throw from this function to reject the
	       * returned Request's promise with the thrown error.
	       * Note: The XhrIo passed to this function may be reused after this callback
	       * returns. Do not keep a reference to it in any way.
	       */
	    handler, timeout) {
	        this.url = url;
	        this.method = method;
	        this.handler = handler;
	        this.timeout = timeout;
	        this.urlParams = {};
	        this.headers = {};
	        this.body = null;
	        this.errorHandler = null;
	        /**
	         * Called with the current number of bytes uploaded and total size (-1 if not
	         * computable) of the request body (i.e. used to report upload progress).
	         */
	        this.progressCallback = null;
	        this.successCodes = [200];
	        this.additionalRetryCodes = [];
	    }
	    return RequestInfo;
	}();
	exports.RequestInfo = RequestInfo;
	//# sourceMappingURL=requestinfo.js.map


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.UploadTask = undefined;

	var _taskenums = __webpack_require__(115);

	var fbsTaskEnums = _interopRequireWildcard(_taskenums);

	var _observer = __webpack_require__(135);

	var _tasksnapshot = __webpack_require__(136);

	var _args = __webpack_require__(123);

	var fbsArgs = _interopRequireWildcard(_args);

	var _array = __webpack_require__(132);

	var fbsArray = _interopRequireWildcard(_array);

	var _async = __webpack_require__(137);

	var _error = __webpack_require__(113);

	var errors = _interopRequireWildcard(_error);

	var _promise_external = __webpack_require__(119);

	var fbsPromiseimpl = _interopRequireWildcard(_promise_external);

	var _requests = __webpack_require__(131);

	var fbsRequests = _interopRequireWildcard(_requests);

	var _type = __webpack_require__(120);

	var typeUtils = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Represents a blob being uploaded. Can be used to pause/resume/cancel the
	 * upload and manage callbacks for various events.
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Defines types for interacting with blob transfer tasks.
	 */
	var UploadTask = /** @class */function () {
	    /**
	     * @param ref The firebaseStorage.Reference object this task came
	     *     from, untyped to avoid cyclic dependencies.
	     * @param blob The blob to upload.
	     */
	    function UploadTask(ref, authWrapper, location, mappings, blob, metadata) {
	        if (metadata === void 0) {
	            metadata = null;
	        }
	        var _this = this;
	        this.transferred_ = 0;
	        this.needToFetchStatus_ = false;
	        this.needToFetchMetadata_ = false;
	        this.observers_ = [];
	        this.error_ = null;
	        this.uploadUrl_ = null;
	        this.request_ = null;
	        this.chunkMultiplier_ = 1;
	        this.resolve_ = null;
	        this.reject_ = null;
	        this.ref_ = ref;
	        this.authWrapper_ = authWrapper;
	        this.location_ = location;
	        this.blob_ = blob;
	        this.metadata_ = metadata;
	        this.mappings_ = mappings;
	        this.resumable_ = this.shouldDoResumable_(this.blob_);
	        this.state_ = _taskenums.InternalTaskState.RUNNING;
	        this.errorHandler_ = function (error) {
	            _this.request_ = null;
	            _this.chunkMultiplier_ = 1;
	            if (error.codeEquals(errors.Code.CANCELED)) {
	                _this.needToFetchStatus_ = true;
	                _this.completeTransitions_();
	            } else {
	                _this.error_ = error;
	                _this.transition_(_taskenums.InternalTaskState.ERROR);
	            }
	        };
	        this.metadataErrorHandler_ = function (error) {
	            _this.request_ = null;
	            if (error.codeEquals(errors.Code.CANCELED)) {
	                _this.completeTransitions_();
	            } else {
	                _this.error_ = error;
	                _this.transition_(_taskenums.InternalTaskState.ERROR);
	            }
	        };
	        this.promise_ = fbsPromiseimpl.make(function (resolve, reject) {
	            _this.resolve_ = resolve;
	            _this.reject_ = reject;
	            _this.start_();
	        });
	        // Prevent uncaught rejections on the internal promise from bubbling out
	        // to the top level with a dummy handler.
	        this.promise_.then(null, function () {});
	    }
	    UploadTask.prototype.makeProgressCallback_ = function () {
	        var _this = this;
	        var sizeBefore = this.transferred_;
	        return function (loaded, total) {
	            _this.updateProgress_(sizeBefore + loaded);
	        };
	    };
	    UploadTask.prototype.shouldDoResumable_ = function (blob) {
	        return blob.size() > 256 * 1024;
	    };
	    UploadTask.prototype.start_ = function () {
	        if (this.state_ !== _taskenums.InternalTaskState.RUNNING) {
	            // This can happen if someone pauses us in a resume callback, for example.
	            return;
	        }
	        if (this.request_ !== null) {
	            return;
	        }
	        if (this.resumable_) {
	            if (this.uploadUrl_ === null) {
	                this.createResumable_();
	            } else {
	                if (this.needToFetchStatus_) {
	                    this.fetchStatus_();
	                } else {
	                    if (this.needToFetchMetadata_) {
	                        // Happens if we miss the metadata on upload completion.
	                        this.fetchMetadata_();
	                    } else {
	                        this.continueUpload_();
	                    }
	                }
	            }
	        } else {
	            this.oneShotUpload_();
	        }
	    };
	    UploadTask.prototype.resolveToken_ = function (callback) {
	        var _this = this;
	        this.authWrapper_.getAuthToken().then(function (authToken) {
	            switch (_this.state_) {
	                case _taskenums.InternalTaskState.RUNNING:
	                    callback(authToken);
	                    break;
	                case _taskenums.InternalTaskState.CANCELING:
	                    _this.transition_(_taskenums.InternalTaskState.CANCELED);
	                    break;
	                case _taskenums.InternalTaskState.PAUSING:
	                    _this.transition_(_taskenums.InternalTaskState.PAUSED);
	                    break;
	                default:
	            }
	        });
	    };
	    // TODO(andysoto): assert false
	    UploadTask.prototype.createResumable_ = function () {
	        var _this = this;
	        this.resolveToken_(function (authToken) {
	            var requestInfo = fbsRequests.createResumableUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
	            var createRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
	            _this.request_ = createRequest;
	            createRequest.getPromise().then(function (url) {
	                _this.request_ = null;
	                _this.uploadUrl_ = url;
	                _this.needToFetchStatus_ = false;
	                _this.completeTransitions_();
	            }, _this.errorHandler_);
	        });
	    };
	    UploadTask.prototype.fetchStatus_ = function () {
	        var _this = this;
	        // TODO(andysoto): assert(this.uploadUrl_ !== null);
	        var url = this.uploadUrl_;
	        this.resolveToken_(function (authToken) {
	            var requestInfo = fbsRequests.getResumableUploadStatus(_this.authWrapper_, _this.location_, url, _this.blob_);
	            var statusRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
	            _this.request_ = statusRequest;
	            statusRequest.getPromise().then(function (status) {
	                status = status;
	                _this.request_ = null;
	                _this.updateProgress_(status.current);
	                _this.needToFetchStatus_ = false;
	                if (status.finalized) {
	                    _this.needToFetchMetadata_ = true;
	                }
	                _this.completeTransitions_();
	            }, _this.errorHandler_);
	        });
	    };
	    UploadTask.prototype.continueUpload_ = function () {
	        var _this = this;
	        var chunkSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;
	        var status = new fbsRequests.ResumableUploadStatus(this.transferred_, this.blob_.size());
	        // TODO(andysoto): assert(this.uploadUrl_ !== null);
	        var url = this.uploadUrl_;
	        this.resolveToken_(function (authToken) {
	            var requestInfo;
	            try {
	                requestInfo = fbsRequests.continueResumableUpload(_this.location_, _this.authWrapper_, url, _this.blob_, chunkSize, _this.mappings_, status, _this.makeProgressCallback_());
	            } catch (e) {
	                _this.error_ = e;
	                _this.transition_(_taskenums.InternalTaskState.ERROR);
	                return;
	            }
	            var uploadRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
	            _this.request_ = uploadRequest;
	            uploadRequest.getPromise().then(function (newStatus) {
	                _this.increaseMultiplier_();
	                _this.request_ = null;
	                _this.updateProgress_(newStatus.current);
	                if (newStatus.finalized) {
	                    _this.metadata_ = newStatus.metadata;
	                    _this.transition_(_taskenums.InternalTaskState.SUCCESS);
	                } else {
	                    _this.completeTransitions_();
	                }
	            }, _this.errorHandler_);
	        });
	    };
	    UploadTask.prototype.increaseMultiplier_ = function () {
	        var currentSize = fbsRequests.resumableUploadChunkSize * this.chunkMultiplier_;
	        // Max chunk size is 32M.
	        if (currentSize < 32 * 1024 * 1024) {
	            this.chunkMultiplier_ *= 2;
	        }
	    };
	    UploadTask.prototype.fetchMetadata_ = function () {
	        var _this = this;
	        this.resolveToken_(function (authToken) {
	            var requestInfo = fbsRequests.getMetadata(_this.authWrapper_, _this.location_, _this.mappings_);
	            var metadataRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
	            _this.request_ = metadataRequest;
	            metadataRequest.getPromise().then(function (metadata) {
	                _this.request_ = null;
	                _this.metadata_ = metadata;
	                _this.transition_(_taskenums.InternalTaskState.SUCCESS);
	            }, _this.metadataErrorHandler_);
	        });
	    };
	    UploadTask.prototype.oneShotUpload_ = function () {
	        var _this = this;
	        this.resolveToken_(function (authToken) {
	            var requestInfo = fbsRequests.multipartUpload(_this.authWrapper_, _this.location_, _this.mappings_, _this.blob_, _this.metadata_);
	            var multipartRequest = _this.authWrapper_.makeRequest(requestInfo, authToken);
	            _this.request_ = multipartRequest;
	            multipartRequest.getPromise().then(function (metadata) {
	                _this.request_ = null;
	                _this.metadata_ = metadata;
	                _this.updateProgress_(_this.blob_.size());
	                _this.transition_(_taskenums.InternalTaskState.SUCCESS);
	            }, _this.errorHandler_);
	        });
	    };
	    UploadTask.prototype.updateProgress_ = function (transferred) {
	        var old = this.transferred_;
	        this.transferred_ = transferred;
	        // A progress update can make the "transferred" value smaller (e.g. a
	        // partial upload not completed by server, after which the "transferred"
	        // value may reset to the value at the beginning of the request).
	        if (this.transferred_ !== old) {
	            this.notifyObservers_();
	        }
	    };
	    UploadTask.prototype.transition_ = function (state) {
	        if (this.state_ === state) {
	            return;
	        }
	        switch (state) {
	            case _taskenums.InternalTaskState.CANCELING:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.RUNNING ||
	                //        this.state_ === InternalTaskState.PAUSING);
	                this.state_ = state;
	                if (this.request_ !== null) {
	                    this.request_.cancel();
	                }
	                break;
	            case _taskenums.InternalTaskState.PAUSING:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.RUNNING);
	                this.state_ = state;
	                if (this.request_ !== null) {
	                    this.request_.cancel();
	                }
	                break;
	            case _taskenums.InternalTaskState.RUNNING:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.PAUSED ||
	                //        this.state_ === InternalTaskState.PAUSING);
	                var wasPaused = this.state_ === _taskenums.InternalTaskState.PAUSED;
	                this.state_ = state;
	                if (wasPaused) {
	                    this.notifyObservers_();
	                    this.start_();
	                }
	                break;
	            case _taskenums.InternalTaskState.PAUSED:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.PAUSING);
	                this.state_ = state;
	                this.notifyObservers_();
	                break;
	            case _taskenums.InternalTaskState.CANCELED:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.PAUSED ||
	                //        this.state_ === InternalTaskState.CANCELING);
	                this.error_ = errors.canceled();
	                this.state_ = state;
	                this.notifyObservers_();
	                break;
	            case _taskenums.InternalTaskState.ERROR:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.RUNNING ||
	                //        this.state_ === InternalTaskState.PAUSING ||
	                //        this.state_ === InternalTaskState.CANCELING);
	                this.state_ = state;
	                this.notifyObservers_();
	                break;
	            case _taskenums.InternalTaskState.SUCCESS:
	                // TODO(andysoto):
	                // assert(this.state_ === InternalTaskState.RUNNING ||
	                //        this.state_ === InternalTaskState.PAUSING ||
	                //        this.state_ === InternalTaskState.CANCELING);
	                this.state_ = state;
	                this.notifyObservers_();
	                break;
	        }
	    };
	    UploadTask.prototype.completeTransitions_ = function () {
	        switch (this.state_) {
	            case _taskenums.InternalTaskState.PAUSING:
	                this.transition_(_taskenums.InternalTaskState.PAUSED);
	                break;
	            case _taskenums.InternalTaskState.CANCELING:
	                this.transition_(_taskenums.InternalTaskState.CANCELED);
	                break;
	            case _taskenums.InternalTaskState.RUNNING:
	                this.start_();
	                break;
	            default:
	                // TODO(andysoto): assert(false);
	                break;
	        }
	    };
	    Object.defineProperty(UploadTask.prototype, "snapshot", {
	        get: function get() {
	            var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);
	            return new _tasksnapshot.UploadTaskSnapshot(this.transferred_, this.blob_.size(), externalState, this.metadata_, this, this.ref_);
	        },
	        enumerable: true,
	        configurable: true
	    });
	    /**
	     * Adds a callback for an event.
	     * @param type The type of event to listen for.
	     */
	    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {
	        if (nextOrObserver === void 0) {
	            nextOrObserver = undefined;
	        }
	        if (error === void 0) {
	            error = undefined;
	        }
	        if (completed === void 0) {
	            completed = undefined;
	        }
	        function typeValidator(_p) {
	            if (type !== _taskenums.TaskEvent.STATE_CHANGED) {
	                throw "Expected one of the event types: [" + _taskenums.TaskEvent.STATE_CHANGED + "].";
	            }
	        }
	        var nextOrObserverMessage = 'Expected a function or an Object with one of ' + '`next`, `error`, `complete` properties.';
	        var nextValidator = fbsArgs.nullFunctionSpec(true).validator;
	        var observerValidator = fbsArgs.looseObjectSpec(null, true).validator;
	        function nextOrObserverValidator(p) {
	            try {
	                nextValidator(p);
	                return;
	            } catch (e) {}
	            try {
	                observerValidator(p);
	                var anyDefined = typeUtils.isJustDef(p['next']) || typeUtils.isJustDef(p['error']) || typeUtils.isJustDef(p['complete']);
	                if (!anyDefined) {
	                    throw '';
	                }
	                return;
	            } catch (e) {
	                throw nextOrObserverMessage;
	            }
	        }
	        var specs = [fbsArgs.stringSpec(typeValidator), fbsArgs.looseObjectSpec(nextOrObserverValidator, true), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];
	        fbsArgs.validate('on', specs, arguments);
	        var self = this;
	        function makeBinder(specs) {
	            function binder(nextOrObserver, error, opt_complete) {
	                if (specs !== null) {
	                    fbsArgs.validate('on', specs, arguments);
	                }
	                var observer = new _observer.Observer(nextOrObserver, error, completed);
	                self.addObserver_(observer);
	                return function () {
	                    self.removeObserver_(observer);
	                };
	            }
	            return binder;
	        }
	        function binderNextOrObserverValidator(p) {
	            if (p === null) {
	                throw nextOrObserverMessage;
	            }
	            nextOrObserverValidator(p);
	        }
	        var binderSpecs = [fbsArgs.looseObjectSpec(binderNextOrObserverValidator), fbsArgs.nullFunctionSpec(true), fbsArgs.nullFunctionSpec(true)];
	        var typeOnly = !(typeUtils.isJustDef(nextOrObserver) || typeUtils.isJustDef(error) || typeUtils.isJustDef(completed));
	        if (typeOnly) {
	            return makeBinder(binderSpecs);
	        } else {
	            return makeBinder(null)(nextOrObserver, error, completed);
	        }
	    };
	    /**
	     * This object behaves like a Promise, and resolves with its snapshot data
	     * when the upload completes.
	     * @param onFulfilled The fulfillment callback. Promise chaining works as normal.
	     * @param onRejected The rejection callback.
	     */
	    UploadTask.prototype.then = function (onFulfilled, onRejected) {
	        // These casts are needed so that TypeScript can infer the types of the
	        // resulting Promise.
	        return this.promise_.then(onFulfilled, onRejected);
	    };
	    /**
	     * Equivalent to calling `then(null, onRejected)`.
	     */
	    UploadTask.prototype.catch = function (onRejected) {
	        return this.then(null, onRejected);
	    };
	    /**
	     * Adds the given observer.
	     */
	    UploadTask.prototype.addObserver_ = function (observer) {
	        this.observers_.push(observer);
	        this.notifyObserver_(observer);
	    };
	    /**
	     * Removes the given observer.
	     */
	    UploadTask.prototype.removeObserver_ = function (observer) {
	        fbsArray.remove(this.observers_, observer);
	    };
	    UploadTask.prototype.notifyObservers_ = function () {
	        var _this = this;
	        this.finishPromise_();
	        var observers = fbsArray.clone(this.observers_);
	        observers.forEach(function (observer) {
	            _this.notifyObserver_(observer);
	        });
	    };
	    UploadTask.prototype.finishPromise_ = function () {
	        if (this.resolve_ !== null) {
	            var triggered = true;
	            switch (fbsTaskEnums.taskStateFromInternalTaskState(this.state_)) {
	                case _taskenums.TaskState.SUCCESS:
	                    (0, _async.async)(this.resolve_.bind(null, this.snapshot))();
	                    break;
	                case _taskenums.TaskState.CANCELED:
	                case _taskenums.TaskState.ERROR:
	                    var toCall = this.reject_;
	                    (0, _async.async)(toCall.bind(null, this.error_))();
	                    break;
	                default:
	                    triggered = false;
	                    break;
	            }
	            if (triggered) {
	                this.resolve_ = null;
	                this.reject_ = null;
	            }
	        }
	    };
	    UploadTask.prototype.notifyObserver_ = function (observer) {
	        var externalState = fbsTaskEnums.taskStateFromInternalTaskState(this.state_);
	        switch (externalState) {
	            case _taskenums.TaskState.RUNNING:
	            case _taskenums.TaskState.PAUSED:
	                if (observer.next !== null) {
	                    (0, _async.async)(observer.next.bind(observer, this.snapshot))();
	                }
	                break;
	            case _taskenums.TaskState.SUCCESS:
	                if (observer.complete !== null) {
	                    (0, _async.async)(observer.complete.bind(observer))();
	                }
	                break;
	            case _taskenums.TaskState.CANCELED:
	            case _taskenums.TaskState.ERROR:
	                if (observer.error !== null) {
	                    (0, _async.async)(observer.error.bind(observer, this.error_))();
	                }
	                break;
	            default:
	                // TODO(andysoto): assert(false);
	                if (observer.error !== null) {
	                    (0, _async.async)(observer.error.bind(observer, this.error_))();
	                }
	        }
	    };
	    /**
	     * Resumes a paused task. Has no effect on a currently running or failed task.
	     * @return True if the operation took effect, false if ignored.
	     */
	    UploadTask.prototype.resume = function () {
	        fbsArgs.validate('resume', [], arguments);
	        var valid = this.state_ === _taskenums.InternalTaskState.PAUSED || this.state_ === _taskenums.InternalTaskState.PAUSING;
	        if (valid) {
	            this.transition_(_taskenums.InternalTaskState.RUNNING);
	        }
	        return valid;
	    };
	    /**
	     * Pauses a currently running task. Has no effect on a paused or failed task.
	     * @return True if the operation took effect, false if ignored.
	     */
	    UploadTask.prototype.pause = function () {
	        fbsArgs.validate('pause', [], arguments);
	        var valid = this.state_ === _taskenums.InternalTaskState.RUNNING;
	        if (valid) {
	            this.transition_(_taskenums.InternalTaskState.PAUSING);
	        }
	        return valid;
	    };
	    /**
	     * Cancels a currently running or paused task. Has no effect on a complete or
	     * failed task.
	     * @return True if the operation took effect, false if ignored.
	     */
	    UploadTask.prototype.cancel = function () {
	        fbsArgs.validate('cancel', [], arguments);
	        var valid = this.state_ === _taskenums.InternalTaskState.RUNNING || this.state_ === _taskenums.InternalTaskState.PAUSING;
	        if (valid) {
	            this.transition_(_taskenums.InternalTaskState.CANCELING);
	        }
	        return valid;
	    };
	    return UploadTask;
	}();
	exports.UploadTask = UploadTask;
	//# sourceMappingURL=task.js.map


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Observer = undefined;

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @struct
	 */
	var Observer = /** @class */function () {
	    function Observer(nextOrObserver, opt_error, opt_complete) {
	        var asFunctions = type.isFunction(nextOrObserver) || type.isDef(opt_error) || type.isDef(opt_complete);
	        if (asFunctions) {
	            this.next = nextOrObserver;
	            this.error = opt_error || null;
	            this.complete = opt_complete || null;
	        } else {
	            var observer = nextOrObserver;
	            this.next = observer.next || null;
	            this.error = observer.error || null;
	            this.complete = observer.complete || null;
	        }
	    }
	    return Observer;
	}(); /**
	      * Copyright 2017 Google Inc.
	      *
	      * Licensed under the Apache License, Version 2.0 (the "License");
	      * you may not use this file except in compliance with the License.
	      * You may obtain a copy of the License at
	      *
	      *   http://www.apache.org/licenses/LICENSE-2.0
	      *
	      * Unless required by applicable law or agreed to in writing, software
	      * distributed under the License is distributed on an "AS IS" BASIS,
	      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	      * See the License for the specific language governing permissions and
	      * limitations under the License.
	      */
	exports.Observer = Observer;
	//# sourceMappingURL=observer.js.map


/***/ }),
/* 136 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var UploadTaskSnapshot = /** @class */function () {
	    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {
	        this.bytesTransferred = bytesTransferred;
	        this.totalBytes = totalBytes;
	        this.state = state;
	        this.metadata = metadata;
	        this.task = task;
	        this.ref = ref;
	    }
	    Object.defineProperty(UploadTaskSnapshot.prototype, "downloadURL", {
	        get: function get() {
	            if (this.metadata !== null) {
	                var urls = this.metadata['downloadURLs'];
	                if (urls != null && urls[0] != null) {
	                    return urls[0];
	                } else {
	                    return null;
	                }
	            } else {
	                return null;
	            }
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return UploadTaskSnapshot;
	}();
	exports.UploadTaskSnapshot = UploadTaskSnapshot;
	//# sourceMappingURL=tasksnapshot.js.map


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.async = async;

	var _promise_external = __webpack_require__(119);

	var promiseimpl = _interopRequireWildcard(_promise_external);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * Returns a function that invokes f with its arguments asynchronously as a
	 * microtask, i.e. as soon as possible after the current script returns back
	 * into browser code.
	 */
	function async(f) {
	    return function () {
	        var argsToForward = [];
	        for (var _i = 0; _i < arguments.length; _i++) {
	            argsToForward[_i] = arguments[_i];
	        }
	        promiseimpl.resolve(true).then(function () {
	            f.apply(null, argsToForward);
	        });
	    };
	} /**
	   * Copyright 2017 Google Inc.
	   *
	   * Licensed under the Apache License, Version 2.0 (the "License");
	   * you may not use this file except in compliance with the License.
	   * You may obtain a copy of the License at
	   *
	   *   http://www.apache.org/licenses/LICENSE-2.0
	   *
	   * Unless required by applicable law or agreed to in writing, software
	   * distributed under the License is distributed on an "AS IS" BASIS,
	   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	   * See the License for the specific language governing permissions and
	   * limitations under the License.
	   */
	/**
	 * @fileoverview Method for invoking a callback asynchronously.
	 */
	//# sourceMappingURL=async.js.map


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ServiceInternals = exports.Service = undefined;

	var _args = __webpack_require__(123);

	var args = _interopRequireWildcard(_args);

	var _authwrapper = __webpack_require__(139);

	var _location = __webpack_require__(126);

	var _promise_external = __webpack_require__(119);

	var fbsPromiseImpl = _interopRequireWildcard(_promise_external);

	var _request = __webpack_require__(142);

	var RequestExports = _interopRequireWildcard(_request);

	var _reference = __webpack_require__(122);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * A service that provides firebaseStorage.Reference instances.
	 * @param opt_url gs:// url to a custom Storage Bucket
	 *
	 * @struct
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var Service = /** @class */function () {
	    function Service(app, pool, url) {
	        this.bucket_ = null;
	        function maker(authWrapper, loc) {
	            return new _reference.Reference(authWrapper, loc);
	        }
	        this.authWrapper_ = new _authwrapper.AuthWrapper(app, maker, RequestExports.makeRequest, this, pool);
	        this.app_ = app;
	        if (url != null) {
	            this.bucket_ = _location.Location.makeFromBucketSpec(url);
	        } else {
	            var authWrapperBucket = this.authWrapper_.bucket();
	            if (authWrapperBucket != null) {
	                this.bucket_ = new _location.Location(authWrapperBucket, '');
	            }
	        }
	        this.internals_ = new ServiceInternals(this);
	    }
	    /**
	     * Returns a firebaseStorage.Reference for the given path in the default
	     * bucket.
	     */
	    Service.prototype.ref = function (path) {
	        function validator(path) {
	            if (/^[A-Za-z]+:\/\//.test(path)) {
	                throw 'Expected child path but got a URL, use refFromURL instead.';
	            }
	        }
	        args.validate('ref', [args.stringSpec(validator, true)], arguments);
	        if (this.bucket_ == null) {
	            throw new Error('No Storage Bucket defined in Firebase Options.');
	        }
	        var ref = new _reference.Reference(this.authWrapper_, this.bucket_);
	        if (path != null) {
	            return ref.child(path);
	        } else {
	            return ref;
	        }
	    };
	    /**
	     * Returns a firebaseStorage.Reference object for the given absolute URL,
	     * which must be a gs:// or http[s]:// URL.
	     */
	    Service.prototype.refFromURL = function (url) {
	        function validator(p) {
	            if (!/^[A-Za-z]+:\/\//.test(p)) {
	                throw 'Expected full URL but got a child path, use ref instead.';
	            }
	            try {
	                _location.Location.makeFromUrl(p);
	            } catch (e) {
	                throw 'Expected valid full URL but got an invalid one.';
	            }
	        }
	        args.validate('refFromURL', [args.stringSpec(validator, false)], arguments);
	        return new _reference.Reference(this.authWrapper_, url);
	    };
	    Object.defineProperty(Service.prototype, "maxUploadRetryTime", {
	        get: function get() {
	            return this.authWrapper_.maxUploadRetryTime();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Service.prototype.setMaxUploadRetryTime = function (time) {
	        args.validate('setMaxUploadRetryTime', [args.nonNegativeNumberSpec()], arguments);
	        this.authWrapper_.setMaxUploadRetryTime(time);
	    };
	    Object.defineProperty(Service.prototype, "maxOperationRetryTime", {
	        get: function get() {
	            return this.authWrapper_.maxOperationRetryTime();
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Service.prototype.setMaxOperationRetryTime = function (time) {
	        args.validate('setMaxOperationRetryTime', [args.nonNegativeNumberSpec()], arguments);
	        this.authWrapper_.setMaxOperationRetryTime(time);
	    };
	    Object.defineProperty(Service.prototype, "app", {
	        get: function get() {
	            return this.app_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(Service.prototype, "INTERNAL", {
	        get: function get() {
	            return this.internals_;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    return Service;
	}();
	exports.Service = Service;
	/**
	 * @struct
	 */

	var ServiceInternals = /** @class */function () {
	    function ServiceInternals(service) {
	        this.service_ = service;
	    }
	    /**
	     * Called when the associated app is deleted.
	     * @see {!fbs.AuthWrapper.prototype.deleteApp}
	     */
	    ServiceInternals.prototype.delete = function () {
	        this.service_.authWrapper_.deleteApp();
	        return fbsPromiseImpl.resolve(undefined);
	    };
	    return ServiceInternals;
	}();
	exports.ServiceInternals = ServiceInternals;
	//# sourceMappingURL=service.js.map


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.AuthWrapper = undefined;

	var _constants = __webpack_require__(114);

	var constants = _interopRequireWildcard(_constants);

	var _error2 = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error2);

	var _failrequest = __webpack_require__(140);

	var _location = __webpack_require__(126);

	var _promise_external = __webpack_require__(119);

	var promiseimpl = _interopRequireWildcard(_promise_external);

	var _requestmap = __webpack_require__(141);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @param app If null, getAuthToken always resolves with null.
	 * @param service The storage service associated with this auth wrapper.
	 *     Untyped to avoid circular type dependencies.
	 * @struct
	 */
	var AuthWrapper = /** @class */function () {
	    function AuthWrapper(app, maker, requestMaker, service, pool) {
	        this.bucket_ = null;
	        this.deleted_ = false;
	        this.app_ = app;
	        if (this.app_ !== null) {
	            var options = this.app_.options;
	            if (type.isDef(options)) {
	                this.bucket_ = AuthWrapper.extractBucket_(options);
	            }
	        }
	        this.storageRefMaker_ = maker;
	        this.requestMaker_ = requestMaker;
	        this.pool_ = pool;
	        this.service_ = service;
	        this.maxOperationRetryTime_ = constants.defaultMaxOperationRetryTime;
	        this.maxUploadRetryTime_ = constants.defaultMaxUploadRetryTime;
	        this.requestMap_ = new _requestmap.RequestMap();
	    }
	    AuthWrapper.extractBucket_ = function (config) {
	        var bucketString = config[constants.configOption] || null;
	        if (bucketString == null) {
	            return null;
	        }
	        var loc = _location.Location.makeFromBucketSpec(bucketString);
	        return loc.bucket;
	    };
	    AuthWrapper.prototype.getAuthToken = function () {
	        // TODO(andysoto): remove ifDef checks after firebase-app implements stubs
	        // (b/28673818).
	        if (this.app_ !== null && type.isDef(this.app_.INTERNAL) && type.isDef(this.app_.INTERNAL.getToken)) {
	            return this.app_.INTERNAL.getToken().then(function (response) {
	                if (response !== null) {
	                    return response.accessToken;
	                } else {
	                    return null;
	                }
	            }, function (_error) {
	                return null;
	            });
	        } else {
	            return promiseimpl.resolve(null);
	        }
	    };
	    AuthWrapper.prototype.bucket = function () {
	        if (this.deleted_) {
	            throw errorsExports.appDeleted();
	        } else {
	            return this.bucket_;
	        }
	    };
	    /**
	     * The service associated with this auth wrapper. Untyped to avoid circular
	     * type dependencies.
	     */
	    AuthWrapper.prototype.service = function () {
	        return this.service_;
	    };
	    /**
	     * Returns a new firebaseStorage.Reference object referencing this AuthWrapper
	     * at the given Location.
	     * @param loc The Location.
	     * @return Actually a firebaseStorage.Reference, typing not allowed
	     *     because of circular dependency problems.
	     */
	    AuthWrapper.prototype.makeStorageReference = function (loc) {
	        return this.storageRefMaker_(this, loc);
	    };
	    AuthWrapper.prototype.makeRequest = function (requestInfo, authToken) {
	        if (!this.deleted_) {
	            var request = this.requestMaker_(requestInfo, authToken, this.pool_);
	            this.requestMap_.addRequest(request);
	            return request;
	        } else {
	            return new _failrequest.FailRequest(errorsExports.appDeleted());
	        }
	    };
	    /**
	     * Stop running requests and prevent more from being created.
	     */
	    AuthWrapper.prototype.deleteApp = function () {
	        this.deleted_ = true;
	        this.app_ = null;
	        this.requestMap_.clear();
	    };
	    AuthWrapper.prototype.maxUploadRetryTime = function () {
	        return this.maxUploadRetryTime_;
	    };
	    AuthWrapper.prototype.setMaxUploadRetryTime = function (time) {
	        this.maxUploadRetryTime_ = time;
	    };
	    AuthWrapper.prototype.maxOperationRetryTime = function () {
	        return this.maxOperationRetryTime_;
	    };
	    AuthWrapper.prototype.setMaxOperationRetryTime = function (time) {
	        this.maxOperationRetryTime_ = time;
	    };
	    return AuthWrapper;
	}();
	exports.AuthWrapper = AuthWrapper;
	//# sourceMappingURL=authwrapper.js.map


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.FailRequest = undefined;

	var _promise_external = __webpack_require__(119);

	var promiseimpl = _interopRequireWildcard(_promise_external);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * A request whose promise always fails.
	 * @struct
	 * @template T
	 */
	var FailRequest = /** @class */function () {
	    function FailRequest(error) {
	        this.promise_ = promiseimpl.reject(error);
	    }
	    /** @inheritDoc */
	    FailRequest.prototype.getPromise = function () {
	        return this.promise_;
	    };
	    /** @inheritDoc */
	    FailRequest.prototype.cancel = function (appDelete) {
	        if (appDelete === void 0) {
	            appDelete = false;
	        }
	    };
	    return FailRequest;
	}();
	exports.FailRequest = FailRequest;
	//# sourceMappingURL=failrequest.js.map


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RequestMap = undefined;

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	var _constants = __webpack_require__(114);

	var constants = _interopRequireWildcard(_constants);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @struct
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	var RequestMap = /** @class */function () {
	    function RequestMap() {
	        this.map_ = {};
	        this.id_ = constants.minSafeInteger;
	    }
	    /**
	     * Registers the given request with this map.
	     * The request is unregistered when it completes.
	     * @param r The request to register.
	     */
	    RequestMap.prototype.addRequest = function (r) {
	        var id = this.id_;
	        this.id_++;
	        this.map_[id] = r;
	        var self = this;
	        function unmap() {
	            delete self.map_[id];
	        }
	        r.getPromise().then(unmap, unmap);
	    };
	    /**
	     * Cancels all registered requests.
	     */
	    RequestMap.prototype.clear = function () {
	        object.forEach(this.map_, function (key, val) {
	            if (val) {
	                val.cancel(true);
	            }
	        });
	        this.map_ = {};
	    };
	    return RequestMap;
	}();
	exports.RequestMap = RequestMap;
	//# sourceMappingURL=requestmap.js.map


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RequestEndStatus = undefined;
	exports.addAuthHeader_ = addAuthHeader_;
	exports.addVersionHeader_ = addVersionHeader_;
	exports.makeRequest = makeRequest;

	var _array = __webpack_require__(132);

	var array = _interopRequireWildcard(_array);

	var _backoff = __webpack_require__(143);

	var backoff = _interopRequireWildcard(_backoff);

	var _error = __webpack_require__(113);

	var errorsExports = _interopRequireWildcard(_error);

	var _object = __webpack_require__(118);

	var object = _interopRequireWildcard(_object);

	var _promise_external = __webpack_require__(119);

	var promiseimpl = _interopRequireWildcard(_promise_external);

	var _type = __webpack_require__(120);

	var type = _interopRequireWildcard(_type);

	var _url = __webpack_require__(128);

	var UrlUtils = _interopRequireWildcard(_url);

	var _xhrio = __webpack_require__(121);

	var XhrIoExports = _interopRequireWildcard(_xhrio);

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	/**
	 * @struct
	 * @template T
	 */
	var NetworkRequest = /** @class */function () {
	    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {
	        this.pendingXhr_ = null;
	        this.backoffId_ = null;
	        this.resolve_ = null;
	        this.reject_ = null;
	        this.canceled_ = false;
	        this.appDelete_ = false;
	        this.url_ = url;
	        this.method_ = method;
	        this.headers_ = headers;
	        this.body_ = body;
	        this.successCodes_ = successCodes.slice();
	        this.additionalRetryCodes_ = additionalRetryCodes.slice();
	        this.callback_ = callback;
	        this.errorCallback_ = errorCallback;
	        this.progressCallback_ = progressCallback;
	        this.timeout_ = timeout;
	        this.pool_ = pool;
	        var self = this;
	        this.promise_ = promiseimpl.make(function (resolve, reject) {
	            self.resolve_ = resolve;
	            self.reject_ = reject;
	            self.start_();
	        });
	    }
	    /**
	     * Actually starts the retry loop.
	     */
	    NetworkRequest.prototype.start_ = function () {
	        var self = this;
	        function doTheRequest(backoffCallback, canceled) {
	            if (canceled) {
	                backoffCallback(false, new RequestEndStatus(false, null, true));
	                return;
	            }
	            var xhr = self.pool_.createXhrIo();
	            self.pendingXhr_ = xhr;
	            function progressListener(progressEvent) {
	                var loaded = progressEvent.loaded;
	                var total = progressEvent.lengthComputable ? progressEvent.total : -1;
	                if (self.progressCallback_ !== null) {
	                    self.progressCallback_(loaded, total);
	                }
	            }
	            if (self.progressCallback_ !== null) {
	                xhr.addUploadProgressListener(progressListener);
	            }
	            xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {
	                if (self.progressCallback_ !== null) {
	                    xhr.removeUploadProgressListener(progressListener);
	                }
	                self.pendingXhr_ = null;
	                xhr = xhr;
	                var hitServer = xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;
	                var status = xhr.getStatus();
	                if (!hitServer || self.isRetryStatusCode_(status)) {
	                    var wasCanceled = xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;
	                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));
	                    return;
	                }
	                var successCode = array.contains(self.successCodes_, status);
	                backoffCallback(true, new RequestEndStatus(successCode, xhr));
	            });
	        }
	        /**
	         * @param requestWentThrough True if the request eventually went
	         *     through, false if it hit the retry limit or was canceled.
	         */
	        function backoffDone(requestWentThrough, status) {
	            var resolve = self.resolve_;
	            var reject = self.reject_;
	            var xhr = status.xhr;
	            if (status.wasSuccessCode) {
	                try {
	                    var result = self.callback_(xhr, xhr.getResponseText());
	                    if (type.isJustDef(result)) {
	                        resolve(result);
	                    } else {
	                        resolve();
	                    }
	                } catch (e) {
	                    reject(e);
	                }
	            } else {
	                if (xhr !== null) {
	                    var err = errorsExports.unknown();
	                    err.setServerResponseProp(xhr.getResponseText());
	                    if (self.errorCallback_) {
	                        reject(self.errorCallback_(xhr, err));
	                    } else {
	                        reject(err);
	                    }
	                } else {
	                    if (status.canceled) {
	                        var err = self.appDelete_ ? errorsExports.appDeleted() : errorsExports.canceled();
	                        reject(err);
	                    } else {
	                        var err = errorsExports.retryLimitExceeded();
	                        reject(err);
	                    }
	                }
	            }
	        }
	        if (this.canceled_) {
	            backoffDone(false, new RequestEndStatus(false, null, true));
	        } else {
	            this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);
	        }
	    };
	    /** @inheritDoc */
	    NetworkRequest.prototype.getPromise = function () {
	        return this.promise_;
	    };
	    /** @inheritDoc */
	    NetworkRequest.prototype.cancel = function (appDelete) {
	        this.canceled_ = true;
	        this.appDelete_ = appDelete || false;
	        if (this.backoffId_ !== null) {
	            backoff.stop(this.backoffId_);
	        }
	        if (this.pendingXhr_ !== null) {
	            this.pendingXhr_.abort();
	        }
	    };
	    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {
	        // The codes for which to retry came from this page:
	        // https://cloud.google.com/storage/docs/exponential-backoff
	        var isFiveHundredCode = status >= 500 && status < 600;
	        var extraRetryCodes = [
	        // Request Timeout: web server didn't receive full request in time.
	        408,
	        // Too Many Requests: you're getting rate-limited, basically.
	        429];
	        var isExtraRetryCode = array.contains(extraRetryCodes, status);
	        var isRequestSpecificRetryCode = array.contains(this.additionalRetryCodes_, status);
	        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;
	    };
	    return NetworkRequest;
	}();
	/**
	 * A collection of information about the result of a network request.
	 * @param opt_canceled Defaults to false.
	 * @struct
	 */
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @fileoverview Defines methods used to actually send HTTP requests from
	 * abstract representations.
	 */
	var RequestEndStatus = /** @class */function () {
	    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {
	        this.wasSuccessCode = wasSuccessCode;
	        this.xhr = xhr;
	        this.canceled = !!opt_canceled;
	    }
	    return RequestEndStatus;
	}();
	exports.RequestEndStatus = RequestEndStatus;
	function addAuthHeader_(headers, authToken) {
	    if (authToken !== null && authToken.length > 0) {
	        headers['Authorization'] = 'Firebase ' + authToken;
	    }
	}
	function addVersionHeader_(headers) {
	    var number = typeof _app2.default !== 'undefined' ? _app2.default.SDK_VERSION : 'AppManager';
	    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;
	}
	/**
	 * @template T
	 */
	function makeRequest(requestInfo, authToken, pool) {
	    var queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);
	    var url = requestInfo.url + queryPart;
	    var headers = object.clone(requestInfo.headers);
	    addAuthHeader_(headers, authToken);
	    addVersionHeader_(headers);
	    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);
	}
	//# sourceMappingURL=request.js.map


/***/ }),
/* 143 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.start = start;
	exports.stop = stop;
	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	/**
	 * @param f May be invoked
	 *     before the function returns.
	 * @param callback Get all the arguments passed to the function
	 *     passed to f, including the initial boolean.
	 */
	function start(f, callback, timeout) {
	    // TODO(andysoto): make this code cleaner (probably refactor into an actual
	    // type instead of a bunch of functions with state shared in the closure)
	    var waitSeconds = 1;
	    // Would type this as "number" but that doesn't work for Node so ¯\_(ツ)_/¯
	    var timeoutId = null;
	    var hitTimeout = false;
	    var cancelState = 0;
	    function canceled() {
	        return cancelState === 2;
	    }
	    var triggeredCallback = false;
	    function triggerCallback() {
	        if (!triggeredCallback) {
	            triggeredCallback = true;
	            callback.apply(null, arguments);
	        }
	    }
	    function callWithDelay(millis) {
	        timeoutId = setTimeout(function () {
	            timeoutId = null;
	            f(handler, canceled());
	        }, millis);
	    }
	    function handler(success) {
	        var var_args = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            var_args[_i - 1] = arguments[_i];
	        }
	        if (triggeredCallback) {
	            return;
	        }
	        if (success) {
	            triggerCallback.apply(null, arguments);
	            return;
	        }
	        var mustStop = canceled() || hitTimeout;
	        if (mustStop) {
	            triggerCallback.apply(null, arguments);
	            return;
	        }
	        if (waitSeconds < 64) {
	            /* TODO(andysoto): don't back off so quickly if we know we're offline. */
	            waitSeconds *= 2;
	        }
	        var waitMillis;
	        if (cancelState === 1) {
	            cancelState = 2;
	            waitMillis = 0;
	        } else {
	            waitMillis = (waitSeconds + Math.random()) * 1000;
	        }
	        callWithDelay(waitMillis);
	    }
	    var stopped = false;
	    function stop(wasTimeout) {
	        if (stopped) {
	            return;
	        }
	        stopped = true;
	        if (triggeredCallback) {
	            return;
	        }
	        if (timeoutId !== null) {
	            if (!wasTimeout) {
	                cancelState = 2;
	            }
	            clearTimeout(timeoutId);
	            callWithDelay(0);
	        } else {
	            if (!wasTimeout) {
	                cancelState = 1;
	            }
	        }
	    }
	    callWithDelay(0);
	    setTimeout(function () {
	        hitTimeout = true;
	        stop(true);
	    }, timeout);
	    return stop;
	}
	/**
	 * Stops the retry loop from repeating.
	 * If the function is currently "in between" retries, it is invoked immediately
	 * with the second parameter as "true". Otherwise, it will be invoked once more
	 * after the current invocation finishes iff the current invocation would have
	 * triggered another retry.
	 */
	function stop(id) {
	    id(false);
	}
	//# sourceMappingURL=backoff.js.map


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.registerMessaging = registerMessaging;

	var _windowController = __webpack_require__(145);

	var _windowController2 = _interopRequireDefault(_windowController);

	var _swController = __webpack_require__(154);

	var _swController2 = _interopRequireDefault(_swController);

	var _app = __webpack_require__(4);

	var _app2 = _interopRequireDefault(_app);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function registerMessaging(instance) {
	    var messagingName = 'messaging';
	    var factoryMethod = function factoryMethod(app) {
	        if (self && 'ServiceWorkerGlobalScope' in self) {
	            return new _swController2.default(app);
	        }
	        // Assume we are in the window context.
	        return new _windowController2.default(app);
	    };
	    var namespaceExports = {
	        // no-inline
	        Messaging: _windowController2.default
	    };
	    instance.INTERNAL.registerService(messagingName, factoryMethod, namespaceExports);
	}
	registerMessaging(_app2.default);
	//# sourceMappingURL=messaging.js.map


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _controllerInterface = __webpack_require__(146);

	var _controllerInterface2 = _interopRequireDefault(_controllerInterface);

	var _errors = __webpack_require__(147);

	var _errors2 = _interopRequireDefault(_errors);

	var _workerPageMessage = __webpack_require__(152);

	var _workerPageMessage2 = _interopRequireDefault(_workerPageMessage);

	var _defaultSw = __webpack_require__(153);

	var _defaultSw2 = _interopRequireDefault(_defaultSw);

	var _notificationPermission = __webpack_require__(151);

	var _notificationPermission2 = _interopRequireDefault(_notificationPermission);

	var _subscribe = __webpack_require__(7);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var WindowController = /** @class */function (_super) {
	    __extends(WindowController, _super);
	    /**
	     * A service that provides a MessagingService instance.
	     * @param {!firebase.app.App} app
	     */
	    function WindowController(app) {
	        var _this = _super.call(this, app) || this;
	        /**
	         * @private
	         * @type {ServiceWorkerRegistration}
	         */
	        _this.registrationToUse_;
	        /**
	         * @private
	         * @type {Promise}
	         */
	        _this.manifestCheckPromise_;
	        /**
	         * @private
	         * @type {firebase.Observer}
	         */
	        _this.messageObserver_ = null;
	        /**
	         * @private {!firebase.Subscribe} The subscribe function to the onMessage
	         * observer.
	         */
	        _this.onMessage_ = (0, _subscribe.createSubscribe)(function (observer) {
	            _this.messageObserver_ = observer;
	        });
	        /**
	         * @private
	         * @type {firebase.Observer}
	         */
	        _this.tokenRefreshObserver_ = null;
	        _this.onTokenRefresh_ = (0, _subscribe.createSubscribe)(function (observer) {
	            _this.tokenRefreshObserver_ = observer;
	        });
	        _this.setupSWMessageListener_();
	        return _this;
	    }
	    /**
	     * This method returns an FCM token if it can be generated.
	     * The return promise will reject if the browser doesn't support
	     * FCM, if permission is denied for notifications or it's not
	     * possible to generate a token.
	     * @export
	     * @return {Promise<string> | Promise<null>} Returns a promise the
	     * resolves to an FCM token or null if permission isn't granted.
	     */
	    WindowController.prototype.getToken = function () {
	        var _this = this;
	        // Check that the required API's are available
	        if (!this.isSupported_()) {
	            return Promise.reject(this.errorFactory_.create(_errors2.default.codes.UNSUPPORTED_BROWSER));
	        }
	        return this.manifestCheck_().then(function () {
	            return _super.prototype.getToken.call(_this);
	        });
	    };
	    /**
	     * The method checks that a manifest is defined and has the correct GCM
	     * sender ID.
	     * @private
	     * @return {Promise} Returns a promise that resolves if the manifest matches
	     * our required sender ID
	     */
	    WindowController.prototype.manifestCheck_ = function () {
	        var _this = this;
	        if (this.manifestCheckPromise_) {
	            return this.manifestCheckPromise_;
	        }
	        var manifestTag = document.querySelector('link[rel="manifest"]');
	        if (!manifestTag) {
	            this.manifestCheckPromise_ = Promise.resolve();
	        } else {
	            this.manifestCheckPromise_ = fetch(manifestTag.href).then(function (response) {
	                return response.json();
	            }).catch(function () {
	                // If the download or parsing fails allow check.
	                // We only want to error if we KNOW that the gcm_sender_id is incorrect.
	                return Promise.resolve();
	            }).then(function (manifestContent) {
	                if (!manifestContent) {
	                    return;
	                }
	                if (!manifestContent['gcm_sender_id']) {
	                    return;
	                }
	                if (manifestContent['gcm_sender_id'] !== '103953800507') {
	                    throw _this.errorFactory_.create(_errors2.default.codes.INCORRECT_GCM_SENDER_ID);
	                }
	            });
	        }
	        return this.manifestCheckPromise_;
	    };
	    /**
	     * Request permission if it is not currently granted
	     * @export
	     * @returns {Promise} Resolves if the permission was granted, otherwise
	     * rejects
	     */
	    WindowController.prototype.requestPermission = function () {
	        var _this = this;
	        if (Notification.permission === _notificationPermission2.default.granted) {
	            return Promise.resolve();
	        }
	        return new Promise(function (resolve, reject) {
	            var managePermissionResult = function managePermissionResult(result) {
	                if (result === _notificationPermission2.default.granted) {
	                    return resolve();
	                } else if (result === _notificationPermission2.default.denied) {
	                    return reject(_this.errorFactory_.create(_errors2.default.codes.PERMISSION_BLOCKED));
	                } else {
	                    return reject(_this.errorFactory_.create(_errors2.default.codes.PERMISSION_DEFAULT));
	                }
	            };
	            // The Notification.requestPermission API was changed to
	            // return a promise so now have to handle both in case
	            // browsers stop support callbacks for promised version
	            var permissionPromise = Notification.requestPermission(function (result) {
	                if (permissionPromise) {
	                    // Let the promise manage this
	                    return;
	                }
	                managePermissionResult(result);
	            });
	            if (permissionPromise) {
	                // Prefer the promise version as it's the future API.
	                permissionPromise.then(managePermissionResult);
	            }
	        });
	    };
	    /**
	     * This method allows a developer to override the default service worker and
	     * instead use a custom service worker.
	     * @export
	     * @param {!ServiceWorkerRegistration} registration The service worker
	     * registration that should be used to receive the push messages.
	     */
	    WindowController.prototype.useServiceWorker = function (registration) {
	        if (!(registration instanceof ServiceWorkerRegistration)) {
	            throw this.errorFactory_.create(_errors2.default.codes.SW_REGISTRATION_EXPECTED);
	        }
	        if (typeof this.registrationToUse_ !== 'undefined') {
	            throw this.errorFactory_.create(_errors2.default.codes.USE_SW_BEFORE_GET_TOKEN);
	        }
	        this.registrationToUse_ = registration;
	    };
	    /**
	     * @export
	     * @param {!firebase.Observer|function(*)} nextOrObserver An observer object
	     * or a function triggered on message.
	     * @param {function(!Error)=} optError Optional A function triggered on
	     * message error.
	     * @param {function()=} optCompleted Optional function triggered when the
	     * observer is removed.
	     * @return {!function()} The unsubscribe function for the observer.
	     */
	    WindowController.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {
	        return this.onMessage_(nextOrObserver, optError, optCompleted);
	    };
	    /**
	     * @export
	     * @param {!firebase.Observer|function()} nextOrObserver An observer object
	     * or a function triggered on token refresh.
	     * @param {function(!Error)=} optError Optional A function
	     * triggered on token refresh error.
	     * @param {function()=} optCompleted Optional function triggered when the
	     * observer is removed.
	     * @return {!function()} The unsubscribe function for the observer.
	     */
	    WindowController.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {
	        return this.onTokenRefresh_(nextOrObserver, optError, optCompleted);
	    };
	    /**
	     * Given a registration, wait for the service worker it relates to
	     * become activer
	     * @private
	     * @param  {ServiceWorkerRegistration} registration Registration to wait
	     * for service worker to become active
	     * @return {Promise<!ServiceWorkerRegistration>} Wait for service worker
	     * registration to become active
	     */
	    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {
	        var _this = this;
	        var serviceWorker = registration.installing || registration.waiting || registration.active;
	        return new Promise(function (resolve, reject) {
	            if (!serviceWorker) {
	                // This is a rare scenario but has occured in firefox
	                reject(_this.errorFactory_.create(_errors2.default.codes.NO_SW_IN_REG));
	                return;
	            }
	            // Because the Promise function is called on next tick there is a
	            // small chance that the worker became active or redundant already.
	            if (serviceWorker.state === 'activated') {
	                resolve(registration);
	                return;
	            }
	            if (serviceWorker.state === 'redundant') {
	                reject(_this.errorFactory_.create(_errors2.default.codes.SW_REG_REDUNDANT));
	                return;
	            }
	            var stateChangeListener = function stateChangeListener() {
	                if (serviceWorker.state === 'activated') {
	                    resolve(registration);
	                } else if (serviceWorker.state === 'redundant') {
	                    reject(_this.errorFactory_.create(_errors2.default.codes.SW_REG_REDUNDANT));
	                } else {
	                    // Return early and wait to next state change
	                    return;
	                }
	                serviceWorker.removeEventListener('statechange', stateChangeListener);
	            };
	            serviceWorker.addEventListener('statechange', stateChangeListener);
	        });
	    };
	    /**
	     * This will regiater the default service worker and return the registration
	     * @private
	     * @return {Promise<!ServiceWorkerRegistration>} The service worker
	     * registration to be used for the push service.
	     */
	    WindowController.prototype.getSWRegistration_ = function () {
	        var _this = this;
	        if (this.registrationToUse_) {
	            return this.waitForRegistrationToActivate_(this.registrationToUse_);
	        }
	        // Make the registration null so we know useServiceWorker will not
	        // use a new service worker as registrationToUse_ is no longer undefined
	        this.registrationToUse_ = null;
	        return navigator.serviceWorker.register(_defaultSw2.default.path, {
	            scope: _defaultSw2.default.scope
	        }).catch(function (err) {
	            throw _this.errorFactory_.create(_errors2.default.codes.FAILED_DEFAULT_REGISTRATION, {
	                browserErrorMessage: err.message
	            });
	        }).then(function (registration) {
	            return _this.waitForRegistrationToActivate_(registration).then(function () {
	                _this.registrationToUse_ = registration;
	                // We update after activation due to an issue with Firefox v49 where
	                // a race condition occassionally causes the service work to not
	                // install
	                registration.update();
	                return registration;
	            });
	        });
	    };
	    /**
	     * This method will set up a message listener to handle
	     * events from the service worker that should trigger
	     * events in the page.
	     *
	     * @private
	     */
	    WindowController.prototype.setupSWMessageListener_ = function () {
	        var _this = this;
	        if (!('serviceWorker' in navigator)) {
	            return;
	        }
	        navigator.serviceWorker.addEventListener('message', function (event) {
	            if (!event.data || !event.data[_workerPageMessage2.default.PARAMS.TYPE_OF_MSG]) {
	                // Not a message from FCM
	                return;
	            }
	            var workerPageMessage = event.data;
	            switch (workerPageMessage[_workerPageMessage2.default.PARAMS.TYPE_OF_MSG]) {
	                case _workerPageMessage2.default.TYPES_OF_MSG.PUSH_MSG_RECEIVED:
	                case _workerPageMessage2.default.TYPES_OF_MSG.NOTIFICATION_CLICKED:
	                    var pushMessage = workerPageMessage[_workerPageMessage2.default.PARAMS.DATA];
	                    _this.messageObserver_.next(pushMessage);
	                    break;
	                default:
	                    // Noop.
	                    break;
	            }
	        }, false);
	    };
	    /**
	     * Checks to see if the required API's are valid or not.
	     * @private
	     * @return {boolean} Returns true if the desired APIs are available.
	     */
	    WindowController.prototype.isSupported_ = function () {
	        return 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');
	    };
	    return WindowController;
	}(_controllerInterface2.default);
	exports.default = WindowController;
	module.exports = exports['default'];
	//# sourceMappingURL=window-controller.js.map


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _errors = __webpack_require__(14);

	var _errors2 = __webpack_require__(147);

	var _errors3 = _interopRequireDefault(_errors2);

	var _tokenManager = __webpack_require__(148);

	var _tokenManager2 = _interopRequireDefault(_tokenManager);

	var _notificationPermission = __webpack_require__(151);

	var _notificationPermission2 = _interopRequireDefault(_notificationPermission);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SENDER_ID_OPTION_NAME = 'messagingSenderId';
	var ControllerInterface = /** @class */function () {
	    /**
	     * An interface of the Messaging Service API
	     * @param {!firebase.app.App} app
	     */
	    function ControllerInterface(app) {
	        var _this = this;
	        this.errorFactory_ = new _errors.ErrorFactory('messaging', 'Messaging', _errors3.default.map);
	        if (!app.options[SENDER_ID_OPTION_NAME] || typeof app.options[SENDER_ID_OPTION_NAME] !== 'string') {
	            throw this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID);
	        }
	        this.messagingSenderId_ = app.options[SENDER_ID_OPTION_NAME];
	        this.tokenManager_ = new _tokenManager2.default();
	        this.app = app;
	        this.INTERNAL = {};
	        this.INTERNAL.delete = function () {
	            return _this.delete;
	        };
	    }
	    /**
	     * @export
	     * @return {Promise<string> | Promise<null>} Returns a promise that
	     * resolves to an FCM token.
	     */
	    ControllerInterface.prototype.getToken = function () {
	        var _this = this;
	        // Check with permissions
	        var currentPermission = this.getNotificationPermission_();
	        if (currentPermission !== _notificationPermission2.default.granted) {
	            if (currentPermission === _notificationPermission2.default.denied) {
	                return Promise.reject(this.errorFactory_.create(_errors3.default.codes.NOTIFICATIONS_BLOCKED));
	            }
	            // We must wait for permission to be granted
	            return Promise.resolve(null);
	        }
	        return this.getSWRegistration_().then(function (registration) {
	            return _this.tokenManager_.getSavedToken(_this.messagingSenderId_, registration).then(function (token) {
	                if (token) {
	                    return token;
	                }
	                return _this.tokenManager_.createToken(_this.messagingSenderId_, registration);
	            });
	        });
	    };
	    /**
	     * This method deletes tokens that the token manager looks after and then
	     * unregisters the push subscription if it exists.
	     * @export
	     * @param {string} token
	     * @return {Promise<void>}
	     */
	    ControllerInterface.prototype.deleteToken = function (token) {
	        var _this = this;
	        return this.tokenManager_.deleteToken(token).then(function () {
	            return _this.getSWRegistration_().then(function (registration) {
	                if (registration) {
	                    return registration.pushManager.getSubscription();
	                }
	            }).then(function (subscription) {
	                if (subscription) {
	                    return subscription.unsubscribe();
	                }
	            });
	        });
	    };
	    ControllerInterface.prototype.getSWRegistration_ = function () {
	        throw this.errorFactory_.create(_errors3.default.codes.SHOULD_BE_INHERITED);
	    };
	    //
	    // The following methods should only be available in the window.
	    //
	    ControllerInterface.prototype.requestPermission = function () {
	        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);
	    };
	    /**
	     * @export
	     * @param {!ServiceWorkerRegistration} registration
	     */
	    ControllerInterface.prototype.useServiceWorker = function (registration) {
	        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);
	    };
	    /**
	     * @export
	     * @param {!firebase.Observer|function(*)} nextOrObserver
	     * @param {function(!Error)=} optError
	     * @param {function()=} optCompleted
	     * @return {!function()}
	     */
	    ControllerInterface.prototype.onMessage = function (nextOrObserver, optError, optCompleted) {
	        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);
	    };
	    /**
	     * @export
	     * @param {!firebase.Observer|function()} nextOrObserver An observer object
	     * or a function triggered on token refresh.
	     * @param {function(!Error)=} optError Optional A function
	     * triggered on token refresh error.
	     * @param {function()=} optCompleted Optional function triggered when the
	     * observer is removed.
	     * @return {!function()} The unsubscribe function for the observer.
	     */
	    ControllerInterface.prototype.onTokenRefresh = function (nextOrObserver, optError, optCompleted) {
	        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_WINDOW);
	    };
	    //
	    // The following methods are used by the service worker only.
	    //
	    /**
	     * @export
	     * @param {function(Object)} callback
	     */
	    ControllerInterface.prototype.setBackgroundMessageHandler = function (callback) {
	        throw this.errorFactory_.create(_errors3.default.codes.AVAILABLE_IN_SW);
	    };
	    //
	    // The following methods are used by the service themselves and not exposed
	    // publicly or not expected to be used by developers.
	    //
	    /**
	     * This method is required to adhere to the Firebase interface.
	     * It closes any currently open indexdb database connections.
	     */
	    ControllerInterface.prototype.delete = function () {
	        this.tokenManager_.closeDatabase();
	    };
	    /**
	     * Returns the current Notification Permission state.
	     * @private
	     * @return {string} The currenct permission state.
	     */
	    ControllerInterface.prototype.getNotificationPermission_ = function () {
	        return Notification.permission;
	    };
	    /**
	     * @protected
	     * @returns {TokenManager}
	     */
	    ControllerInterface.prototype.getTokenManager = function () {
	        return this.tokenManager_;
	    };
	    return ControllerInterface;
	}();
	exports.default = ControllerInterface;
	module.exports = exports['default'];
	//# sourceMappingURL=controller-interface.js.map


/***/ }),
/* 147 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var CODES = {
	    AVAILABLE_IN_WINDOW: 'only-available-in-window',
	    AVAILABLE_IN_SW: 'only-available-in-sw',
	    SHOULD_BE_INHERITED: 'should-be-overriden',
	    BAD_SENDER_ID: 'bad-sender-id',
	    INCORRECT_GCM_SENDER_ID: 'incorrect-gcm-sender-id',
	    PERMISSION_DEFAULT: 'permission-default',
	    PERMISSION_BLOCKED: 'permission-blocked',
	    UNSUPPORTED_BROWSER: 'unsupported-browser',
	    NOTIFICATIONS_BLOCKED: 'notifications-blocked',
	    FAILED_DEFAULT_REGISTRATION: 'failed-serviceworker-registration',
	    SW_REGISTRATION_EXPECTED: 'sw-registration-expected',
	    GET_SUBSCRIPTION_FAILED: 'get-subscription-failed',
	    INVALID_SAVED_TOKEN: 'invalid-saved-token',
	    SW_REG_REDUNDANT: 'sw-reg-redundant',
	    TOKEN_SUBSCRIBE_FAILED: 'token-subscribe-failed',
	    TOKEN_SUBSCRIBE_NO_TOKEN: 'token-subscribe-no-token',
	    TOKEN_SUBSCRIBE_NO_PUSH_SET: 'token-subscribe-no-push-set',
	    USE_SW_BEFORE_GET_TOKEN: 'use-sw-before-get-token',
	    INVALID_DELETE_TOKEN: 'invalid-delete-token',
	    DELETE_TOKEN_NOT_FOUND: 'delete-token-not-found',
	    DELETE_SCOPE_NOT_FOUND: 'delete-scope-not-found',
	    BG_HANDLER_FUNCTION_EXPECTED: 'bg-handler-function-expected',
	    NO_WINDOW_CLIENT_TO_MSG: 'no-window-client-to-msg',
	    UNABLE_TO_RESUBSCRIBE: 'unable-to-resubscribe',
	    NO_FCM_TOKEN_FOR_RESUBSCRIBE: 'no-fcm-token-for-resubscribe',
	    FAILED_TO_DELETE_TOKEN: 'failed-to-delete-token',
	    NO_SW_IN_REG: 'no-sw-in-reg',
	    BAD_SCOPE: 'bad-scope',
	    BAD_VAPID_KEY: 'bad-vapid-key',
	    BAD_SUBSCRIPTION: 'bad-subscription',
	    BAD_TOKEN: 'bad-token',
	    BAD_PUSH_SET: 'bad-push-set',
	    FAILED_DELETE_VAPID_KEY: 'failed-delete-vapid-key'
	};
	var ERROR_MAP = (_a = {}, _a[CODES.AVAILABLE_IN_WINDOW] = 'This method is available in a Window context.', _a[CODES.AVAILABLE_IN_SW] = 'This method is available in a service worker ' + 'context.', _a[CODES.SHOULD_BE_INHERITED] = 'This method should be overriden by ' + 'extended classes.', _a[CODES.BAD_SENDER_ID] = "Please ensure that 'messagingSenderId' is set " + 'correctly in the options passed into firebase.initializeApp().', _a[CODES.PERMISSION_DEFAULT] = 'The required permissions were not granted and ' + 'dismissed instead.', _a[CODES.PERMISSION_BLOCKED] = 'The required permissions were not granted and ' + 'blocked instead.', _a[CODES.UNSUPPORTED_BROWSER] = "This browser doesn't support the API's " + 'required to use the firebase SDK.', _a[CODES.NOTIFICATIONS_BLOCKED] = 'Notifications have been blocked.', _a[CODES.FAILED_DEFAULT_REGISTRATION] = 'We are unable to register the ' + 'default service worker. {$browserErrorMessage}', _a[CODES.SW_REGISTRATION_EXPECTED] = 'A service worker registration was the ' + 'expected input.', _a[CODES.GET_SUBSCRIPTION_FAILED] = 'There was an error when trying to get ' + 'any existing Push Subscriptions.', _a[CODES.INVALID_SAVED_TOKEN] = 'Unable to access details of the saved token.', _a[CODES.SW_REG_REDUNDANT] = 'The service worker being used for push was made ' + 'redundant.', _a[CODES.TOKEN_SUBSCRIBE_FAILED] = 'A problem occured while subscribing the ' + 'user to FCM: {$message}', _a[CODES.TOKEN_SUBSCRIBE_NO_TOKEN] = 'FCM returned no token when subscribing ' + 'the user to push.', _a[CODES.TOKEN_SUBSCRIBE_NO_PUSH_SET] = 'FCM returned an invalid response ' + 'when getting an FCM token.', _a[CODES.USE_SW_BEFORE_GET_TOKEN] = 'You must call useServiceWorker() before ' + 'calling getToken() to ensure your service worker is used.', _a[CODES.INVALID_DELETE_TOKEN] = 'You must pass a valid token into ' + 'deleteToken(), i.e. the token from getToken().', _a[CODES.DELETE_TOKEN_NOT_FOUND] = 'The deletion attempt for token could not ' + 'be performed as the token was not found.', _a[CODES.DELETE_SCOPE_NOT_FOUND] = 'The deletion attempt for service worker ' + 'scope could not be performed as the scope was not found.', _a[CODES.BG_HANDLER_FUNCTION_EXPECTED] = 'The input to ' + 'setBackgroundMessageHandler() must be a function.', _a[CODES.NO_WINDOW_CLIENT_TO_MSG] = 'An attempt was made to message a ' + 'non-existant window client.', _a[CODES.UNABLE_TO_RESUBSCRIBE] = 'There was an error while re-subscribing ' + 'the FCM token for push messaging. Will have to resubscribe the ' + 'user on next visit. {$message}', _a[CODES.NO_FCM_TOKEN_FOR_RESUBSCRIBE] = 'Could not find an FCM token ' + 'and as a result, unable to resubscribe. Will have to resubscribe the ' + 'user on next visit.', _a[CODES.FAILED_TO_DELETE_TOKEN] = 'Unable to delete the currently saved token.', _a[CODES.NO_SW_IN_REG] = 'Even though the service worker registration was ' + 'successful, there was a problem accessing the service worker itself.', _a[CODES.INCORRECT_GCM_SENDER_ID] = "Please change your web app manifest's " + "'gcm_sender_id' value to '103953800507' to use Firebase messaging.", _a[CODES.BAD_SCOPE] = 'The service worker scope must be a string with at ' + 'least one character.', _a[CODES.BAD_VAPID_KEY] = 'The public VAPID key must be a string with at ' + 'least one character.', _a[CODES.BAD_SUBSCRIPTION] = 'The subscription must be a valid ' + 'PushSubscription.', _a[CODES.BAD_TOKEN] = 'The FCM Token used for storage / lookup was not ' + 'a valid token string.', _a[CODES.BAD_PUSH_SET] = 'The FCM push set used for storage / lookup was not ' + 'not a valid push set string.', _a[CODES.FAILED_DELETE_VAPID_KEY] = 'The VAPID key could not be deleted.', _a);
	exports.default = {
	    codes: CODES,
	    map: ERROR_MAP
	};

	var _a;
	module.exports = exports['default'];
	//# sourceMappingURL=errors.js.map


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _errors = __webpack_require__(14);

	var _errors2 = __webpack_require__(147);

	var _errors3 = _interopRequireDefault(_errors2);

	var _arrayBufferToBase = __webpack_require__(149);

	var _arrayBufferToBase2 = _interopRequireDefault(_arrayBufferToBase);

	var _fcmDetails = __webpack_require__(150);

	var _fcmDetails2 = _interopRequireDefault(_fcmDetails);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FCM_TOKEN_DETAILS_DB = 'fcm_token_details_db';
	var FCM_TOKEN_OBJ_STORE = 'fcm_token_object_Store';
	var FCM_TOKEN_DETAILS_DB_VERSION = 1;
	var TokenManager = /** @class */function () {
	    function TokenManager() {
	        this.errorFactory_ = new _errors.ErrorFactory('messaging', 'Messaging', _errors3.default.map);
	        this.openDbPromise_ = null;
	    }
	    /**
	     * Get the indexedDB as a promsie.
	     * @private
	     * @return {Promise<IDBDatabase>} The IndexedDB database
	     */
	    TokenManager.prototype.openDatabase_ = function () {
	        if (this.openDbPromise_) {
	            return this.openDbPromise_;
	        }
	        this.openDbPromise_ = new Promise(function (resolve, reject) {
	            var request = indexedDB.open(FCM_TOKEN_DETAILS_DB, FCM_TOKEN_DETAILS_DB_VERSION);
	            request.onerror = function (event) {
	                reject(event.target.error);
	            };
	            request.onsuccess = function (event) {
	                resolve(event.target.result);
	            };
	            request.onupgradeneeded = function (event) {
	                var db = event.target.result;
	                var objectStore = db.createObjectStore(FCM_TOKEN_OBJ_STORE, {
	                    keyPath: 'swScope'
	                });
	                // Make sure the sender ID can be searched
	                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {
	                    unique: false
	                });
	                objectStore.createIndex('fcmToken', 'fcmToken', {
	                    unique: true
	                });
	            };
	        });
	        return this.openDbPromise_;
	    };
	    /**
	     * Close the currently open database.
	     * @return {Promise<?>} Returns the result of the promise chain.
	     */
	    TokenManager.prototype.closeDatabase = function () {
	        var _this = this;
	        if (this.openDbPromise_) {
	            return this.openDbPromise_.then(function (db) {
	                db.close();
	                _this.openDbPromise_ = null;
	            });
	        }
	        return Promise.resolve();
	    };
	    /**
	     * Given a token, this method will look up the details in indexedDB.
	     * @public
	     * @param {string} fcmToken
	     * @return {Promise<Object>} The details associated with that token.
	     */
	    TokenManager.prototype.getTokenDetailsFromToken = function (fcmToken) {
	        return this.openDatabase_().then(function (db) {
	            return new Promise(function (resolve, reject) {
	                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
	                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
	                var index = objectStore.index('fcmToken');
	                var request = index.get(fcmToken);
	                request.onerror = function (event) {
	                    reject(event.target.error);
	                };
	                request.onsuccess = function (event) {
	                    resolve(event.target.result);
	                };
	            });
	        });
	    };
	    TokenManager.prototype.getTokenDetailsFromSWScope_ = function (swScope) {
	        return this.openDatabase_().then(function (db) {
	            return new Promise(function (resolve, reject) {
	                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
	                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
	                var scopeRequest = objectStore.get(swScope);
	                scopeRequest.onerror = function (event) {
	                    reject(event.target.error);
	                };
	                scopeRequest.onsuccess = function (event) {
	                    resolve(event.target.result);
	                };
	            });
	        });
	    };
	    TokenManager.prototype.getAllTokenDetailsForSenderId_ = function (senderId) {
	        return this.openDatabase_().then(function (db) {
	            return new Promise(function (resolve, reject) {
	                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE]);
	                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
	                var senderIdTokens = [];
	                var cursorRequest = objectStore.openCursor();
	                cursorRequest.onerror = function (event) {
	                    reject(event.target.error);
	                };
	                cursorRequest.onsuccess = function (event) {
	                    var cursor = event.target.result;
	                    if (cursor) {
	                        if (cursor.value['fcmSenderId'] === senderId) {
	                            senderIdTokens.push(cursor.value);
	                        }
	                        cursor.continue();
	                    } else {
	                        resolve(senderIdTokens);
	                    }
	                };
	            });
	        });
	    };
	    /**
	     * Given a PushSubscription and messagingSenderId, get an FCM token.
	     * @public
	     * @param  {string} senderId The 'messagingSenderId' to tie the token to.
	     * @param  {PushSubscription} subscription The PushSusbcription to "federate".
	     * @param  {string=} pushSet If defined this will swap the subscription for
	     * matching FCM token.
	     * @return {Promise<!Object>} Returns the FCM token to be used in place
	     * of the PushSubscription.
	     */
	    TokenManager.prototype.subscribeToFCM = function (senderId, subscription, pushSet) {
	        var _this = this;
	        var p256dh = (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh'));
	        var auth = (0, _arrayBufferToBase2.default)(subscription['getKey']('auth'));
	        var fcmSubscribeBody = "authorized_entity=" + senderId + "&" + ("endpoint=" + subscription.endpoint + "&") + ("encryption_key=" + p256dh + "&") + ("encryption_auth=" + auth);
	        if (pushSet) {
	            fcmSubscribeBody += "&pushSet=" + pushSet;
	        }
	        var headers = new Headers();
	        headers.append('Content-Type', 'application/x-www-form-urlencoded');
	        var subscribeOptions = {
	            method: 'POST',
	            headers: headers,
	            body: fcmSubscribeBody
	        };
	        return fetch(_fcmDetails2.default.ENDPOINT + '/fcm/connect/subscribe', subscribeOptions).then(function (response) {
	            return response.json();
	        }).then(function (response) {
	            var fcmTokenResponse = response;
	            if (fcmTokenResponse['error']) {
	                var message = fcmTokenResponse['error']['message'];
	                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_FAILED, {
	                    message: message
	                });
	            }
	            if (!fcmTokenResponse['token']) {
	                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_NO_TOKEN);
	            }
	            if (!fcmTokenResponse['pushSet']) {
	                throw _this.errorFactory_.create(_errors3.default.codes.TOKEN_SUBSCRIBE_NO_PUSH_SET);
	            }
	            return {
	                token: fcmTokenResponse['token'],
	                pushSet: fcmTokenResponse['pushSet']
	            };
	        });
	    };
	    /**
	     * Checks the that fields in the PushSubscription are equivalent to the
	     * details stores in the masterTokenDetails.
	     * @private
	     * @param  {PushSubscription} subscription The push subscription we expect
	     * the master token to match.
	     * @param  {Object}  masterTokenDetails The saved details we wish to compare
	     * with the PushSubscription
	     * @return {boolean} true if the subscription and token details are
	     * equivalent.
	     */
	    TokenManager.prototype.isSameSubscription_ = function (subscription, masterTokenDetails) {
	        // getKey() isn't defined in the PushSubscription externs file, hence
	        // subscription['getKey']('<key name>').
	        return subscription.endpoint === masterTokenDetails['endpoint'] && (0, _arrayBufferToBase2.default)(subscription['getKey']('auth')) === masterTokenDetails['auth'] && (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh')) === masterTokenDetails['p256dh'];
	    };
	    /**
	     * Save the details for the fcm token for re-use at a later date.
	     * @private
	     * @param  {string} senderId The 'messagingSenderId' used for this project
	     * @param  {ServiceWorkerRegistration} swRegistration The service worker
	     * used to subscribe the user for web push
	     * @param  {PushSubscription} subscription The push subscription passed to
	     * FCM for the current token.
	     * @param  {string} fcmToken The FCM token currently used on this
	     * device.
	     * @param  {string} fcmPushSet The FCM push tied to the fcm token.
	     * @return {Promise<void>}
	     */
	    TokenManager.prototype.saveTokenDetails_ = function (senderId, swRegistration, subscription, fcmToken, fcmPushSet) {
	        var details = {
	            swScope: swRegistration.scope,
	            endpoint: subscription.endpoint,
	            auth: (0, _arrayBufferToBase2.default)(subscription['getKey']('auth')),
	            p256dh: (0, _arrayBufferToBase2.default)(subscription['getKey']('p256dh')),
	            fcmToken: fcmToken,
	            fcmPushSet: fcmPushSet,
	            fcmSenderId: senderId
	        };
	        return this.openDatabase_().then(function (db) {
	            return new Promise(function (resolve, reject) {
	                var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');
	                var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
	                var request = objectStore.put(details);
	                request.onerror = function (event) {
	                    reject(event.target.error);
	                };
	                request.onsuccess = function (event) {
	                    resolve();
	                };
	            });
	        });
	    };
	    /**
	     * Returns the saved FCM Token if one is available and still valid,
	     * otherwise `null` is returned.
	     * @param {string} senderId This should be the sender ID associated with the
	     * FCM Token being retrieved.
	     * @param {ServiceWorkerRegistration} swRegistration Registration to be used
	     * to subscribe the user to push.
	     * @return {Promise<string> | Promise} Returns the saved FCM Token if
	     * avilable and valid.
	     * @export
	     */
	    TokenManager.prototype.getSavedToken = function (senderId, swRegistration) {
	        var _this = this;
	        if (!(swRegistration instanceof ServiceWorkerRegistration)) {
	            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.SW_REGISTRATION_EXPECTED));
	        }
	        if (typeof senderId !== 'string' || senderId.length === 0) {
	            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID));
	        }
	        return this.getAllTokenDetailsForSenderId_(senderId).then(function (allTokenDetails) {
	            if (allTokenDetails.length === 0) {
	                return;
	            }
	            var index = allTokenDetails.findIndex(function (tokenDetails) {
	                return swRegistration.scope === tokenDetails['swScope'] && senderId === tokenDetails['fcmSenderId'];
	            });
	            if (index === -1) {
	                return;
	            }
	            return allTokenDetails[index];
	        }).then(function (tokenDetails) {
	            if (!tokenDetails) {
	                return;
	            }
	            return swRegistration.pushManager.getSubscription().catch(function (err) {
	                throw _this.errorFactory_.create(_errors3.default.codes.GET_SUBSCRIPTION_FAILED);
	            }).then(function (subscription) {
	                if (subscription && _this.isSameSubscription_(subscription, tokenDetails)) {
	                    return tokenDetails['fcmToken'];
	                }
	            });
	        });
	    };
	    /**
	     * Creates a new FCM token.
	     */
	    TokenManager.prototype.createToken = function (senderId, swRegistration) {
	        var _this = this;
	        if (typeof senderId !== 'string' || senderId.length === 0) {
	            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.BAD_SENDER_ID));
	        }
	        if (!(swRegistration instanceof ServiceWorkerRegistration)) {
	            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.SW_REGISTRATION_EXPECTED));
	        }
	        // Check for existing subscription first
	        var subscription;
	        var fcmTokenDetails;
	        return swRegistration.pushManager.getSubscription().then(function (subscription) {
	            if (subscription) {
	                return subscription;
	            }
	            return swRegistration.pushManager.subscribe(_fcmDetails2.default.SUBSCRIPTION_OPTIONS);
	        }).then(function (sub) {
	            subscription = sub;
	            return _this.subscribeToFCM(senderId, subscription);
	        }).then(function (tokenDetails) {
	            fcmTokenDetails = tokenDetails;
	            return _this.saveTokenDetails_(senderId, swRegistration, subscription, fcmTokenDetails['token'], fcmTokenDetails['pushSet']);
	        }).then(function () {
	            return fcmTokenDetails['token'];
	        });
	    };
	    /**
	     * This method deletes details of the current FCM token.
	     * It's returning a promise in case we need to move to an async
	     * method for deleting at a later date.
	     * @param {string} token Token to be deleted
	     * @return {Promise<Object>} Resolves once the FCM token details have been
	     * deleted and returns the deleted details.
	     */
	    TokenManager.prototype.deleteToken = function (token) {
	        var _this = this;
	        if (typeof token !== 'string' || token.length === 0) {
	            return Promise.reject(this.errorFactory_.create(_errors3.default.codes.INVALID_DELETE_TOKEN));
	        }
	        return this.getTokenDetailsFromToken(token).then(function (details) {
	            if (!details) {
	                throw _this.errorFactory_.create(_errors3.default.codes.DELETE_TOKEN_NOT_FOUND);
	            }
	            return _this.openDatabase_().then(function (db) {
	                return new Promise(function (resolve, reject) {
	                    var transaction = db.transaction([FCM_TOKEN_OBJ_STORE], 'readwrite');
	                    var objectStore = transaction.objectStore(FCM_TOKEN_OBJ_STORE);
	                    var request = objectStore.delete(details['swScope']);
	                    request.onerror = function (event) {
	                        reject(event.target.error);
	                    };
	                    request.onsuccess = function (event) {
	                        if (event.target.result === 0) {
	                            reject(_this.errorFactory_.create(_errors3.default.codes.FAILED_TO_DELETE_TOKEN));
	                            return;
	                        }
	                        resolve(details);
	                    };
	                });
	            });
	        });
	    };
	    return TokenManager;
	}();
	exports.default = TokenManager;
	module.exports = exports['default'];
	//# sourceMappingURL=token-manager.js.map


/***/ }),
/* 149 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	exports.default = function (arrayBuffer) {
	    var base64String = toBase64(arrayBuffer);
	    return base64String.replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
	};

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	function toBase64(arrayBuffer) {
	    var uint8Version = new Uint8Array(arrayBuffer);
	    return window.btoa(String.fromCharCode.apply(null, uint8Version));
	}
	;
	module.exports = exports['default'];
	//# sourceMappingURL=array-buffer-to-base64.js.map


/***/ }),
/* 150 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var FCM_APPLICATION_SERVER_KEY = [0x04, 0x33, 0x94, 0xf7, 0xdf, 0xa1, 0xeb, 0xb1, 0xdc, 0x03, 0xa2, 0x5e, 0x15, 0x71, 0xdb, 0x48, 0xd3, 0x2e, 0xed, 0xed, 0xb2, 0x34, 0xdb, 0xb7, 0x47, 0x3a, 0x0c, 0x8f, 0xc4, 0xcc, 0xe1, 0x6f, 0x3c, 0x8c, 0x84, 0xdf, 0xab, 0xb6, 0x66, 0x3e, 0xf2, 0x0c, 0xd4, 0x8b, 0xfe, 0xe3, 0xf9, 0x76, 0x2f, 0x14, 0x1c, 0x63, 0x08, 0x6a, 0x6f, 0x2d, 0xb1, 0x1a, 0x95, 0xb0, 0xce, 0x37, 0xc0, 0x9c, 0x6e];
	var SUBSCRIPTION_DETAILS = {
	    userVisibleOnly: true,
	    applicationServerKey: new Uint8Array(FCM_APPLICATION_SERVER_KEY)
	};
	exports.default = {
	    ENDPOINT: 'https://fcm.googleapis.com',
	    APPLICATION_SERVER_KEY: FCM_APPLICATION_SERVER_KEY,
	    SUBSCRIPTION_OPTIONS: SUBSCRIPTION_DETAILS
	};
	module.exports = exports['default'];
	//# sourceMappingURL=fcm-details.js.map


/***/ }),
/* 151 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  granted: 'granted',
	  default: 'default',
	  denied: 'denied'
	};
	module.exports = exports['default'];
	//# sourceMappingURL=notification-permission.js.map


/***/ }),
/* 152 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';
	// These fields are strings to prevent closure from thinking goog.getMsg
	// should be used to initialise the values

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var PARAMS = {
	    TYPE_OF_MSG: 'firebase-messaging-msg-type',
	    DATA: 'firebase-messaging-msg-data'
	};
	// This value isn't using the TYPE_OF_MSG short hand as closure
	// expects the variable to be defined via goog.getMsg
	var msgType = {
	    PUSH_MSG_RECEIVED: 'push-msg-received',
	    NOTIFICATION_CLICKED: 'notification-clicked'
	};
	var createNewMsg = function createNewMsg(msgType, msgData) {
	    var message = (_a = {}, _a[PARAMS.TYPE_OF_MSG] = msgType, _a[PARAMS.DATA] = msgData, _a);
	    return message;
	    var _a;
	};
	exports.default = {
	    PARAMS: PARAMS,
	    TYPES_OF_MSG: msgType,
	    createNewMsg: createNewMsg
	};
	module.exports = exports['default'];
	//# sourceMappingURL=worker-page-message.js.map


/***/ }),
/* 153 */
/***/ (function(module, exports) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  path: '/firebase-messaging-sw.js',
	  scope: '/firebase-cloud-messaging-push-scope'
	};
	module.exports = exports['default'];
	//# sourceMappingURL=default-sw.js.map


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	/*! @license Firebase v4.5.0
	Build: rev-f49c8b5
	Terms: https://firebase.google.com/terms/ */

	/**
	 * Copyright 2017 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *   http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _controllerInterface = __webpack_require__(146);

	var _controllerInterface2 = _interopRequireDefault(_controllerInterface);

	var _errors = __webpack_require__(147);

	var _errors2 = _interopRequireDefault(_errors);

	var _workerPageMessage = __webpack_require__(152);

	var _workerPageMessage2 = _interopRequireDefault(_workerPageMessage);

	var _fcmDetails = __webpack_require__(150);

	var _fcmDetails2 = _interopRequireDefault(_fcmDetails);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var __extends = undefined && undefined.__extends || function () {
	    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
	        d.__proto__ = b;
	    } || function (d, b) {
	        for (var p in b) {
	            if (b.hasOwnProperty(p)) d[p] = b[p];
	        }
	    };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() {
	            this.constructor = d;
	        }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	}();

	var FCM_MSG = 'FCM_MSG';
	var SWController = /** @class */function (_super) {
	    __extends(SWController, _super);
	    function SWController(app) {
	        var _this = _super.call(this, app) || this;
	        self.addEventListener('push', function (e) {
	            return _this.onPush_(e);
	        }, false);
	        self.addEventListener('pushsubscriptionchange', function (e) {
	            return _this.onSubChange_(e);
	        }, false);
	        self.addEventListener('notificationclick', function (e) {
	            return _this.onNotificationClick_(e);
	        }, false);
	        /**
	         * @private
	         * @type {function(Object)|null}
	         */
	        _this.bgMessageHandler_ = null;
	        return _this;
	    }
	    /**
	    * A handler for push events that shows notifications based on the content of
	    * the payload.
	    *
	    * The payload must be a JSON-encoded Object with a `notification` key. The
	    * value of the `notification` property will be used as the NotificationOptions
	    * object passed to showNotification. Additionally, the `title` property of the
	    * notification object will be used as the title.
	    *
	    * If there is no notification data in the payload then no notification will be
	    * shown.
	    * @private
	    */
	    SWController.prototype.onPush_ = function (event) {
	        var _this = this;
	        var msgPayload;
	        try {
	            msgPayload = event.data.json();
	        } catch (err) {
	            // Not JSON so not an FCM message
	            return;
	        }
	        var handleMsgPromise = this.hasVisibleClients_().then(function (hasVisibleClients) {
	            if (hasVisibleClients) {
	                // Do not need to show a notification.
	                if (msgPayload.notification || _this.bgMessageHandler_) {
	                    // Send to page
	                    return _this.sendMessageToWindowClients_(msgPayload);
	                }
	                return;
	            }
	            var notificationDetails = _this.getNotificationData_(msgPayload);
	            if (notificationDetails) {
	                var notificationTitle = notificationDetails.title || '';
	                return self.registration.showNotification(notificationTitle, notificationDetails);
	            } else if (_this.bgMessageHandler_) {
	                return _this.bgMessageHandler_(msgPayload);
	            }
	        });
	        event.waitUntil(handleMsgPromise);
	    };
	    /**
	    * @private
	    */
	    SWController.prototype.onSubChange_ = function (event) {
	        var _this = this;
	        var promiseChain = this.getToken().then(function (token) {
	            if (!token) {
	                // We can't resubscribe if we don't have an FCM token for this scope.
	                throw _this.errorFactory_.create(_errors2.default.codes.NO_FCM_TOKEN_FOR_RESUBSCRIBE);
	            }
	            var tokenDetails = null;
	            var tokenManager = _this.getTokenManager();
	            return tokenManager.getTokenDetailsFromToken(token).then(function (details) {
	                tokenDetails = details;
	                if (!tokenDetails) {
	                    throw _this.errorFactory_.create(_errors2.default.codes.INVALID_SAVED_TOKEN);
	                }
	                // Attempt to get a new subscription
	                return self.registration.pushManager.subscribe(_fcmDetails2.default.SUBSCRIPTION_OPTIONS);
	            }).then(function (newSubscription) {
	                // Send new subscription to FCM.
	                return tokenManager.subscribeToFCM(tokenDetails.fcmSenderId, newSubscription, tokenDetails.fcmPushSet);
	            }).catch(function (err) {
	                // The best thing we can do is log this to the terminal so
	                // developers might notice the error.
	                return tokenManager.deleteToken(tokenDetails.fcmToken).then(function () {
	                    throw _this.errorFactory_.create(_errors2.default.codes.UNABLE_TO_RESUBSCRIBE, {
	                        message: err
	                    });
	                });
	            });
	        });
	        event.waitUntil(promiseChain);
	    };
	    /**
	    * @private
	    */
	    SWController.prototype.onNotificationClick_ = function (event) {
	        var _this = this;
	        if (!(event.notification && event.notification.data && event.notification.data[FCM_MSG])) {
	            // Not an FCM notification, do nothing.
	            return;
	        }
	        // Prevent other listeners from receiving the event
	        event.stopImmediatePropagation();
	        event.notification.close();
	        var msgPayload = event.notification.data[FCM_MSG];
	        var clickAction = msgPayload['notification']['click_action'];
	        if (!clickAction) {
	            // Nothing to do.
	            return;
	        }
	        var promiseChain = this.getWindowClient_(clickAction).then(function (windowClient) {
	            if (!windowClient) {
	                // Unable to find window client so need to open one.
	                return self.clients.openWindow(clickAction);
	            }
	            return windowClient;
	        }).then(function (windowClient) {
	            if (!windowClient) {
	                // Window Client will not be returned if it's for a third party origin.
	                return;
	            }
	            // Delete notification data from payload before sending to the page.
	            var notificationData = msgPayload['notification'];
	            delete msgPayload['notification'];
	            var internalMsg = _workerPageMessage2.default.createNewMsg(_workerPageMessage2.default.TYPES_OF_MSG.NOTIFICATION_CLICKED, msgPayload);
	            // Attempt to send a message to the client to handle the data
	            // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728
	            return _this.attemptToMessageClient_(windowClient, internalMsg);
	        });
	        event.waitUntil(promiseChain);
	    };
	    /**
	     * @private
	     * @param {Object} msgPayload
	     * @return {NotificationOptions|undefined}
	     */
	    SWController.prototype.getNotificationData_ = function (msgPayload) {
	        if (!msgPayload) {
	            return;
	        }
	        if (_typeof(msgPayload.notification) !== 'object') {
	            return;
	        }
	        var notificationInformation = Object.assign({}, msgPayload.notification);
	        // Put the message payload under FCM_MSG name so we can identify the
	        // notification as being an FCM notification vs a notification from
	        // somewhere else (i.e. normal web push or developer generated
	        // notification).
	        notificationInformation['data'] = (_a = {}, _a[FCM_MSG] = msgPayload, _a);
	        return notificationInformation;
	        var _a;
	    };
	    /**
	     * Calling setBackgroundMessageHandler will opt in to some specific
	     * behaviours.
	     * 1.) If a notification doesn't need to be shown due to a window already
	     * being visible, then push messages will be sent to the page.
	     * 2.) If a notification needs to be shown, and the message contains no
	     * notification data this method will be called
	     * and the promise it returns will be passed to event.waitUntil.
	     * If you do not set this callback then all push messages will let and the
	     * developer can handle them in a their own 'push' event callback
	     * @export
	     * @param {function(Object)} callback The callback to be called when a push
	     * message is received and a notification must be shown. The callback will
	     * be given the data from the push message.
	     */
	    SWController.prototype.setBackgroundMessageHandler = function (callback) {
	        if (callback && typeof callback !== 'function') {
	            throw this.errorFactory_.create(_errors2.default.codes.BG_HANDLER_FUNCTION_EXPECTED);
	        }
	        this.bgMessageHandler_ = callback;
	    };
	    /**
	     * @private
	     * @param {string} url The URL to look for when focusing a client.
	     * @return {Object} Returns an existing window client or a newly opened
	     * WindowClient.
	     */
	    SWController.prototype.getWindowClient_ = function (url) {
	        // Use URL to normalize the URL when comparing to windowClients.
	        // This at least handles whether to include trailing slashes or not
	        var parsedURL = new URL(url).href;
	        return self.clients.matchAll({
	            type: 'window',
	            includeUncontrolled: true
	        }).then(function (clientList) {
	            var suitableClient = null;
	            for (var i = 0; i < clientList.length; i++) {
	                var parsedClientUrl = new URL(clientList[i].url).href;
	                if (parsedClientUrl === parsedURL) {
	                    suitableClient = clientList[i];
	                    break;
	                }
	            }
	            if (suitableClient) {
	                suitableClient.focus();
	                return suitableClient;
	            }
	        });
	    };
	    /**
	     * This message will attempt to send the message to a window client.
	     * @private
	     * @param {Object} client The WindowClient to send the message to.
	     * @param {Object} message The message to send to the client.
	     * @returns {Promise} Returns a promise that resolves after sending the
	     * message. This does not guarantee that the message was successfully
	     * received.
	     */
	    SWController.prototype.attemptToMessageClient_ = function (client, message) {
	        var _this = this;
	        return new Promise(function (resolve, reject) {
	            if (!client) {
	                return reject(_this.errorFactory_.create(_errors2.default.codes.NO_WINDOW_CLIENT_TO_MSG));
	            }
	            client.postMessage(message);
	            resolve();
	        });
	    };
	    /**
	     * @private
	     * @returns {Promise<boolean>} If there is currently a visible WindowClient,
	     * this method will resolve to true, otherwise false.
	     */
	    SWController.prototype.hasVisibleClients_ = function () {
	        return self.clients.matchAll({
	            type: 'window',
	            includeUncontrolled: true
	        }).then(function (clientList) {
	            return clientList.some(function (client) {
	                return client.visibilityState === 'visible';
	            });
	        });
	    };
	    /**
	     * @private
	     * @param {Object} msgPayload The data from the push event that should be sent
	     * to all available pages.
	     * @returns {Promise} Returns a promise that resolves once the message
	     * has been sent to all WindowClients.
	     */
	    SWController.prototype.sendMessageToWindowClients_ = function (msgPayload) {
	        var _this = this;
	        return self.clients.matchAll({
	            type: 'window',
	            includeUncontrolled: true
	        }).then(function (clientList) {
	            var internalMsg = _workerPageMessage2.default.createNewMsg(_workerPageMessage2.default.TYPES_OF_MSG.PUSH_MSG_RECEIVED, msgPayload);
	            return Promise.all(clientList.map(function (client) {
	                return _this.attemptToMessageClient_(client, internalMsg);
	            }));
	        });
	    };
	    /**
	     * This will register the default service worker and return the registration.
	     * @private
	     * @return {Promise<!ServiceWorkerRegistration>} The service worker
	     * registration to be used for the push service.
	     */
	    SWController.prototype.getSWRegistration_ = function () {
	        return Promise.resolve(self.registration);
	    };
	    return SWController;
	}(_controllerInterface2.default);
	exports.default = SWController;
	module.exports = exports['default'];
	//# sourceMappingURL=sw-controller.js.map


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(241);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _getMuiTheme = __webpack_require__(278);

	var _getMuiTheme2 = _interopRequireDefault(_getMuiTheme);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var MuiThemeProvider = function (_Component) {
	  (0, _inherits3.default)(MuiThemeProvider, _Component);

	  function MuiThemeProvider() {
	    (0, _classCallCheck3.default)(this, MuiThemeProvider);
	    return (0, _possibleConstructorReturn3.default)(this, (MuiThemeProvider.__proto__ || (0, _getPrototypeOf2.default)(MuiThemeProvider)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(MuiThemeProvider, [{
	    key: 'getChildContext',
	    value: function getChildContext() {
	      return {
	        muiTheme: this.props.muiTheme || (0, _getMuiTheme2.default)()
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return MuiThemeProvider;
	}(_react.Component);

	MuiThemeProvider.childContextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	MuiThemeProvider.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.element,
	  muiTheme: _propTypes2.default.object
	} : {};
	exports.default = MuiThemeProvider;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(157), __esModule: true };

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(158);
	module.exports = __webpack_require__(169).Object.getPrototypeOf;


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(159);
	var $getPrototypeOf = __webpack_require__(161);

	__webpack_require__(167)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(160);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 160 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(162);
	var toObject = __webpack_require__(159);
	var IE_PROTO = __webpack_require__(163)('IE_PROTO');
	var ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 162 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(164)('keys');
	var uid = __webpack_require__(166);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(165);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};


/***/ }),
/* 165 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 166 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(168);
	var core = __webpack_require__(169);
	var fails = __webpack_require__(178);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(165);
	var core = __webpack_require__(169);
	var ctx = __webpack_require__(170);
	var hide = __webpack_require__(172);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && key in exports) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 169 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.1' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(171);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 171 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(173);
	var createDesc = __webpack_require__(181);
	module.exports = __webpack_require__(177) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(174);
	var IE8_DOM_DEFINE = __webpack_require__(176);
	var toPrimitive = __webpack_require__(180);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(177) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(175);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 175 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(177) && !__webpack_require__(178)(function () {
	  return Object.defineProperty(__webpack_require__(179)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(178)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 178 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(175);
	var document = __webpack_require__(165).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(175);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 181 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 182 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(184);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(185), __esModule: true };

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(186);
	var $Object = __webpack_require__(169).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(168);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(177), 'Object', { defineProperty: __webpack_require__(173).f });


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _typeof2 = __webpack_require__(188);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(189);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(218);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(190), __esModule: true };

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(191);
	__webpack_require__(213);
	module.exports = __webpack_require__(217).f('iterator');


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(192)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(194)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(193);
	var defined = __webpack_require__(160);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 193 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(195);
	var $export = __webpack_require__(168);
	var redefine = __webpack_require__(196);
	var hide = __webpack_require__(172);
	var has = __webpack_require__(162);
	var Iterators = __webpack_require__(197);
	var $iterCreate = __webpack_require__(198);
	var setToStringTag = __webpack_require__(211);
	var getPrototypeOf = __webpack_require__(161);
	var ITERATOR = __webpack_require__(212)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';

	var returnThis = function () { return this; };

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 195 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(172);


/***/ }),
/* 197 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(199);
	var descriptor = __webpack_require__(181);
	var setToStringTag = __webpack_require__(211);
	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(172)(IteratorPrototype, __webpack_require__(212)('iterator'), function () { return this; });

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(174);
	var dPs = __webpack_require__(200);
	var enumBugKeys = __webpack_require__(209);
	var IE_PROTO = __webpack_require__(163)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(179)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(210).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(173);
	var anObject = __webpack_require__(174);
	var getKeys = __webpack_require__(201);

	module.exports = __webpack_require__(177) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(202);
	var enumBugKeys = __webpack_require__(209);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(162);
	var toIObject = __webpack_require__(203);
	var arrayIndexOf = __webpack_require__(206)(false);
	var IE_PROTO = __webpack_require__(163)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(204);
	var defined = __webpack_require__(160);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(205);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 205 */
/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(203);
	var toLength = __webpack_require__(207);
	var toAbsoluteIndex = __webpack_require__(208);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(193);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(193);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 209 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(165).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(173).f;
	var has = __webpack_require__(162);
	var TAG = __webpack_require__(212)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(164)('wks');
	var uid = __webpack_require__(166);
	var Symbol = __webpack_require__(165).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(214);
	var global = __webpack_require__(165);
	var hide = __webpack_require__(172);
	var Iterators = __webpack_require__(197);
	var TO_STRING_TAG = __webpack_require__(212)('toStringTag');

	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');

	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(215);
	var step = __webpack_require__(216);
	var Iterators = __webpack_require__(197);
	var toIObject = __webpack_require__(203);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(194)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 215 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 216 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(212);


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(219), __esModule: true };

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(220);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	module.exports = __webpack_require__(169).Symbol;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(165);
	var has = __webpack_require__(162);
	var DESCRIPTORS = __webpack_require__(177);
	var $export = __webpack_require__(168);
	var redefine = __webpack_require__(196);
	var META = __webpack_require__(221).KEY;
	var $fails = __webpack_require__(178);
	var shared = __webpack_require__(164);
	var setToStringTag = __webpack_require__(211);
	var uid = __webpack_require__(166);
	var wks = __webpack_require__(212);
	var wksExt = __webpack_require__(217);
	var wksDefine = __webpack_require__(222);
	var enumKeys = __webpack_require__(223);
	var isArray = __webpack_require__(226);
	var anObject = __webpack_require__(174);
	var toIObject = __webpack_require__(203);
	var toPrimitive = __webpack_require__(180);
	var createDesc = __webpack_require__(181);
	var _create = __webpack_require__(199);
	var gOPNExt = __webpack_require__(227);
	var $GOPD = __webpack_require__(229);
	var $DP = __webpack_require__(173);
	var $keys = __webpack_require__(201);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(228).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(225).f = $propertyIsEnumerable;
	  __webpack_require__(224).f = $getOwnPropertySymbols;

	  if (DESCRIPTORS && !__webpack_require__(195)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    replacer = args[1];
	    if (typeof replacer == 'function') $replacer = replacer;
	    if ($replacer || !isArray(replacer)) replacer = function (key, value) {
	      if ($replacer) value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(172)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(166)('meta');
	var isObject = __webpack_require__(175);
	var has = __webpack_require__(162);
	var setDesc = __webpack_require__(173).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(178)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(165);
	var core = __webpack_require__(169);
	var LIBRARY = __webpack_require__(195);
	var wksExt = __webpack_require__(217);
	var defineProperty = __webpack_require__(173).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(201);
	var gOPS = __webpack_require__(224);
	var pIE = __webpack_require__(225);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 224 */
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 225 */
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(205);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(203);
	var gOPN = __webpack_require__(228).f;
	var toString = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(202);
	var hiddenKeys = __webpack_require__(209).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(225);
	var createDesc = __webpack_require__(181);
	var toIObject = __webpack_require__(203);
	var toPrimitive = __webpack_require__(180);
	var has = __webpack_require__(162);
	var IE8_DOM_DEFINE = __webpack_require__(176);
	var gOPD = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(177) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 230 */
/***/ (function(module, exports) {

	

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(222)('asyncIterator');


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(222)('observable');


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(234);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(238);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(188);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(235), __esModule: true };

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(236);
	module.exports = __webpack_require__(169).Object.setPrototypeOf;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(168);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(237).set });


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(175);
	var anObject = __webpack_require__(174);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(170)(Function.call, __webpack_require__(229).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(239), __esModule: true };

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(240);
	var $Object = __webpack_require__(169).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(168);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(199) });


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(242);


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var ReactBaseClasses = __webpack_require__(244);
	var ReactChildren = __webpack_require__(253);
	var ReactDOMFactories = __webpack_require__(261);
	var ReactElement = __webpack_require__(255);
	var ReactPropTypes = __webpack_require__(267);
	var ReactVersion = __webpack_require__(272);

	var createReactClass = __webpack_require__(273);
	var onlyChild = __webpack_require__(275);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var lowPriorityWarning = __webpack_require__(252);
	  var canDefineProperty = __webpack_require__(249);
	  var ReactElementValidator = __webpack_require__(262);
	  var didWarnPropTypesDeprecated = false;
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;
	var createMixin = function (mixin) {
	  return mixin;
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForSpread = false;
	  var warnedForCreateMixin = false;
	  __spread = function () {
	    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
	    warnedForSpread = true;
	    return _assign.apply(null, arguments);
	  };

	  createMixin = function (mixin) {
	    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
	    warnedForCreateMixin = true;
	    return mixin;
	  };
	}

	var React = {
	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactBaseClasses.Component,
	  PureComponent: ReactBaseClasses.PureComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: createReactClass,
	  createFactory: createFactory,
	  createMixin: createMixin,

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	if (process.env.NODE_ENV !== 'production') {
	  var warnedForCreateClass = false;
	  if (canDefineProperty) {
	    Object.defineProperty(React, 'PropTypes', {
	      get: function () {
	        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
	        didWarnPropTypesDeprecated = true;
	        return ReactPropTypes;
	      }
	    });

	    Object.defineProperty(React, 'createClass', {
	      get: function () {
	        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
	        warnedForCreateClass = true;
	        return createReactClass;
	      }
	    });
	  }

	  // React.DOM factories are deprecated. Wrap these methods so that
	  // invocations of the React.DOM namespace and alert users to switch
	  // to the `react-dom-factories` package.
	  React.DOM = {};
	  var warnedForFactories = false;
	  Object.keys(ReactDOMFactories).forEach(function (factory) {
	    React.DOM[factory] = function () {
	      if (!warnedForFactories) {
	        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
	        warnedForFactories = true;
	      }
	      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
	    };
	  });
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 243 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(245),
	    _assign = __webpack_require__(243);

	var ReactNoopUpdateQueue = __webpack_require__(246);

	var canDefineProperty = __webpack_require__(249);
	var emptyObject = __webpack_require__(250);
	var invariant = __webpack_require__(251);
	var lowPriorityWarning = __webpack_require__(252);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactPureComponent(props, context, updater) {
	  // Duplicated from ReactComponent.
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = ReactComponent.prototype;
	ReactPureComponent.prototype = new ComponentDummy();
	ReactPureComponent.prototype.constructor = ReactPureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(ReactPureComponent.prototype, ReactComponent.prototype);
	ReactPureComponent.prototype.isPureReactComponent = true;

	module.exports = {
	  Component: ReactComponent,
	  PureComponent: ReactPureComponent
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 245 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var warning = __webpack_require__(247);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(248);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 248 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    // $FlowFixMe https://github.com/facebook/flow/issues/285
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = lowPriorityWarning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var PooledClass = __webpack_require__(254);
	var ReactElement = __webpack_require__(255);

	var emptyFunction = __webpack_require__(248);
	var traverseAllChildren = __webpack_require__(258);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(245);

	var invariant = __webpack_require__(251);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var ReactCurrentOwner = __webpack_require__(256);

	var warning = __webpack_require__(247);
	var canDefineProperty = __webpack_require__(249);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var REACT_ELEMENT_TYPE = __webpack_require__(257);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 256 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	module.exports = ReactCurrentOwner;

/***/ }),
/* 257 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(245);

	var ReactCurrentOwner = __webpack_require__(256);
	var REACT_ELEMENT_TYPE = __webpack_require__(257);

	var getIteratorFn = __webpack_require__(259);
	var invariant = __webpack_require__(251);
	var KeyEscapeUtils = __webpack_require__(260);
	var warning = __webpack_require__(247);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 259 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 260 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactElement = __webpack_require__(255);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @private
	 */
	var createDOMFactory = ReactElement.createFactory;
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(262);
	  createDOMFactory = ReactElementValidator.createFactory;
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 *
	 * @public
	 */
	var ReactDOMFactories = {
	  a: createDOMFactory('a'),
	  abbr: createDOMFactory('abbr'),
	  address: createDOMFactory('address'),
	  area: createDOMFactory('area'),
	  article: createDOMFactory('article'),
	  aside: createDOMFactory('aside'),
	  audio: createDOMFactory('audio'),
	  b: createDOMFactory('b'),
	  base: createDOMFactory('base'),
	  bdi: createDOMFactory('bdi'),
	  bdo: createDOMFactory('bdo'),
	  big: createDOMFactory('big'),
	  blockquote: createDOMFactory('blockquote'),
	  body: createDOMFactory('body'),
	  br: createDOMFactory('br'),
	  button: createDOMFactory('button'),
	  canvas: createDOMFactory('canvas'),
	  caption: createDOMFactory('caption'),
	  cite: createDOMFactory('cite'),
	  code: createDOMFactory('code'),
	  col: createDOMFactory('col'),
	  colgroup: createDOMFactory('colgroup'),
	  data: createDOMFactory('data'),
	  datalist: createDOMFactory('datalist'),
	  dd: createDOMFactory('dd'),
	  del: createDOMFactory('del'),
	  details: createDOMFactory('details'),
	  dfn: createDOMFactory('dfn'),
	  dialog: createDOMFactory('dialog'),
	  div: createDOMFactory('div'),
	  dl: createDOMFactory('dl'),
	  dt: createDOMFactory('dt'),
	  em: createDOMFactory('em'),
	  embed: createDOMFactory('embed'),
	  fieldset: createDOMFactory('fieldset'),
	  figcaption: createDOMFactory('figcaption'),
	  figure: createDOMFactory('figure'),
	  footer: createDOMFactory('footer'),
	  form: createDOMFactory('form'),
	  h1: createDOMFactory('h1'),
	  h2: createDOMFactory('h2'),
	  h3: createDOMFactory('h3'),
	  h4: createDOMFactory('h4'),
	  h5: createDOMFactory('h5'),
	  h6: createDOMFactory('h6'),
	  head: createDOMFactory('head'),
	  header: createDOMFactory('header'),
	  hgroup: createDOMFactory('hgroup'),
	  hr: createDOMFactory('hr'),
	  html: createDOMFactory('html'),
	  i: createDOMFactory('i'),
	  iframe: createDOMFactory('iframe'),
	  img: createDOMFactory('img'),
	  input: createDOMFactory('input'),
	  ins: createDOMFactory('ins'),
	  kbd: createDOMFactory('kbd'),
	  keygen: createDOMFactory('keygen'),
	  label: createDOMFactory('label'),
	  legend: createDOMFactory('legend'),
	  li: createDOMFactory('li'),
	  link: createDOMFactory('link'),
	  main: createDOMFactory('main'),
	  map: createDOMFactory('map'),
	  mark: createDOMFactory('mark'),
	  menu: createDOMFactory('menu'),
	  menuitem: createDOMFactory('menuitem'),
	  meta: createDOMFactory('meta'),
	  meter: createDOMFactory('meter'),
	  nav: createDOMFactory('nav'),
	  noscript: createDOMFactory('noscript'),
	  object: createDOMFactory('object'),
	  ol: createDOMFactory('ol'),
	  optgroup: createDOMFactory('optgroup'),
	  option: createDOMFactory('option'),
	  output: createDOMFactory('output'),
	  p: createDOMFactory('p'),
	  param: createDOMFactory('param'),
	  picture: createDOMFactory('picture'),
	  pre: createDOMFactory('pre'),
	  progress: createDOMFactory('progress'),
	  q: createDOMFactory('q'),
	  rp: createDOMFactory('rp'),
	  rt: createDOMFactory('rt'),
	  ruby: createDOMFactory('ruby'),
	  s: createDOMFactory('s'),
	  samp: createDOMFactory('samp'),
	  script: createDOMFactory('script'),
	  section: createDOMFactory('section'),
	  select: createDOMFactory('select'),
	  small: createDOMFactory('small'),
	  source: createDOMFactory('source'),
	  span: createDOMFactory('span'),
	  strong: createDOMFactory('strong'),
	  style: createDOMFactory('style'),
	  sub: createDOMFactory('sub'),
	  summary: createDOMFactory('summary'),
	  sup: createDOMFactory('sup'),
	  table: createDOMFactory('table'),
	  tbody: createDOMFactory('tbody'),
	  td: createDOMFactory('td'),
	  textarea: createDOMFactory('textarea'),
	  tfoot: createDOMFactory('tfoot'),
	  th: createDOMFactory('th'),
	  thead: createDOMFactory('thead'),
	  time: createDOMFactory('time'),
	  title: createDOMFactory('title'),
	  tr: createDOMFactory('tr'),
	  track: createDOMFactory('track'),
	  u: createDOMFactory('u'),
	  ul: createDOMFactory('ul'),
	  'var': createDOMFactory('var'),
	  video: createDOMFactory('video'),
	  wbr: createDOMFactory('wbr'),

	  // SVG
	  circle: createDOMFactory('circle'),
	  clipPath: createDOMFactory('clipPath'),
	  defs: createDOMFactory('defs'),
	  ellipse: createDOMFactory('ellipse'),
	  g: createDOMFactory('g'),
	  image: createDOMFactory('image'),
	  line: createDOMFactory('line'),
	  linearGradient: createDOMFactory('linearGradient'),
	  mask: createDOMFactory('mask'),
	  path: createDOMFactory('path'),
	  pattern: createDOMFactory('pattern'),
	  polygon: createDOMFactory('polygon'),
	  polyline: createDOMFactory('polyline'),
	  radialGradient: createDOMFactory('radialGradient'),
	  rect: createDOMFactory('rect'),
	  stop: createDOMFactory('stop'),
	  svg: createDOMFactory('svg'),
	  text: createDOMFactory('text'),
	  tspan: createDOMFactory('tspan')
	};

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(256);
	var ReactComponentTreeHook = __webpack_require__(263);
	var ReactElement = __webpack_require__(255);

	var checkReactTypeSpec = __webpack_require__(264);

	var canDefineProperty = __webpack_require__(249);
	var getIteratorFn = __webpack_require__(259);
	var warning = __webpack_require__(247);
	var lowPriorityWarning = __webpack_require__(252);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    if (!validType) {
	      if (typeof type !== 'function' && typeof type !== 'string') {
	        var info = '';
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }

	        var sourceInfo = getSourceInfoErrorAddendum(props);
	        if (sourceInfo) {
	          info += sourceInfo;
	        } else {
	          info += getDeclarationErrorAddendum();
	        }

	        info += ReactComponentTreeHook.getCurrentStackAddendum();

	        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
	        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
	        ReactComponentTreeHook.popNonStandardWarningStack();
	      }
	    }

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(245);

	var ReactCurrentOwner = __webpack_require__(256);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	function isNative(fn) {
	  // Based on isNative() from Lodash
	  var funcToString = Function.prototype.toString;
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	  var reIsNative = RegExp('^' + funcToString
	  // Take an example native function source for comparison
	  .call(hasOwnProperty
	  // Strip regex characters so we can use it for regex
	  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
	  // Remove hasOwnProperty from the template to make it generic
	  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
	  try {
	    var source = funcToString.call(fn);
	    return reIsNative.test(source);
	  } catch (err) {
	    return false;
	  }
	}

	var canUseCollections =
	// Array.from
	typeof Array.from === 'function' &&
	// Map
	typeof Map === 'function' && isNative(Map) &&
	// Map.prototype.keys
	Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
	// Set
	typeof Set === 'function' && isNative(Set) &&
	// Set.prototype.keys
	Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

	var setItem;
	var getItem;
	var removeItem;
	var getItemIDs;
	var addRoot;
	var removeRoot;
	var getRootIDs;

	if (canUseCollections) {
	  var itemMap = new Map();
	  var rootIDSet = new Set();

	  setItem = function (id, item) {
	    itemMap.set(id, item);
	  };
	  getItem = function (id) {
	    return itemMap.get(id);
	  };
	  removeItem = function (id) {
	    itemMap['delete'](id);
	  };
	  getItemIDs = function () {
	    return Array.from(itemMap.keys());
	  };

	  addRoot = function (id) {
	    rootIDSet.add(id);
	  };
	  removeRoot = function (id) {
	    rootIDSet['delete'](id);
	  };
	  getRootIDs = function () {
	    return Array.from(rootIDSet.keys());
	  };
	} else {
	  var itemByKey = {};
	  var rootByKey = {};

	  // Use non-numeric keys to prevent V8 performance issues:
	  // https://github.com/facebook/react/pull/7232
	  var getKeyFromID = function (id) {
	    return '.' + id;
	  };
	  var getIDFromKey = function (key) {
	    return parseInt(key.substr(1), 10);
	  };

	  setItem = function (id, item) {
	    var key = getKeyFromID(id);
	    itemByKey[key] = item;
	  };
	  getItem = function (id) {
	    var key = getKeyFromID(id);
	    return itemByKey[key];
	  };
	  removeItem = function (id) {
	    var key = getKeyFromID(id);
	    delete itemByKey[key];
	  };
	  getItemIDs = function () {
	    return Object.keys(itemByKey).map(getIDFromKey);
	  };

	  addRoot = function (id) {
	    var key = getKeyFromID(id);
	    rootByKey[key] = true;
	  };
	  removeRoot = function (id) {
	    var key = getKeyFromID(id);
	    delete rootByKey[key];
	  };
	  getRootIDs = function () {
	    return Object.keys(rootByKey).map(getIDFromKey);
	  };
	}

	var unmountedIDs = [];

	function purgeDeep(id) {
	  var item = getItem(id);
	  if (item) {
	    var childIDs = item.childIDs;

	    removeItem(id);
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function getDisplayName(element) {
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	function describeID(id) {
	  var name = ReactComponentTreeHook.getDisplayName(id);
	  var element = ReactComponentTreeHook.getElement(id);
	  var ownerID = ReactComponentTreeHook.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeHook = {
	  onSetChildren: function (id, nextChildIDs) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.childIDs = nextChildIDs;

	    for (var i = 0; i < nextChildIDs.length; i++) {
	      var nextChildID = nextChildIDs[i];
	      var nextChild = getItem(nextChildID);
	      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
	      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
	      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	      if (nextChild.parentID == null) {
	        nextChild.parentID = id;
	        // TODO: This shouldn't be necessary but mounting a new root during in
	        // componentWillMount currently causes not-yet-mounted components to
	        // be purged from our tree data so their parent id is missing.
	      }
	      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
	    }
	  },
	  onBeforeMountComponent: function (id, element, parentID) {
	    var item = {
	      element: element,
	      parentID: parentID,
	      text: null,
	      childIDs: [],
	      isMounted: false,
	      updateCount: 0
	    };
	    setItem(id, item);
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.element = element;
	  },
	  onMountComponent: function (id) {
	    var item = getItem(id);
	    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
	    item.isMounted = true;
	    var isRoot = item.parentID === 0;
	    if (isRoot) {
	      addRoot(id);
	    }
	  },
	  onUpdateComponent: function (id) {
	    var item = getItem(id);
	    if (!item || !item.isMounted) {
	      // We may end up here as a result of setState() in componentWillUnmount().
	      // In this case, ignore the element.
	      return;
	    }
	    item.updateCount++;
	  },
	  onUnmountComponent: function (id) {
	    var item = getItem(id);
	    if (item) {
	      // We need to check if it exists.
	      // `item` might not exist if it is inside an error boundary, and a sibling
	      // error boundary child threw while mounting. Then this instance never
	      // got a chance to mount, but it still gets an unmounting event during
	      // the error boundary cleanup.
	      item.isMounted = false;
	      var isRoot = item.parentID === 0;
	      if (isRoot) {
	        removeRoot(id);
	      }
	    }
	    unmountedIDs.push(id);
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeHook._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var i = 0; i < unmountedIDs.length; i++) {
	      var id = unmountedIDs[i];
	      purgeDeep(id);
	    }
	    unmountedIDs.length = 0;
	  },
	  isMounted: function (id) {
	    var item = getItem(id);
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var name = getDisplayName(topElement);
	      var owner = topElement._owner;
	      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeHook.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeHook.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = getItem(id);
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element) {
	      return null;
	    }
	    return getDisplayName(element);
	  },
	  getElement: function (id) {
	    var item = getItem(id);
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (!element || !element._owner) {
	      return null;
	    }
	    return element._owner._debugID;
	  },
	  getParentID: function (id) {
	    var item = getItem(id);
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = getItem(id);
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var element = ReactComponentTreeHook.getElement(id);
	    if (typeof element === 'string') {
	      return element;
	    } else if (typeof element === 'number') {
	      return '' + element;
	    } else {
	      return null;
	    }
	  },
	  getUpdateCount: function (id) {
	    var item = getItem(id);
	    return item ? item.updateCount : 0;
	  },


	  getRootIDs: getRootIDs,
	  getRegisteredIDs: getItemIDs,

	  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
	    if (typeof console.reactStack !== 'function') {
	      return;
	    }

	    var stack = [];
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    try {
	      if (isCreatingElement) {
	        stack.push({
	          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
	          fileName: currentSource ? currentSource.fileName : null,
	          lineNumber: currentSource ? currentSource.lineNumber : null
	        });
	      }

	      while (id) {
	        var element = ReactComponentTreeHook.getElement(id);
	        var parentID = ReactComponentTreeHook.getParentID(id);
	        var ownerID = ReactComponentTreeHook.getOwnerID(id);
	        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
	        var source = element && element._source;
	        stack.push({
	          name: ownerName,
	          fileName: source ? source.fileName : null,
	          lineNumber: source ? source.lineNumber : null
	        });
	        id = parentID;
	      }
	    } catch (err) {
	      // Internal state is messed up.
	      // Stop building the stack (it's just a nice to have).
	    }

	    console.reactStack(stack);
	  },
	  popNonStandardWarningStack: function () {
	    if (typeof console.reactStackEnd !== 'function') {
	      return;
	    }
	    console.reactStackEnd();
	  }
	};

	module.exports = ReactComponentTreeHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(245);

	var ReactPropTypeLocationNames = __webpack_require__(265);
	var ReactPropTypesSecret = __webpack_require__(266);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(263);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(263);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 266 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(255),
	    isValidElement = _require.isValidElement;

	var factory = __webpack_require__(268);

	module.exports = factory(isValidElement);

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	// React 15.5 references this module, and assumes PropTypes are still callable in production.
	// Therefore we re-export development-only version with all the PropTypes checks here.
	// However if one is migrating to the `prop-types` npm library, they will go through the
	// `index.js` entry point, and it will branch depending on the environment.
	var factory = __webpack_require__(269);
	module.exports = function(isValidElement) {
	  // It is still allowed in 15.5.
	  var throwOnDirectAccess = false;
	  return factory(isValidElement, throwOnDirectAccess);
	};


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(248);
	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);
	var assign = __webpack_require__(243);

	var ReactPropTypesSecret = __webpack_require__(270);
	var checkPropTypes = __webpack_require__(271);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker,
	    exact: createStrictShapeTypeChecker,
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (typeof checker !== 'function') {
	        warning(
	          false,
	          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
	          'received %s at index %s.',
	          getPostfixForTypeWarning(checker),
	          i
	        );
	        return emptyFunction.thatReturnsNull;
	      }
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createStrictShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      // We need to check all keys in case some are required but missing from
	      // props.
	      var allKeys = assign({}, props[propName], shapeTypes);
	      for (var key in allKeys) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          return new PropTypeError(
	            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
	            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
	            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
	          );
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }

	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    if (typeof propValue === 'undefined' || propValue === null) {
	      return '' + propValue;
	    }
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns a string that is postfixed to a warning about an invalid type.
	  // For example, "undefined" or "of type array"
	  function getPostfixForTypeWarning(value) {
	    var type = getPreciseType(value);
	    switch (type) {
	      case 'array':
	      case 'object':
	        return 'an ' + type;
	      case 'boolean':
	      case 'date':
	      case 'regexp':
	        return 'a ' + type;
	      default:
	        return type;
	    }
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 270 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	if (process.env.NODE_ENV !== 'production') {
	  var invariant = __webpack_require__(251);
	  var warning = __webpack_require__(247);
	  var ReactPropTypesSecret = __webpack_require__(270);
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 272 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	module.exports = '15.6.2';

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _require = __webpack_require__(244),
	    Component = _require.Component;

	var _require2 = __webpack_require__(255),
	    isValidElement = _require2.isValidElement;

	var ReactNoopUpdateQueue = __webpack_require__(246);
	var factory = __webpack_require__(274);

	module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var emptyObject = __webpack_require__(250);
	var _invariant = __webpack_require__(251);

	if (process.env.NODE_ENV !== 'production') {
	  var warning = __webpack_require__(247);
	}

	var MIXINS_KEY = 'mixins';

	// Helper function to allow the creation of anonymous functions which do not
	// have .name set to the name of the variable being assigned to.
	function identity(fn) {
	  return fn;
	}

	var ReactPropTypeLocationNames;
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	} else {
	  ReactPropTypeLocationNames = {};
	}

	function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
	  /**
	   * Policies that describe methods in `ReactClassInterface`.
	   */

	  var injectedMixins = [];

	  /**
	   * Composite components are higher-level components that compose other composite
	   * or host components.
	   *
	   * To create a new type of `ReactClass`, pass a specification of
	   * your new class to `React.createClass`. The only requirement of your class
	   * specification is that you implement a `render` method.
	   *
	   *   var MyComponent = React.createClass({
	   *     render: function() {
	   *       return <div>Hello World</div>;
	   *     }
	   *   });
	   *
	   * The class specification supports a specific protocol of methods that have
	   * special meaning (e.g. `render`). See `ReactClassInterface` for
	   * more the comprehensive protocol. Any other properties and methods in the
	   * class specification will be available on the prototype.
	   *
	   * @interface ReactClassInterface
	   * @internal
	   */
	  var ReactClassInterface = {
	    /**
	     * An array of Mixin objects to include when defining your component.
	     *
	     * @type {array}
	     * @optional
	     */
	    mixins: 'DEFINE_MANY',

	    /**
	     * An object containing properties and methods that should be defined on
	     * the component's constructor instead of its prototype (static methods).
	     *
	     * @type {object}
	     * @optional
	     */
	    statics: 'DEFINE_MANY',

	    /**
	     * Definition of prop types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    propTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types for this component.
	     *
	     * @type {object}
	     * @optional
	     */
	    contextTypes: 'DEFINE_MANY',

	    /**
	     * Definition of context types this component sets for its children.
	     *
	     * @type {object}
	     * @optional
	     */
	    childContextTypes: 'DEFINE_MANY',

	    // ==== Definition methods ====

	    /**
	     * Invoked when the component is mounted. Values in the mapping will be set on
	     * `this.props` if that prop is not specified (i.e. using an `in` check).
	     *
	     * This method is invoked before `getInitialState` and therefore cannot rely
	     * on `this.state` or use `this.setState`.
	     *
	     * @return {object}
	     * @optional
	     */
	    getDefaultProps: 'DEFINE_MANY_MERGED',

	    /**
	     * Invoked once before the component is mounted. The return value will be used
	     * as the initial value of `this.state`.
	     *
	     *   getInitialState: function() {
	     *     return {
	     *       isOn: false,
	     *       fooBaz: new BazFoo()
	     *     }
	     *   }
	     *
	     * @return {object}
	     * @optional
	     */
	    getInitialState: 'DEFINE_MANY_MERGED',

	    /**
	     * @return {object}
	     * @optional
	     */
	    getChildContext: 'DEFINE_MANY_MERGED',

	    /**
	     * Uses props from `this.props` and state from `this.state` to render the
	     * structure of the component.
	     *
	     * No guarantees are made about when or how often this method is invoked, so
	     * it must not have side effects.
	     *
	     *   render: function() {
	     *     var name = this.props.name;
	     *     return <div>Hello, {name}!</div>;
	     *   }
	     *
	     * @return {ReactComponent}
	     * @required
	     */
	    render: 'DEFINE_ONCE',

	    // ==== Delegate methods ====

	    /**
	     * Invoked when the component is initially created and about to be mounted.
	     * This may have side effects, but any external subscriptions or data created
	     * by this method must be cleaned up in `componentWillUnmount`.
	     *
	     * @optional
	     */
	    componentWillMount: 'DEFINE_MANY',

	    /**
	     * Invoked when the component has been mounted and has a DOM representation.
	     * However, there is no guarantee that the DOM node is in the document.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been mounted (initialized and rendered) for the first time.
	     *
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidMount: 'DEFINE_MANY',

	    /**
	     * Invoked before the component receives new props.
	     *
	     * Use this as an opportunity to react to a prop transition by updating the
	     * state using `this.setState`. Current props are accessed via `this.props`.
	     *
	     *   componentWillReceiveProps: function(nextProps, nextContext) {
	     *     this.setState({
	     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	     *     });
	     *   }
	     *
	     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	     * transition may cause a state change, but the opposite is not true. If you
	     * need it, you are probably looking for `componentWillUpdate`.
	     *
	     * @param {object} nextProps
	     * @optional
	     */
	    componentWillReceiveProps: 'DEFINE_MANY',

	    /**
	     * Invoked while deciding if the component should be updated as a result of
	     * receiving new props, state and/or context.
	     *
	     * Use this as an opportunity to `return false` when you're certain that the
	     * transition to the new props/state/context will not require a component
	     * update.
	     *
	     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	     *     return !equal(nextProps, this.props) ||
	     *       !equal(nextState, this.state) ||
	     *       !equal(nextContext, this.context);
	     *   }
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @return {boolean} True if the component should update.
	     * @optional
	     */
	    shouldComponentUpdate: 'DEFINE_ONCE',

	    /**
	     * Invoked when the component is about to update due to a transition from
	     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	     * and `nextContext`.
	     *
	     * Use this as an opportunity to perform preparation before an update occurs.
	     *
	     * NOTE: You **cannot** use `this.setState()` in this method.
	     *
	     * @param {object} nextProps
	     * @param {?object} nextState
	     * @param {?object} nextContext
	     * @param {ReactReconcileTransaction} transaction
	     * @optional
	     */
	    componentWillUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component's DOM representation has been updated.
	     *
	     * Use this as an opportunity to operate on the DOM when the component has
	     * been updated.
	     *
	     * @param {object} prevProps
	     * @param {?object} prevState
	     * @param {?object} prevContext
	     * @param {DOMElement} rootNode DOM element representing the component.
	     * @optional
	     */
	    componentDidUpdate: 'DEFINE_MANY',

	    /**
	     * Invoked when the component is about to be removed from its parent and have
	     * its DOM representation destroyed.
	     *
	     * Use this as an opportunity to deallocate any external resources.
	     *
	     * NOTE: There is no `componentDidUnmount` since your component will have been
	     * destroyed by that point.
	     *
	     * @optional
	     */
	    componentWillUnmount: 'DEFINE_MANY',

	    // ==== Advanced methods ====

	    /**
	     * Updates the component's currently mounted DOM representation.
	     *
	     * By default, this implements React's rendering and reconciliation algorithm.
	     * Sophisticated clients may wish to override this.
	     *
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     * @overridable
	     */
	    updateComponent: 'OVERRIDE_BASE'
	  };

	  /**
	   * Mapping from class specification keys to special processing functions.
	   *
	   * Although these are declared like instance properties in the specification
	   * when defining classes using `React.createClass`, they are actually static
	   * and are accessible on the constructor instead of the prototype. Despite
	   * being static, they must be defined outside of the "statics" key under
	   * which all other static methods are defined.
	   */
	  var RESERVED_SPEC_KEYS = {
	    displayName: function(Constructor, displayName) {
	      Constructor.displayName = displayName;
	    },
	    mixins: function(Constructor, mixins) {
	      if (mixins) {
	        for (var i = 0; i < mixins.length; i++) {
	          mixSpecIntoComponent(Constructor, mixins[i]);
	        }
	      }
	    },
	    childContextTypes: function(Constructor, childContextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, childContextTypes, 'childContext');
	      }
	      Constructor.childContextTypes = _assign(
	        {},
	        Constructor.childContextTypes,
	        childContextTypes
	      );
	    },
	    contextTypes: function(Constructor, contextTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, contextTypes, 'context');
	      }
	      Constructor.contextTypes = _assign(
	        {},
	        Constructor.contextTypes,
	        contextTypes
	      );
	    },
	    /**
	     * Special case getDefaultProps which should move into statics but requires
	     * automatic merging.
	     */
	    getDefaultProps: function(Constructor, getDefaultProps) {
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps = createMergedResultFunction(
	          Constructor.getDefaultProps,
	          getDefaultProps
	        );
	      } else {
	        Constructor.getDefaultProps = getDefaultProps;
	      }
	    },
	    propTypes: function(Constructor, propTypes) {
	      if (process.env.NODE_ENV !== 'production') {
	        validateTypeDef(Constructor, propTypes, 'prop');
	      }
	      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	    },
	    statics: function(Constructor, statics) {
	      mixStaticSpecIntoComponent(Constructor, statics);
	    },
	    autobind: function() {}
	  };

	  function validateTypeDef(Constructor, typeDef, location) {
	    for (var propName in typeDef) {
	      if (typeDef.hasOwnProperty(propName)) {
	        // use a warning instead of an _invariant so components
	        // don't show up in prod but only in __DEV__
	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            typeof typeDef[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	              'React.PropTypes.',
	            Constructor.displayName || 'ReactClass',
	            ReactPropTypeLocationNames[location],
	            propName
	          );
	        }
	      }
	    }
	  }

	  function validateMethodOverride(isAlreadyDefined, name) {
	    var specPolicy = ReactClassInterface.hasOwnProperty(name)
	      ? ReactClassInterface[name]
	      : null;

	    // Disallow overriding of base class methods unless explicitly allowed.
	    if (ReactClassMixin.hasOwnProperty(name)) {
	      _invariant(
	        specPolicy === 'OVERRIDE_BASE',
	        'ReactClassInterface: You are attempting to override ' +
	          '`%s` from your class specification. Ensure that your method names ' +
	          'do not overlap with React methods.',
	        name
	      );
	    }

	    // Disallow defining methods more than once unless explicitly allowed.
	    if (isAlreadyDefined) {
	      _invariant(
	        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
	        'ReactClassInterface: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be due ' +
	          'to a mixin.',
	        name
	      );
	    }
	  }

	  /**
	   * Mixin helper which handles policy validation and reserved
	   * specification keys when building React classes.
	   */
	  function mixSpecIntoComponent(Constructor, spec) {
	    if (!spec) {
	      if (process.env.NODE_ENV !== 'production') {
	        var typeofSpec = typeof spec;
	        var isMixinValid = typeofSpec === 'object' && spec !== null;

	        if (process.env.NODE_ENV !== 'production') {
	          warning(
	            isMixinValid,
	            "%s: You're attempting to include a mixin that is either null " +
	              'or not an object. Check the mixins included by the component, ' +
	              'as well as any mixins they include themselves. ' +
	              'Expected object but got %s.',
	            Constructor.displayName || 'ReactClass',
	            spec === null ? null : typeofSpec
	          );
	        }
	      }

	      return;
	    }

	    _invariant(
	      typeof spec !== 'function',
	      "ReactClass: You're attempting to " +
	        'use a component class or function as a mixin. Instead, just use a ' +
	        'regular object.'
	    );
	    _invariant(
	      !isValidElement(spec),
	      "ReactClass: You're attempting to " +
	        'use a component as a mixin. Instead, just use a regular object.'
	    );

	    var proto = Constructor.prototype;
	    var autoBindPairs = proto.__reactAutoBindPairs;

	    // By handling mixins before any other properties, we ensure the same
	    // chaining order is applied to methods with DEFINE_MANY policy, whether
	    // mixins are listed before or after these methods in the spec.
	    if (spec.hasOwnProperty(MIXINS_KEY)) {
	      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	    }

	    for (var name in spec) {
	      if (!spec.hasOwnProperty(name)) {
	        continue;
	      }

	      if (name === MIXINS_KEY) {
	        // We have already handled mixins in a special case above.
	        continue;
	      }

	      var property = spec[name];
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      validateMethodOverride(isAlreadyDefined, name);

	      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	        RESERVED_SPEC_KEYS[name](Constructor, property);
	      } else {
	        // Setup methods on prototype:
	        // The following member methods should not be automatically bound:
	        // 1. Expected ReactClass methods (in the "interface").
	        // 2. Overridden methods (that were mixed in).
	        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	        var isFunction = typeof property === 'function';
	        var shouldAutoBind =
	          isFunction &&
	          !isReactClassMethod &&
	          !isAlreadyDefined &&
	          spec.autobind !== false;

	        if (shouldAutoBind) {
	          autoBindPairs.push(name, property);
	          proto[name] = property;
	        } else {
	          if (isAlreadyDefined) {
	            var specPolicy = ReactClassInterface[name];

	            // These cases should already be caught by validateMethodOverride.
	            _invariant(
	              isReactClassMethod &&
	                (specPolicy === 'DEFINE_MANY_MERGED' ||
	                  specPolicy === 'DEFINE_MANY'),
	              'ReactClass: Unexpected spec policy %s for key %s ' +
	                'when mixing in component specs.',
	              specPolicy,
	              name
	            );

	            // For methods which are defined more than once, call the existing
	            // methods before calling the new property, merging if appropriate.
	            if (specPolicy === 'DEFINE_MANY_MERGED') {
	              proto[name] = createMergedResultFunction(proto[name], property);
	            } else if (specPolicy === 'DEFINE_MANY') {
	              proto[name] = createChainedFunction(proto[name], property);
	            }
	          } else {
	            proto[name] = property;
	            if (process.env.NODE_ENV !== 'production') {
	              // Add verbose displayName to the function, which helps when looking
	              // at profiling tools.
	              if (typeof property === 'function' && spec.displayName) {
	                proto[name].displayName = spec.displayName + '_' + name;
	              }
	            }
	          }
	        }
	      }
	    }
	  }

	  function mixStaticSpecIntoComponent(Constructor, statics) {
	    if (!statics) {
	      return;
	    }
	    for (var name in statics) {
	      var property = statics[name];
	      if (!statics.hasOwnProperty(name)) {
	        continue;
	      }

	      var isReserved = name in RESERVED_SPEC_KEYS;
	      _invariant(
	        !isReserved,
	        'ReactClass: You are attempting to define a reserved ' +
	          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	          'as an instance property instead; it will still be accessible on the ' +
	          'constructor.',
	        name
	      );

	      var isInherited = name in Constructor;
	      _invariant(
	        !isInherited,
	        'ReactClass: You are attempting to define ' +
	          '`%s` on your component more than once. This conflict may be ' +
	          'due to a mixin.',
	        name
	      );
	      Constructor[name] = property;
	    }
	  }

	  /**
	   * Merge two objects, but throw if both contain the same key.
	   *
	   * @param {object} one The first object, which is mutated.
	   * @param {object} two The second object
	   * @return {object} one after it has been mutated to contain everything in two.
	   */
	  function mergeIntoWithNoDuplicateKeys(one, two) {
	    _invariant(
	      one && two && typeof one === 'object' && typeof two === 'object',
	      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	    );

	    for (var key in two) {
	      if (two.hasOwnProperty(key)) {
	        _invariant(
	          one[key] === undefined,
	          'mergeIntoWithNoDuplicateKeys(): ' +
	            'Tried to merge two objects with the same key: `%s`. This conflict ' +
	            'may be due to a mixin; in particular, this may be caused by two ' +
	            'getInitialState() or getDefaultProps() methods returning objects ' +
	            'with clashing keys.',
	          key
	        );
	        one[key] = two[key];
	      }
	    }
	    return one;
	  }

	  /**
	   * Creates a function that invokes two functions and merges their return values.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createMergedResultFunction(one, two) {
	    return function mergedResult() {
	      var a = one.apply(this, arguments);
	      var b = two.apply(this, arguments);
	      if (a == null) {
	        return b;
	      } else if (b == null) {
	        return a;
	      }
	      var c = {};
	      mergeIntoWithNoDuplicateKeys(c, a);
	      mergeIntoWithNoDuplicateKeys(c, b);
	      return c;
	    };
	  }

	  /**
	   * Creates a function that invokes two functions and ignores their return vales.
	   *
	   * @param {function} one Function to invoke first.
	   * @param {function} two Function to invoke second.
	   * @return {function} Function that invokes the two argument functions.
	   * @private
	   */
	  function createChainedFunction(one, two) {
	    return function chainedFunction() {
	      one.apply(this, arguments);
	      two.apply(this, arguments);
	    };
	  }

	  /**
	   * Binds a method to the component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   * @param {function} method Method to be bound.
	   * @return {function} The bound method.
	   */
	  function bindAutoBindMethod(component, method) {
	    var boundMethod = method.bind(component);
	    if (process.env.NODE_ENV !== 'production') {
	      boundMethod.__reactBoundContext = component;
	      boundMethod.__reactBoundMethod = method;
	      boundMethod.__reactBoundArguments = null;
	      var componentName = component.constructor.displayName;
	      var _bind = boundMethod.bind;
	      boundMethod.bind = function(newThis) {
	        for (
	          var _len = arguments.length,
	            args = Array(_len > 1 ? _len - 1 : 0),
	            _key = 1;
	          _key < _len;
	          _key++
	        ) {
	          args[_key - 1] = arguments[_key];
	        }

	        // User is trying to bind() an autobound method; we effectively will
	        // ignore the value of "this" that the user is trying to use, so
	        // let's warn.
	        if (newThis !== component && newThis !== null) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): React component methods may only be bound to the ' +
	                'component instance. See %s',
	              componentName
	            );
	          }
	        } else if (!args.length) {
	          if (process.env.NODE_ENV !== 'production') {
	            warning(
	              false,
	              'bind(): You are binding a component method to the component. ' +
	                'React does this for you automatically in a high-performance ' +
	                'way, so you can safely remove this call. See %s',
	              componentName
	            );
	          }
	          return boundMethod;
	        }
	        var reboundMethod = _bind.apply(boundMethod, arguments);
	        reboundMethod.__reactBoundContext = component;
	        reboundMethod.__reactBoundMethod = method;
	        reboundMethod.__reactBoundArguments = args;
	        return reboundMethod;
	      };
	    }
	    return boundMethod;
	  }

	  /**
	   * Binds all auto-bound methods in a component.
	   *
	   * @param {object} component Component whose method is going to be bound.
	   */
	  function bindAutoBindMethods(component) {
	    var pairs = component.__reactAutoBindPairs;
	    for (var i = 0; i < pairs.length; i += 2) {
	      var autoBindKey = pairs[i];
	      var method = pairs[i + 1];
	      component[autoBindKey] = bindAutoBindMethod(component, method);
	    }
	  }

	  var IsMountedPreMixin = {
	    componentDidMount: function() {
	      this.__isMounted = true;
	    }
	  };

	  var IsMountedPostMixin = {
	    componentWillUnmount: function() {
	      this.__isMounted = false;
	    }
	  };

	  /**
	   * Add more to the ReactClass base class. These are all legacy features and
	   * therefore not already part of the modern ReactComponent.
	   */
	  var ReactClassMixin = {
	    /**
	     * TODO: This will be deprecated because state should always keep a consistent
	     * type signature and the only use case for this, is to avoid that.
	     */
	    replaceState: function(newState, callback) {
	      this.updater.enqueueReplaceState(this, newState, callback);
	    },

	    /**
	     * Checks whether or not this composite component is mounted.
	     * @return {boolean} True if mounted, false otherwise.
	     * @protected
	     * @final
	     */
	    isMounted: function() {
	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this.__didWarnIsMounted,
	          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
	            'subscriptions and pending requests in componentWillUnmount to ' +
	            'prevent memory leaks.',
	          (this.constructor && this.constructor.displayName) ||
	            this.name ||
	            'Component'
	        );
	        this.__didWarnIsMounted = true;
	      }
	      return !!this.__isMounted;
	    }
	  };

	  var ReactClassComponent = function() {};
	  _assign(
	    ReactClassComponent.prototype,
	    ReactComponent.prototype,
	    ReactClassMixin
	  );

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  function createClass(spec) {
	    // To keep our warnings more understandable, we'll use a little hack here to
	    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
	    // unnecessarily identify a class without displayName as 'Constructor'.
	    var Constructor = identity(function(props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	            'JSX instead. See: https://fb.me/react-legacyfactory'
	        );
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (
	          initialState === undefined &&
	          this.getInitialState._isMockFunction
	        ) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      _invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      );

	      this.state = initialState;
	    });
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
	    mixSpecIntoComponent(Constructor, spec);
	    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    _invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    );

	    if (process.env.NODE_ENV !== 'production') {
	      warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	          'The name is phrased as a question because the function is ' +
	          'expected to return a value.',
	        spec.displayName || 'A component'
	      );
	      warning(
	        !Constructor.prototype.componentWillRecieveProps,
	        '%s has a method called ' +
	          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
	        spec.displayName || 'A component'
	      );
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  }

	  return createClass;
	}

	module.exports = factory;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(245);

	var ReactElement = __webpack_require__(255);

	var invariant = __webpack_require__(251);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(269)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(277)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(248);
	var invariant = __webpack_require__(251);
	var ReactPropTypesSecret = __webpack_require__(270);

	module.exports = function() {
	  function shim(props, propName, componentName, location, propFullName, secret) {
	    if (secret === ReactPropTypesSecret) {
	      // It is still safe when called from React.
	      return;
	    }
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim,
	    exact: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(279);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	exports.default = getMuiTheme;

	var _lodash = __webpack_require__(289);

	var _lodash2 = _interopRequireDefault(_lodash);

	var _colorManipulator = __webpack_require__(291);

	var _lightBaseTheme = __webpack_require__(293);

	var _lightBaseTheme2 = _interopRequireDefault(_lightBaseTheme);

	var _zIndex = __webpack_require__(296);

	var _zIndex2 = _interopRequireDefault(_zIndex);

	var _autoprefixer = __webpack_require__(297);

	var _autoprefixer2 = _interopRequireDefault(_autoprefixer);

	var _callOnce = __webpack_require__(329);

	var _callOnce2 = _interopRequireDefault(_callOnce);

	var _rtl = __webpack_require__(330);

	var _rtl2 = _interopRequireDefault(_rtl);

	var _compose = __webpack_require__(334);

	var _compose2 = _interopRequireDefault(_compose);

	var _typography = __webpack_require__(335);

	var _typography2 = _interopRequireDefault(_typography);

	var _colors = __webpack_require__(294);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Get the MUI theme corresponding to a base theme.
	 * It's possible to override the computed theme values
	 * by providing a second argument. The calculated
	 * theme will be deeply merged with the second argument.
	 */
	function getMuiTheme(muiTheme) {
	  for (var _len = arguments.length, more = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    more[_key - 1] = arguments[_key];
	  }

	  muiTheme = _lodash2.default.apply(undefined, [{
	    zIndex: _zIndex2.default,
	    isRtl: false,
	    userAgent: undefined
	  }, _lightBaseTheme2.default, muiTheme].concat(more));

	  var _muiTheme = muiTheme,
	      spacing = _muiTheme.spacing,
	      fontFamily = _muiTheme.fontFamily,
	      palette = _muiTheme.palette;

	  var baseTheme = { spacing: spacing, fontFamily: fontFamily, palette: palette };

	  muiTheme = (0, _lodash2.default)({
	    appBar: {
	      color: palette.primary1Color,
	      textColor: palette.alternateTextColor,
	      height: spacing.desktopKeylineIncrement,
	      titleFontWeight: _typography2.default.fontWeightNormal,
	      padding: spacing.desktopGutter
	    },
	    avatar: {
	      color: palette.canvasColor,
	      backgroundColor: (0, _colorManipulator.emphasize)(palette.canvasColor, 0.26)
	    },
	    badge: {
	      color: palette.alternateTextColor,
	      textColor: palette.textColor,
	      primaryColor: palette.primary1Color,
	      primaryTextColor: palette.alternateTextColor,
	      secondaryColor: palette.accent1Color,
	      secondaryTextColor: palette.alternateTextColor,
	      fontWeight: _typography2.default.fontWeightMedium
	    },
	    bottomNavigation: {
	      backgroundColor: palette.canvasColor,
	      unselectedColor: (0, _colorManipulator.fade)(palette.textColor, 0.54),
	      selectedColor: palette.primary1Color,
	      height: 56,
	      unselectedFontSize: 12,
	      selectedFontSize: 14
	    },
	    button: {
	      height: 36,
	      minWidth: 88,
	      iconButtonSize: spacing.iconSize * 2
	    },
	    card: {
	      titleColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
	      subtitleColor: (0, _colorManipulator.fade)(palette.textColor, 0.54),
	      fontWeight: _typography2.default.fontWeightMedium
	    },
	    cardMedia: {
	      color: _colors.darkWhite,
	      overlayContentBackground: _colors.lightBlack,
	      titleColor: _colors.darkWhite,
	      subtitleColor: _colors.lightWhite
	    },
	    cardText: {
	      textColor: palette.textColor
	    },
	    checkbox: {
	      boxColor: palette.textColor,
	      checkedColor: palette.primary1Color,
	      requiredColor: palette.primary1Color,
	      disabledColor: palette.disabledColor,
	      labelColor: palette.textColor,
	      labelDisabledColor: palette.disabledColor
	    },
	    chip: {
	      backgroundColor: (0, _colorManipulator.emphasize)(palette.canvasColor, 0.12),
	      deleteIconColor: (0, _colorManipulator.fade)(palette.textColor, 0.26),
	      textColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
	      fontSize: 14,
	      fontWeight: _typography2.default.fontWeightNormal,
	      shadow: '0 1px 6px ' + (0, _colorManipulator.fade)(palette.shadowColor, 0.12) + ',\n        0 1px 4px ' + (0, _colorManipulator.fade)(palette.shadowColor, 0.12)
	    },
	    datePicker: {
	      color: palette.primary1Color,
	      textColor: palette.alternateTextColor,
	      calendarTextColor: palette.textColor,
	      selectColor: palette.primary2Color,
	      selectTextColor: palette.alternateTextColor,
	      calendarYearBackgroundColor: palette.canvasColor,
	      headerColor: palette.pickerHeaderColor || palette.primary1Color
	    },
	    dialog: {
	      titleFontSize: 22,
	      bodyFontSize: 16,
	      bodyColor: (0, _colorManipulator.fade)(palette.textColor, 0.6)
	    },
	    dropDownMenu: {
	      accentColor: palette.borderColor
	    },
	    enhancedButton: {
	      tapHighlightColor: _colors.transparent
	    },
	    flatButton: {
	      color: _colors.transparent,
	      buttonFilterColor: '#999999',
	      disabledTextColor: (0, _colorManipulator.fade)(palette.textColor, 0.3),
	      textColor: palette.textColor,
	      primaryTextColor: palette.primary1Color,
	      secondaryTextColor: palette.accent1Color,
	      fontSize: _typography2.default.fontStyleButtonFontSize,
	      fontWeight: _typography2.default.fontWeightMedium
	    },
	    floatingActionButton: {
	      buttonSize: 56,
	      miniSize: 40,
	      color: palette.primary1Color,
	      iconColor: palette.alternateTextColor,
	      secondaryColor: palette.accent1Color,
	      secondaryIconColor: palette.alternateTextColor,
	      disabledTextColor: palette.disabledColor,
	      disabledColor: (0, _colorManipulator.emphasize)(palette.canvasColor, 0.12)
	    },
	    gridTile: {
	      textColor: _colors.white
	    },
	    icon: {
	      color: palette.canvasColor,
	      backgroundColor: palette.primary1Color
	    },
	    inkBar: {
	      backgroundColor: palette.accent1Color
	    },
	    drawer: {
	      width: spacing.desktopKeylineIncrement * 4,
	      color: palette.canvasColor
	    },
	    listItem: {
	      nestedLevelDepth: 18,
	      secondaryTextColor: palette.secondaryTextColor,
	      leftIconColor: _colors.grey600,
	      rightIconColor: _colors.grey600
	    },
	    menu: {
	      backgroundColor: palette.canvasColor,
	      containerBackgroundColor: palette.canvasColor
	    },
	    menuItem: {
	      dataHeight: 32,
	      height: 48,
	      hoverColor: (0, _colorManipulator.fade)(palette.textColor, 0.1),
	      padding: spacing.desktopGutter,
	      selectedTextColor: palette.accent1Color,
	      rightIconDesktopFill: _colors.grey600
	    },
	    menuSubheader: {
	      padding: spacing.desktopGutter,
	      borderColor: palette.borderColor,
	      textColor: palette.primary1Color
	    },
	    overlay: {
	      backgroundColor: _colors.lightBlack
	    },
	    paper: {
	      color: palette.textColor,
	      backgroundColor: palette.canvasColor,
	      zDepthShadows: [[1, 6, 0.12, 1, 4, 0.12], [3, 10, 0.16, 3, 10, 0.23], [10, 30, 0.19, 6, 10, 0.23], [14, 45, 0.25, 10, 18, 0.22], [19, 60, 0.30, 15, 20, 0.22]].map(function (d) {
	        return '0 ' + d[0] + 'px ' + d[1] + 'px ' + (0, _colorManipulator.fade)(palette.shadowColor, d[2]) + ',\n         0 ' + d[3] + 'px ' + d[4] + 'px ' + (0, _colorManipulator.fade)(palette.shadowColor, d[5]);
	      })
	    },
	    radioButton: {
	      borderColor: palette.textColor,
	      backgroundColor: palette.alternateTextColor,
	      checkedColor: palette.primary1Color,
	      requiredColor: palette.primary1Color,
	      disabledColor: palette.disabledColor,
	      size: 24,
	      labelColor: palette.textColor,
	      labelDisabledColor: palette.disabledColor
	    },
	    raisedButton: {
	      color: palette.alternateTextColor,
	      textColor: palette.textColor,
	      primaryColor: palette.primary1Color,
	      primaryTextColor: palette.alternateTextColor,
	      secondaryColor: palette.accent1Color,
	      secondaryTextColor: palette.alternateTextColor,
	      disabledColor: (0, _colorManipulator.darken)(palette.alternateTextColor, 0.1),
	      disabledTextColor: (0, _colorManipulator.fade)(palette.textColor, 0.3),
	      fontSize: _typography2.default.fontStyleButtonFontSize,
	      fontWeight: _typography2.default.fontWeightMedium
	    },
	    refreshIndicator: {
	      strokeColor: palette.borderColor,
	      loadingStrokeColor: palette.primary1Color
	    },
	    ripple: {
	      color: (0, _colorManipulator.fade)(palette.textColor, 0.87)
	    },
	    slider: {
	      trackSize: 2,
	      trackColor: palette.primary3Color,
	      trackColorSelected: palette.accent3Color,
	      handleSize: 12,
	      handleSizeDisabled: 8,
	      handleSizeActive: 18,
	      handleColorZero: palette.primary3Color,
	      handleFillColor: palette.alternateTextColor,
	      selectionColor: palette.primary1Color,
	      rippleColor: palette.primary1Color
	    },
	    snackbar: {
	      textColor: palette.alternateTextColor,
	      backgroundColor: palette.textColor,
	      actionColor: palette.accent1Color
	    },
	    subheader: {
	      color: (0, _colorManipulator.fade)(palette.textColor, 0.54),
	      fontWeight: _typography2.default.fontWeightMedium
	    },
	    stepper: {
	      backgroundColor: 'transparent',
	      hoverBackgroundColor: (0, _colorManipulator.fade)(_colors.black, 0.06),
	      iconColor: palette.primary1Color,
	      hoveredIconColor: _colors.grey700,
	      inactiveIconColor: _colors.grey500,
	      textColor: (0, _colorManipulator.fade)(_colors.black, 0.87),
	      disabledTextColor: (0, _colorManipulator.fade)(_colors.black, 0.26),
	      connectorLineColor: _colors.grey400
	    },
	    svgIcon: {
	      color: palette.textColor
	    },
	    table: {
	      backgroundColor: palette.canvasColor
	    },
	    tableFooter: {
	      borderColor: palette.borderColor,
	      textColor: palette.accent3Color
	    },
	    tableHeader: {
	      borderColor: palette.borderColor
	    },
	    tableHeaderColumn: {
	      textColor: palette.accent3Color,
	      height: 56,
	      spacing: 24
	    },
	    tableRow: {
	      hoverColor: palette.accent2Color,
	      stripeColor: (0, _colorManipulator.fade)((0, _colorManipulator.lighten)(palette.primary1Color, 0.5), 0.4),
	      selectedColor: palette.borderColor,
	      textColor: palette.textColor,
	      borderColor: palette.borderColor,
	      height: 48
	    },
	    tableRowColumn: {
	      height: 48,
	      spacing: 24
	    },
	    tabs: {
	      backgroundColor: palette.primary1Color,
	      textColor: (0, _colorManipulator.fade)(palette.alternateTextColor, 0.7),
	      selectedTextColor: palette.alternateTextColor
	    },
	    textField: {
	      textColor: palette.textColor,
	      hintColor: palette.disabledColor,
	      floatingLabelColor: palette.disabledColor,
	      disabledTextColor: palette.disabledColor,
	      errorColor: _colors.red500,
	      focusColor: palette.primary1Color,
	      backgroundColor: 'transparent',
	      borderColor: palette.borderColor
	    },
	    timePicker: {
	      color: palette.alternateTextColor,
	      textColor: palette.alternateTextColor,
	      accentColor: palette.primary1Color,
	      clockColor: palette.textColor,
	      clockCircleColor: palette.clockCircleColor,
	      headerColor: palette.pickerHeaderColor || palette.primary1Color,
	      selectColor: palette.primary2Color,
	      selectTextColor: palette.alternateTextColor
	    },
	    toggle: {
	      thumbOnColor: palette.primary1Color,
	      thumbOffColor: palette.accent2Color,
	      thumbDisabledColor: palette.borderColor,
	      thumbRequiredColor: palette.primary1Color,
	      trackOnColor: (0, _colorManipulator.fade)(palette.primary1Color, 0.5),
	      trackOffColor: palette.primary3Color,
	      trackDisabledColor: palette.primary3Color,
	      labelColor: palette.textColor,
	      labelDisabledColor: palette.disabledColor,
	      trackRequiredColor: (0, _colorManipulator.fade)(palette.primary1Color, 0.5)
	    },
	    toolbar: {
	      color: (0, _colorManipulator.fade)(palette.textColor, 0.54),
	      hoverColor: (0, _colorManipulator.fade)(palette.textColor, 0.87),
	      backgroundColor: (0, _colorManipulator.darken)(palette.accent2Color, 0.05),
	      height: 56,
	      titleFontSize: 20,
	      iconColor: (0, _colorManipulator.fade)(palette.textColor, 0.4),
	      separatorColor: (0, _colorManipulator.fade)(palette.textColor, 0.175),
	      menuHoverColor: (0, _colorManipulator.fade)(palette.textColor, 0.1)
	    },
	    tooltip: {
	      color: _colors.white,
	      rippleBackgroundColor: _colors.grey700,
	      opacity: 0.9
	    }
	  }, muiTheme, {
	    baseTheme: baseTheme, // To provide backward compatibility.
	    rawTheme: baseTheme // To provide backward compatibility.
	  });

	  var transformers = [_autoprefixer2.default, _rtl2.default, _callOnce2.default].map(function (t) {
	    return t(muiTheme);
	  }).filter(function (t) {
	    return t;
	  });

	  muiTheme.prepareStyles = _compose2.default.apply(undefined, (0, _toConsumableArray3.default)(transformers));

	  return muiTheme;
	}

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _from = __webpack_require__(280);

	var _from2 = _interopRequireDefault(_from);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }

	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(281), __esModule: true };

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(191);
	__webpack_require__(282);
	module.exports = __webpack_require__(169).Array.from;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var ctx = __webpack_require__(170);
	var $export = __webpack_require__(168);
	var toObject = __webpack_require__(159);
	var call = __webpack_require__(283);
	var isArrayIter = __webpack_require__(284);
	var toLength = __webpack_require__(207);
	var createProperty = __webpack_require__(285);
	var getIterFn = __webpack_require__(286);

	$export($export.S + $export.F * !__webpack_require__(288)(function (iter) { Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
	    var O = toObject(arrayLike);
	    var C = typeof this == 'function' ? this : Array;
	    var aLen = arguments.length;
	    var mapfn = aLen > 1 ? arguments[1] : undefined;
	    var mapping = mapfn !== undefined;
	    var index = 0;
	    var iterFn = getIterFn(O);
	    var length, result, step, iterator;
	    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
	      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for (result = new C(length); length > index; index++) {
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(174);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators = __webpack_require__(197);
	var ITERATOR = __webpack_require__(212)('iterator');
	var ArrayProto = Array.prototype;

	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(173);
	var createDesc = __webpack_require__(181);

	module.exports = function (object, index, value) {
	  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(287);
	var ITERATOR = __webpack_require__(212)('iterator');
	var Iterators = __webpack_require__(197);
	module.exports = __webpack_require__(169).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(205);
	var TAG = __webpack_require__(212)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR = __webpack_require__(212)('iterator');
	var SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () { SAFE_CLOSING = true; };
	  // eslint-disable-next-line no-throw-literal
	  Array.from(riter, function () { throw 2; });
	} catch (e) { /* empty */ }

	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7];
	    var iter = arr[ITERATOR]();
	    iter.next = function () { return { done: safe = true }; };
	    arr[ITERATOR] = function () { return iter; };
	    exec(arr);
	  } catch (e) { /* empty */ }
	  return safe;
	};


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, module) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    return freeProcess && freeProcess.binding('util');
	  } catch (e) {}
	}());

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Adds the key-value `pair` to `map`.
	 *
	 * @private
	 * @param {Object} map The map to modify.
	 * @param {Array} pair The key-value pair to add.
	 * @returns {Object} Returns `map`.
	 */
	function addMapEntry(map, pair) {
	  // Don't return `map.set` because it's not chainable in IE 11.
	  map.set(pair[0], pair[1]);
	  return map;
	}

	/**
	 * Adds `value` to `set`.
	 *
	 * @private
	 * @param {Object} set The set to modify.
	 * @param {*} value The value to add.
	 * @returns {Object} Returns `set`.
	 */
	function addSetEntry(set, value) {
	  // Don't return `set.add` because it's not chainable in IE 11.
	  set.add(value);
	  return set;
	}

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array ? array.length : 0;

	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array ? array.length : 0;

	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	/** Used for built-in method references. */
	var arrayProto = Array.prototype,
	    funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    Symbol = root.Symbol,
	    Uint8Array = root.Uint8Array,
	    getPrototype = overArg(Object.getPrototypeOf, Object),
	    objectCreate = Object.create,
	    propertyIsEnumerable = objectProto.propertyIsEnumerable,
	    splice = arrayProto.splice;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols,
	    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
	    nativeKeys = overArg(Object.keys, Object),
	    nativeMax = Math.max;

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView'),
	    Map = getNative(root, 'Map'),
	    Promise = getNative(root, 'Promise'),
	    Set = getNative(root, 'Set'),
	    WeakMap = getNative(root, 'WeakMap'),
	    nativeCreate = getNative(Object, 'create');

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	}

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  return this.has(key) && delete this.__data__[key];
	}

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
	}

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	}

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  return true;
	}

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries ? entries.length : 0;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  return getMapData(this, key)['delete'](key);
	}

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  getMapData(this, key).set(key, value);
	  return this;
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  this.__data__ = new ListCache(entries);
	}

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	}

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  return this.__data__['delete'](key);
	}

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var cache = this.__data__;
	  if (cache instanceof ListCache) {
	    var pairs = cache.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      return this;
	    }
	    cache = this.__data__ = new MapCache(pairs);
	  }
	  cache.set(key, value);
	  return this;
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  // Safari 9 makes `arguments.length` enumerable in strict mode.
	  var result = (isArray(value) || isArguments(value))
	    ? baseTimes(value.length, String)
	    : [];

	  var length = result.length,
	      skipIndexes = !!length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	/**
	 * This function is like `assignValue` except that it doesn't assign
	 * `undefined` values.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignMergeValue(object, key, value) {
	  if ((value !== undefined && !eq(object[key], value)) ||
	      (typeof key == 'number' && value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}

	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    object[key] = value;
	  }
	}

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}

	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @param {boolean} [isFull] Specify a clone including symbols.
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
	  var result;
	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;

	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      if (isHostObject(value)) {
	        return object ? value : {};
	      }
	      result = initCloneObject(isFunc ? {} : value);
	      if (!isDeep) {
	        return copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, baseClone, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);

	  if (!isArr) {
	    var props = isFull ? getAllKeys(value) : keys(value);
	  }
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
	  });
	  return result;
	}

	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} prototype The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	function baseCreate(proto) {
	  return isObject(proto) ? objectCreate(proto) : {};
	}

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	/**
	 * The base implementation of `getTag`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  return objectToString.call(value);
	}

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
	}

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];

	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	/**
	 * The base implementation of `_.merge` without support for multiple sources.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} [customizer] The function to customize merged values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMerge(object, source, srcIndex, customizer, stack) {
	  if (object === source) {
	    return;
	  }
	  if (!(isArray(source) || isTypedArray(source))) {
	    var props = baseKeysIn(source);
	  }
	  arrayEach(props || source, function(srcValue, key) {
	    if (props) {
	      key = srcValue;
	      srcValue = source[key];
	    }
	    if (isObject(srcValue)) {
	      stack || (stack = new Stack);
	      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
	    }
	    else {
	      var newValue = customizer
	        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
	        : undefined;

	      if (newValue === undefined) {
	        newValue = srcValue;
	      }
	      assignMergeValue(object, key, newValue);
	    }
	  });
	}

	/**
	 * A specialized version of `baseMerge` for arrays and objects which performs
	 * deep merges and tracks traversed objects enabling objects with circular
	 * references to be merged.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @param {string} key The key of the value to merge.
	 * @param {number} srcIndex The index of `source`.
	 * @param {Function} mergeFunc The function to merge values.
	 * @param {Function} [customizer] The function to customize assigned values.
	 * @param {Object} [stack] Tracks traversed source values and their merged
	 *  counterparts.
	 */
	function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
	  var objValue = object[key],
	      srcValue = source[key],
	      stacked = stack.get(srcValue);

	  if (stacked) {
	    assignMergeValue(object, key, stacked);
	    return;
	  }
	  var newValue = customizer
	    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
	    : undefined;

	  var isCommon = newValue === undefined;

	  if (isCommon) {
	    newValue = srcValue;
	    if (isArray(srcValue) || isTypedArray(srcValue)) {
	      if (isArray(objValue)) {
	        newValue = objValue;
	      }
	      else if (isArrayLikeObject(objValue)) {
	        newValue = copyArray(objValue);
	      }
	      else {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	    }
	    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
	      if (isArguments(objValue)) {
	        newValue = toPlainObject(objValue);
	      }
	      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
	        isCommon = false;
	        newValue = baseClone(srcValue, true);
	      }
	      else {
	        newValue = objValue;
	      }
	    }
	    else {
	      isCommon = false;
	    }
	  }
	  if (isCommon) {
	    // Recursively merge objects and arrays (susceptible to call stack limits).
	    stack.set(srcValue, newValue);
	    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
	    stack['delete'](srcValue);
	  }
	  assignMergeValue(object, key, newValue);
	}

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = array;
	    return apply(func, this, otherArgs);
	  };
	}

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var result = new buffer.constructor(buffer.length);
	  buffer.copy(result);
	  return result;
	}

	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}

	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}

	/**
	 * Creates a clone of `map`.
	 *
	 * @private
	 * @param {Object} map The map to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned map.
	 */
	function cloneMap(map, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
	  return arrayReduce(array, addMapEntry, new map.constructor);
	}

	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}

	/**
	 * Creates a clone of `set`.
	 *
	 * @private
	 * @param {Object} set The set to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned set.
	 */
	function cloneSet(set, isDeep, cloneFunc) {
	  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
	  return arrayReduce(array, addSetEntry, new set.constructor);
	}

	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}

	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;

	    assignValue(object, key, newValue === undefined ? source[key] : newValue);
	  }
	  return object;
	}

	/**
	 * Copies own symbol properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}

	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;

	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;

	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}

	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	/**
	 * Creates an array of the own enumerable symbol properties of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11,
	// for data views in Edge < 14, and promises in Node.js.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = objectToString.call(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : undefined;

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = array.constructor(length);

	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}

	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}

	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {Function} cloneFunc The function to clone values.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, cloneFunc, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);

	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);

	    case dataViewTag:
	      return cloneDataView(object, isDeep);

	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);

	    case mapTag:
	      return cloneMap(object, isDeep, cloneFunc);

	    case numberTag:
	    case stringTag:
	      return new Ctor(object);

	    case regexpTag:
	      return cloneRegExp(object);

	    case setTag:
	      return cloneSet(object, isDeep, cloneFunc);

	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  length = length == null ? MAX_SAFE_INTEGER : length;
	  return !!length &&
	    (typeof value == 'number' || reIsUint.test(value)) &&
	    (value > -1 && value % 1 == 0 && value < length);
	}

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to process.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	function isArguments(value) {
	  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
	  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
	    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
	}

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 8-9 which returns 'object' for typed array and other constructors.
	  var tag = isObject(value) ? objectToString.call(value) : '';
	  return tag == funcTag || tag == genTag;
	}

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	/**
	 * Converts `value` to a plain object flattening inherited enumerable string
	 * keyed properties of `value` to own properties of the plain object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {Object} Returns the converted plain object.
	 * @example
	 *
	 * function Foo() {
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.assign({ 'a': 1 }, new Foo);
	 * // => { 'a': 1, 'b': 2 }
	 *
	 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
	 * // => { 'a': 1, 'b': 2, 'c': 3 }
	 */
	function toPlainObject(value) {
	  return copyObject(value, keysIn(value));
	}

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}

	/**
	 * This method is like `_.assign` except that it recursively merges own and
	 * inherited enumerable string keyed properties of source objects into the
	 * destination object. Source properties that resolve to `undefined` are
	 * skipped if a destination value exists. Array and plain object properties
	 * are merged recursively. Other objects and value types are overridden by
	 * assignment. Source objects are applied from left to right. Subsequent
	 * sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.5.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @example
	 *
	 * var object = {
	 *   'a': [{ 'b': 2 }, { 'd': 4 }]
	 * };
	 *
	 * var other = {
	 *   'a': [{ 'c': 3 }, { 'e': 5 }]
	 * };
	 *
	 * _.merge(object, other);
	 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
	 */
	var merge = createAssigner(function(object, source, srcIndex) {
	  baseMerge(object, source, srcIndex);
	});

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = merge;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(290)(module)))

/***/ }),
/* 290 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.convertColorToString = convertColorToString;
	exports.convertHexToRGB = convertHexToRGB;
	exports.decomposeColor = decomposeColor;
	exports.getContrastRatio = getContrastRatio;
	exports.getLuminance = getLuminance;
	exports.emphasize = emphasize;
	exports.fade = fade;
	exports.darken = darken;
	exports.lighten = lighten;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Returns a number whose value is limited to the given range.
	 *
	 * @param {number} value The value to be clamped
	 * @param {number} min The lower boundary of the output range
	 * @param {number} max The upper boundary of the output range
	 * @returns {number} A number in the range [min, max]
	 */
	function clamp(value, min, max) {
	  if (value < min) {
	    return min;
	  }
	  if (value > max) {
	    return max;
	  }
	  return value;
	}

	/**
	 * Converts a color object with type and values to a string.
	 *
	 * @param {object} color - Decomposed color
	 * @param {string} color.type - One of, 'rgb', 'rgba', 'hsl', 'hsla'
	 * @param {array} color.values - [n,n,n] or [n,n,n,n]
	 * @returns {string} A CSS color string
	 */
	function convertColorToString(color) {
	  var type = color.type,
	      values = color.values;


	  if (type.indexOf('rgb') > -1) {
	    // Only convert the first 3 values to int (i.e. not alpha)
	    for (var i = 0; i < 3; i++) {
	      values[i] = parseInt(values[i]);
	    }
	  }

	  var colorString = void 0;

	  if (type.indexOf('hsl') > -1) {
	    colorString = color.type + '(' + values[0] + ', ' + values[1] + '%, ' + values[2] + '%';
	  } else {
	    colorString = color.type + '(' + values[0] + ', ' + values[1] + ', ' + values[2];
	  }

	  if (values.length === 4) {
	    colorString += ', ' + color.values[3] + ')';
	  } else {
	    colorString += ')';
	  }

	  return colorString;
	}

	/**
	 * Converts a color from CSS hex format to CSS rgb format.
	 *
	 *  @param {string} color - Hex color, i.e. #nnn or #nnnnnn
	 *  @returns {string} A CSS rgb color string
	 */
	function convertHexToRGB(color) {
	  if (color.length === 4) {
	    var extendedColor = '#';
	    for (var i = 1; i < color.length; i++) {
	      extendedColor += color.charAt(i) + color.charAt(i);
	    }
	    color = extendedColor;
	  }

	  var values = {
	    r: parseInt(color.substr(1, 2), 16),
	    g: parseInt(color.substr(3, 2), 16),
	    b: parseInt(color.substr(5, 2), 16)
	  };

	  return 'rgb(' + values.r + ', ' + values.g + ', ' + values.b + ')';
	}

	/**
	 * Returns an object with the type and values of a color.
	 *
	 * Note: Does not support rgb % values and color names.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {{type: string, values: number[]}} A MUI color object
	 */
	function decomposeColor(color) {
	  if (color.charAt(0) === '#') {
	    return decomposeColor(convertHexToRGB(color));
	  }

	  var marker = color.indexOf('(');

	  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(marker !== -1, 'Material-UI: The ' + color + ' color was not parsed correctly,\n  because it has an unsupported format (color name or RGB %). This may cause issues in component rendering.') : void 0;

	  var type = color.substring(0, marker);
	  var values = color.substring(marker + 1, color.length - 1).split(',');
	  values = values.map(function (value) {
	    return parseFloat(value);
	  });

	  return { type: type, values: values };
	}

	/**
	 * Calculates the contrast ratio between two colors.
	 *
	 * Formula: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
	 *
	 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} A contrast ratio value in the range 0 - 21 with 2 digit precision.
	 */
	function getContrastRatio(foreground, background) {
	  var lumA = getLuminance(foreground);
	  var lumB = getLuminance(background);
	  var contrastRatio = (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);

	  return Number(contrastRatio.toFixed(2)); // Truncate at two digits
	}

	/**
	 * The relative brightness of any point in a color space,
	 * normalized to 0 for darkest black and 1 for lightest white.
	 *
	 * Formula: https://www.w3.org/WAI/GL/wiki/Relative_luminance
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @returns {number} The relative brightness of the color in the range 0 - 1
	 */
	function getLuminance(color) {
	  color = decomposeColor(color);

	  if (color.type.indexOf('rgb') > -1) {
	    var rgb = color.values.map(function (val) {
	      val /= 255; // normalized
	      return val <= 0.03928 ? val / 12.92 : Math.pow((val + 0.055) / 1.055, 2.4);
	    });
	    return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3)); // Truncate at 3 digits
	  } else if (color.type.indexOf('hsl') > -1) {
	    return color.values[2] / 100;
	  }
	}

	/**
	 * Darken or lighten a colour, depending on its luminance.
	 * Light colors are darkened, dark colors are lightened.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function emphasize(color) {
	  var coefficient = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.15;

	  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);
	}

	/**
	 * Set the absolute transparency of a color.
	 * Any existing alpha values are overwritten.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} value - value to set the alpha channel to in the range 0 -1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function fade(color, value) {
	  color = decomposeColor(color);
	  value = clamp(value, 0, 1);

	  if (color.type === 'rgb' || color.type === 'hsl') {
	    color.type += 'a';
	  }
	  color.values[3] = value;

	  return convertColorToString(color);
	}

	/**
	 * Darkens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function darken(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient, 0, 1);

	  if (color.type.indexOf('hsl') > -1) {
	    color.values[2] *= 1 - coefficient;
	  } else if (color.type.indexOf('rgb') > -1) {
	    for (var i = 0; i < 3; i++) {
	      color.values[i] *= 1 - coefficient;
	    }
	  }
	  return convertColorToString(color);
	}

	/**
	 * Lightens a color.
	 *
	 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
	 * @param {number} coefficient - multiplier in the range 0 - 1
	 * @returns {string} A CSS color string. Hex input values are returned as rgb
	 */
	function lighten(color, coefficient) {
	  color = decomposeColor(color);
	  coefficient = clamp(coefficient, 0, 1);

	  if (color.type.indexOf('hsl') > -1) {
	    color.values[2] += (100 - color.values[2]) * coefficient;
	  } else if (color.type.indexOf('rgb') > -1) {
	    for (var i = 0; i < 3; i++) {
	      color.values[i] += (255 - color.values[i]) * coefficient;
	    }
	  }

	  return convertColorToString(color);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _colors = __webpack_require__(294);

	var _colorManipulator = __webpack_require__(291);

	var _spacing = __webpack_require__(295);

	var _spacing2 = _interopRequireDefault(_spacing);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 *  Light Theme is the default theme used in material-ui. It is guaranteed to
	 *  have all theme variables needed for every component. Variables not defined
	 *  in a custom theme will default to these values.
	 */
	exports.default = {
	  spacing: _spacing2.default,
	  fontFamily: 'Roboto, sans-serif',
	  borderRadius: 2,
	  palette: {
	    primary1Color: _colors.cyan500,
	    primary2Color: _colors.cyan700,
	    primary3Color: _colors.grey400,
	    accent1Color: _colors.pinkA200,
	    accent2Color: _colors.grey100,
	    accent3Color: _colors.grey500,
	    textColor: _colors.darkBlack,
	    secondaryTextColor: (0, _colorManipulator.fade)(_colors.darkBlack, 0.54),
	    alternateTextColor: _colors.white,
	    canvasColor: _colors.white,
	    borderColor: _colors.grey300,
	    disabledColor: (0, _colorManipulator.fade)(_colors.darkBlack, 0.3),
	    pickerHeaderColor: _colors.cyan500,
	    clockCircleColor: (0, _colorManipulator.fade)(_colors.darkBlack, 0.07),
	    shadowColor: _colors.fullBlack
	  }
	}; /**
	    * NB: If you update this file, please also update `docs/src/app/customization/Themes.js`
	    */

/***/ }),
/* 294 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var red50 = exports.red50 = '#ffebee';
	var red100 = exports.red100 = '#ffcdd2';
	var red200 = exports.red200 = '#ef9a9a';
	var red300 = exports.red300 = '#e57373';
	var red400 = exports.red400 = '#ef5350';
	var red500 = exports.red500 = '#f44336';
	var red600 = exports.red600 = '#e53935';
	var red700 = exports.red700 = '#d32f2f';
	var red800 = exports.red800 = '#c62828';
	var red900 = exports.red900 = '#b71c1c';
	var redA100 = exports.redA100 = '#ff8a80';
	var redA200 = exports.redA200 = '#ff5252';
	var redA400 = exports.redA400 = '#ff1744';
	var redA700 = exports.redA700 = '#d50000';

	var pink50 = exports.pink50 = '#fce4ec';
	var pink100 = exports.pink100 = '#f8bbd0';
	var pink200 = exports.pink200 = '#f48fb1';
	var pink300 = exports.pink300 = '#f06292';
	var pink400 = exports.pink400 = '#ec407a';
	var pink500 = exports.pink500 = '#e91e63';
	var pink600 = exports.pink600 = '#d81b60';
	var pink700 = exports.pink700 = '#c2185b';
	var pink800 = exports.pink800 = '#ad1457';
	var pink900 = exports.pink900 = '#880e4f';
	var pinkA100 = exports.pinkA100 = '#ff80ab';
	var pinkA200 = exports.pinkA200 = '#ff4081';
	var pinkA400 = exports.pinkA400 = '#f50057';
	var pinkA700 = exports.pinkA700 = '#c51162';

	var purple50 = exports.purple50 = '#f3e5f5';
	var purple100 = exports.purple100 = '#e1bee7';
	var purple200 = exports.purple200 = '#ce93d8';
	var purple300 = exports.purple300 = '#ba68c8';
	var purple400 = exports.purple400 = '#ab47bc';
	var purple500 = exports.purple500 = '#9c27b0';
	var purple600 = exports.purple600 = '#8e24aa';
	var purple700 = exports.purple700 = '#7b1fa2';
	var purple800 = exports.purple800 = '#6a1b9a';
	var purple900 = exports.purple900 = '#4a148c';
	var purpleA100 = exports.purpleA100 = '#ea80fc';
	var purpleA200 = exports.purpleA200 = '#e040fb';
	var purpleA400 = exports.purpleA400 = '#d500f9';
	var purpleA700 = exports.purpleA700 = '#aa00ff';

	var deepPurple50 = exports.deepPurple50 = '#ede7f6';
	var deepPurple100 = exports.deepPurple100 = '#d1c4e9';
	var deepPurple200 = exports.deepPurple200 = '#b39ddb';
	var deepPurple300 = exports.deepPurple300 = '#9575cd';
	var deepPurple400 = exports.deepPurple400 = '#7e57c2';
	var deepPurple500 = exports.deepPurple500 = '#673ab7';
	var deepPurple600 = exports.deepPurple600 = '#5e35b1';
	var deepPurple700 = exports.deepPurple700 = '#512da8';
	var deepPurple800 = exports.deepPurple800 = '#4527a0';
	var deepPurple900 = exports.deepPurple900 = '#311b92';
	var deepPurpleA100 = exports.deepPurpleA100 = '#b388ff';
	var deepPurpleA200 = exports.deepPurpleA200 = '#7c4dff';
	var deepPurpleA400 = exports.deepPurpleA400 = '#651fff';
	var deepPurpleA700 = exports.deepPurpleA700 = '#6200ea';

	var indigo50 = exports.indigo50 = '#e8eaf6';
	var indigo100 = exports.indigo100 = '#c5cae9';
	var indigo200 = exports.indigo200 = '#9fa8da';
	var indigo300 = exports.indigo300 = '#7986cb';
	var indigo400 = exports.indigo400 = '#5c6bc0';
	var indigo500 = exports.indigo500 = '#3f51b5';
	var indigo600 = exports.indigo600 = '#3949ab';
	var indigo700 = exports.indigo700 = '#303f9f';
	var indigo800 = exports.indigo800 = '#283593';
	var indigo900 = exports.indigo900 = '#1a237e';
	var indigoA100 = exports.indigoA100 = '#8c9eff';
	var indigoA200 = exports.indigoA200 = '#536dfe';
	var indigoA400 = exports.indigoA400 = '#3d5afe';
	var indigoA700 = exports.indigoA700 = '#304ffe';

	var blue50 = exports.blue50 = '#e3f2fd';
	var blue100 = exports.blue100 = '#bbdefb';
	var blue200 = exports.blue200 = '#90caf9';
	var blue300 = exports.blue300 = '#64b5f6';
	var blue400 = exports.blue400 = '#42a5f5';
	var blue500 = exports.blue500 = '#2196f3';
	var blue600 = exports.blue600 = '#1e88e5';
	var blue700 = exports.blue700 = '#1976d2';
	var blue800 = exports.blue800 = '#1565c0';
	var blue900 = exports.blue900 = '#0d47a1';
	var blueA100 = exports.blueA100 = '#82b1ff';
	var blueA200 = exports.blueA200 = '#448aff';
	var blueA400 = exports.blueA400 = '#2979ff';
	var blueA700 = exports.blueA700 = '#2962ff';

	var lightBlue50 = exports.lightBlue50 = '#e1f5fe';
	var lightBlue100 = exports.lightBlue100 = '#b3e5fc';
	var lightBlue200 = exports.lightBlue200 = '#81d4fa';
	var lightBlue300 = exports.lightBlue300 = '#4fc3f7';
	var lightBlue400 = exports.lightBlue400 = '#29b6f6';
	var lightBlue500 = exports.lightBlue500 = '#03a9f4';
	var lightBlue600 = exports.lightBlue600 = '#039be5';
	var lightBlue700 = exports.lightBlue700 = '#0288d1';
	var lightBlue800 = exports.lightBlue800 = '#0277bd';
	var lightBlue900 = exports.lightBlue900 = '#01579b';
	var lightBlueA100 = exports.lightBlueA100 = '#80d8ff';
	var lightBlueA200 = exports.lightBlueA200 = '#40c4ff';
	var lightBlueA400 = exports.lightBlueA400 = '#00b0ff';
	var lightBlueA700 = exports.lightBlueA700 = '#0091ea';

	var cyan50 = exports.cyan50 = '#e0f7fa';
	var cyan100 = exports.cyan100 = '#b2ebf2';
	var cyan200 = exports.cyan200 = '#80deea';
	var cyan300 = exports.cyan300 = '#4dd0e1';
	var cyan400 = exports.cyan400 = '#26c6da';
	var cyan500 = exports.cyan500 = '#00bcd4';
	var cyan600 = exports.cyan600 = '#00acc1';
	var cyan700 = exports.cyan700 = '#0097a7';
	var cyan800 = exports.cyan800 = '#00838f';
	var cyan900 = exports.cyan900 = '#006064';
	var cyanA100 = exports.cyanA100 = '#84ffff';
	var cyanA200 = exports.cyanA200 = '#18ffff';
	var cyanA400 = exports.cyanA400 = '#00e5ff';
	var cyanA700 = exports.cyanA700 = '#00b8d4';

	var teal50 = exports.teal50 = '#e0f2f1';
	var teal100 = exports.teal100 = '#b2dfdb';
	var teal200 = exports.teal200 = '#80cbc4';
	var teal300 = exports.teal300 = '#4db6ac';
	var teal400 = exports.teal400 = '#26a69a';
	var teal500 = exports.teal500 = '#009688';
	var teal600 = exports.teal600 = '#00897b';
	var teal700 = exports.teal700 = '#00796b';
	var teal800 = exports.teal800 = '#00695c';
	var teal900 = exports.teal900 = '#004d40';
	var tealA100 = exports.tealA100 = '#a7ffeb';
	var tealA200 = exports.tealA200 = '#64ffda';
	var tealA400 = exports.tealA400 = '#1de9b6';
	var tealA700 = exports.tealA700 = '#00bfa5';

	var green50 = exports.green50 = '#e8f5e9';
	var green100 = exports.green100 = '#c8e6c9';
	var green200 = exports.green200 = '#a5d6a7';
	var green300 = exports.green300 = '#81c784';
	var green400 = exports.green400 = '#66bb6a';
	var green500 = exports.green500 = '#4caf50';
	var green600 = exports.green600 = '#43a047';
	var green700 = exports.green700 = '#388e3c';
	var green800 = exports.green800 = '#2e7d32';
	var green900 = exports.green900 = '#1b5e20';
	var greenA100 = exports.greenA100 = '#b9f6ca';
	var greenA200 = exports.greenA200 = '#69f0ae';
	var greenA400 = exports.greenA400 = '#00e676';
	var greenA700 = exports.greenA700 = '#00c853';

	var lightGreen50 = exports.lightGreen50 = '#f1f8e9';
	var lightGreen100 = exports.lightGreen100 = '#dcedc8';
	var lightGreen200 = exports.lightGreen200 = '#c5e1a5';
	var lightGreen300 = exports.lightGreen300 = '#aed581';
	var lightGreen400 = exports.lightGreen400 = '#9ccc65';
	var lightGreen500 = exports.lightGreen500 = '#8bc34a';
	var lightGreen600 = exports.lightGreen600 = '#7cb342';
	var lightGreen700 = exports.lightGreen700 = '#689f38';
	var lightGreen800 = exports.lightGreen800 = '#558b2f';
	var lightGreen900 = exports.lightGreen900 = '#33691e';
	var lightGreenA100 = exports.lightGreenA100 = '#ccff90';
	var lightGreenA200 = exports.lightGreenA200 = '#b2ff59';
	var lightGreenA400 = exports.lightGreenA400 = '#76ff03';
	var lightGreenA700 = exports.lightGreenA700 = '#64dd17';

	var lime50 = exports.lime50 = '#f9fbe7';
	var lime100 = exports.lime100 = '#f0f4c3';
	var lime200 = exports.lime200 = '#e6ee9c';
	var lime300 = exports.lime300 = '#dce775';
	var lime400 = exports.lime400 = '#d4e157';
	var lime500 = exports.lime500 = '#cddc39';
	var lime600 = exports.lime600 = '#c0ca33';
	var lime700 = exports.lime700 = '#afb42b';
	var lime800 = exports.lime800 = '#9e9d24';
	var lime900 = exports.lime900 = '#827717';
	var limeA100 = exports.limeA100 = '#f4ff81';
	var limeA200 = exports.limeA200 = '#eeff41';
	var limeA400 = exports.limeA400 = '#c6ff00';
	var limeA700 = exports.limeA700 = '#aeea00';

	var yellow50 = exports.yellow50 = '#fffde7';
	var yellow100 = exports.yellow100 = '#fff9c4';
	var yellow200 = exports.yellow200 = '#fff59d';
	var yellow300 = exports.yellow300 = '#fff176';
	var yellow400 = exports.yellow400 = '#ffee58';
	var yellow500 = exports.yellow500 = '#ffeb3b';
	var yellow600 = exports.yellow600 = '#fdd835';
	var yellow700 = exports.yellow700 = '#fbc02d';
	var yellow800 = exports.yellow800 = '#f9a825';
	var yellow900 = exports.yellow900 = '#f57f17';
	var yellowA100 = exports.yellowA100 = '#ffff8d';
	var yellowA200 = exports.yellowA200 = '#ffff00';
	var yellowA400 = exports.yellowA400 = '#ffea00';
	var yellowA700 = exports.yellowA700 = '#ffd600';

	var amber50 = exports.amber50 = '#fff8e1';
	var amber100 = exports.amber100 = '#ffecb3';
	var amber200 = exports.amber200 = '#ffe082';
	var amber300 = exports.amber300 = '#ffd54f';
	var amber400 = exports.amber400 = '#ffca28';
	var amber500 = exports.amber500 = '#ffc107';
	var amber600 = exports.amber600 = '#ffb300';
	var amber700 = exports.amber700 = '#ffa000';
	var amber800 = exports.amber800 = '#ff8f00';
	var amber900 = exports.amber900 = '#ff6f00';
	var amberA100 = exports.amberA100 = '#ffe57f';
	var amberA200 = exports.amberA200 = '#ffd740';
	var amberA400 = exports.amberA400 = '#ffc400';
	var amberA700 = exports.amberA700 = '#ffab00';

	var orange50 = exports.orange50 = '#fff3e0';
	var orange100 = exports.orange100 = '#ffe0b2';
	var orange200 = exports.orange200 = '#ffcc80';
	var orange300 = exports.orange300 = '#ffb74d';
	var orange400 = exports.orange400 = '#ffa726';
	var orange500 = exports.orange500 = '#ff9800';
	var orange600 = exports.orange600 = '#fb8c00';
	var orange700 = exports.orange700 = '#f57c00';
	var orange800 = exports.orange800 = '#ef6c00';
	var orange900 = exports.orange900 = '#e65100';
	var orangeA100 = exports.orangeA100 = '#ffd180';
	var orangeA200 = exports.orangeA200 = '#ffab40';
	var orangeA400 = exports.orangeA400 = '#ff9100';
	var orangeA700 = exports.orangeA700 = '#ff6d00';

	var deepOrange50 = exports.deepOrange50 = '#fbe9e7';
	var deepOrange100 = exports.deepOrange100 = '#ffccbc';
	var deepOrange200 = exports.deepOrange200 = '#ffab91';
	var deepOrange300 = exports.deepOrange300 = '#ff8a65';
	var deepOrange400 = exports.deepOrange400 = '#ff7043';
	var deepOrange500 = exports.deepOrange500 = '#ff5722';
	var deepOrange600 = exports.deepOrange600 = '#f4511e';
	var deepOrange700 = exports.deepOrange700 = '#e64a19';
	var deepOrange800 = exports.deepOrange800 = '#d84315';
	var deepOrange900 = exports.deepOrange900 = '#bf360c';
	var deepOrangeA100 = exports.deepOrangeA100 = '#ff9e80';
	var deepOrangeA200 = exports.deepOrangeA200 = '#ff6e40';
	var deepOrangeA400 = exports.deepOrangeA400 = '#ff3d00';
	var deepOrangeA700 = exports.deepOrangeA700 = '#dd2c00';

	var brown50 = exports.brown50 = '#efebe9';
	var brown100 = exports.brown100 = '#d7ccc8';
	var brown200 = exports.brown200 = '#bcaaa4';
	var brown300 = exports.brown300 = '#a1887f';
	var brown400 = exports.brown400 = '#8d6e63';
	var brown500 = exports.brown500 = '#795548';
	var brown600 = exports.brown600 = '#6d4c41';
	var brown700 = exports.brown700 = '#5d4037';
	var brown800 = exports.brown800 = '#4e342e';
	var brown900 = exports.brown900 = '#3e2723';

	var blueGrey50 = exports.blueGrey50 = '#eceff1';
	var blueGrey100 = exports.blueGrey100 = '#cfd8dc';
	var blueGrey200 = exports.blueGrey200 = '#b0bec5';
	var blueGrey300 = exports.blueGrey300 = '#90a4ae';
	var blueGrey400 = exports.blueGrey400 = '#78909c';
	var blueGrey500 = exports.blueGrey500 = '#607d8b';
	var blueGrey600 = exports.blueGrey600 = '#546e7a';
	var blueGrey700 = exports.blueGrey700 = '#455a64';
	var blueGrey800 = exports.blueGrey800 = '#37474f';
	var blueGrey900 = exports.blueGrey900 = '#263238';

	var grey50 = exports.grey50 = '#fafafa';
	var grey100 = exports.grey100 = '#f5f5f5';
	var grey200 = exports.grey200 = '#eeeeee';
	var grey300 = exports.grey300 = '#e0e0e0';
	var grey400 = exports.grey400 = '#bdbdbd';
	var grey500 = exports.grey500 = '#9e9e9e';
	var grey600 = exports.grey600 = '#757575';
	var grey700 = exports.grey700 = '#616161';
	var grey800 = exports.grey800 = '#424242';
	var grey900 = exports.grey900 = '#212121';

	var black = exports.black = '#000000';
	var white = exports.white = '#ffffff';

	var transparent = exports.transparent = 'rgba(0, 0, 0, 0)';
	var fullBlack = exports.fullBlack = 'rgba(0, 0, 0, 1)';
	var darkBlack = exports.darkBlack = 'rgba(0, 0, 0, 0.87)';
	var lightBlack = exports.lightBlack = 'rgba(0, 0, 0, 0.54)';
	var minBlack = exports.minBlack = 'rgba(0, 0, 0, 0.26)';
	var faintBlack = exports.faintBlack = 'rgba(0, 0, 0, 0.12)';
	var fullWhite = exports.fullWhite = 'rgba(255, 255, 255, 1)';
	var darkWhite = exports.darkWhite = 'rgba(255, 255, 255, 0.87)';
	var lightWhite = exports.lightWhite = 'rgba(255, 255, 255, 0.54)';

/***/ }),
/* 295 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  iconSize: 24,

	  desktopGutter: 24,
	  desktopGutterMore: 32,
	  desktopGutterLess: 16,
	  desktopGutterMini: 8,
	  desktopKeylineIncrement: 64,
	  desktopDropDownMenuItemHeight: 32,
	  desktopDropDownMenuFontSize: 15,
	  desktopDrawerMenuItemHeight: 48,
	  desktopSubheaderHeight: 48,
	  desktopToolbarHeight: 56
	};

/***/ }),
/* 296 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  menu: 1000,
	  appBar: 1100,
	  drawerOverlay: 1200,
	  drawer: 1300,
	  dialogOverlay: 1400,
	  dialog: 1500,
	  layer: 2000,
	  popover: 2100,
	  snackbar: 2900,
	  tooltip: 3000
	};

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (muiTheme) {
	  var isClient = typeof navigator !== 'undefined';
	  var userAgent = muiTheme.userAgent;

	  if (userAgent === undefined && isClient) {
	    userAgent = navigator.userAgent;
	  }

	  if (userAgent === undefined && !hasWarnedAboutUserAgent) {
	    process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: userAgent should be supplied in the muiTheme context\n      for server-side rendering.') : void 0;

	    hasWarnedAboutUserAgent = true;
	  }

	  var prefixAll = (0, _createPrefixer2.default)(_autoprefixerStatic2.default);

	  if (userAgent === false) {
	    // Disabled autoprefixer
	    return null;
	  } else if (userAgent === 'all' || userAgent === undefined) {
	    // Prefix for all user agent
	    return function (style) {
	      var isFlex = ['flex', 'inline-flex'].indexOf(style.display) !== -1;
	      var stylePrefixed = prefixAll(style);

	      if (isFlex) {
	        var display = stylePrefixed.display;
	        if (isClient) {
	          // We can't apply this join with react-dom:
	          // #https://github.com/facebook/react/issues/6467
	          stylePrefixed.display = display[display.length - 1];
	        } else {
	          stylePrefixed.display = display.join('; display: ');
	        }
	      }

	      return stylePrefixed;
	    };
	  } else {
	    var Prefixer = (0, _createPrefixer4.default)(_autoprefixerDynamic2.default, prefixAll);
	    var prefixer = new Prefixer({
	      userAgent: userAgent
	    });

	    return function (style) {
	      return prefixer.prefix(style);
	    };
	  }
	};

	var _createPrefixer = __webpack_require__(298);

	var _createPrefixer2 = _interopRequireDefault(_createPrefixer);

	var _createPrefixer3 = __webpack_require__(304);

	var _createPrefixer4 = _interopRequireDefault(_createPrefixer3);

	var _autoprefixerDynamic = __webpack_require__(309);

	var _autoprefixerDynamic2 = _interopRequireDefault(_autoprefixerDynamic);

	var _autoprefixerStatic = __webpack_require__(320);

	var _autoprefixerStatic2 = _interopRequireDefault(_autoprefixerStatic);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var hasWarnedAboutUserAgent = false;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = createPrefixer;

	var _prefixProperty = __webpack_require__(299);

	var _prefixProperty2 = _interopRequireDefault(_prefixProperty);

	var _prefixValue = __webpack_require__(301);

	var _prefixValue2 = _interopRequireDefault(_prefixValue);

	var _addNewValuesOnly = __webpack_require__(302);

	var _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);

	var _isObject = __webpack_require__(303);

	var _isObject2 = _interopRequireDefault(_isObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createPrefixer(_ref) {
	  var prefixMap = _ref.prefixMap,
	      plugins = _ref.plugins;

	  function prefixAll(style) {
	    for (var property in style) {
	      var value = style[property];

	      // handle nested objects
	      if ((0, _isObject2.default)(value)) {
	        style[property] = prefixAll(value);
	        // handle array values
	      } else if (Array.isArray(value)) {
	        var combinedValue = [];

	        for (var i = 0, len = value.length; i < len; ++i) {
	          var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, prefixMap);
	          (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);
	        }

	        // only modify the value if it was touched
	        // by any plugin to prevent unnecessary mutations
	        if (combinedValue.length > 0) {
	          style[property] = combinedValue;
	        }
	      } else {
	        var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, prefixMap);

	        // only modify the value if it was touched
	        // by any plugin to prevent unnecessary mutations
	        if (_processedValue) {
	          style[property] = _processedValue;
	        }

	        (0, _prefixProperty2.default)(prefixMap, property, style);
	      }
	    }

	    return style;
	  }

	  return prefixAll;
	}
	module.exports = exports['default'];

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixProperty;

	var _capitalizeString = __webpack_require__(300);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function prefixProperty(prefixProperties, property, style) {
	  if (prefixProperties.hasOwnProperty(property)) {
	    var requiredPrefixes = prefixProperties[property];
	    for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {
	      style[requiredPrefixes[i] + (0, _capitalizeString2.default)(property)] = style[property];
	    }
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 300 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = capitalizeString;
	function capitalizeString(str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	}
	module.exports = exports["default"];

/***/ }),
/* 301 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = prefixValue;
	function prefixValue(plugins, property, value, style, metaData) {
	  for (var i = 0, len = plugins.length; i < len; ++i) {
	    var processedValue = plugins[i](property, value, style, metaData);

	    // we can stop processing if a value is returned
	    // as all plugin criteria are unique
	    if (processedValue) {
	      return processedValue;
	    }
	  }
	}
	module.exports = exports["default"];

/***/ }),
/* 302 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = addNewValuesOnly;
	function addIfNew(list, value) {
	  if (list.indexOf(value) === -1) {
	    list.push(value);
	  }
	}

	function addNewValuesOnly(list, values) {
	  if (Array.isArray(values)) {
	    for (var i = 0, len = values.length; i < len; ++i) {
	      addIfNew(list, values[i]);
	    }
	  } else {
	    addIfNew(list, values);
	  }
	}
	module.exports = exports["default"];

/***/ }),
/* 303 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isObject;
	function isObject(value) {
	  return value instanceof Object && !Array.isArray(value);
	}
	module.exports = exports["default"];

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	exports.default = createPrefixer;

	var _getBrowserInformation = __webpack_require__(305);

	var _getBrowserInformation2 = _interopRequireDefault(_getBrowserInformation);

	var _getPrefixedKeyframes = __webpack_require__(308);

	var _getPrefixedKeyframes2 = _interopRequireDefault(_getPrefixedKeyframes);

	var _capitalizeString = __webpack_require__(300);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	var _addNewValuesOnly = __webpack_require__(302);

	var _addNewValuesOnly2 = _interopRequireDefault(_addNewValuesOnly);

	var _isObject = __webpack_require__(303);

	var _isObject2 = _interopRequireDefault(_isObject);

	var _prefixValue = __webpack_require__(301);

	var _prefixValue2 = _interopRequireDefault(_prefixValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function createPrefixer(_ref) {
	  var prefixMap = _ref.prefixMap,
	      plugins = _ref.plugins;
	  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (style) {
	    return style;
	  };

	  return function () {
	    /**
	    * Instantiante a new prefixer
	    * @param {string} userAgent - userAgent to gather prefix information according to caniuse.com
	    * @param {string} keepUnprefixed - keeps unprefixed properties and values
	    */
	    function Prefixer() {
	      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	      _classCallCheck(this, Prefixer);

	      var defaultUserAgent = typeof navigator !== 'undefined' ? navigator.userAgent : undefined;

	      this._userAgent = options.userAgent || defaultUserAgent;
	      this._keepUnprefixed = options.keepUnprefixed || false;

	      if (this._userAgent) {
	        this._browserInfo = (0, _getBrowserInformation2.default)(this._userAgent);
	      }

	      // Checks if the userAgent was resolved correctly
	      if (this._browserInfo && this._browserInfo.cssPrefix) {
	        this.prefixedKeyframes = (0, _getPrefixedKeyframes2.default)(this._browserInfo.browserName, this._browserInfo.browserVersion, this._browserInfo.cssPrefix);
	      } else {
	        this._useFallback = true;
	        return false;
	      }

	      var prefixData = this._browserInfo.browserName && prefixMap[this._browserInfo.browserName];
	      if (prefixData) {
	        this._requiresPrefix = {};

	        for (var property in prefixData) {
	          if (prefixData[property] >= this._browserInfo.browserVersion) {
	            this._requiresPrefix[property] = true;
	          }
	        }

	        this._hasPropsRequiringPrefix = Object.keys(this._requiresPrefix).length > 0;
	      } else {
	        this._useFallback = true;
	      }

	      this._metaData = {
	        browserVersion: this._browserInfo.browserVersion,
	        browserName: this._browserInfo.browserName,
	        cssPrefix: this._browserInfo.cssPrefix,
	        jsPrefix: this._browserInfo.jsPrefix,
	        keepUnprefixed: this._keepUnprefixed,
	        requiresPrefix: this._requiresPrefix
	      };
	    }

	    _createClass(Prefixer, [{
	      key: 'prefix',
	      value: function prefix(style) {
	        // use static prefixer as fallback if userAgent can not be resolved
	        if (this._useFallback) {
	          return fallback(style);
	        }

	        // only add prefixes if needed
	        if (!this._hasPropsRequiringPrefix) {
	          return style;
	        }

	        return this._prefixStyle(style);
	      }
	    }, {
	      key: '_prefixStyle',
	      value: function _prefixStyle(style) {
	        for (var property in style) {
	          var value = style[property];

	          // handle nested objects
	          if ((0, _isObject2.default)(value)) {
	            style[property] = this.prefix(value);
	            // handle array values
	          } else if (Array.isArray(value)) {
	            var combinedValue = [];

	            for (var i = 0, len = value.length; i < len; ++i) {
	              var processedValue = (0, _prefixValue2.default)(plugins, property, value[i], style, this._metaData);
	              (0, _addNewValuesOnly2.default)(combinedValue, processedValue || value[i]);
	            }

	            // only modify the value if it was touched
	            // by any plugin to prevent unnecessary mutations
	            if (combinedValue.length > 0) {
	              style[property] = combinedValue;
	            }
	          } else {
	            var _processedValue = (0, _prefixValue2.default)(plugins, property, value, style, this._metaData);

	            // only modify the value if it was touched
	            // by any plugin to prevent unnecessary mutations
	            if (_processedValue) {
	              style[property] = _processedValue;
	            }

	            // add prefixes to properties
	            if (this._requiresPrefix.hasOwnProperty(property)) {
	              style[this._browserInfo.jsPrefix + (0, _capitalizeString2.default)(property)] = value;
	              if (!this._keepUnprefixed) {
	                delete style[property];
	              }
	            }
	          }
	        }

	        return style;
	      }

	      /**
	      * Returns a prefixed version of the style object using all vendor prefixes
	      * @param {Object} styles - Style object that gets prefixed properties added
	      * @returns {Object} - Style object with prefixed properties and values
	      */

	    }], [{
	      key: 'prefixAll',
	      value: function prefixAll(styles) {
	        return fallback(styles);
	      }
	    }]);

	    return Prefixer;
	  }();
	}
	module.exports = exports['default'];

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getBrowserInformation;

	var _bowser = __webpack_require__(306);

	var _bowser2 = _interopRequireDefault(_bowser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var prefixByBrowser = {
	  chrome: 'Webkit',
	  safari: 'Webkit',
	  ios: 'Webkit',
	  android: 'Webkit',
	  phantom: 'Webkit',
	  opera: 'Webkit',
	  webos: 'Webkit',
	  blackberry: 'Webkit',
	  bada: 'Webkit',
	  tizen: 'Webkit',
	  chromium: 'Webkit',
	  vivaldi: 'Webkit',
	  firefox: 'Moz',
	  seamoney: 'Moz',
	  sailfish: 'Moz',
	  msie: 'ms',
	  msedge: 'ms'
	};


	var browserByCanIuseAlias = {
	  chrome: 'chrome',
	  chromium: 'chrome',
	  safari: 'safari',
	  firfox: 'firefox',
	  msedge: 'edge',
	  opera: 'opera',
	  vivaldi: 'opera',
	  msie: 'ie'
	};

	function getBrowserName(browserInfo) {
	  if (browserInfo.firefox) {
	    return 'firefox';
	  }

	  if (browserInfo.mobile || browserInfo.tablet) {
	    if (browserInfo.ios) {
	      return 'ios_saf';
	    } else if (browserInfo.android) {
	      return 'android';
	    } else if (browserInfo.opera) {
	      return 'op_mini';
	    }
	  }

	  for (var browser in browserByCanIuseAlias) {
	    if (browserInfo.hasOwnProperty(browser)) {
	      return browserByCanIuseAlias[browser];
	    }
	  }
	}

	/**
	 * Uses bowser to get default browser browserInformation such as version and name
	 * Evaluates bowser browserInfo and adds vendorPrefix browserInformation
	 * @param {string} userAgent - userAgent that gets evaluated
	 */
	function getBrowserInformation(userAgent) {
	  var browserInfo = _bowser2.default._detect(userAgent);

	  if (browserInfo.yandexbrowser) {
	    browserInfo = _bowser2.default._detect(userAgent.replace(/YaBrowser\/[0-9.]*/, ''));
	  }

	  for (var browser in prefixByBrowser) {
	    if (browserInfo.hasOwnProperty(browser)) {
	      var prefix = prefixByBrowser[browser];

	      browserInfo.jsPrefix = prefix;
	      browserInfo.cssPrefix = '-' + prefix.toLowerCase() + '-';
	      break;
	    }
	  }

	  browserInfo.browserName = getBrowserName(browserInfo);

	  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN
	  if (browserInfo.version) {
	    browserInfo.browserVersion = parseFloat(browserInfo.version);
	  } else {
	    browserInfo.browserVersion = parseInt(parseFloat(browserInfo.osversion), 10);
	  }

	  browserInfo.osVersion = parseFloat(browserInfo.osversion);

	  // iOS forces all browsers to use Safari under the hood
	  // as the Safari version seems to match the iOS version
	  // we just explicitely use the osversion instead
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/72
	  if (browserInfo.browserName === 'ios_saf' && browserInfo.browserVersion > browserInfo.osVersion) {
	    browserInfo.browserVersion = browserInfo.osVersion;
	  }

	  // seperate native android chrome
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/45
	  if (browserInfo.browserName === 'android' && browserInfo.chrome && browserInfo.browserVersion > 37) {
	    browserInfo.browserName = 'and_chr';
	  }

	  // For android < 4.4 we want to check the osversion
	  // not the chrome version, see issue #26
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/26
	  if (browserInfo.browserName === 'android' && browserInfo.osVersion < 5) {
	    browserInfo.browserVersion = browserInfo.osVersion;
	  }

	  // Samsung browser are basically build on Chrome > 44
	  // https://github.com/rofrischmann/inline-style-prefixer/issues/102
	  if (browserInfo.browserName === 'android' && browserInfo.samsungBrowser) {
	    browserInfo.browserName = 'and_chr';
	    browserInfo.browserVersion = 44;
	  }

	  return browserInfo;
	}
	module.exports = exports['default'];

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

	/*!
	 * Bowser - a browser detector
	 * https://github.com/ded/bowser
	 * MIT License | (c) Dustin Diaz 2015
	 */

	!function (root, name, definition) {
	  if (typeof module != 'undefined' && module.exports) module.exports = definition()
	  else if (true) __webpack_require__(307)(name, definition)
	  else root[name] = definition()
	}(this, 'bowser', function () {
	  /**
	    * See useragents.js for examples of navigator.userAgent
	    */

	  var t = true

	  function detect(ua) {

	    function getFirstMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[1]) || '';
	    }

	    function getSecondMatch(regex) {
	      var match = ua.match(regex);
	      return (match && match.length > 1 && match[2]) || '';
	    }

	    var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase()
	      , likeAndroid = /like android/i.test(ua)
	      , android = !likeAndroid && /android/i.test(ua)
	      , nexusMobile = /nexus\s*[0-6]\s*/i.test(ua)
	      , nexusTablet = !nexusMobile && /nexus\s*[0-9]+/i.test(ua)
	      , chromeos = /CrOS/.test(ua)
	      , silk = /silk/i.test(ua)
	      , sailfish = /sailfish/i.test(ua)
	      , tizen = /tizen/i.test(ua)
	      , webos = /(web|hpw)os/i.test(ua)
	      , windowsphone = /windows phone/i.test(ua)
	      , samsungBrowser = /SamsungBrowser/i.test(ua)
	      , windows = !windowsphone && /windows/i.test(ua)
	      , mac = !iosdevice && !silk && /macintosh/i.test(ua)
	      , linux = !android && !sailfish && !tizen && !webos && /linux/i.test(ua)
	      , edgeVersion = getFirstMatch(/edge\/(\d+(\.\d+)?)/i)
	      , versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i)
	      , tablet = /tablet/i.test(ua) && !/tablet pc/i.test(ua)
	      , mobile = !tablet && /[^-]mobi/i.test(ua)
	      , xbox = /xbox/i.test(ua)
	      , result

	    if (/opera/i.test(ua)) {
	      //  an old Opera
	      result = {
	        name: 'Opera'
	      , opera: t
	      , version: versionIdentifier || getFirstMatch(/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)
	      }
	    } else if (/opr\/|opios/i.test(ua)) {
	      // a new Opera
	      result = {
	        name: 'Opera'
	        , opera: t
	        , version: getFirstMatch(/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (/SamsungBrowser/i.test(ua)) {
	      result = {
	        name: 'Samsung Internet for Android'
	        , samsungBrowser: t
	        , version: versionIdentifier || getFirstMatch(/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/coast/i.test(ua)) {
	      result = {
	        name: 'Opera Coast'
	        , coast: t
	        , version: versionIdentifier || getFirstMatch(/(?:coast)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/yabrowser/i.test(ua)) {
	      result = {
	        name: 'Yandex Browser'
	      , yandexbrowser: t
	      , version: versionIdentifier || getFirstMatch(/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/ucbrowser/i.test(ua)) {
	      result = {
	          name: 'UC Browser'
	        , ucbrowser: t
	        , version: getFirstMatch(/(?:ucbrowser)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/mxios/i.test(ua)) {
	      result = {
	        name: 'Maxthon'
	        , maxthon: t
	        , version: getFirstMatch(/(?:mxios)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/epiphany/i.test(ua)) {
	      result = {
	        name: 'Epiphany'
	        , epiphany: t
	        , version: getFirstMatch(/(?:epiphany)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/puffin/i.test(ua)) {
	      result = {
	        name: 'Puffin'
	        , puffin: t
	        , version: getFirstMatch(/(?:puffin)[\s\/](\d+(?:\.\d+)?)/i)
	      }
	    }
	    else if (/sleipnir/i.test(ua)) {
	      result = {
	        name: 'Sleipnir'
	        , sleipnir: t
	        , version: getFirstMatch(/(?:sleipnir)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (/k-meleon/i.test(ua)) {
	      result = {
	        name: 'K-Meleon'
	        , kMeleon: t
	        , version: getFirstMatch(/(?:k-meleon)[\s\/](\d+(?:\.\d+)+)/i)
	      }
	    }
	    else if (windowsphone) {
	      result = {
	        name: 'Windows Phone'
	      , osname: 'Windows Phone'
	      , windowsphone: t
	      }
	      if (edgeVersion) {
	        result.msedge = t
	        result.version = edgeVersion
	      }
	      else {
	        result.msie = t
	        result.version = getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/msie|trident/i.test(ua)) {
	      result = {
	        name: 'Internet Explorer'
	      , msie: t
	      , version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)
	      }
	    } else if (chromeos) {
	      result = {
	        name: 'Chrome'
	      , osname: 'Chrome OS'
	      , chromeos: t
	      , chromeBook: t
	      , chrome: t
	      , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    } else if (/chrome.+? edge/i.test(ua)) {
	      result = {
	        name: 'Microsoft Edge'
	      , msedge: t
	      , version: edgeVersion
	      }
	    }
	    else if (/vivaldi/i.test(ua)) {
	      result = {
	        name: 'Vivaldi'
	        , vivaldi: t
	        , version: getFirstMatch(/vivaldi\/(\d+(\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (sailfish) {
	      result = {
	        name: 'Sailfish'
	      , osname: 'Sailfish OS'
	      , sailfish: t
	      , version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/seamonkey\//i.test(ua)) {
	      result = {
	        name: 'SeaMonkey'
	      , seamonkey: t
	      , version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/firefox|iceweasel|fxios/i.test(ua)) {
	      result = {
	        name: 'Firefox'
	      , firefox: t
	      , version: getFirstMatch(/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)
	      }
	      if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
	        result.firefoxos = t
	        result.osname = 'Firefox OS'
	      }
	    }
	    else if (silk) {
	      result =  {
	        name: 'Amazon Silk'
	      , silk: t
	      , version : getFirstMatch(/silk\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/phantom/i.test(ua)) {
	      result = {
	        name: 'PhantomJS'
	      , phantom: t
	      , version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/slimerjs/i.test(ua)) {
	      result = {
	        name: 'SlimerJS'
	        , slimer: t
	        , version: getFirstMatch(/slimerjs\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (/blackberry|\bbb\d+/i.test(ua) || /rim\stablet/i.test(ua)) {
	      result = {
	        name: 'BlackBerry'
	      , osname: 'BlackBerry OS'
	      , blackberry: t
	      , version: versionIdentifier || getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (webos) {
	      result = {
	        name: 'WebOS'
	      , osname: 'WebOS'
	      , webos: t
	      , version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
	      };
	      /touchpad\//i.test(ua) && (result.touchpad = t)
	    }
	    else if (/bada/i.test(ua)) {
	      result = {
	        name: 'Bada'
	      , osname: 'Bada'
	      , bada: t
	      , version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)
	      };
	    }
	    else if (tizen) {
	      result = {
	        name: 'Tizen'
	      , osname: 'Tizen'
	      , tizen: t
	      , version: getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || versionIdentifier
	      };
	    }
	    else if (/qupzilla/i.test(ua)) {
	      result = {
	        name: 'QupZilla'
	        , qupzilla: t
	        , version: getFirstMatch(/(?:qupzilla)[\s\/](\d+(?:\.\d+)+)/i) || versionIdentifier
	      }
	    }
	    else if (/chromium/i.test(ua)) {
	      result = {
	        name: 'Chromium'
	        , chromium: t
	        , version: getFirstMatch(/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i) || versionIdentifier
	      }
	    }
	    else if (/chrome|crios|crmo/i.test(ua)) {
	      result = {
	        name: 'Chrome'
	        , chrome: t
	        , version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
	      }
	    }
	    else if (android) {
	      result = {
	        name: 'Android'
	        , version: versionIdentifier
	      }
	    }
	    else if (/safari|applewebkit/i.test(ua)) {
	      result = {
	        name: 'Safari'
	      , safari: t
	      }
	      if (versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    }
	    else if (iosdevice) {
	      result = {
	        name : iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'
	      }
	      // WTF: version is not part of user agent in web apps
	      if (versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    }
	    else if(/googlebot/i.test(ua)) {
	      result = {
	        name: 'Googlebot'
	      , googlebot: t
	      , version: getFirstMatch(/googlebot\/(\d+(\.\d+))/i) || versionIdentifier
	      }
	    }
	    else {
	      result = {
	        name: getFirstMatch(/^(.*)\/(.*) /),
	        version: getSecondMatch(/^(.*)\/(.*) /)
	     };
	   }

	    // set webkit or gecko flag for browsers based on these engines
	    if (!result.msedge && /(apple)?webkit/i.test(ua)) {
	      if (/(apple)?webkit\/537\.36/i.test(ua)) {
	        result.name = result.name || "Blink"
	        result.blink = t
	      } else {
	        result.name = result.name || "Webkit"
	        result.webkit = t
	      }
	      if (!result.version && versionIdentifier) {
	        result.version = versionIdentifier
	      }
	    } else if (!result.opera && /gecko\//i.test(ua)) {
	      result.name = result.name || "Gecko"
	      result.gecko = t
	      result.version = result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)
	    }

	    // set OS flags for platforms that have multiple browsers
	    if (!result.windowsphone && !result.msedge && (android || result.silk)) {
	      result.android = t
	      result.osname = 'Android'
	    } else if (!result.windowsphone && !result.msedge && iosdevice) {
	      result[iosdevice] = t
	      result.ios = t
	      result.osname = 'iOS'
	    } else if (mac) {
	      result.mac = t
	      result.osname = 'macOS'
	    } else if (xbox) {
	      result.xbox = t
	      result.osname = 'Xbox'
	    } else if (windows) {
	      result.windows = t
	      result.osname = 'Windows'
	    } else if (linux) {
	      result.linux = t
	      result.osname = 'Linux'
	    }

	    function getWindowsVersion (s) {
	      switch (s) {
	        case 'NT': return 'NT'
	        case 'XP': return 'XP'
	        case 'NT 5.0': return '2000'
	        case 'NT 5.1': return 'XP'
	        case 'NT 5.2': return '2003'
	        case 'NT 6.0': return 'Vista'
	        case 'NT 6.1': return '7'
	        case 'NT 6.2': return '8'
	        case 'NT 6.3': return '8.1'
	        case 'NT 10.0': return '10'
	        default: return undefined
	      }
	    }

	    // OS version extraction
	    var osVersion = '';
	    if (result.windows) {
	      osVersion = getWindowsVersion(getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i))
	    } else if (result.windowsphone) {
	      osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
	    } else if (result.mac) {
	      osVersion = getFirstMatch(/Mac OS X (\d+([_\.\s]\d+)*)/i);
	      osVersion = osVersion.replace(/[_\s]/g, '.');
	    } else if (iosdevice) {
	      osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
	      osVersion = osVersion.replace(/[_\s]/g, '.');
	    } else if (android) {
	      osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
	    } else if (result.webos) {
	      osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
	    } else if (result.blackberry) {
	      osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
	    } else if (result.bada) {
	      osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
	    } else if (result.tizen) {
	      osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
	    }
	    if (osVersion) {
	      result.osversion = osVersion;
	    }

	    // device type extraction
	    var osMajorVersion = !result.windows && osVersion.split('.')[0];
	    if (
	         tablet
	      || nexusTablet
	      || iosdevice == 'ipad'
	      || (android && (osMajorVersion == 3 || (osMajorVersion >= 4 && !mobile)))
	      || result.silk
	    ) {
	      result.tablet = t
	    } else if (
	         mobile
	      || iosdevice == 'iphone'
	      || iosdevice == 'ipod'
	      || android
	      || nexusMobile
	      || result.blackberry
	      || result.webos
	      || result.bada
	    ) {
	      result.mobile = t
	    }

	    // Graded Browser Support
	    // http://developer.yahoo.com/yui/articles/gbs
	    if (result.msedge ||
	        (result.msie && result.version >= 10) ||
	        (result.yandexbrowser && result.version >= 15) ||
			    (result.vivaldi && result.version >= 1.0) ||
	        (result.chrome && result.version >= 20) ||
	        (result.samsungBrowser && result.version >= 4) ||
	        (result.firefox && result.version >= 20.0) ||
	        (result.safari && result.version >= 6) ||
	        (result.opera && result.version >= 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] >= 6) ||
	        (result.blackberry && result.version >= 10.1)
	        || (result.chromium && result.version >= 20)
	        ) {
	      result.a = t;
	    }
	    else if ((result.msie && result.version < 10) ||
	        (result.chrome && result.version < 20) ||
	        (result.firefox && result.version < 20.0) ||
	        (result.safari && result.version < 6) ||
	        (result.opera && result.version < 10.0) ||
	        (result.ios && result.osversion && result.osversion.split(".")[0] < 6)
	        || (result.chromium && result.version < 20)
	        ) {
	      result.c = t
	    } else result.x = t

	    return result
	  }

	  var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent || '' : '')

	  bowser.test = function (browserList) {
	    for (var i = 0; i < browserList.length; ++i) {
	      var browserItem = browserList[i];
	      if (typeof browserItem=== 'string') {
	        if (browserItem in bowser) {
	          return true;
	        }
	      }
	    }
	    return false;
	  }

	  /**
	   * Get version precisions count
	   *
	   * @example
	   *   getVersionPrecision("1.10.3") // 3
	   *
	   * @param  {string} version
	   * @return {number}
	   */
	  function getVersionPrecision(version) {
	    return version.split(".").length;
	  }

	  /**
	   * Array::map polyfill
	   *
	   * @param  {Array} arr
	   * @param  {Function} iterator
	   * @return {Array}
	   */
	  function map(arr, iterator) {
	    var result = [], i;
	    if (Array.prototype.map) {
	      return Array.prototype.map.call(arr, iterator);
	    }
	    for (i = 0; i < arr.length; i++) {
	      result.push(iterator(arr[i]));
	    }
	    return result;
	  }

	  /**
	   * Calculate browser version weight
	   *
	   * @example
	   *   compareVersions(['1.10.2.1',  '1.8.2.1.90'])    // 1
	   *   compareVersions(['1.010.2.1', '1.09.2.1.90']);  // 1
	   *   compareVersions(['1.10.2.1',  '1.10.2.1']);     // 0
	   *   compareVersions(['1.10.2.1',  '1.0800.2']);     // -1
	   *
	   * @param  {Array<String>} versions versions to compare
	   * @return {Number} comparison result
	   */
	  function compareVersions(versions) {
	    // 1) get common precision for both versions, for example for "10.0" and "9" it should be 2
	    var precision = Math.max(getVersionPrecision(versions[0]), getVersionPrecision(versions[1]));
	    var chunks = map(versions, function (version) {
	      var delta = precision - getVersionPrecision(version);

	      // 2) "9" -> "9.0" (for precision = 2)
	      version = version + new Array(delta + 1).join(".0");

	      // 3) "9.0" -> ["000000000"", "000000009"]
	      return map(version.split("."), function (chunk) {
	        return new Array(20 - chunk.length).join("0") + chunk;
	      }).reverse();
	    });

	    // iterate in reverse order by reversed chunks array
	    while (--precision >= 0) {
	      // 4) compare: "000000009" > "000000010" = false (but "9" > "10" = true)
	      if (chunks[0][precision] > chunks[1][precision]) {
	        return 1;
	      }
	      else if (chunks[0][precision] === chunks[1][precision]) {
	        if (precision === 0) {
	          // all version chunks are same
	          return 0;
	        }
	      }
	      else {
	        return -1;
	      }
	    }
	  }

	  /**
	   * Check if browser is unsupported
	   *
	   * @example
	   *   bowser.isUnsupportedBrowser({
	   *     msie: "10",
	   *     firefox: "23",
	   *     chrome: "29",
	   *     safari: "5.1",
	   *     opera: "16",
	   *     phantom: "534"
	   *   });
	   *
	   * @param  {Object}  minVersions map of minimal version to browser
	   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
	   * @param  {String}  [ua] user agent string
	   * @return {Boolean}
	   */
	  function isUnsupportedBrowser(minVersions, strictMode, ua) {
	    var _bowser = bowser;

	    // make strictMode param optional with ua param usage
	    if (typeof strictMode === 'string') {
	      ua = strictMode;
	      strictMode = void(0);
	    }

	    if (strictMode === void(0)) {
	      strictMode = false;
	    }
	    if (ua) {
	      _bowser = detect(ua);
	    }

	    var version = "" + _bowser.version;
	    for (var browser in minVersions) {
	      if (minVersions.hasOwnProperty(browser)) {
	        if (_bowser[browser]) {
	          if (typeof minVersions[browser] !== 'string') {
	            throw new Error('Browser version in the minVersion map should be a string: ' + browser + ': ' + String(minVersions));
	          }

	          // browser version and min supported version.
	          return compareVersions([version, minVersions[browser]]) < 0;
	        }
	      }
	    }

	    return strictMode; // not found
	  }

	  /**
	   * Check if browser is supported
	   *
	   * @param  {Object} minVersions map of minimal version to browser
	   * @param  {Boolean} [strictMode = false] flag to return false if browser wasn't found in map
	   * @param  {String}  [ua] user agent string
	   * @return {Boolean}
	   */
	  function check(minVersions, strictMode, ua) {
	    return !isUnsupportedBrowser(minVersions, strictMode, ua);
	  }

	  bowser.isUnsupportedBrowser = isUnsupportedBrowser;
	  bowser.compareVersions = compareVersions;
	  bowser.check = check;

	  /*
	   * Set our detect method to the main bowser object so we can
	   * reuse it to test other user agents.
	   * This is needed to implement future tests.
	   */
	  bowser._detect = detect;

	  return bowser
	});


/***/ }),
/* 307 */
/***/ (function(module, exports) {

	module.exports = function() { throw new Error("define cannot be used indirect"); };


/***/ }),
/* 308 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getPrefixedKeyframes;
	function getPrefixedKeyframes(browserName, browserVersion, cssPrefix) {
	  var prefixedKeyframes = 'keyframes';

	  if (browserName === 'chrome' && browserVersion < 43 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 || browserName === 'opera' && browserVersion < 30 || browserName === 'android' && browserVersion <= 4.4 || browserName === 'and_uc') {
	    return cssPrefix + prefixedKeyframes;
	  }
	  return prefixedKeyframes;
	}
	module.exports = exports['default'];

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _calc = __webpack_require__(310);

	var _calc2 = _interopRequireDefault(_calc);

	var _flex = __webpack_require__(312);

	var _flex2 = _interopRequireDefault(_flex);

	var _flexboxIE = __webpack_require__(313);

	var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

	var _flexboxOld = __webpack_require__(314);

	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

	var _gradient = __webpack_require__(315);

	var _gradient2 = _interopRequireDefault(_gradient);

	var _sizing = __webpack_require__(316);

	var _sizing2 = _interopRequireDefault(_sizing);

	var _transition = __webpack_require__(317);

	var _transition2 = _interopRequireDefault(_transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  plugins: [_calc2.default, _flex2.default, _flexboxIE2.default, _flexboxOld2.default, _gradient2.default, _sizing2.default, _transition2.default],
	  prefixMap: { "chrome": { "transform": 35, "transformOrigin": 35, "transformOriginX": 35, "transformOriginY": 35, "backfaceVisibility": 35, "perspective": 35, "perspectiveOrigin": 35, "transformStyle": 35, "transformOriginZ": 35, "animation": 42, "animationDelay": 42, "animationDirection": 42, "animationFillMode": 42, "animationDuration": 42, "animationIterationCount": 42, "animationName": 42, "animationPlayState": 42, "animationTimingFunction": 42, "appearance": 60, "userSelect": 53, "fontKerning": 32, "textEmphasisPosition": 60, "textEmphasis": 60, "textEmphasisStyle": 60, "textEmphasisColor": 60, "boxDecorationBreak": 60, "clipPath": 54, "maskImage": 60, "maskMode": 60, "maskRepeat": 60, "maskPosition": 60, "maskClip": 60, "maskOrigin": 60, "maskSize": 60, "maskComposite": 60, "mask": 60, "maskBorderSource": 60, "maskBorderMode": 60, "maskBorderSlice": 60, "maskBorderWidth": 60, "maskBorderOutset": 60, "maskBorderRepeat": 60, "maskBorder": 60, "maskType": 60, "textDecorationStyle": 56, "textDecorationSkip": 56, "textDecorationLine": 56, "textDecorationColor": 56, "filter": 52, "fontFeatureSettings": 47, "breakAfter": 49, "breakBefore": 49, "breakInside": 49, "columnCount": 49, "columnFill": 49, "columnGap": 49, "columnRule": 49, "columnRuleColor": 49, "columnRuleStyle": 49, "columnRuleWidth": 49, "columns": 49, "columnSpan": 49, "columnWidth": 49 }, "safari": { "flex": 8, "flexBasis": 8, "flexDirection": 8, "flexGrow": 8, "flexFlow": 8, "flexShrink": 8, "flexWrap": 8, "alignContent": 8, "alignItems": 8, "alignSelf": 8, "justifyContent": 8, "order": 8, "transition": 6, "transitionDelay": 6, "transitionDuration": 6, "transitionProperty": 6, "transitionTimingFunction": 6, "transform": 8, "transformOrigin": 8, "transformOriginX": 8, "transformOriginY": 8, "backfaceVisibility": 8, "perspective": 8, "perspectiveOrigin": 8, "transformStyle": 8, "transformOriginZ": 8, "animation": 8, "animationDelay": 8, "animationDirection": 8, "animationFillMode": 8, "animationDuration": 8, "animationIterationCount": 8, "animationName": 8, "animationPlayState": 8, "animationTimingFunction": 8, "appearance": 10.1, "userSelect": 10.1, "backdropFilter": 10.1, "fontKerning": 9, "scrollSnapType": 10, "scrollSnapPointsX": 10, "scrollSnapPointsY": 10, "scrollSnapDestination": 10, "scrollSnapCoordinate": 10, "textEmphasisPosition": 7, "textEmphasis": 7, "textEmphasisStyle": 7, "textEmphasisColor": 7, "boxDecorationBreak": 10.1, "clipPath": 10.1, "maskImage": 10.1, "maskMode": 10.1, "maskRepeat": 10.1, "maskPosition": 10.1, "maskClip": 10.1, "maskOrigin": 10.1, "maskSize": 10.1, "maskComposite": 10.1, "mask": 10.1, "maskBorderSource": 10.1, "maskBorderMode": 10.1, "maskBorderSlice": 10.1, "maskBorderWidth": 10.1, "maskBorderOutset": 10.1, "maskBorderRepeat": 10.1, "maskBorder": 10.1, "maskType": 10.1, "textDecorationStyle": 10.1, "textDecorationSkip": 10.1, "textDecorationLine": 10.1, "textDecorationColor": 10.1, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 10.1, "flowInto": 10.1, "flowFrom": 10.1, "breakBefore": 8, "breakAfter": 8, "breakInside": 8, "regionFragment": 10.1, "columnCount": 8, "columnFill": 8, "columnGap": 8, "columnRule": 8, "columnRuleColor": 8, "columnRuleStyle": 8, "columnRuleWidth": 8, "columns": 8, "columnSpan": 8, "columnWidth": 8 }, "firefox": { "appearance": 55, "userSelect": 55, "boxSizing": 28, "textAlignLast": 48, "textDecorationStyle": 35, "textDecorationSkip": 35, "textDecorationLine": 35, "textDecorationColor": 35, "tabSize": 55, "hyphens": 42, "fontFeatureSettings": 33, "breakAfter": 51, "breakBefore": 51, "breakInside": 51, "columnCount": 51, "columnFill": 51, "columnGap": 51, "columnRule": 51, "columnRuleColor": 51, "columnRuleStyle": 51, "columnRuleWidth": 51, "columns": 51, "columnSpan": 51, "columnWidth": 51 }, "opera": { "flex": 16, "flexBasis": 16, "flexDirection": 16, "flexGrow": 16, "flexFlow": 16, "flexShrink": 16, "flexWrap": 16, "alignContent": 16, "alignItems": 16, "alignSelf": 16, "justifyContent": 16, "order": 16, "transform": 22, "transformOrigin": 22, "transformOriginX": 22, "transformOriginY": 22, "backfaceVisibility": 22, "perspective": 22, "perspectiveOrigin": 22, "transformStyle": 22, "transformOriginZ": 22, "animation": 29, "animationDelay": 29, "animationDirection": 29, "animationFillMode": 29, "animationDuration": 29, "animationIterationCount": 29, "animationName": 29, "animationPlayState": 29, "animationTimingFunction": 29, "appearance": 45, "userSelect": 40, "fontKerning": 19, "textEmphasisPosition": 45, "textEmphasis": 45, "textEmphasisStyle": 45, "textEmphasisColor": 45, "boxDecorationBreak": 45, "clipPath": 41, "maskImage": 45, "maskMode": 45, "maskRepeat": 45, "maskPosition": 45, "maskClip": 45, "maskOrigin": 45, "maskSize": 45, "maskComposite": 45, "mask": 45, "maskBorderSource": 45, "maskBorderMode": 45, "maskBorderSlice": 45, "maskBorderWidth": 45, "maskBorderOutset": 45, "maskBorderRepeat": 45, "maskBorder": 45, "maskType": 45, "textDecorationStyle": 43, "textDecorationSkip": 43, "textDecorationLine": 43, "textDecorationColor": 43, "filter": 39, "fontFeatureSettings": 34, "breakAfter": 36, "breakBefore": 36, "breakInside": 36, "columnCount": 36, "columnFill": 36, "columnGap": 36, "columnRule": 36, "columnRuleColor": 36, "columnRuleStyle": 36, "columnRuleWidth": 36, "columns": 36, "columnSpan": 36, "columnWidth": 36 }, "ie": { "flex": 10, "flexDirection": 10, "flexFlow": 10, "flexWrap": 10, "transform": 9, "transformOrigin": 9, "transformOriginX": 9, "transformOriginY": 9, "userSelect": 11, "wrapFlow": 11, "wrapThrough": 11, "wrapMargin": 11, "scrollSnapType": 11, "scrollSnapPointsX": 11, "scrollSnapPointsY": 11, "scrollSnapDestination": 11, "scrollSnapCoordinate": 11, "touchAction": 10, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 11, "breakAfter": 11, "breakInside": 11, "regionFragment": 11, "gridTemplateColumns": 11, "gridTemplateRows": 11, "gridTemplateAreas": 11, "gridTemplate": 11, "gridAutoColumns": 11, "gridAutoRows": 11, "gridAutoFlow": 11, "grid": 11, "gridRowStart": 11, "gridColumnStart": 11, "gridRowEnd": 11, "gridRow": 11, "gridColumn": 11, "gridColumnEnd": 11, "gridColumnGap": 11, "gridRowGap": 11, "gridArea": 11, "gridGap": 11, "textSizeAdjust": 11 }, "edge": { "userSelect": 15, "wrapFlow": 15, "wrapThrough": 15, "wrapMargin": 15, "scrollSnapType": 15, "scrollSnapPointsX": 15, "scrollSnapPointsY": 15, "scrollSnapDestination": 15, "scrollSnapCoordinate": 15, "hyphens": 15, "flowInto": 15, "flowFrom": 15, "breakBefore": 15, "breakAfter": 15, "breakInside": 15, "regionFragment": 15, "gridTemplateColumns": 15, "gridTemplateRows": 15, "gridTemplateAreas": 15, "gridTemplate": 15, "gridAutoColumns": 15, "gridAutoRows": 15, "gridAutoFlow": 15, "grid": 15, "gridRowStart": 15, "gridColumnStart": 15, "gridRowEnd": 15, "gridRow": 15, "gridColumn": 15, "gridColumnEnd": 15, "gridColumnGap": 15, "gridRowGap": 15, "gridArea": 15, "gridGap": 15 }, "ios_saf": { "flex": 8.1, "flexBasis": 8.1, "flexDirection": 8.1, "flexGrow": 8.1, "flexFlow": 8.1, "flexShrink": 8.1, "flexWrap": 8.1, "alignContent": 8.1, "alignItems": 8.1, "alignSelf": 8.1, "justifyContent": 8.1, "order": 8.1, "transition": 6, "transitionDelay": 6, "transitionDuration": 6, "transitionProperty": 6, "transitionTimingFunction": 6, "transform": 8.1, "transformOrigin": 8.1, "transformOriginX": 8.1, "transformOriginY": 8.1, "backfaceVisibility": 8.1, "perspective": 8.1, "perspectiveOrigin": 8.1, "transformStyle": 8.1, "transformOriginZ": 8.1, "animation": 8.1, "animationDelay": 8.1, "animationDirection": 8.1, "animationFillMode": 8.1, "animationDuration": 8.1, "animationIterationCount": 8.1, "animationName": 8.1, "animationPlayState": 8.1, "animationTimingFunction": 8.1, "appearance": 10, "userSelect": 10, "backdropFilter": 10, "fontKerning": 10, "scrollSnapType": 10, "scrollSnapPointsX": 10, "scrollSnapPointsY": 10, "scrollSnapDestination": 10, "scrollSnapCoordinate": 10, "boxDecorationBreak": 10, "clipPath": 10, "maskImage": 10, "maskMode": 10, "maskRepeat": 10, "maskPosition": 10, "maskClip": 10, "maskOrigin": 10, "maskSize": 10, "maskComposite": 10, "mask": 10, "maskBorderSource": 10, "maskBorderMode": 10, "maskBorderSlice": 10, "maskBorderWidth": 10, "maskBorderOutset": 10, "maskBorderRepeat": 10, "maskBorder": 10, "maskType": 10, "textSizeAdjust": 10, "textDecorationStyle": 10, "textDecorationSkip": 10, "textDecorationLine": 10, "textDecorationColor": 10, "shapeImageThreshold": 10, "shapeImageMargin": 10, "shapeImageOutside": 10, "filter": 9, "hyphens": 10, "flowInto": 10, "flowFrom": 10, "breakBefore": 8.1, "breakAfter": 8.1, "breakInside": 8.1, "regionFragment": 10, "columnCount": 8.1, "columnFill": 8.1, "columnGap": 8.1, "columnRule": 8.1, "columnRuleColor": 8.1, "columnRuleStyle": 8.1, "columnRuleWidth": 8.1, "columns": 8.1, "columnSpan": 8.1, "columnWidth": 8.1 }, "android": { "borderImage": 4.2, "borderImageOutset": 4.2, "borderImageRepeat": 4.2, "borderImageSlice": 4.2, "borderImageSource": 4.2, "borderImageWidth": 4.2, "flex": 4.2, "flexBasis": 4.2, "flexDirection": 4.2, "flexGrow": 4.2, "flexFlow": 4.2, "flexShrink": 4.2, "flexWrap": 4.2, "alignContent": 4.2, "alignItems": 4.2, "alignSelf": 4.2, "justifyContent": 4.2, "order": 4.2, "transition": 4.2, "transitionDelay": 4.2, "transitionDuration": 4.2, "transitionProperty": 4.2, "transitionTimingFunction": 4.2, "transform": 4.4, "transformOrigin": 4.4, "transformOriginX": 4.4, "transformOriginY": 4.4, "backfaceVisibility": 4.4, "perspective": 4.4, "perspectiveOrigin": 4.4, "transformStyle": 4.4, "transformOriginZ": 4.4, "animation": 4.4, "animationDelay": 4.4, "animationDirection": 4.4, "animationFillMode": 4.4, "animationDuration": 4.4, "animationIterationCount": 4.4, "animationName": 4.4, "animationPlayState": 4.4, "animationTimingFunction": 4.4, "appearance": 53, "userSelect": 53, "fontKerning": 4.4, "textEmphasisPosition": 53, "textEmphasis": 53, "textEmphasisStyle": 53, "textEmphasisColor": 53, "boxDecorationBreak": 53, "clipPath": 53, "maskImage": 53, "maskMode": 53, "maskRepeat": 53, "maskPosition": 53, "maskClip": 53, "maskOrigin": 53, "maskSize": 53, "maskComposite": 53, "mask": 53, "maskBorderSource": 53, "maskBorderMode": 53, "maskBorderSlice": 53, "maskBorderWidth": 53, "maskBorderOutset": 53, "maskBorderRepeat": 53, "maskBorder": 53, "maskType": 53, "filter": 4.4, "fontFeatureSettings": 4.4, "breakAfter": 53, "breakBefore": 53, "breakInside": 53, "columnCount": 53, "columnFill": 53, "columnGap": 53, "columnRule": 53, "columnRuleColor": 53, "columnRuleStyle": 53, "columnRuleWidth": 53, "columns": 53, "columnSpan": 53, "columnWidth": 53 }, "and_chr": { "appearance": 56, "textEmphasisPosition": 56, "textEmphasis": 56, "textEmphasisStyle": 56, "textEmphasisColor": 56, "boxDecorationBreak": 56, "maskImage": 56, "maskMode": 56, "maskRepeat": 56, "maskPosition": 56, "maskClip": 56, "maskOrigin": 56, "maskSize": 56, "maskComposite": 56, "mask": 56, "maskBorderSource": 56, "maskBorderMode": 56, "maskBorderSlice": 56, "maskBorderWidth": 56, "maskBorderOutset": 56, "maskBorderRepeat": 56, "maskBorder": 56, "maskType": 56, "textDecorationStyle": 56, "textDecorationSkip": 56, "textDecorationLine": 56, "textDecorationColor": 56 }, "and_uc": { "flex": 11, "flexBasis": 11, "flexDirection": 11, "flexGrow": 11, "flexFlow": 11, "flexShrink": 11, "flexWrap": 11, "alignContent": 11, "alignItems": 11, "alignSelf": 11, "justifyContent": 11, "order": 11, "transition": 11, "transitionDelay": 11, "transitionDuration": 11, "transitionProperty": 11, "transitionTimingFunction": 11, "transform": 11, "transformOrigin": 11, "transformOriginX": 11, "transformOriginY": 11, "backfaceVisibility": 11, "perspective": 11, "perspectiveOrigin": 11, "transformStyle": 11, "transformOriginZ": 11, "animation": 11, "animationDelay": 11, "animationDirection": 11, "animationFillMode": 11, "animationDuration": 11, "animationIterationCount": 11, "animationName": 11, "animationPlayState": 11, "animationTimingFunction": 11, "appearance": 11, "userSelect": 11, "fontKerning": 11, "textEmphasisPosition": 11, "textEmphasis": 11, "textEmphasisStyle": 11, "textEmphasisColor": 11, "maskImage": 11, "maskMode": 11, "maskRepeat": 11, "maskPosition": 11, "maskClip": 11, "maskOrigin": 11, "maskSize": 11, "maskComposite": 11, "mask": 11, "maskBorderSource": 11, "maskBorderMode": 11, "maskBorderSlice": 11, "maskBorderWidth": 11, "maskBorderOutset": 11, "maskBorderRepeat": 11, "maskBorder": 11, "maskType": 11, "textSizeAdjust": 11, "filter": 11, "hyphens": 11, "flowInto": 11, "flowFrom": 11, "breakBefore": 11, "breakAfter": 11, "breakInside": 11, "regionFragment": 11, "fontFeatureSettings": 11, "columnCount": 11, "columnFill": 11, "columnGap": 11, "columnRule": 11, "columnRuleColor": 11, "columnRuleStyle": 11, "columnRuleWidth": 11, "columns": 11, "columnSpan": 11, "columnWidth": 11 }, "op_mini": {} }
	}; /* eslint-disable */

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calc;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function calc(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && value.indexOf('calc(') > -1 && (browserName === 'firefox' && browserVersion < 15 || browserName === 'chrome' && browserVersion < 25 || browserName === 'safari' && browserVersion < 6.1 || browserName === 'ios_saf' && browserVersion < 7)) {
	    return (0, _getPrefixedValue2.default)(value.replace(/calc\(/g, cssPrefix + 'calc('), value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 311 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getPrefixedValue;
	function getPrefixedValue(prefixedValue, value, keepUnprefixed) {
	  if (keepUnprefixed) {
	    return [prefixedValue, value];
	  }
	  return prefixedValue;
	}
	module.exports = exports["default"];

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = {
	  flex: true,
	  'inline-flex': true
	};
	function flex(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (property === 'display' && values[value] && (browserName === 'chrome' && browserVersion < 29 && browserVersion > 20 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 9 && browserVersion > 6 || browserName === 'opera' && (browserVersion === 15 || browserVersion === 16))) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxIE;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var alternativeValues = {
	  'space-around': 'distribute',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  flex: 'flexbox',
	  'inline-flex': 'inline-flexbox'
	};

	var alternativeProps = {
	  alignContent: 'msFlexLinePack',
	  alignSelf: 'msFlexItemAlign',
	  alignItems: 'msFlexAlign',
	  justifyContent: 'msFlexPack',
	  order: 'msFlexOrder',
	  flexGrow: 'msFlexPositive',
	  flexShrink: 'msFlexNegative',
	  flexBasis: 'msFlexPreferredSize'
	};

	function flexboxIE(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed,
	      requiresPrefix = _ref.requiresPrefix;

	  if ((alternativeProps.hasOwnProperty(property) || property === 'display' && typeof value === 'string' && value.indexOf('flex') > -1) && (browserName === 'ie_mob' || browserName === 'ie') && browserVersion === 10) {
	    delete requiresPrefix[property];

	    if (!keepUnprefixed && !Array.isArray(style[property])) {
	      delete style[property];
	    }
	    if (property === 'display' && alternativeValues.hasOwnProperty(value)) {
	      return (0, _getPrefixedValue2.default)(cssPrefix + alternativeValues[value], value, keepUnprefixed);
	    }
	    if (alternativeProps.hasOwnProperty(property)) {
	      style[alternativeProps[property]] = alternativeValues[value] || value;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple',
	  flex: 'box',
	  'inline-flex': 'inline-box'
	};


	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};

	var otherProps = ['alignContent', 'alignSelf', 'order', 'flexGrow', 'flexShrink', 'flexBasis', 'flexDirection'];
	var properties = Object.keys(alternativeProps).concat(otherProps);

	function flexboxOld(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed,
	      requiresPrefix = _ref.requiresPrefix;

	  if ((properties.indexOf(property) > -1 || property === 'display' && typeof value === 'string' && value.indexOf('flex') > -1) && (browserName === 'firefox' && browserVersion < 22 || browserName === 'chrome' && browserVersion < 21 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion <= 6.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {
	    delete requiresPrefix[property];

	    if (!keepUnprefixed && !Array.isArray(style[property])) {
	      delete style[property];
	    }
	    if (property === 'flexDirection' && typeof value === 'string') {
	      if (value.indexOf('column') > -1) {
	        style.WebkitBoxOrient = 'vertical';
	      } else {
	        style.WebkitBoxOrient = 'horizontal';
	      }
	      if (value.indexOf('reverse') > -1) {
	        style.WebkitBoxDirection = 'reverse';
	      } else {
	        style.WebkitBoxDirection = 'normal';
	      }
	    }
	    if (property === 'display' && alternativeValues.hasOwnProperty(value)) {
	      return (0, _getPrefixedValue2.default)(cssPrefix + alternativeValues[value], value, keepUnprefixed);
	    }
	    if (alternativeProps.hasOwnProperty(property)) {
	      style[alternativeProps[property]] = alternativeValues[value] || value;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
	function gradient(property, value, style, _ref) {
	  var browserName = _ref.browserName,
	      browserVersion = _ref.browserVersion,
	      cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  if (typeof value === 'string' && values.test(value) && (browserName === 'firefox' && browserVersion < 16 || browserName === 'chrome' && browserVersion < 26 || (browserName === 'safari' || browserName === 'ios_saf') && browserVersion < 7 || (browserName === 'opera' || browserName === 'op_mini') && browserVersion < 12.1 || browserName === 'android' && browserVersion < 4.4 || browserName === 'and_uc')) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;

	var _getPrefixedValue = __webpack_require__(311);

	var _getPrefixedValue2 = _interopRequireDefault(_getPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};

	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true

	  // TODO: chrome & opera support it
	};function sizing(property, value, style, _ref) {
	  var cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed;

	  // This might change in the future
	  // Keep an eye on it
	  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {
	    return (0, _getPrefixedValue2.default)(cssPrefix + value, value, keepUnprefixed);
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;

	var _hyphenateProperty = __webpack_require__(318);

	var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true,
	  MozTransition: true,
	  MozTransitionProperty: true
	};


	var requiresPrefixDashCased = void 0;

	function transition(property, value, style, _ref) {
	  var cssPrefix = _ref.cssPrefix,
	      keepUnprefixed = _ref.keepUnprefixed,
	      requiresPrefix = _ref.requiresPrefix;

	  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
	    // memoize the prefix array for later use
	    if (!requiresPrefixDashCased) {
	      requiresPrefixDashCased = Object.keys(requiresPrefix).map(function (prop) {
	        return (0, _hyphenateProperty2.default)(prop);
	      });
	    }

	    // only split multi values, not cubic beziers
	    var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

	    requiresPrefixDashCased.forEach(function (prop) {
	      multipleValues.forEach(function (val, index) {
	        if (val.indexOf(prop) > -1 && prop !== 'order') {
	          multipleValues[index] = val.replace(prop, cssPrefix + prop) + (keepUnprefixed ? ',' + val : '');
	        }
	      });
	    });

	    return multipleValues.join(',');
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = hyphenateProperty;

	var _hyphenateStyleName = __webpack_require__(319);

	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hyphenateProperty(property) {
	  return (0, _hyphenateStyleName2.default)(property);
	}
	module.exports = exports['default'];

/***/ }),
/* 319 */
/***/ (function(module, exports) {

	'use strict';

	var uppercasePattern = /[A-Z]/g;
	var msPattern = /^ms-/;
	var cache = {};

	function hyphenateStyleName(string) {
	    return string in cache
	    ? cache[string]
	    : cache[string] = string
	      .replace(uppercasePattern, '-$&')
	      .toLowerCase()
	      .replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _calc = __webpack_require__(321);

	var _calc2 = _interopRequireDefault(_calc);

	var _flex = __webpack_require__(323);

	var _flex2 = _interopRequireDefault(_flex);

	var _flexboxIE = __webpack_require__(324);

	var _flexboxIE2 = _interopRequireDefault(_flexboxIE);

	var _flexboxOld = __webpack_require__(325);

	var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

	var _gradient = __webpack_require__(326);

	var _gradient2 = _interopRequireDefault(_gradient);

	var _sizing = __webpack_require__(327);

	var _sizing2 = _interopRequireDefault(_sizing);

	var _transition = __webpack_require__(328);

	var _transition2 = _interopRequireDefault(_transition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  plugins: [_calc2.default, _flex2.default, _flexboxIE2.default, _flexboxOld2.default, _gradient2.default, _sizing2.default, _transition2.default],
	  prefixMap: { "transform": ["Webkit", "ms"], "transformOrigin": ["Webkit", "ms"], "transformOriginX": ["Webkit", "ms"], "transformOriginY": ["Webkit", "ms"], "backfaceVisibility": ["Webkit"], "perspective": ["Webkit"], "perspectiveOrigin": ["Webkit"], "transformStyle": ["Webkit"], "transformOriginZ": ["Webkit"], "animation": ["Webkit"], "animationDelay": ["Webkit"], "animationDirection": ["Webkit"], "animationFillMode": ["Webkit"], "animationDuration": ["Webkit"], "animationIterationCount": ["Webkit"], "animationName": ["Webkit"], "animationPlayState": ["Webkit"], "animationTimingFunction": ["Webkit"], "appearance": ["Webkit", "Moz"], "userSelect": ["Webkit", "Moz", "ms"], "fontKerning": ["Webkit"], "textEmphasisPosition": ["Webkit"], "textEmphasis": ["Webkit"], "textEmphasisStyle": ["Webkit"], "textEmphasisColor": ["Webkit"], "boxDecorationBreak": ["Webkit"], "clipPath": ["Webkit"], "maskImage": ["Webkit"], "maskMode": ["Webkit"], "maskRepeat": ["Webkit"], "maskPosition": ["Webkit"], "maskClip": ["Webkit"], "maskOrigin": ["Webkit"], "maskSize": ["Webkit"], "maskComposite": ["Webkit"], "mask": ["Webkit"], "maskBorderSource": ["Webkit"], "maskBorderMode": ["Webkit"], "maskBorderSlice": ["Webkit"], "maskBorderWidth": ["Webkit"], "maskBorderOutset": ["Webkit"], "maskBorderRepeat": ["Webkit"], "maskBorder": ["Webkit"], "maskType": ["Webkit"], "textDecorationStyle": ["Webkit", "Moz"], "textDecorationSkip": ["Webkit", "Moz"], "textDecorationLine": ["Webkit", "Moz"], "textDecorationColor": ["Webkit", "Moz"], "filter": ["Webkit"], "fontFeatureSettings": ["Webkit", "Moz"], "breakAfter": ["Webkit", "Moz", "ms"], "breakBefore": ["Webkit", "Moz", "ms"], "breakInside": ["Webkit", "Moz", "ms"], "columnCount": ["Webkit", "Moz"], "columnFill": ["Webkit", "Moz"], "columnGap": ["Webkit", "Moz"], "columnRule": ["Webkit", "Moz"], "columnRuleColor": ["Webkit", "Moz"], "columnRuleStyle": ["Webkit", "Moz"], "columnRuleWidth": ["Webkit", "Moz"], "columns": ["Webkit", "Moz"], "columnSpan": ["Webkit", "Moz"], "columnWidth": ["Webkit", "Moz"], "flex": ["Webkit", "ms"], "flexBasis": ["Webkit"], "flexDirection": ["Webkit", "ms"], "flexGrow": ["Webkit"], "flexFlow": ["Webkit", "ms"], "flexShrink": ["Webkit"], "flexWrap": ["Webkit", "ms"], "alignContent": ["Webkit"], "alignItems": ["Webkit"], "alignSelf": ["Webkit"], "justifyContent": ["Webkit"], "order": ["Webkit"], "transitionDelay": ["Webkit"], "transitionDuration": ["Webkit"], "transitionProperty": ["Webkit"], "transitionTimingFunction": ["Webkit"], "backdropFilter": ["Webkit"], "scrollSnapType": ["Webkit", "ms"], "scrollSnapPointsX": ["Webkit", "ms"], "scrollSnapPointsY": ["Webkit", "ms"], "scrollSnapDestination": ["Webkit", "ms"], "scrollSnapCoordinate": ["Webkit", "ms"], "shapeImageThreshold": ["Webkit"], "shapeImageMargin": ["Webkit"], "shapeImageOutside": ["Webkit"], "hyphens": ["Webkit", "Moz", "ms"], "flowInto": ["Webkit", "ms"], "flowFrom": ["Webkit", "ms"], "regionFragment": ["Webkit", "ms"], "boxSizing": ["Moz"], "textAlignLast": ["Moz"], "tabSize": ["Moz"], "wrapFlow": ["ms"], "wrapThrough": ["ms"], "wrapMargin": ["ms"], "touchAction": ["ms"], "gridTemplateColumns": ["ms"], "gridTemplateRows": ["ms"], "gridTemplateAreas": ["ms"], "gridTemplate": ["ms"], "gridAutoColumns": ["ms"], "gridAutoRows": ["ms"], "gridAutoFlow": ["ms"], "grid": ["ms"], "gridRowStart": ["ms"], "gridColumnStart": ["ms"], "gridRowEnd": ["ms"], "gridRow": ["ms"], "gridColumn": ["ms"], "gridColumnEnd": ["ms"], "gridColumnGap": ["ms"], "gridRowGap": ["ms"], "gridArea": ["ms"], "gridGap": ["ms"], "textSizeAdjust": ["Webkit", "ms"], "borderImage": ["Webkit"], "borderImageOutset": ["Webkit"], "borderImageRepeat": ["Webkit"], "borderImageSlice": ["Webkit"], "borderImageSource": ["Webkit"], "borderImageWidth": ["Webkit"] }
	}; /* eslint-disable */

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calc;

	var _isPrefixedValue = __webpack_require__(322);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var prefixes = ['-webkit-', '-moz-', ''];
	function calc(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && value.indexOf('calc(') > -1) {
	    return prefixes.map(function (prefix) {
	      return value.replace(/calc\(/g, prefix + 'calc(');
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 322 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isPrefixedValue;
	var regex = /-webkit-|-moz-|-ms-/;

	function isPrefixedValue(value) {
	  return typeof value === 'string' && regex.test(value);
	}
	module.exports = exports['default'];

/***/ }),
/* 323 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flex;
	var values = {
	  flex: ['-webkit-box', '-moz-box', '-ms-flexbox', '-webkit-flex', 'flex'],
	  'inline-flex': ['-webkit-inline-box', '-moz-inline-box', '-ms-inline-flexbox', '-webkit-inline-flex', 'inline-flex']
	};

	function flex(property, value) {
	  if (property === 'display' && values.hasOwnProperty(value)) {
	    return values[value];
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 324 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxIE;
	var alternativeValues = {
	  'space-around': 'distribute',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end'
	};
	var alternativeProps = {
	  alignContent: 'msFlexLinePack',
	  alignSelf: 'msFlexItemAlign',
	  alignItems: 'msFlexAlign',
	  justifyContent: 'msFlexPack',
	  order: 'msFlexOrder',
	  flexGrow: 'msFlexPositive',
	  flexShrink: 'msFlexNegative',
	  flexBasis: 'msFlexPreferredSize'
	};

	function flexboxIE(property, value, style) {
	  if (alternativeProps.hasOwnProperty(property)) {
	    style[alternativeProps[property]] = alternativeValues[value] || value;
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 325 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = flexboxOld;
	var alternativeValues = {
	  'space-around': 'justify',
	  'space-between': 'justify',
	  'flex-start': 'start',
	  'flex-end': 'end',
	  'wrap-reverse': 'multiple',
	  wrap: 'multiple'
	};

	var alternativeProps = {
	  alignItems: 'WebkitBoxAlign',
	  justifyContent: 'WebkitBoxPack',
	  flexWrap: 'WebkitBoxLines'
	};

	function flexboxOld(property, value, style) {
	  if (property === 'flexDirection' && typeof value === 'string') {
	    if (value.indexOf('column') > -1) {
	      style.WebkitBoxOrient = 'vertical';
	    } else {
	      style.WebkitBoxOrient = 'horizontal';
	    }
	    if (value.indexOf('reverse') > -1) {
	      style.WebkitBoxDirection = 'reverse';
	    } else {
	      style.WebkitBoxDirection = 'normal';
	    }
	  }
	  if (alternativeProps.hasOwnProperty(property)) {
	    style[alternativeProps[property]] = alternativeValues[value] || value;
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = gradient;

	var _isPrefixedValue = __webpack_require__(322);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var prefixes = ['-webkit-', '-moz-', ''];

	var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

	function gradient(property, value) {
	  if (typeof value === 'string' && !(0, _isPrefixedValue2.default)(value) && values.test(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 327 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = sizing;
	var prefixes = ['-webkit-', '-moz-', ''];

	var properties = {
	  maxHeight: true,
	  maxWidth: true,
	  width: true,
	  height: true,
	  columnWidth: true,
	  minWidth: true,
	  minHeight: true
	};
	var values = {
	  'min-content': true,
	  'max-content': true,
	  'fill-available': true,
	  'fit-content': true,
	  'contain-floats': true
	};

	function sizing(property, value) {
	  if (properties.hasOwnProperty(property) && values.hasOwnProperty(value)) {
	    return prefixes.map(function (prefix) {
	      return prefix + value;
	    });
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = transition;

	var _hyphenateProperty = __webpack_require__(318);

	var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);

	var _isPrefixedValue = __webpack_require__(322);

	var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

	var _capitalizeString = __webpack_require__(300);

	var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var properties = {
	  transition: true,
	  transitionProperty: true,
	  WebkitTransition: true,
	  WebkitTransitionProperty: true,
	  MozTransition: true,
	  MozTransitionProperty: true
	};


	var prefixMapping = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  ms: '-ms-'
	};

	function prefixValue(value, propertyPrefixMap) {
	  if ((0, _isPrefixedValue2.default)(value)) {
	    return value;
	  }

	  // only split multi values, not cubic beziers
	  var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

	  for (var i = 0, len = multipleValues.length; i < len; ++i) {
	    var singleValue = multipleValues[i];
	    var values = [singleValue];
	    for (var property in propertyPrefixMap) {
	      var dashCaseProperty = (0, _hyphenateProperty2.default)(property);

	      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
	        var prefixes = propertyPrefixMap[property];
	        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
	          // join all prefixes and create a new value
	          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));
	        }
	      }
	    }

	    multipleValues[i] = values.join(',');
	  }

	  return multipleValues.join(',');
	}

	function transition(property, value, style, propertyPrefixMap) {
	  // also check for already prefixed transitions
	  if (typeof value === 'string' && properties.hasOwnProperty(property)) {
	    var outputValue = prefixValue(value, propertyPrefixMap);
	    // if the property is already prefixed
	    var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-moz-|-ms-/.test(val);
	    }).join(',');

	    if (property.indexOf('Webkit') > -1) {
	      return webkitOutput;
	    }

	    var mozOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (val) {
	      return !/-webkit-|-ms-/.test(val);
	    }).join(',');

	    if (property.indexOf('Moz') > -1) {
	      return mozOutput;
	    }

	    style['Webkit' + (0, _capitalizeString2.default)(property)] = webkitOutput;
	    style['Moz' + (0, _capitalizeString2.default)(property)] = mozOutput;
	    return outputValue;
	  }
	}
	module.exports = exports['default'];

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = callOnce;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var CALLED_ONCE = 'muiPrepared';

	function callOnce() {
	  if (process.env.NODE_ENV !== 'production') {
	    return function (style) {
	      if (style[CALLED_ONCE]) {
	        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: You cannot call prepareStyles() on the same style object more than once.') : void 0;
	      }
	      style[CALLED_ONCE] = true;
	      return style;
	    };
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _keys = __webpack_require__(331);

	var _keys2 = _interopRequireDefault(_keys);

	exports.default = rtl;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var reTranslate = /((^|\s)translate(3d|X)?\()(\-?[\d]+)/;
	var reSkew = /((^|\s)skew(x|y)?\()\s*(\-?[\d]+)(deg|rad|grad)(,\s*(\-?[\d]+)(deg|rad|grad))?/;

	/**
	 * This function ensures that `style` supports both ltr and rtl directions by
	 * checking `styleConstants` in `muiTheme` and replacing attribute keys if
	 * necessary.
	 */
	function rtl(muiTheme) {
	  if (muiTheme.isRtl) {
	    return function (style) {
	      if (style.directionInvariant === true) {
	        return style;
	      }

	      var flippedAttributes = {
	        // Keys and their replacements.
	        right: 'left',
	        left: 'right',
	        marginRight: 'marginLeft',
	        marginLeft: 'marginRight',
	        paddingRight: 'paddingLeft',
	        paddingLeft: 'paddingRight',
	        borderRight: 'borderLeft',
	        borderLeft: 'borderRight'
	      };

	      var newStyle = {};

	      (0, _keys2.default)(style).forEach(function (attribute) {
	        var value = style[attribute];
	        var key = attribute;

	        if (flippedAttributes.hasOwnProperty(attribute)) {
	          key = flippedAttributes[attribute];
	        }

	        switch (attribute) {
	          case 'float':
	          case 'textAlign':
	            if (value === 'right') {
	              value = 'left';
	            } else if (value === 'left') {
	              value = 'right';
	            }
	            break;

	          case 'direction':
	            if (value === 'ltr') {
	              value = 'rtl';
	            } else if (value === 'rtl') {
	              value = 'ltr';
	            }
	            break;

	          case 'transform':
	            if (!value) break;
	            var matches = void 0;
	            if (matches = value.match(reTranslate)) {
	              value = value.replace(matches[0], matches[1] + -parseFloat(matches[4]));
	            }
	            if (matches = value.match(reSkew)) {
	              value = value.replace(matches[0], matches[1] + -parseFloat(matches[4]) + matches[5] + matches[6] ? ', ' + (-parseFloat(matches[7]) + matches[8]) : '');
	            }
	            break;

	          case 'transformOrigin':
	            if (!value) break;
	            if (value.indexOf('right') > -1) {
	              value = value.replace('right', 'left');
	            } else if (value.indexOf('left') > -1) {
	              value = value.replace('left', 'right');
	            }
	            break;
	        }

	        newStyle[key] = value;
	      });

	      return newStyle;
	    };
	  }
	}

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(332), __esModule: true };

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(333);
	module.exports = __webpack_require__(169).Object.keys;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(159);
	var $keys = __webpack_require__(201);

	__webpack_require__(167)('keys', function () {
	  return function keys(it) {
	    return $keys(toObject(it));
	  };
	});


/***/ }),
/* 334 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.default = compose;
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  if (funcs.length === 0) {
	    return function (arg) {
	      return arg;
	    };
	  }

	  if (funcs.length === 1) {
	    return funcs[0];
	  }

	  return funcs.reduce(function (a, b) {
	    return function () {
	      return a(b.apply(undefined, arguments));
	    };
	  });
	}

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _colors = __webpack_require__(294);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Typography = function Typography() {
	  (0, _classCallCheck3.default)(this, Typography);

	  // text colors
	  this.textFullBlack = _colors.fullBlack;
	  this.textDarkBlack = _colors.darkBlack;
	  this.textLightBlack = _colors.lightBlack;
	  this.textMinBlack = _colors.minBlack;
	  this.textFullWhite = _colors.fullWhite;
	  this.textDarkWhite = _colors.darkWhite;
	  this.textLightWhite = _colors.lightWhite;

	  // font weight
	  this.fontWeightLight = 300;
	  this.fontWeightNormal = 400;
	  this.fontWeightMedium = 500;

	  this.fontStyleButtonFontSize = 14;
	};

	exports.default = new Typography();

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _TextField = __webpack_require__(337);

	var _TextField2 = _interopRequireDefault(_TextField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _TextField2.default;

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _EnhancedTextarea = __webpack_require__(494);

	var _EnhancedTextarea2 = _interopRequireDefault(_EnhancedTextarea);

	var _TextFieldHint = __webpack_require__(498);

	var _TextFieldHint2 = _interopRequireDefault(_TextFieldHint);

	var _TextFieldLabel = __webpack_require__(499);

	var _TextFieldLabel2 = _interopRequireDefault(_TextFieldLabel);

	var _TextFieldUnderline = __webpack_require__(500);

	var _TextFieldUnderline2 = _interopRequireDefault(_TextFieldUnderline);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getStyles = function getStyles(props, context, state) {
	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      _context$muiTheme$tex = _context$muiTheme.textField,
	      floatingLabelColor = _context$muiTheme$tex.floatingLabelColor,
	      focusColor = _context$muiTheme$tex.focusColor,
	      textColor = _context$muiTheme$tex.textColor,
	      disabledTextColor = _context$muiTheme$tex.disabledTextColor,
	      backgroundColor = _context$muiTheme$tex.backgroundColor,
	      errorColor = _context$muiTheme$tex.errorColor;


	  var styles = {
	    root: {
	      fontSize: 16,
	      lineHeight: '24px',
	      width: props.fullWidth ? '100%' : 256,
	      height: (props.rows - 1) * 24 + (props.floatingLabelText ? 72 : 48),
	      display: 'inline-block',
	      position: 'relative',
	      backgroundColor: backgroundColor,
	      fontFamily: baseTheme.fontFamily,
	      transition: _transitions2.default.easeOut('200ms', 'height'),
	      cursor: props.disabled ? 'not-allowed' : 'auto'
	    },
	    error: {
	      position: 'relative',
	      bottom: 2,
	      fontSize: 12,
	      lineHeight: '12px',
	      color: errorColor,
	      transition: _transitions2.default.easeOut()
	    },
	    floatingLabel: {
	      color: props.disabled ? disabledTextColor : floatingLabelColor,
	      pointerEvents: 'none'
	    },
	    input: {
	      padding: 0,
	      position: 'relative',
	      width: '100%',
	      border: 'none',
	      outline: 'none',
	      backgroundColor: 'rgba(0,0,0,0)',
	      color: props.disabled ? disabledTextColor : textColor,
	      cursor: 'inherit',
	      font: 'inherit',
	      WebkitOpacity: 1,
	      WebkitTapHighlightColor: 'rgba(0,0,0,0)' // Remove mobile color flashing (deprecated style).
	    },
	    inputNative: {
	      appearance: 'textfield' // Improve type search style.
	    }
	  };

	  styles.textarea = (0, _simpleAssign2.default)({}, styles.input, {
	    marginTop: props.floatingLabelText ? 36 : 12,
	    marginBottom: props.floatingLabelText ? -36 : -12,
	    boxSizing: 'border-box',
	    font: 'inherit'
	  });

	  // Do not assign a height to the textarea as he handles it on his own.
	  styles.input.height = '100%';

	  if (state.isFocused) {
	    styles.floatingLabel.color = focusColor;
	  }

	  if (props.floatingLabelText) {
	    styles.input.boxSizing = 'border-box';

	    if (!props.multiLine) {
	      styles.input.marginTop = 14;
	    }

	    if (state.errorText) {
	      styles.error.bottom = !props.multiLine ? styles.error.fontSize + 3 : 3;
	    }
	  }

	  if (state.errorText) {
	    if (state.isFocused) {
	      styles.floatingLabel.color = styles.error.color;
	    }
	  }

	  return styles;
	};

	/**
	 * Check if a value is valid to be displayed inside an input.
	 *
	 * @param The value to check.
	 * @returns True if the string provided is valid, false otherwise.
	 */
	function isValid(value) {
	  return value !== '' && value !== undefined && value !== null && !(Array.isArray(value) && value.length === 0);
	}

	var TextField = function (_Component) {
	  (0, _inherits3.default)(TextField, _Component);

	  function TextField() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TextField);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TextField.__proto__ || (0, _getPrototypeOf2.default)(TextField)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isFocused: false,
	      errorText: undefined,
	      hasValue: false
	    }, _this.handleInputBlur = function (event) {
	      _this.setState({ isFocused: false });
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleInputChange = function (event) {
	      if (!_this.props.hasOwnProperty('value')) {
	        _this.setState({ hasValue: isValid(event.target.value) });
	      }
	      if (_this.props.onChange) {
	        _this.props.onChange(event, event.target.value);
	      }
	    }, _this.handleInputFocus = function (event) {
	      if (_this.props.disabled) {
	        return;
	      }
	      _this.setState({ isFocused: true });
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _this.handleHeightChange = function (event, height) {
	      var newHeight = height + 24;
	      if (_this.props.floatingLabelText) {
	        newHeight += 24;
	      }
	      _reactDom2.default.findDOMNode(_this).style.height = newHeight + 'px';
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TextField, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _props = this.props,
	          children = _props.children,
	          name = _props.name,
	          hintText = _props.hintText,
	          floatingLabelText = _props.floatingLabelText,
	          id = _props.id;


	      var propsLeaf = children ? children.props : this.props;

	      this.setState({
	        errorText: this.props.errorText,
	        hasValue: isValid(propsLeaf.value) || isValid(propsLeaf.defaultValue)
	      });

	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(name || hintText || floatingLabelText || id, 'Material-UI: We don\'t have enough information\n      to build a robust unique id for the TextField component. Please provide an id or a name.') : void 0;

	      var uniqueId = name + '-' + hintText + '-' + floatingLabelText + '-' + Math.floor(Math.random() * 0xFFFF);
	      this.uniqueId = uniqueId.replace(/[^A-Za-z0-9-]/gi, '');
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.disabled && !this.props.disabled) {
	        this.setState({
	          isFocused: false
	        });
	      }

	      if (nextProps.errorText !== this.props.errorText) {
	        this.setState({
	          errorText: nextProps.errorText
	        });
	      }

	      if (nextProps.children && nextProps.children.props) {
	        nextProps = nextProps.children.props;
	      }

	      if (nextProps.hasOwnProperty('value')) {
	        var hasValue = isValid(nextProps.value);

	        this.setState({
	          hasValue: hasValue
	        });
	      }
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState) || !(0, _shallowEqual2.default)(this.context, nextContext);
	    }
	  }, {
	    key: 'blur',
	    value: function blur() {
	      if (this.input) {
	        this.getInputNode().blur();
	      }
	    }
	  }, {
	    key: 'focus',
	    value: function focus() {
	      if (this.input) {
	        this.getInputNode().focus();
	      }
	    }
	  }, {
	    key: 'select',
	    value: function select() {
	      if (this.input) {
	        this.getInputNode().select();
	      }
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      return this.input ? this.getInputNode().value : undefined;
	    }
	  }, {
	    key: 'getInputNode',
	    value: function getInputNode() {
	      return this.props.children || this.props.multiLine ? this.input.getInputNode() : _reactDom2.default.findDOMNode(this.input);
	    }
	  }, {
	    key: '_isControlled',
	    value: function _isControlled() {
	      return this.props.hasOwnProperty('value');
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props2 = this.props,
	          children = _props2.children,
	          className = _props2.className,
	          disabled = _props2.disabled,
	          errorStyle = _props2.errorStyle,
	          errorText = _props2.errorText,
	          floatingLabelFixed = _props2.floatingLabelFixed,
	          floatingLabelFocusStyle = _props2.floatingLabelFocusStyle,
	          floatingLabelShrinkStyle = _props2.floatingLabelShrinkStyle,
	          floatingLabelStyle = _props2.floatingLabelStyle,
	          floatingLabelText = _props2.floatingLabelText,
	          fullWidth = _props2.fullWidth,
	          hintText = _props2.hintText,
	          hintStyle = _props2.hintStyle,
	          id = _props2.id,
	          inputStyle = _props2.inputStyle,
	          multiLine = _props2.multiLine,
	          onBlur = _props2.onBlur,
	          onChange = _props2.onChange,
	          onFocus = _props2.onFocus,
	          style = _props2.style,
	          type = _props2.type,
	          underlineDisabledStyle = _props2.underlineDisabledStyle,
	          underlineFocusStyle = _props2.underlineFocusStyle,
	          underlineShow = _props2.underlineShow,
	          underlineStyle = _props2.underlineStyle,
	          rows = _props2.rows,
	          rowsMax = _props2.rowsMax,
	          textareaStyle = _props2.textareaStyle,
	          other = (0, _objectWithoutProperties3.default)(_props2, ['children', 'className', 'disabled', 'errorStyle', 'errorText', 'floatingLabelFixed', 'floatingLabelFocusStyle', 'floatingLabelShrinkStyle', 'floatingLabelStyle', 'floatingLabelText', 'fullWidth', 'hintText', 'hintStyle', 'id', 'inputStyle', 'multiLine', 'onBlur', 'onChange', 'onFocus', 'style', 'type', 'underlineDisabledStyle', 'underlineFocusStyle', 'underlineShow', 'underlineStyle', 'rows', 'rowsMax', 'textareaStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);
	      var inputId = id || this.uniqueId;

	      var errorTextElement = this.state.errorText && _react2.default.createElement(
	        'div',
	        { style: prepareStyles((0, _simpleAssign2.default)(styles.error, errorStyle)) },
	        this.state.errorText
	      );

	      var floatingLabelTextElement = floatingLabelText && _react2.default.createElement(
	        _TextFieldLabel2.default,
	        {
	          muiTheme: this.context.muiTheme,
	          style: (0, _simpleAssign2.default)(styles.floatingLabel, floatingLabelStyle, this.state.isFocused ? floatingLabelFocusStyle : null),
	          shrinkStyle: floatingLabelShrinkStyle,
	          htmlFor: inputId,
	          shrink: this.state.hasValue || this.state.isFocused || floatingLabelFixed,
	          disabled: disabled
	        },
	        floatingLabelText
	      );

	      var inputProps = {
	        id: inputId,
	        ref: function ref(elem) {
	          return _this2.input = elem;
	        },
	        disabled: this.props.disabled,
	        onBlur: this.handleInputBlur,
	        onChange: this.handleInputChange,
	        onFocus: this.handleInputFocus
	      };

	      var childStyleMerged = (0, _simpleAssign2.default)(styles.input, inputStyle);

	      var inputElement = void 0;
	      if (children) {
	        inputElement = _react2.default.cloneElement(children, (0, _extends3.default)({}, inputProps, children.props, {
	          style: (0, _simpleAssign2.default)(childStyleMerged, children.props.style)
	        }));
	      } else {
	        inputElement = multiLine ? _react2.default.createElement(_EnhancedTextarea2.default, (0, _extends3.default)({
	          style: childStyleMerged,
	          textareaStyle: (0, _simpleAssign2.default)(styles.textarea, styles.inputNative, textareaStyle),
	          rows: rows,
	          rowsMax: rowsMax,
	          hintText: hintText
	        }, other, inputProps, {
	          onHeightChange: this.handleHeightChange
	        })) : _react2.default.createElement('input', (0, _extends3.default)({
	          type: type,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.inputNative, childStyleMerged))
	        }, other, inputProps));
	      }

	      var rootProps = {};

	      if (children) {
	        rootProps = other;
	      }

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, rootProps, {
	          className: className,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	        }),
	        floatingLabelTextElement,
	        hintText ? _react2.default.createElement(_TextFieldHint2.default, {
	          muiTheme: this.context.muiTheme,
	          show: !(this.state.hasValue || floatingLabelText && !this.state.isFocused) || !this.state.hasValue && floatingLabelText && floatingLabelFixed && !this.state.isFocused,
	          style: hintStyle,
	          text: hintText
	        }) : null,
	        inputElement,
	        underlineShow ? _react2.default.createElement(_TextFieldUnderline2.default, {
	          disabled: disabled,
	          disabledStyle: underlineDisabledStyle,
	          error: !!this.state.errorText,
	          errorStyle: errorStyle,
	          focus: this.state.isFocused,
	          focusStyle: underlineFocusStyle,
	          muiTheme: this.context.muiTheme,
	          style: underlineStyle
	        }) : null,
	        errorTextElement
	      );
	    }
	  }]);
	  return TextField;
	}(_react.Component);

	TextField.defaultProps = {
	  disabled: false,
	  floatingLabelFixed: false,
	  multiLine: false,
	  fullWidth: false,
	  type: 'text',
	  underlineShow: true,
	  rows: 1
	};
	TextField.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TextField.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The text string to use for the default value.
	   */
	  defaultValue: _propTypes2.default.any,
	  /**
	   * Disables the text field if set to true.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * The style object to use to override error styles.
	   */
	  errorStyle: _propTypes2.default.object,
	  /**
	   * The error content to display.
	   */
	  errorText: _propTypes2.default.node,
	  /**
	   * If true, the floating label will float even when there is no value.
	   */
	  floatingLabelFixed: _propTypes2.default.bool,
	  /**
	   * The style object to use to override floating label styles when focused.
	   */
	  floatingLabelFocusStyle: _propTypes2.default.object,
	  /**
	   * The style object to use to override floating label styles when shrunk.
	   */
	  floatingLabelShrinkStyle: _propTypes2.default.object,
	  /**
	   * The style object to use to override floating label styles.
	   */
	  floatingLabelStyle: _propTypes2.default.object,
	  /**
	   * The content to use for the floating label element.
	   */
	  floatingLabelText: _propTypes2.default.node,
	  /**
	   * If true, the field receives the property width 100%.
	   */
	  fullWidth: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the TextField's hint text element.
	   */
	  hintStyle: _propTypes2.default.object,
	  /**
	   * The hint content to display.
	   */
	  hintText: _propTypes2.default.node,
	  /**
	   * The id prop for the text field.
	   */
	  id: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the TextField's input element.
	   * When multiLine is false: define the style of the input element.
	   * When multiLine is true: define the style of the container of the textarea.
	   */
	  inputStyle: _propTypes2.default.object,
	  /**
	   * If true, a textarea element will be rendered.
	   * The textarea also grows and shrinks according to the number of lines.
	   */
	  multiLine: _propTypes2.default.bool,
	  /**
	   * Name applied to the input.
	   */
	  name: _propTypes2.default.string,
	  /** @ignore */
	  onBlur: _propTypes2.default.func,
	  /**
	   * Callback function that is fired when the textfield's value changes.
	   *
	   * @param {object} event Change event targeting the text field.
	   * @param {string} newValue The new value of the text field.
	   */
	  onChange: _propTypes2.default.func,
	  /** @ignore */
	  onFocus: _propTypes2.default.func,
	  /**
	   * Number of rows to display when multiLine option is set to true.
	   */
	  rows: _propTypes2.default.number,
	  /**
	   * Maximum number of rows to display when
	   * multiLine option is set to true.
	   */
	  rowsMax: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the TextField's textarea element.
	   * The TextField use either a textarea or an input,
	   * this property has effects only when multiLine is true.
	   */
	  textareaStyle: _propTypes2.default.object,
	  /**
	   * Specifies the type of input to display
	   * such as "password" or "text".
	   */
	  type: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the
	   * TextField's underline element when disabled.
	   */
	  underlineDisabledStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the TextField's
	   * underline element when focussed.
	   */
	  underlineFocusStyle: _propTypes2.default.object,
	  /**
	   * If true, shows the underline for the text field.
	   */
	  underlineShow: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the TextField's underline element.
	   */
	  underlineStyle: _propTypes2.default.object,
	  /**
	   * The value of the text field.
	   */
	  value: _propTypes2.default.any
	} : {};
	exports.default = TextField;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(339);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(340), __esModule: true };

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(341);
	module.exports = __webpack_require__(169).Object.assign;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(168);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(342) });


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(201);
	var gOPS = __webpack_require__(224);
	var pIE = __webpack_require__(225);
	var toObject = __webpack_require__(159);
	var IObject = __webpack_require__(204);
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(178)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ }),
/* 343 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

/***/ }),
/* 344 */
/***/ (function(module, exports) {

	module.exports = function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	  return target;
	};


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(346);


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactDefaultInjection = __webpack_require__(351);
	var ReactMount = __webpack_require__(480);
	var ReactReconciler = __webpack_require__(372);
	var ReactUpdates = __webpack_require__(369);
	var ReactVersion = __webpack_require__(485);

	var findDOMNode = __webpack_require__(486);
	var getHostComponentFromComposite = __webpack_require__(487);
	var renderSubtreeIntoContainer = __webpack_require__(488);
	var warning = __webpack_require__(247);

	ReactDefaultInjection.inject();

	var ReactDOM = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	  /* eslint-enable camelcase */
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(361);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ReactInstrumentation = __webpack_require__(375);
	  var ReactDOMUnknownPropertyHook = __webpack_require__(489);
	  var ReactDOMNullInputValuePropHook = __webpack_require__(490);
	  var ReactDOMInvalidARIAHook = __webpack_require__(491);

	  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
	  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
	}

	module.exports = ReactDOM;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var DOMProperty = __webpack_require__(349);
	var ReactDOMComponentFlags = __webpack_require__(350);

	var invariant = __webpack_require__(251);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Check if a given node should be cached.
	 */
	function shouldPrecacheNode(node, nodeID) {
	  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
	}

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID === 0) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (shouldPrecacheNode(childNode, childID)) {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 348 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   *
	   * autofocus is predefined, because adding it to the property whitelist
	   * causes unintended side effects.
	   *
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 350 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = __webpack_require__(352);
	var BeforeInputEventPlugin = __webpack_require__(353);
	var ChangeEventPlugin = __webpack_require__(368);
	var DefaultEventPluginOrder = __webpack_require__(386);
	var EnterLeaveEventPlugin = __webpack_require__(387);
	var HTMLDOMPropertyConfig = __webpack_require__(392);
	var ReactComponentBrowserEnvironment = __webpack_require__(393);
	var ReactDOMComponent = __webpack_require__(406);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactDOMEmptyComponent = __webpack_require__(451);
	var ReactDOMTreeTraversal = __webpack_require__(452);
	var ReactDOMTextComponent = __webpack_require__(453);
	var ReactDefaultBatchingStrategy = __webpack_require__(454);
	var ReactEventListener = __webpack_require__(455);
	var ReactInjection = __webpack_require__(458);
	var ReactReconcileTransaction = __webpack_require__(459);
	var SVGDOMPropertyConfig = __webpack_require__(467);
	var SelectEventPlugin = __webpack_require__(468);
	var SimpleEventPlugin = __webpack_require__(469);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ }),
/* 352 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ARIADOMPropertyConfig = {
	  Properties: {
	    // Global States and Properties
	    'aria-current': 0, // state
	    'aria-details': 0,
	    'aria-disabled': 0, // state
	    'aria-hidden': 0, // state
	    'aria-invalid': 0, // state
	    'aria-keyshortcuts': 0,
	    'aria-label': 0,
	    'aria-roledescription': 0,
	    // Widget Attributes
	    'aria-autocomplete': 0,
	    'aria-checked': 0,
	    'aria-expanded': 0,
	    'aria-haspopup': 0,
	    'aria-level': 0,
	    'aria-modal': 0,
	    'aria-multiline': 0,
	    'aria-multiselectable': 0,
	    'aria-orientation': 0,
	    'aria-placeholder': 0,
	    'aria-pressed': 0,
	    'aria-readonly': 0,
	    'aria-required': 0,
	    'aria-selected': 0,
	    'aria-sort': 0,
	    'aria-valuemax': 0,
	    'aria-valuemin': 0,
	    'aria-valuenow': 0,
	    'aria-valuetext': 0,
	    // Live Region Attributes
	    'aria-atomic': 0,
	    'aria-busy': 0,
	    'aria-live': 0,
	    'aria-relevant': 0,
	    // Drag-and-Drop Attributes
	    'aria-dropeffect': 0,
	    'aria-grabbed': 0,
	    // Relationship Attributes
	    'aria-activedescendant': 0,
	    'aria-colcount': 0,
	    'aria-colindex': 0,
	    'aria-colspan': 0,
	    'aria-controls': 0,
	    'aria-describedby': 0,
	    'aria-errormessage': 0,
	    'aria-flowto': 0,
	    'aria-labelledby': 0,
	    'aria-owns': 0,
	    'aria-posinset': 0,
	    'aria-rowcount': 0,
	    'aria-rowindex': 0,
	    'aria-rowspan': 0,
	    'aria-setsize': 0
	  },
	  DOMAttributeNames: {},
	  DOMPropertyNames: {}
	};

	module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(354);
	var ExecutionEnvironment = __webpack_require__(361);
	var FallbackCompositionState = __webpack_require__(362);
	var SyntheticCompositionEvent = __webpack_require__(365);
	var SyntheticInputEvent = __webpack_require__(367);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case 'topCompositionStart':
	      return eventTypes.compositionStart;
	    case 'topCompositionEnd':
	      return eventTypes.compositionEnd;
	    case 'topCompositionUpdate':
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topKeyUp':
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case 'topKeyDown':
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case 'topKeyPress':
	    case 'topMouseDown':
	    case 'topBlur':
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case 'topCompositionEnd':
	      return getDataFromCustomEvent(nativeEvent);
	    case 'topKeyPress':
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case 'topTextInput':
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (currentComposition) {
	    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case 'topPaste':
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case 'topKeyPress':
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case 'topCompositionEnd':
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(355);
	var EventPluginUtils = __webpack_require__(357);

	var accumulateInto = __webpack_require__(359);
	var forEachAccumulated = __webpack_require__(360);
	var warning = __webpack_require__(247);

	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var EventPluginRegistry = __webpack_require__(356);
	var EventPluginUtils = __webpack_require__(357);
	var ReactErrorUtils = __webpack_require__(358);

	var accumulateInto = __webpack_require__(359);
	var forEachAccumulated = __webpack_require__(360);
	var invariant = __webpack_require__(251);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	var getDictionaryKey = function (inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var key = getDictionaryKey(inst);
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[key] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	    // live here; needs to be moved to a better place soon
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
	      return null;
	    }
	    var key = getDictionaryKey(inst);
	    return bankForRegistrationName && bankForRegistrationName[key];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      var key = getDictionaryKey(inst);
	      delete bankForRegistrationName[key];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    var key = getDictionaryKey(inst);
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][key]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][key];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }
	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	  // Trust the developer to only use possibleRegistrationNames in __DEV__

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (injectedEventPluginOrder) {
	    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var pluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = pluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    if (dispatchConfig.phasedRegistrationNames !== undefined) {
	      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
	      // that it is not undefined.
	      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

	      for (var phase in phasedRegistrationNames) {
	        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
	          continue;
	        }
	        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
	        if (pluginModule) {
	          return pluginModule;
	        }
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    eventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactErrorUtils = __webpack_require__(358);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	function isEndish(topLevelType) {
	  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
	}

	function isMoveish(topLevelType) {
	  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
	}
	function isStartish(topLevelType) {
	  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a) {
	  try {
	    func(a);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
	      var boundFunc = function () {
	        func(a);
	      };
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 360 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ }),
/* 361 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var PooledClass = __webpack_require__(363);

	var getTextContentAccessor = __webpack_require__(364);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  // Casting as any so that flow ignores the actual implementation and trusts
	  // it to match the type we declared
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var PooledClass = __webpack_require__(363);

	var emptyFunction = __webpack_require__(248);
	var warning = __webpack_require__(247);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	      // eslint-disable-next-line valid-typeof
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	/** Proxying after everything set on SyntheticEvent
	  * to resolve Proxy issue on some WebKit browsers
	  * in which some Event properties are set to undefined (GH#10010)
	  */
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(355);
	var EventPropagators = __webpack_require__(354);
	var ExecutionEnvironment = __webpack_require__(361);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactUpdates = __webpack_require__(369);
	var SyntheticEvent = __webpack_require__(366);

	var inputValueTracking = __webpack_require__(382);
	var getEventTarget = __webpack_require__(383);
	var isEventSupported = __webpack_require__(384);
	var isTextInputElement = __webpack_require__(385);

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
	  event.type = 'change';
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getInstIfValueChanged(targetInst, nativeEvent) {
	  var updated = inputValueTracking.updateValueIfChanged(targetInst);
	  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

	  if (updated || simulated) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === 'topChange') {
	    return targetInst;
	  }
	}

	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.

	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === 'topFocus') {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === 'topBlur') {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst, nativeEvent);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topClick') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
	  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
	    return getInstIfValueChanged(targetInst, nativeEvent);
	  }
	}

	function handleControlledInputBlur(inst, node) {
	  // TODO: In IE, inst is occasionally null. Why?
	  if (inst == null) {
	    return;
	  }

	  // Fiber and ReactDOM keep wrapper state in separate places
	  var state = inst._wrapperState || node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  // If controlled, assign the value attribute to the current value on blur
	  var value = '' + node.value;
	  if (node.getAttribute('value') !== value) {
	    node.setAttribute('value', value);
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes,

	  _allowSimulatedPassThrough: true,
	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === 'topBlur') {
	      handleControlledInputBlur(targetInst, targetNode);
	    }
	  }
	};

	module.exports = ChangeEventPlugin;

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var CallbackQueue = __webpack_require__(370);
	var PooledClass = __webpack_require__(363);
	var ReactFeatureFlags = __webpack_require__(371);
	var ReactReconciler = __webpack_require__(372);
	var Transaction = __webpack_require__(381);

	var invariant = __webpack_require__(251);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.type.isReactTopLevelWrapper) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  invariant(batchingStrategy.isBatchingUpdates, "ReactUpdates.asap: Can't enqueue an asap callback in a context where" + 'updates are not being batched.');
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var PooledClass = __webpack_require__(363);

	var invariant = __webpack_require__(251);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */

	var CallbackQueue = function () {
	  function CallbackQueue(arg) {
	    _classCallCheck(this, CallbackQueue);

	    this._callbacks = null;
	    this._contexts = null;
	    this._arg = arg;
	  }

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */


	  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._callbacks.push(callback);
	    this._contexts = this._contexts || [];
	    this._contexts.push(context);
	  };

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.notifyAll = function notifyAll() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    var arg = this._arg;
	    if (callbacks && contexts) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i], arg);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  };

	  CallbackQueue.prototype.checkpoint = function checkpoint() {
	    return this._callbacks ? this._callbacks.length : 0;
	  };

	  CallbackQueue.prototype.rollback = function rollback(len) {
	    if (this._callbacks && this._contexts) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  };

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */


	  CallbackQueue.prototype.reset = function reset() {
	    this._callbacks = null;
	    this._contexts = null;
	  };

	  /**
	   * `PooledClass` looks for this.
	   */


	  CallbackQueue.prototype.destructor = function destructor() {
	    this.reset();
	  };

	  return CallbackQueue;
	}();

	module.exports = PooledClass.addPoolingTo(CallbackQueue);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 371 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactRef = __webpack_require__(373);
	var ReactInstrumentation = __webpack_require__(375);

	var warning = __webpack_require__(247);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
	  {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactOwner = __webpack_require__(374);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevRef = null;
	  var prevOwner = null;
	  if (prevElement !== null && typeof prevElement === 'object') {
	    prevRef = prevElement.ref;
	    prevOwner = prevElement._owner;
	  }

	  var nextRef = null;
	  var nextOwner = null;
	  if (nextElement !== null && typeof nextElement === 'object') {
	    nextRef = nextElement.ref;
	    nextOwner = nextElement._owner;
	  }

	  return prevRef !== nextRef ||
	  // If owner changes but we have an unchanged function ref, don't update refs
	  typeof nextRef === 'string' && nextOwner !== prevOwner;
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || typeof element !== 'object') {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid owner.
	 * @final
	 */
	function isValidOwner(object) {
	  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	}

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// Trust the developer to only use ReactInstrumentation with a __DEV__ check

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(376);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactInvalidSetStateWarningHook = __webpack_require__(377);
	var ReactHostOperationHistoryHook = __webpack_require__(378);
	var ReactComponentTreeHook = __webpack_require__(263);
	var ExecutionEnvironment = __webpack_require__(361);

	var performanceNow = __webpack_require__(379);
	var warning = __webpack_require__(247);

	var hooks = [];
	var didHookThrowForEvent = {};

	function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
	  try {
	    fn.call(context, arg1, arg2, arg3, arg4, arg5);
	  } catch (e) {
	    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
	    didHookThrowForEvent[event] = true;
	  }
	}

	function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
	  for (var i = 0; i < hooks.length; i++) {
	    var hook = hooks[i];
	    var fn = hook[event];
	    if (fn) {
	      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
	    }
	  }
	}

	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = [];
	var currentFlushStartTime = 0;
	var currentTimerDebugID = null;
	var currentTimerStartTime = 0;
	var currentTimerNestedFlushDuration = 0;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeHook.purgeUnmountedComponents();
	  ReactHostOperationHistoryHook.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeHook.getOwnerID(id);
	    var parentID = ReactComponentTreeHook.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeHook.getDisplayName(id),
	      text: ReactComponentTreeHook.getText(id),
	      updateCount: ReactComponentTreeHook.getUpdateCount(id),
	      childIDs: ReactComponentTreeHook.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements;
	  var previousOperations = ReactHostOperationHistoryHook.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = 0;
	    currentFlushMeasurements = [];
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	  if (allowRoot && debugID === 0) {
	    return;
	  }
	  if (!debugID) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
	  }
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = 0;
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
	      startTime = _lifeCycleTimerStack$.startTime,
	      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
	      debugID = _lifeCycleTimerStack$.debugID,
	      timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var lastMarkTimeStamp = 0;
	var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	function shouldMark(debugID) {
	  if (!isProfiling || !canUsePerformanceMeasure) {
	    return false;
	  }
	  var element = ReactComponentTreeHook.getElement(debugID);
	  if (element == null || typeof element !== 'object') {
	    return false;
	  }
	  var isHostElement = typeof element.type === 'string';
	  if (isHostElement) {
	    return false;
	  }
	  return true;
	}

	function markBegin(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  lastMarkTimeStamp = performanceNow();
	  performance.mark(markName);
	}

	function markEnd(debugID, markType) {
	  if (!shouldMark(debugID)) {
	    return;
	  }

	  var markName = debugID + '::' + markType;
	  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

	  // Chrome has an issue of dropping markers recorded too fast:
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
	  // To work around this, we will not report very small measurements.
	  // I determined the magic number by tweaking it back and forth.
	  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
	  // When the bug is fixed, we can `measure()` unconditionally if we want to.
	  var timeStamp = performanceNow();
	  if (timeStamp - lastMarkTimeStamp > 0.1) {
	    var measurementName = displayName + ' [' + markType + ']';
	    performance.measure(measurementName, markName);
	  }

	  performance.clearMarks(markName);
	  if (measurementName) {
	    performance.clearMeasures(measurementName);
	  }
	}

	var ReactDebugTool = {
	  addHook: function (hook) {
	    hooks.push(hook);
	  },
	  removeHook: function (hook) {
	    for (var i = 0; i < hooks.length; i++) {
	      if (hooks[i] === hook) {
	        hooks.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }

	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }

	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    markBegin(debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    markEnd(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (operation) {
	    checkDebugID(operation.instanceID);
	    emitEvent('onHostOperation', operation);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onBeforeMountComponent: function (debugID, element, parentDebugID) {
	    checkDebugID(debugID);
	    checkDebugID(parentDebugID, true);
	    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
	    markBegin(debugID, 'mount');
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'mount');
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	    markBegin(debugID, 'update');
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'update');
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onBeforeUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUnmountComponent', debugID);
	    markBegin(debugID, 'unmount');
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    markEnd(debugID, 'unmount');
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	// TODO remove these when RN/www gets updated
	ReactDebugTool.addDevtool = ReactDebugTool.addHook;
	ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

	ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
	ReactDebugTool.addHook(ReactComponentTreeHook);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var warning = __webpack_require__(247);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningHook = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 378 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryHook = {
	  onHostOperation: function (operation) {
	    history.push(operation);
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryHook._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(380);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	var OBSERVED_ERROR = {};

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var TransactionImpl = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /* eslint-disable space-before-function-paren */

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    /* eslint-enable space-before-function-paren */
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	module.exports = TransactionImpl;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(347);

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(inst) {
	  return inst._wrapperState.valueTracker;
	}

	function attachTracker(inst, tracker) {
	  inst._wrapperState.valueTracker = tracker;
	}

	function detachTracker(inst) {
	  inst._wrapperState.valueTracker = null;
	}

	function getValueFromNode(node) {
	  var value;
	  if (node) {
	    value = isCheckable(node) ? '' + node.checked : node.value;
	  }
	  return value;
	}

	var inputValueTracking = {
	  // exposed for testing
	  _getTrackerFromNode: function (node) {
	    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
	  },


	  track: function (inst) {
	    if (getTracker(inst)) {
	      return;
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var valueField = isCheckable(node) ? 'checked' : 'value';
	    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	    var currentValue = '' + node[valueField];

	    // if someone has already defined a value or Safari, then bail
	    // and don't track value will cause over reporting of changes,
	    // but it's better then a hard failure
	    // (needed for certain tests that spyOn input values and Safari)
	    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	      return;
	    }

	    Object.defineProperty(node, valueField, {
	      enumerable: descriptor.enumerable,
	      configurable: true,
	      get: function () {
	        return descriptor.get.call(this);
	      },
	      set: function (value) {
	        currentValue = '' + value;
	        descriptor.set.call(this, value);
	      }
	    });

	    attachTracker(inst, {
	      getValue: function () {
	        return currentValue;
	      },
	      setValue: function (value) {
	        currentValue = '' + value;
	      },
	      stopTracking: function () {
	        detachTracker(inst);
	        delete node[valueField];
	      }
	    });
	  },

	  updateValueIfChanged: function (inst) {
	    if (!inst) {
	      return false;
	    }
	    var tracker = getTracker(inst);

	    if (!tracker) {
	      inputValueTracking.track(inst);
	      return true;
	    }

	    var lastValue = tracker.getValue();
	    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

	    if (nextValue !== lastValue) {
	      tracker.setValue(nextValue);
	      return true;
	    }

	    return false;
	  },
	  stopTracking: function (inst) {
	    var tracker = getTracker(inst);
	    if (tracker) {
	      tracker.stopTracking();
	    }
	  }
	};

	module.exports = inputValueTracking;

/***/ }),
/* 383 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ }),
/* 385 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ }),
/* 386 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */

	var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	module.exports = DefaultEventPluginOrder;

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(354);
	var ReactDOMComponentTree = __webpack_require__(347);
	var SyntheticMouseEvent = __webpack_require__(388);

	var eventTypes = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: ['topMouseOut', 'topMouseOver']
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === 'topMouseOut') {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(389);
	var ViewportMetrics = __webpack_require__(390);

	var getEventModifierState = __webpack_require__(391);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	var getEventTarget = __webpack_require__(383);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ }),
/* 390 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ViewportMetrics = {
	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	};

	module.exports = ViewportMetrics;

/***/ }),
/* 391 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(349);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    // specifies target context for links with `preload` type
	    as: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    controlsList: 0,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    playsInline: HAS_BOOLEAN_VALUE,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    referrerPolicy: 0,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {},
	  DOMMutationMethods: {
	    value: function (node, value) {
	      if (value == null) {
	        return node.removeAttribute('value');
	      }

	      // Number inputs get special treatment due to some edge cases in
	      // Chrome. Let everything else assign the value attribute as normal.
	      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
	      if (node.type !== 'number' || node.hasAttribute('value') === false) {
	        node.setAttribute('value', '' + value);
	      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
	        // Don't assign an attribute if validation reports bad
	        // input. Chrome will clear the value. Additionally, don't
	        // operate on inputs that have focus, otherwise Chrome might
	        // strip off trailing decimal places and cause the user's
	        // cursor position to jump to the beginning of the input.
	        //
	        // In ReactDOMInput, we have an onBlur event that will trigger
	        // this function again when focus is lost.
	        node.setAttribute('value', '' + value);
	      }
	    }
	  }
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(394);
	var ReactDOMIDOperations = __webpack_require__(405);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(395);
	var Danger = __webpack_require__(401);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactInstrumentation = __webpack_require__(375);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(398);
	var setInnerHTML = __webpack_require__(397);
	var setTextContent = __webpack_require__(399);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation({
	      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
	      type: 'replace text',
	      payload: stringText
	    });
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: prevInstance._debugID,
	        type: 'replace with',
	        payload: markup.toString()
	      });
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: nextInstance._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case 'INSERT_MARKUP':
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'insert child',
	              payload: {
	                toIndex: update.toIndex,
	                content: update.content.toString()
	              }
	            });
	          }
	          break;
	        case 'MOVE_EXISTING':
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'move child',
	              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
	            });
	          }
	          break;
	        case 'SET_MARKUP':
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace children',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'TEXT_CONTENT':
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'replace text',
	              payload: update.content.toString()
	            });
	          }
	          break;
	        case 'REMOVE_NODE':
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation({
	              instanceID: parentNodeDebugID,
	              type: 'remove child',
	              payload: { fromIndex: update.fromIndex }
	            });
	          }
	          break;
	      }
	    }
	  }
	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(396);
	var setInnerHTML = __webpack_require__(397);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(398);
	var setTextContent = __webpack_require__(399);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ }),
/* 396 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);
	var DOMNamespaces = __webpack_require__(396);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(398);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xfeff) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ }),
/* 398 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);
	var escapeTextContentForBrowser = __webpack_require__(400);
	var setInnerHTML = __webpack_require__(397);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      if (node.nodeType === 3) {
	        node.nodeValue = text;
	        return;
	      }
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ }),
/* 400 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2016-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var DOMLazyTree = __webpack_require__(395);
	var ExecutionEnvironment = __webpack_require__(361);

	var createNodesFromMarkup = __webpack_require__(402);
	var emptyFunction = __webpack_require__(248);
	var invariant = __webpack_require__(251);

	var Danger = {
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(361);

	var createArrayFromMixed = __webpack_require__(403);
	var getMarkupWrap = __webpack_require__(404);
	var invariant = __webpack_require__(251);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(251);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(361);

	var invariant = __webpack_require__(251);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(394);
	var ReactDOMComponentTree = __webpack_require__(347);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var AutoFocusUtils = __webpack_require__(407);
	var CSSPropertyOperations = __webpack_require__(409);
	var DOMLazyTree = __webpack_require__(395);
	var DOMNamespaces = __webpack_require__(396);
	var DOMProperty = __webpack_require__(349);
	var DOMPropertyOperations = __webpack_require__(417);
	var EventPluginHub = __webpack_require__(355);
	var EventPluginRegistry = __webpack_require__(356);
	var ReactBrowserEventEmitter = __webpack_require__(419);
	var ReactDOMComponentFlags = __webpack_require__(350);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactDOMInput = __webpack_require__(422);
	var ReactDOMOption = __webpack_require__(425);
	var ReactDOMSelect = __webpack_require__(426);
	var ReactDOMTextarea = __webpack_require__(427);
	var ReactInstrumentation = __webpack_require__(375);
	var ReactMultiChild = __webpack_require__(428);
	var ReactServerRenderingTransaction = __webpack_require__(447);

	var emptyFunction = __webpack_require__(248);
	var escapeTextContentForBrowser = __webpack_require__(400);
	var invariant = __webpack_require__(251);
	var isEventSupported = __webpack_require__(384);
	var shallowEqual = __webpack_require__(437);
	var inputValueTracking = __webpack_require__(382);
	var validateDOMNesting = __webpack_require__(450);
	var warning = __webpack_require__(247);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { string: true, number: true };

	var STYLE = 'style';
	var HTML = '__html';
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setAndValidateContentChildDev = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setAndValidateContentChildDev = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    // This ID represents the inlined child that has no backing instance:
	    var contentDebugID = -debugID;

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    validateDOMNesting(null, String(content), this, this._ancestorInfo);
	    this._contentDebugID = contentDebugID;
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trackInputValue() {
	  inputValueTracking.track(this);
	}

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	var newlineEatingTags = {
	  listing: true,
	  pre: true,
	  textarea: true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = 0;
	  this._domID = 0;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setAndValidateContentChildDev.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the parent component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trackInputValue, this);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, null, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      // TODO: Validate that text is allowed as a child of this node
	      if (contentToUse != null) {
	        // Avoid setting textContent when the text is empty. In IE11 setting
	        // textContent on a text area will cause the placeholder to not
	        // show within the textarea until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        if (contentToUse !== '') {
	          if (process.env.NODE_ENV !== 'production') {
	            setAndValidateContentChildDev.call(this, contentToUse);
	          }
	          DOMLazyTree.queueText(lazyTree, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'input':
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    switch (this._tag) {
	      case 'input':
	        // Update the wrapper around inputs *after* updating props. This has to
	        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
	        // raise warnings and prevent the new value from being assigned.
	        ReactDOMInput.updateWrapper(this);

	        // We also check that we haven't missed a value update, such as a
	        // Radio group shifting the checked value to another named radio input.
	        inputValueTracking.updateValueIfChanged(this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        break;
	      case 'select':
	        // <select> value update needs to occur after <option> children
	        // reconciliation
	        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	        break;
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setAndValidateContentChildDev.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setAndValidateContentChildDev.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'input':
	      case 'textarea':
	        inputValueTracking.stopTracking(this);
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    this._rootNodeID = 0;
	    this._domID = 0;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setAndValidateContentChildDev.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }
	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(347);

	var focusNode = __webpack_require__(408);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ }),
/* 408 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(410);
	var ExecutionEnvironment = __webpack_require__(361);
	var ReactInstrumentation = __webpack_require__(375);

	var camelizeStyleName = __webpack_require__(411);
	var dangerousStyleValue = __webpack_require__(413);
	var hyphenateStyleName = __webpack_require__(414);
	var memoizeStringOnly = __webpack_require__(416);
	var warning = __webpack_require__(247);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styleValue, component);
	        }
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: component._debugID,
	        type: 'update styles',
	        payload: styles
	      });
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var isCustomProperty = styleName.indexOf('--') === 0;
	      if (process.env.NODE_ENV !== 'production') {
	        if (!isCustomProperty) {
	          warnValidStyle(styleName, styles[styleName], component);
	        }
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (isCustomProperty) {
	        style.setProperty(styleName, styleValue);
	      } else if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 410 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(412);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 412 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var CSSProperty = __webpack_require__(410);
	var warning = __webpack_require__(247);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(415);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 415 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 416 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(349);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactInstrumentation = __webpack_require__(375);

	var quoteAttributeValueForBrowser = __webpack_require__(418);
	var warning = __webpack_require__(247);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'update attribute',
	        payload: payload
	      });
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation({
	        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
	        type: 'remove attribute',
	        payload: name
	      });
	    }
	  }
	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(400);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var EventPluginRegistry = __webpack_require__(356);
	var ReactEventEmitterMixin = __webpack_require__(420);
	var ViewportMetrics = __webpack_require__(390);

	var getVendorPrefixedEventName = __webpack_require__(421);
	var isEventSupported = __webpack_require__(384);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === 'topWheel') {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === 'topScroll') {
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening.topBlur = true;
	          isListening.topFocus = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Protect against document.createEvent() returning null
	   * Some popup blocker extensions appear to do this:
	   * https://github.com/facebook/react/issues/6887
	   */
	  supportsEventPageXY: function () {
	    if (!document.createEvent) {
	      return false;
	    }
	    var ev = document.createEvent('MouseEvent');
	    return ev != null && 'pageX' in ev;
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	});

	module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(355);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var DOMPropertyOperations = __webpack_require__(417);
	var LinkedValueUtils = __webpack_require__(423);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactUpdates = __webpack_require__(369);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined,
	      // Make sure we set .step before .value (setting .value before .step
	      // means .value is rounded on mount, based upon step precision)
	      step: undefined,
	      // Make sure we set .min & .max before .value (to ensure proper order
	      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
	      min: undefined,
	      max: undefined
	    }, props, {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      controlled: isControlled(props)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      if (value === 0 && node.value === '') {
	        node.value = '0';
	        // Note: IE9 reports a number inputs as 'text', so check props instead.
	      } else if (props.type === 'number') {
	        // Simulate `input.valueAsNumber`. IE9 does not support it
	        var valueAsNumber = parseFloat(node.value, 10) || 0;

	        if (
	        // eslint-disable-next-line
	        value != valueAsNumber ||
	        // eslint-disable-next-line
	        value == valueAsNumber && node.value != value) {
	          // Cast `value` to a string to ensure the value is set correctly. While
	          // browsers typically do this as necessary, jsdom doesn't.
	          node.value = '' + value;
	        }
	      } else if (node.value !== '' + value) {
	        // Cast `value` to a string to ensure the value is set correctly. While
	        // browsers typically do this as necessary, jsdom doesn't.
	        node.value = '' + value;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        // In Chrome, assigning defaultValue to certain input types triggers input validation.
	        // For number inputs, the display value loses trailing decimal points. For email inputs,
	        // Chrome raises "The specified value <x> is not a valid email address".
	        //
	        // Here we check to see if the defaultValue has actually changed, avoiding these problems
	        // when the user is inputting text
	        //
	        // https://github.com/facebook/react/issues/7253
	        if (node.defaultValue !== '' + props.defaultValue) {
	          node.defaultValue = '' + props.defaultValue;
	        }
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.

	    switch (props.type) {
	      case 'submit':
	      case 'reset':
	        break;
	      case 'color':
	      case 'date':
	      case 'datetime':
	      case 'datetime-local':
	      case 'month':
	      case 'time':
	      case 'week':
	        // This fixes the no-show issue on iOS Safari and Android Chrome:
	        // https://github.com/facebook/react/issues/7233
	        node.value = '';
	        node.value = node.defaultValue;
	        break;
	      default:
	        node.value = node.value;
	        break;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactPropTypesSecret = __webpack_require__(424);
	var propTypesFactory = __webpack_require__(268);

	var React = __webpack_require__(242);
	var PropTypes = propTypesFactory(React.isValidElement);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	var hasReadOnlyValue = {
	  button: true,
	  checkbox: true,
	  image: true,
	  hidden: true,
	  radio: true,
	  reset: true,
	  submit: true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: PropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 424 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var React = __webpack_require__(242);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactDOMSelect = __webpack_require__(426);

	var warning = __webpack_require__(247);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }
	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var LinkedValueUtils = __webpack_require__(423);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactUpdates = __webpack_require__(369);

	var warning = __webpack_require__(247);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else if (!props.multiple && isArray) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, props, {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var LinkedValueUtils = __webpack_require__(423);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactUpdates = __webpack_require__(369);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, props, {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var textContent = node.textContent;

	    // Only set node.value if textContent is equal to the expected
	    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	    // will populate textContent as well.
	    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	    if (textContent === inst._wrapperState.initialValue) {
	      node.value = textContent;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactComponentEnvironment = __webpack_require__(429);
	var ReactInstanceMap = __webpack_require__(430);
	var ReactInstrumentation = __webpack_require__(375);

	var ReactCurrentOwner = __webpack_require__(256);
	var ReactReconciler = __webpack_require__(372);
	var ReactChildReconciler = __webpack_require__(431);

	var emptyFunction = __webpack_require__(248);
	var flattenChildren = __webpack_require__(446);
	var invariant = __webpack_require__(251);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'INSERT_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'MOVE_EXISTING',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'REMOVE_NODE',
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'SET_MARKUP',
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: 'TEXT_CONTENT',
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        var selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
	      var nextChildren;
	      var selfDebugID = 0;
	      if (process.env.NODE_ENV !== 'production') {
	        selfDebugID = getDebugID(this);
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          var selfDebugID = 0;
	          if (process.env.NODE_ENV !== 'production') {
	            selfDebugID = getDebugID(this);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var mountImages = [];
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var nextIndex = 0;
	      var lastIndex = 0;
	      // `nextMountIndex` will increment for each newly mounted child.
	      var nextMountIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
	          nextMountIndex++;
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	  }
	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	var injected = false;

	var ReactComponentEnvironment = {
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 430 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	};

	module.exports = ReactInstanceMap;

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(372);

	var instantiateReactComponent = __webpack_require__(432);
	var KeyEscapeUtils = __webpack_require__(442);
	var shouldUpdateReactComponent = __webpack_require__(438);
	var traverseAllChildren = __webpack_require__(443);
	var warning = __webpack_require__(247);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(263);
	}

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    if (!ReactComponentTreeHook) {
	      ReactComponentTreeHook = __webpack_require__(263);
	    }
	    if (!keyUnique) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
	  {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
	  {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	        // Creating mount image now ensures refs are resolved in right order
	        // (see https://github.com/facebook/react/pull/7101 for explanation).
	        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
	        mountImages.push(nextChildMountImage);
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var ReactCompositeComponent = __webpack_require__(433);
	var ReactEmptyComponent = __webpack_require__(439);
	var ReactHostComponent = __webpack_require__(440);

	var getNextDebugID = __webpack_require__(441);
	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    var type = element.type;
	    if (typeof type !== 'function' && typeof type !== 'string') {
	      var info = '';
	      if (process.env.NODE_ENV !== 'production') {
	        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
	        }
	      }
	      info += getDeclarationErrorAddendum(element._owner);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
	    }

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var React = __webpack_require__(242);
	var ReactComponentEnvironment = __webpack_require__(429);
	var ReactCurrentOwner = __webpack_require__(256);
	var ReactErrorUtils = __webpack_require__(358);
	var ReactInstanceMap = __webpack_require__(430);
	var ReactInstrumentation = __webpack_require__(375);
	var ReactNodeTypes = __webpack_require__(434);
	var ReactReconciler = __webpack_require__(372);

	if (process.env.NODE_ENV !== 'production') {
	  var checkReactTypeSpec = __webpack_require__(435);
	}

	var emptyObject = __webpack_require__(250);
	var invariant = __webpack_require__(251);
	var shallowEqual = __webpack_require__(437);
	var shouldUpdateReactComponent = __webpack_require__(438);
	var warning = __webpack_require__(247);

	var CompositeTypes = {
	  ImpureClass: 0,
	  PureClass: 1,
	  StatelessFunctional: 2
	};

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	function isPureComponent(Component) {
	  return !!(Component.prototype && Component.prototype.isPureReactComponent);
	}

	// Separated into a function to contain deoptimizations caused by try/finally.
	function measureLifeCyclePerf(fn, debugID, timerType) {
	  if (debugID === 0) {
	    // Top-level wrappers (see ReactMount) and empty components (see
	    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
	    // Both are implementation details that should go away in the future.
	    return fn();
	  }

	  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
	  try {
	    return fn();
	  } finally {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
	  }
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponent = {
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = 0;
	    this._compositeType = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var _this = this;

	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var doConstruct = shouldConstruct(Component);
	    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!doConstruct && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	      this._compositeType = CompositeTypes.StatelessFunctional;
	    } else {
	      if (isPureComponent(Component)) {
	        this._compositeType = CompositeTypes.PureClass;
	      } else {
	        this._compositeType = CompositeTypes.ImpureClass;
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(function () {
	            return inst.componentDidMount();
	          }, _this._debugID, 'componentDidMount');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production' && !doConstruct) {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;

	    if (doConstruct) {
	      if (process.env.NODE_ENV !== 'production') {
	        return measureLifeCyclePerf(function () {
	          return new Component(publicProps, publicContext, updateQueue);
	        }, this._debugID, 'ctor');
	      } else {
	        return new Component(publicProps, publicContext, updateQueue);
	      }
	    }

	    // This can still be an instance in case of factory components
	    // but we'll count this as time spent rendering as the more common case.
	    if (process.env.NODE_ENV !== 'production') {
	      return measureLifeCyclePerf(function () {
	        return Component(publicProps, publicContext, updateQueue);
	      }, this._debugID, 'render');
	    } else {
	      return Component(publicProps, publicContext, updateQueue);
	    }
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillMount();
	        }, debugID, 'componentWillMount');
	      } else {
	        inst.componentWillMount();
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

	    if (process.env.NODE_ENV !== 'production') {
	      if (debugID !== 0) {
	        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }

	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;

	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          measureLifeCyclePerf(function () {
	            return inst.componentWillUnmount();
	          }, this._debugID, 'componentWillUnmount');
	        } else {
	          inst.componentWillUnmount();
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = 0;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    var childContext;

	    if (inst.getChildContext) {
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	        try {
	          childContext = inst.getChildContext();
	        } finally {
	          ReactInstrumentation.debugTool.onEndProcessingChildContext();
	        }
	      } else {
	        childContext = inst.getChildContext();
	      }
	    }

	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	    }
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    var prevProps = prevParentElement.props;
	    var nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillReceiveProps(nextProps, nextContext);
	        }, this._debugID, 'componentWillReceiveProps');
	      } else {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate) {
	      if (inst.shouldComponentUpdate) {
	        if (process.env.NODE_ENV !== 'production') {
	          shouldUpdate = measureLifeCyclePerf(function () {
	            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	          }, this._debugID, 'shouldComponentUpdate');
	        } else {
	          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	        }
	      } else {
	        if (this._compositeType === CompositeTypes.PureClass) {
	          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var _this2 = this;

	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        measureLifeCyclePerf(function () {
	          return inst.componentWillUpdate(nextProps, nextState, nextContext);
	        }, this._debugID, 'componentWillUpdate');
	      } else {
	        inst.componentWillUpdate(nextProps, nextState, nextContext);
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(function () {
	          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
	        });
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();

	    var debugID = 0;
	    if (process.env.NODE_ENV !== 'production') {
	      debugID = this._debugID;
	    }

	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

	      if (process.env.NODE_ENV !== 'production') {
	        if (debugID !== 0) {
	          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
	          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	    var renderedElement;

	    if (process.env.NODE_ENV !== 'production') {
	      renderedElement = measureLifeCyclePerf(function () {
	        return inst.render();
	      }, this._debugID, 'render');
	    } else {
	      renderedElement = inst.render();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedElement === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedElement = null;
	      }
	    }

	    return renderedElement;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedElement;
	    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
	      ReactCurrentOwner.current = this;
	      try {
	        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedElement;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (this._compositeType === CompositeTypes.StatelessFunctional) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null
	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var React = __webpack_require__(242);

	var invariant = __webpack_require__(251);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (React.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactPropTypeLocationNames = __webpack_require__(436);
	var ReactPropTypesSecret = __webpack_require__(424);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(263);
	}

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          if (!ReactComponentTreeHook) {
	            ReactComponentTreeHook = __webpack_require__(263);
	          }
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 437 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 438 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ }),
/* 439 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	var genericComponentClass = null;
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 441 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var nextDebugID = 1;

	function getNextDebugID() {
	  return nextDebugID++;
	}

	module.exports = getNextDebugID;

/***/ }),
/* 442 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactCurrentOwner = __webpack_require__(256);
	var REACT_ELEMENT_TYPE = __webpack_require__(444);

	var getIteratorFn = __webpack_require__(445);
	var invariant = __webpack_require__(251);
	var KeyEscapeUtils = __webpack_require__(442);
	var warning = __webpack_require__(247);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * This is inlined from ReactElement since this file is shared between
	 * isomorphic and renderers. We could extract this to a
	 *
	 */

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' ||
	  // The following is inlined from ReactElement. This means we can optimize
	  // some checks. React Fiber also inlines this logic for similar purposes.
	  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          var mapsAsChildrenAddendum = '';
	          if (ReactCurrentOwner.current) {
	            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
	            if (mapsAsChildrenOwnerName) {
	              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
	            }
	          }
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 444 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.

	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 445 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(442);
	var traverseAllChildren = __webpack_require__(443);
	var warning = __webpack_require__(247);

	var ReactComponentTreeHook;

	if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
	  // Temporary hack.
	  // Inline requires don't work well with Jest:
	  // https://github.com/facebook/react/issues/7240
	  // Remove the inline requires when we don't need them anymore:
	  // https://github.com/facebook/react/pull/7178
	  ReactComponentTreeHook = __webpack_require__(263);
	}

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!ReactComponentTreeHook) {
	        ReactComponentTreeHook = __webpack_require__(263);
	      }
	      if (!keyUnique) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
	      }
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var PooledClass = __webpack_require__(363);
	var Transaction = __webpack_require__(381);
	var ReactInstrumentation = __webpack_require__(375);
	var ReactServerUpdateQueue = __webpack_require__(448);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(449);

	var warning = __webpack_require__(247);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactCurrentOwner = __webpack_require__(256);
	var ReactInstanceMap = __webpack_require__(430);
	var ReactInstrumentation = __webpack_require__(375);
	var ReactUpdates = __webpack_require__(369);

	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var ctor = publicInstance.constructor;
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    // Future-proof 15.5
	    if (callback !== undefined && callback !== null) {
	      ReactUpdateQueue.validateCallback(callback, 'replaceState');
	      if (internalInstance._pendingCallbacks) {
	        internalInstance._pendingCallbacks.push(callback);
	      } else {
	        internalInstance._pendingCallbacks = [callback];
	      }
	    }

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var emptyFunction = __webpack_require__(248);
	var warning = __webpack_require__(247);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      var whitespaceInfo = '';
	      if (childTag === '#text') {
	        if (/\S/.test(childText)) {
	          tagDisplayName = 'Text nodes';
	        } else {
	          tagDisplayName = 'Whitespace text nodes';
	          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	        }
	      } else {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var DOMLazyTree = __webpack_require__(395);
	var ReactDOMComponentTree = __webpack_require__(347);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = 0;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2015-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var invariant = __webpack_require__(251);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], 'captured', argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348),
	    _assign = __webpack_require__(243);

	var DOMChildrenOperations = __webpack_require__(394);
	var DOMLazyTree = __webpack_require__(395);
	var ReactDOMComponentTree = __webpack_require__(347);

	var escapeTextContentForBrowser = __webpack_require__(400);
	var invariant = __webpack_require__(251);
	var validateDOMNesting = __webpack_require__(450);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = 0;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(null, this._stringText, this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var ReactUpdates = __webpack_require__(369);
	var Transaction = __webpack_require__(381);

	var emptyFunction = __webpack_require__(248);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      return callback(a, b, c, d, e);
	    } else {
	      return transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var EventListener = __webpack_require__(456);
	var ExecutionEnvironment = __webpack_require__(361);
	var PooledClass = __webpack_require__(363);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactUpdates = __webpack_require__(369);

	var getEventTarget = __webpack_require__(383);
	var getUnboundedScrollPosition = __webpack_require__(457);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} element Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(248);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 457 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable.Window && scrollable instanceof scrollable.Window) {
	    return {
	      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
	      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(349);
	var EventPluginHub = __webpack_require__(355);
	var EventPluginUtils = __webpack_require__(357);
	var ReactComponentEnvironment = __webpack_require__(429);
	var ReactEmptyComponent = __webpack_require__(439);
	var ReactBrowserEventEmitter = __webpack_require__(419);
	var ReactHostComponent = __webpack_require__(440);
	var ReactUpdates = __webpack_require__(369);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _assign = __webpack_require__(243);

	var CallbackQueue = __webpack_require__(370);
	var PooledClass = __webpack_require__(363);
	var ReactBrowserEventEmitter = __webpack_require__(419);
	var ReactInputSelection = __webpack_require__(460);
	var ReactInstrumentation = __webpack_require__(375);
	var Transaction = __webpack_require__(381);
	var ReactUpdateQueue = __webpack_require__(449);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(461);

	var containsNode = __webpack_require__(463);
	var focusNode = __webpack_require__(408);
	var getActiveElement = __webpack_require__(466);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(361);

	var getNodeForCharacterOffset = __webpack_require__(462);
	var getTextContentAccessor = __webpack_require__(364);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ }),
/* 462 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(464);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(465);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 465 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 466 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 467 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlns: 0,
	  xmlnsXlink: 'xmlns:xlink',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var EventPropagators = __webpack_require__(354);
	var ExecutionEnvironment = __webpack_require__(361);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactInputSelection = __webpack_require__(460);
	var SyntheticEvent = __webpack_require__(366);

	var getActiveElement = __webpack_require__(466);
	var isTextInputElement = __webpack_require__(385);
	var shallowEqual = __webpack_require__(437);

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case 'topFocus':
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case 'topBlur':
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case 'topMouseDown':
	        mouseDown = true;
	        break;
	      case 'topContextMenu':
	      case 'topMouseUp':
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case 'topSelectionChange':
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case 'topKeyDown':
	      case 'topKeyUp':
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === 'onSelect') {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var EventListener = __webpack_require__(456);
	var EventPropagators = __webpack_require__(354);
	var ReactDOMComponentTree = __webpack_require__(347);
	var SyntheticAnimationEvent = __webpack_require__(470);
	var SyntheticClipboardEvent = __webpack_require__(471);
	var SyntheticEvent = __webpack_require__(366);
	var SyntheticFocusEvent = __webpack_require__(472);
	var SyntheticKeyboardEvent = __webpack_require__(473);
	var SyntheticMouseEvent = __webpack_require__(388);
	var SyntheticDragEvent = __webpack_require__(476);
	var SyntheticTouchEvent = __webpack_require__(477);
	var SyntheticTransitionEvent = __webpack_require__(478);
	var SyntheticUIEvent = __webpack_require__(389);
	var SyntheticWheelEvent = __webpack_require__(479);

	var emptyFunction = __webpack_require__(248);
	var getEventCharCode = __webpack_require__(474);
	var invariant = __webpack_require__(251);

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: ['topAbort'],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = {
	 *   'topAbort': { sameConfig }
	 * };
	 */
	var eventTypes = {};
	var topLevelEventsToDispatchConfig = {};
	['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;
	  var topEvent = 'top' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent]
	  };
	  eventTypes[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	});

	var onClickListeners = {};

	function getDictionaryKey(inst) {
	  // Prevents V8 performance issue:
	  // https://github.com/facebook/react/pull/7232
	  return '.' + inst._rootNodeID;
	}

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	var SimpleEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case 'topAbort':
	      case 'topCanPlay':
	      case 'topCanPlayThrough':
	      case 'topDurationChange':
	      case 'topEmptied':
	      case 'topEncrypted':
	      case 'topEnded':
	      case 'topError':
	      case 'topInput':
	      case 'topInvalid':
	      case 'topLoad':
	      case 'topLoadedData':
	      case 'topLoadedMetadata':
	      case 'topLoadStart':
	      case 'topPause':
	      case 'topPlay':
	      case 'topPlaying':
	      case 'topProgress':
	      case 'topRateChange':
	      case 'topReset':
	      case 'topSeeked':
	      case 'topSeeking':
	      case 'topStalled':
	      case 'topSubmit':
	      case 'topSuspend':
	      case 'topTimeUpdate':
	      case 'topVolumeChange':
	      case 'topWaiting':
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case 'topKeyPress':
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case 'topKeyDown':
	      case 'topKeyUp':
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case 'topBlur':
	      case 'topFocus':
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case 'topClick':
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case 'topDoubleClick':
	      case 'topMouseDown':
	      case 'topMouseMove':
	      case 'topMouseUp':
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case 'topMouseOut':
	      case 'topMouseOver':
	      case 'topContextMenu':
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case 'topDrag':
	      case 'topDragEnd':
	      case 'topDragEnter':
	      case 'topDragExit':
	      case 'topDragLeave':
	      case 'topDragOver':
	      case 'topDragStart':
	      case 'topDrop':
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case 'topTouchCancel':
	      case 'topTouchEnd':
	      case 'topTouchMove':
	      case 'topTouchStart':
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case 'topAnimationEnd':
	      case 'topAnimationIteration':
	      case 'topAnimationStart':
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case 'topTransitionEnd':
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case 'topScroll':
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case 'topWheel':
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case 'topCopy':
	      case 'topCut':
	      case 'topPaste':
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[key]) {
	        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
	      var key = getDictionaryKey(inst);
	      onClickListeners[key].remove();
	      delete onClickListeners[key];
	    }
	  }
	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(389);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(389);

	var getEventCharCode = __webpack_require__(474);
	var getEventKey = __webpack_require__(475);
	var getEventModifierState = __webpack_require__(391);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 474 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(474);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1',
	  113: 'F2',
	  114: 'F3',
	  115: 'F4',
	  116: 'F5',
	  117: 'F6',
	  118: 'F7',
	  119: 'F8',
	  120: 'F9',
	  121: 'F10',
	  122: 'F11',
	  123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(388);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(389);

	var getEventModifierState = __webpack_require__(391);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(366);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(388);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var DOMLazyTree = __webpack_require__(395);
	var DOMProperty = __webpack_require__(349);
	var React = __webpack_require__(242);
	var ReactBrowserEventEmitter = __webpack_require__(419);
	var ReactCurrentOwner = __webpack_require__(256);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactDOMContainerInfo = __webpack_require__(481);
	var ReactDOMFeatureFlags = __webpack_require__(482);
	var ReactFeatureFlags = __webpack_require__(371);
	var ReactInstanceMap = __webpack_require__(430);
	var ReactInstrumentation = __webpack_require__(375);
	var ReactMarkupChecksum = __webpack_require__(483);
	var ReactReconciler = __webpack_require__(372);
	var ReactUpdateQueue = __webpack_require__(449);
	var ReactUpdates = __webpack_require__(369);

	var emptyObject = __webpack_require__(250);
	var instantiateReactComponent = __webpack_require__(432);
	var invariant = __webpack_require__(251);
	var setInnerHTML = __webpack_require__(397);
	var shouldUpdateReactComponent = __webpack_require__(438);
	var warning = __webpack_require__(247);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props.child;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
	  );

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	/**
	 * True if the supplied DOM node is a React DOM element and
	 * it has been rendered by another copy of React.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM has been rendered by another copy of React
	 * @internal
	 */
	function nodeIsRenderedByOtherInstance(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
	}

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
	}

	/**
	 * True if the supplied DOM node is a valid React node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid React DOM node.
	 * @internal
	 */
	function isReactNode(node) {
	  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  return this.props.child;
	};
	TopLevelWrapper.isReactTopLevelWrapper = true;

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by hooks!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = React.createElement(TopLevelWrapper, {
	      child: nextElement
	    });

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props.child;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation({
	          instanceID: hostNode._debugID,
	          type: 'mount',
	          payload: markup.toString()
	        });
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(450);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 482 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true,
	  useFiber: false
	};

	module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var adler32 = __webpack_require__(484);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ }),
/* 484 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ }),
/* 485 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	module.exports = '15.6.2';

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(348);

	var ReactCurrentOwner = __webpack_require__(256);
	var ReactDOMComponentTree = __webpack_require__(347);
	var ReactInstanceMap = __webpack_require__(430);

	var getHostComponentFromComposite = __webpack_require__(487);
	var invariant = __webpack_require__(251);
	var warning = __webpack_require__(247);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(434);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactMount = __webpack_require__(480);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(349);
	var EventPluginRegistry = __webpack_require__(356);
	var ReactComponentTreeHook = __webpack_require__(263);

	var warning = __webpack_require__(247);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var ReactComponentTreeHook = __webpack_require__(263);

	var warning = __webpack_require__(247);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMNullInputValuePropHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMNullInputValuePropHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var DOMProperty = __webpack_require__(349);
	var ReactComponentTreeHook = __webpack_require__(263);

	var warning = __webpack_require__(247);

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

	function validateProperty(tagName, name, debugID) {
	  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(debugID, element) {
	  var invalidProps = [];

	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  } else if (invalidProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
	  }
	}

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }

	  warnInvalidARIAProps(debugID, element);
	}

	var ReactDOMInvalidARIAHook = {
	  onBeforeMountComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    if (process.env.NODE_ENV !== 'production') {
	      handleElement(debugID, element);
	    }
	  }
	};

	module.exports = ReactDOMInvalidARIAHook;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _shallowEqual = __webpack_require__(437);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _shallowEqual2.default;

/***/ }),
/* 493 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {

	  easeOutFunction: 'cubic-bezier(0.23, 1, 0.32, 1)',
	  easeInOutFunction: 'cubic-bezier(0.445, 0.05, 0.55, 0.95)',

	  easeOut: function easeOut(duration, property, delay, easeFunction) {
	    easeFunction = easeFunction || this.easeOutFunction;

	    if (property && Object.prototype.toString.call(property) === '[object Array]') {
	      var transitions = '';
	      for (var i = 0; i < property.length; i++) {
	        if (transitions) transitions += ',';
	        transitions += this.create(duration, property[i], delay, easeFunction);
	      }

	      return transitions;
	    } else {
	      return this.create(duration, property, delay, easeFunction);
	    }
	  },
	  create: function create(duration, property, delay, easeFunction) {
	    duration = duration || '450ms';
	    property = property || 'all';
	    delay = delay || '0ms';
	    easeFunction = easeFunction || 'linear';

	    return property + ' ' + duration + ' ' + easeFunction + ' ' + delay;
	  }
	};

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactEventListener = __webpack_require__(495);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var rowsHeight = 24;

	function getStyles(props, context, state) {
	  return {
	    root: {
	      position: 'relative' // because the shadow has position: 'absolute'
	    },
	    textarea: {
	      height: state.height,
	      width: '100%',
	      resize: 'none',
	      font: 'inherit',
	      padding: 0,
	      cursor: 'inherit'
	    },
	    shadow: {
	      resize: 'none',
	      // Overflow also needed to here to remove the extra row
	      // added to textareas in Firefox.
	      overflow: 'hidden',
	      // Visibility needed to hide the extra text area on ipads
	      visibility: 'hidden',
	      position: 'absolute',
	      height: 'auto'
	    }
	  };
	}

	var EnhancedTextarea = function (_Component) {
	  (0, _inherits3.default)(EnhancedTextarea, _Component);

	  function EnhancedTextarea() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, EnhancedTextarea);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = EnhancedTextarea.__proto__ || (0, _getPrototypeOf2.default)(EnhancedTextarea)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      height: null
	    }, _this.handleResize = function (event) {
	      _this.syncHeightWithShadow(_this.props.value, event);
	    }, _this.handleChange = function (event) {
	      if (!_this.props.hasOwnProperty('value')) {
	        _this.syncHeightWithShadow(event.target.value);
	      }

	      if (_this.props.hasOwnProperty('valueLink')) {
	        _this.props.valueLink.requestChange(event.target.value);
	      }

	      if (_this.props.onChange) {
	        _this.props.onChange(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(EnhancedTextarea, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        height: this.props.rows * rowsHeight
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.syncHeightWithShadow(this.props.value);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.value !== this.props.value || nextProps.rowsMax !== this.props.rowsMax) {
	        this.syncHeightWithShadow(nextProps.value, null, nextProps);
	      }
	    }
	  }, {
	    key: 'getInputNode',
	    value: function getInputNode() {
	      return this.refs.input;
	    }
	  }, {
	    key: 'setValue',
	    value: function setValue(value) {
	      this.getInputNode().value = value;
	      this.syncHeightWithShadow(value);
	    }
	  }, {
	    key: 'syncHeightWithShadow',
	    value: function syncHeightWithShadow(newValue, event, props) {
	      var shadow = this.refs.shadow;
	      var displayText = this.props.hintText && (newValue === '' || newValue === undefined || newValue === null) ? this.props.hintText : newValue;

	      if (displayText !== undefined) {
	        shadow.value = displayText;
	      }

	      var newHeight = shadow.scrollHeight;

	      // Guarding for jsdom, where scrollHeight isn't present.
	      // See https://github.com/tmpvar/jsdom/issues/1013
	      if (newHeight === undefined) return;

	      props = props || this.props;

	      if (props.rowsMax >= props.rows) {
	        newHeight = Math.min(props.rowsMax * rowsHeight, newHeight);
	      }

	      newHeight = Math.max(newHeight, rowsHeight);

	      if (this.state.height !== newHeight) {
	        var input = this.refs.input;
	        var cursorPosition = input.selectionStart;
	        this.setState({
	          height: newHeight
	        }, function () {
	          input.setSelectionRange(cursorPosition, cursorPosition);
	        });

	        if (props.onHeightChange) {
	          props.onHeightChange(event, newHeight);
	        }
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          onChange = _props.onChange,
	          onHeightChange = _props.onHeightChange,
	          rows = _props.rows,
	          rowsMax = _props.rowsMax,
	          shadowStyle = _props.shadowStyle,
	          style = _props.style,
	          hintText = _props.hintText,
	          textareaStyle = _props.textareaStyle,
	          valueLink = _props.valueLink,
	          other = (0, _objectWithoutProperties3.default)(_props, ['onChange', 'onHeightChange', 'rows', 'rowsMax', 'shadowStyle', 'style', 'hintText', 'textareaStyle', 'valueLink']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);
	      var rootStyles = (0, _simpleAssign2.default)(styles.root, style);
	      var textareaStyles = (0, _simpleAssign2.default)(styles.textarea, textareaStyle);
	      var shadowStyles = (0, _simpleAssign2.default)({}, textareaStyles, styles.shadow, shadowStyle);
	      var props = {};

	      if (this.props.hasOwnProperty('valueLink')) {
	        other.value = valueLink.value;
	        props.valueLink = valueLink;
	      }

	      return _react2.default.createElement(
	        'div',
	        { style: prepareStyles(rootStyles) },
	        _react2.default.createElement(_reactEventListener2.default, { target: 'window', onResize: this.handleResize }),
	        _react2.default.createElement('textarea', (0, _extends3.default)({
	          ref: 'shadow',
	          style: prepareStyles(shadowStyles),
	          tabIndex: '-1',
	          rows: this.props.rows,
	          defaultValue: this.props.defaultValue,
	          readOnly: true,
	          value: this.props.value
	        }, props)),
	        _react2.default.createElement('textarea', (0, _extends3.default)({}, other, {
	          ref: 'input',
	          rows: this.props.rows,
	          style: prepareStyles(textareaStyles),
	          onChange: this.handleChange
	        }))
	      );
	    }
	  }]);
	  return EnhancedTextarea;
	}(_react.Component);

	EnhancedTextarea.defaultProps = {
	  rows: 1
	};
	EnhancedTextarea.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	EnhancedTextarea.propTypes = process.env.NODE_ENV !== "production" ? {
	  defaultValue: _propTypes2.default.any,
	  disabled: _propTypes2.default.bool,
	  hintText: _propTypes2.default.node,
	  onChange: _propTypes2.default.func,
	  onHeightChange: _propTypes2.default.func,
	  rows: _propTypes2.default.number,
	  rowsMax: _propTypes2.default.number,
	  shadowStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  textareaStyle: _propTypes2.default.object,
	  value: _propTypes2.default.string,
	  valueLink: _propTypes2.default.object
	} : {};
	exports.default = EnhancedTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _typeof2 = __webpack_require__(188);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _keys = __webpack_require__(331);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _assign = __webpack_require__(339);

	var _assign2 = _interopRequireDefault(_assign);

	exports.withOptions = withOptions;

	var _react = __webpack_require__(241);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _shallowEqual = __webpack_require__(437);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _supports = __webpack_require__(496);

	var supports = _interopRequireWildcard(_supports);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var defaultEventOptions = {
	  capture: false,
	  passive: false
	};
	/* eslint-disable prefer-spread */

	function mergeDefaultEventOptions(options) {
	  return (0, _assign2.default)({}, defaultEventOptions, options);
	}

	function getEventListenerArgs(eventName, callback, options) {
	  var args = [eventName, callback];
	  args.push(supports.passiveOption ? options : options.capture);
	  return args;
	}

	function on(target, eventName, callback, options) {
	  if (supports.addEventListener) {
	    target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	  } else if (supports.attachEvent) {
	    // IE8+ Support
	    target.attachEvent('on' + eventName, function () {
	      callback.call(target);
	    });
	  }
	}

	function off(target, eventName, callback, options) {
	  if (supports.removeEventListener) {
	    target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));
	  } else if (supports.detachEvent) {
	    // IE8+ Support
	    target.detachEvent('on' + eventName, callback);
	  }
	}

	function forEachListener(props, iteratee) {
	  var children = props.children,
	      target = props.target,
	      eventProps = (0, _objectWithoutProperties3.default)(props, ['children', 'target']);


	  (0, _keys2.default)(eventProps).forEach(function (name) {
	    if (name.substring(0, 2) !== 'on') {
	      return;
	    }

	    var prop = eventProps[name];
	    var type = typeof prop === 'undefined' ? 'undefined' : (0, _typeof3.default)(prop);
	    var isObject = type === 'object';
	    var isFunction = type === 'function';

	    if (!isObject && !isFunction) {
	      return;
	    }

	    var capture = name.substr(-7).toLowerCase() === 'capture';
	    var eventName = name.substring(2).toLowerCase();
	    eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;

	    if (isObject) {
	      iteratee(eventName, prop.handler, prop.options);
	    } else {
	      iteratee(eventName, prop, mergeDefaultEventOptions({ capture: capture }));
	    }
	  });
	}

	function withOptions(handler, options) {
	  process.env.NODE_ENV !== "production" ? (0, _warning2.default)(options, 'react-event-listener: Should be specified options in withOptions.') : void 0;

	  return {
	    handler: handler,
	    options: mergeDefaultEventOptions(options)
	  };
	}

	var EventListener = function (_Component) {
	  (0, _inherits3.default)(EventListener, _Component);

	  function EventListener() {
	    (0, _classCallCheck3.default)(this, EventListener);
	    return (0, _possibleConstructorReturn3.default)(this, (EventListener.__proto__ || (0, _getPrototypeOf2.default)(EventListener)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(EventListener, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.addListeners();
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps);
	    }
	  }, {
	    key: 'componentWillUpdate',
	    value: function componentWillUpdate() {
	      this.removeListeners();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.addListeners();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.removeListeners();
	    }
	  }, {
	    key: 'addListeners',
	    value: function addListeners() {
	      this.applyListeners(on);
	    }
	  }, {
	    key: 'removeListeners',
	    value: function removeListeners() {
	      this.applyListeners(off);
	    }
	  }, {
	    key: 'applyListeners',
	    value: function applyListeners(onOrOff) {
	      var target = this.props.target;


	      if (target) {
	        var element = target;

	        if (typeof target === 'string') {
	          element = window[target];
	        }

	        forEachListener(this.props, onOrOff.bind(null, element));
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children || null;
	    }
	  }]);
	  return EventListener;
	}(_react.Component);

	EventListener.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * You can provide a single child too.
	   */
	  children: _propTypes2.default.element,
	  /**
	   * The DOM target to listen to.
	   */
	  target: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired
	} : {};
	exports.default = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.passiveOption = exports.detachEvent = exports.attachEvent = exports.removeEventListener = exports.addEventListener = exports.canUseDOM = undefined;

	var _defineProperty = __webpack_require__(497);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Inspired by https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/ExecutionEnvironment.js
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var addEventListener = exports.addEventListener = canUseDOM && 'addEventListener' in window;
	var removeEventListener = exports.removeEventListener = canUseDOM && 'removeEventListener' in window;

	// IE8+ Support
	var attachEvent = exports.attachEvent = canUseDOM && 'attachEvent' in window;
	var detachEvent = exports.detachEvent = canUseDOM && 'detachEvent' in window;

	// Passive options
	// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js
	var passiveOption = exports.passiveOption = function () {
	  var cache = null;

	  return function () {
	    if (cache !== null) {
	      return cache;
	    }

	    var supportsPassiveOption = false;

	    try {
	      window.addEventListener('test', null, (0, _defineProperty2.default)({}, 'passive', {
	        get: function get() {
	          supportsPassiveOption = true;
	        }
	      }));
	    } catch (e) {} // eslint-disable-line no-empty

	    cache = supportsPassiveOption;

	    return supportsPassiveOption;
	  }();
	}();

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _defineProperty = __webpack_require__(184);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	exports.default = defineProperty;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//  weak

	function defineProperty(o, p, attr) {
	  return (0, _defineProperty2.default)(o, p, attr);
	}

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props) {
	  var hintColor = props.muiTheme.textField.hintColor,
	      show = props.show;


	  return {
	    root: {
	      position: 'absolute',
	      opacity: show ? 1 : 0,
	      color: hintColor,
	      transition: _transitions2.default.easeOut(),
	      bottom: 12
	    }
	  };
	}

	var TextFieldHint = function TextFieldHint(props) {
	  var prepareStyles = props.muiTheme.prepareStyles,
	      style = props.style,
	      text = props.text;


	  var styles = getStyles(props);

	  return _react2.default.createElement(
	    'div',
	    { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) },
	    text
	  );
	};

	TextFieldHint.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * @ignore
	   * The material-ui theme applied to this component.
	   */
	  muiTheme: _propTypes2.default.object.isRequired,
	  /**
	   * True if the hint text should be visible.
	   */
	  show: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The hint text displayed.
	   */
	  text: _propTypes2.default.node
	} : {};

	TextFieldHint.defaultProps = {
	  show: true
	};

	exports.default = TextFieldHint;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props) {
	  var defaultStyles = {
	    position: 'absolute',
	    lineHeight: '22px',
	    top: 38,
	    transition: _transitions2.default.easeOut(),
	    zIndex: 1, // Needed to display label above Chrome's autocomplete field background
	    transform: 'scale(1) translate(0, 0)',
	    transformOrigin: 'left top',
	    pointerEvents: 'auto',
	    userSelect: 'none'
	  };

	  var shrinkStyles = props.shrink ? (0, _simpleAssign2.default)({
	    transform: 'scale(0.75) translate(0, -28px)',
	    pointerEvents: 'none'
	  }, props.shrinkStyle) : null;

	  return {
	    root: (0, _simpleAssign2.default)(defaultStyles, props.style, shrinkStyles)
	  };
	}

	var TextFieldLabel = function TextFieldLabel(props) {
	  var muiTheme = props.muiTheme,
	      className = props.className,
	      children = props.children,
	      htmlFor = props.htmlFor,
	      onClick = props.onClick;
	  var prepareStyles = muiTheme.prepareStyles;

	  var styles = getStyles(props);

	  return _react2.default.createElement(
	    'label',
	    {
	      className: className,
	      style: prepareStyles(styles.root),
	      htmlFor: htmlFor,
	      onClick: onClick
	    },
	    children
	  );
	};

	TextFieldLabel.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * The label contents.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Disables the label if set to true.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * The id of the target element that this label should refer to.
	   */
	  htmlFor: _propTypes2.default.string,
	  /**
	   * @ignore
	   * The material-ui theme applied to this component.
	   */
	  muiTheme: _propTypes2.default.object.isRequired,
	  /**
	   * Callback function for when the label is selected via a touch tap.
	   *
	   * @param {object} event TouchTap event targeting the text field label.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * True if the floating label should shrink.
	   */
	  shrink: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element when shrunk.
	   */
	  shrinkStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};

	TextFieldLabel.defaultProps = {
	  disabled: false,
	  shrink: false
	};

	exports.default = TextFieldLabel;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var propTypes = {
	  /**
	   * True if the parent `TextField` is disabled.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the underline when parent `TextField` is disabled.
	   */
	  disabledStyle: _propTypes2.default.object,
	  /**
	   * True if the parent `TextField` has an error.
	   */
	  error: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the underline when parent `TextField` has an error.
	   */
	  errorStyle: _propTypes2.default.object,
	  /**
	   * True if the parent `TextField` is focused.
	   */
	  focus: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the underline when parent `TextField` is focused.
	   */
	  focusStyle: _propTypes2.default.object,
	  /**
	   * @ignore
	   * The material-ui theme applied to this component.
	   */
	  muiTheme: _propTypes2.default.object.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	};

	var defaultProps = {
	  disabled: false,
	  disabledStyle: {},
	  error: false,
	  errorStyle: {},
	  focus: false,
	  focusStyle: {},
	  style: {}
	};

	var TextFieldUnderline = function TextFieldUnderline(props) {
	  var disabled = props.disabled,
	      disabledStyle = props.disabledStyle,
	      error = props.error,
	      errorStyle = props.errorStyle,
	      focus = props.focus,
	      focusStyle = props.focusStyle,
	      muiTheme = props.muiTheme,
	      style = props.style;
	  var errorStyleColor = errorStyle.color;
	  var prepareStyles = muiTheme.prepareStyles,
	      _muiTheme$textField = muiTheme.textField,
	      borderColor = _muiTheme$textField.borderColor,
	      disabledTextColor = _muiTheme$textField.disabledTextColor,
	      errorColor = _muiTheme$textField.errorColor,
	      focusColor = _muiTheme$textField.focusColor;


	  var styles = {
	    root: {
	      borderTop: 'none',
	      borderLeft: 'none',
	      borderRight: 'none',
	      borderBottomStyle: 'solid',
	      borderBottomWidth: 1,
	      borderColor: borderColor,
	      bottom: 8,
	      boxSizing: 'content-box',
	      margin: 0,
	      position: 'absolute',
	      width: '100%'
	    },
	    disabled: {
	      borderBottomStyle: 'dotted',
	      borderBottomWidth: 2,
	      borderColor: disabledTextColor
	    },
	    focus: {
	      borderBottomStyle: 'solid',
	      borderBottomWidth: 2,
	      borderColor: focusColor,
	      transform: 'scaleX(0)',
	      transition: _transitions2.default.easeOut()
	    },
	    error: {
	      borderColor: errorStyleColor ? errorStyleColor : errorColor,
	      transform: 'scaleX(1)'
	    }
	  };

	  var underline = (0, _simpleAssign2.default)({}, styles.root, style);
	  var focusedUnderline = (0, _simpleAssign2.default)({}, underline, styles.focus, focusStyle);

	  if (disabled) underline = (0, _simpleAssign2.default)({}, underline, styles.disabled, disabledStyle);
	  if (focus) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, { transform: 'scaleX(1)' });
	  if (error) focusedUnderline = (0, _simpleAssign2.default)({}, focusedUnderline, styles.error);

	  return _react2.default.createElement(
	    'div',
	    null,
	    _react2.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(underline) }),
	    _react2.default.createElement('hr', { 'aria-hidden': 'true', style: prepareStyles(focusedUnderline) })
	  );
	};

	TextFieldUnderline.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
	TextFieldUnderline.defaultProps = defaultProps;

	exports.default = TextFieldUnderline;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.CardExpandable = exports.CardActions = exports.CardText = exports.CardMedia = exports.CardTitle = exports.CardHeader = exports.Card = undefined;

	var _Card2 = __webpack_require__(502);

	var _Card3 = _interopRequireDefault(_Card2);

	var _CardHeader2 = __webpack_require__(537);

	var _CardHeader3 = _interopRequireDefault(_CardHeader2);

	var _CardTitle2 = __webpack_require__(540);

	var _CardTitle3 = _interopRequireDefault(_CardTitle2);

	var _CardMedia2 = __webpack_require__(541);

	var _CardMedia3 = _interopRequireDefault(_CardMedia2);

	var _CardText2 = __webpack_require__(542);

	var _CardText3 = _interopRequireDefault(_CardText2);

	var _CardActions2 = __webpack_require__(543);

	var _CardActions3 = _interopRequireDefault(_CardActions2);

	var _CardExpandable2 = __webpack_require__(506);

	var _CardExpandable3 = _interopRequireDefault(_CardExpandable2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Card = _Card3.default;
	exports.CardHeader = _CardHeader3.default;
	exports.CardTitle = _CardTitle3.default;
	exports.CardMedia = _CardMedia3.default;
	exports.CardText = _CardText3.default;
	exports.CardActions = _CardActions3.default;
	exports.CardExpandable = _CardExpandable3.default;
	exports.default = _Card3.default;

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _CardExpandable = __webpack_require__(506);

	var _CardExpandable2 = _interopRequireDefault(_CardExpandable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Card = function (_Component) {
	  (0, _inherits3.default)(Card, _Component);

	  function Card() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Card);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Card.__proto__ || (0, _getPrototypeOf2.default)(Card)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      expanded: null
	    }, _this.handleExpanding = function (event) {
	      event.preventDefault();
	      var newExpandedState = !_this.state.expanded;
	      // no automatic state update when the component is controlled
	      if (_this.props.expanded === null) {
	        _this.setState({ expanded: newExpandedState });
	      }
	      if (_this.props.onExpandChange) {
	        _this.props.onExpandChange(newExpandedState);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Card, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        expanded: this.props.expanded === null ? this.props.initiallyExpanded === true : this.props.expanded
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      // update the state when the component is controlled.
	      if (nextProps.expanded !== null) this.setState({ expanded: nextProps.expanded });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          style = _props.style,
	          containerStyle = _props.containerStyle,
	          children = _props.children,
	          expandable = _props.expandable,
	          expandedProp = _props.expanded,
	          initiallyExpanded = _props.initiallyExpanded,
	          onExpandChange = _props.onExpandChange,
	          other = (0, _objectWithoutProperties3.default)(_props, ['style', 'containerStyle', 'children', 'expandable', 'expanded', 'initiallyExpanded', 'onExpandChange']);


	      var lastElement = void 0;
	      var expanded = this.state.expanded;
	      var newChildren = _react2.default.Children.map(children, function (currentChild) {
	        var doClone = false;
	        var newChild = undefined;
	        var newProps = {};
	        var element = currentChild;
	        if (!currentChild || !currentChild.props) {
	          return null;
	        }
	        if (expanded === false && currentChild.props.expandable === true) return;
	        if (currentChild.props.actAsExpander === true) {
	          doClone = true;
	          newProps.onClick = _this2.handleExpanding;
	          newProps.style = (0, _simpleAssign2.default)({ cursor: 'pointer' }, currentChild.props.style);
	        }
	        if (currentChild.props.showExpandableButton === true) {
	          doClone = true;
	          newChild = _react2.default.createElement(_CardExpandable2.default, {
	            closeIcon: currentChild.props.closeIcon,
	            expanded: expanded,
	            onExpanding: _this2.handleExpanding,
	            openIcon: currentChild.props.openIcon,
	            iconStyle: currentChild.props.iconStyle
	          });
	        }
	        if (doClone) {
	          element = _react2.default.cloneElement(currentChild, newProps, currentChild.props.children, newChild);
	        }
	        lastElement = element;
	        return element;
	      }, this);

	      // If the last element is text or a title we should add
	      // 8px padding to the bottom of the card
	      var addBottomPadding = lastElement && (lastElement.type.muiName === 'CardText' || lastElement.type.muiName === 'CardTitle');

	      var mergedStyles = (0, _simpleAssign2.default)({
	        zIndex: 1
	      }, style);
	      var containerMergedStyles = (0, _simpleAssign2.default)({
	        paddingBottom: addBottomPadding ? 8 : 0
	      }, containerStyle);

	      return _react2.default.createElement(
	        _Paper2.default,
	        (0, _extends3.default)({}, other, { style: mergedStyles }),
	        _react2.default.createElement(
	          'div',
	          { style: containerMergedStyles },
	          newChildren
	        )
	      );
	    }
	  }]);
	  return Card;
	}(_react.Component);

	Card.defaultProps = {
	  expandable: false,
	  expanded: null,
	  initiallyExpanded: false
	};
	Card.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Can be used to render elements inside the Card.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the container element.
	   */
	  containerStyle: _propTypes2.default.object,
	  /**
	   * If true, this card component is expandable. Can be set on any child of the `Card` component.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * Whether this card is expanded.
	   * If `true` or `false` the component is controlled.
	   * if `null` the component is uncontrolled.
	   */
	  expanded: _propTypes2.default.bool,
	  /**
	   * Whether this card is initially expanded.
	   */
	  initiallyExpanded: _propTypes2.default.bool,
	  /**
	   * Callback function fired when the `expandable` state of the card has changed.
	   *
	   * @param {boolean} newExpandedState Represents the new `expanded` state of the card.
	   */
	  onExpandChange: _propTypes2.default.func,
	  /**
	   * If true, this card component will include a button to expand the card. `CardTitle`,
	   * `CardHeader` and `CardActions` implement `showExpandableButton`. Any child component
	   * of `Card` can implements `showExpandableButton` or forwards the property to a child
	   * component supporting it.
	   */
	  showExpandableButton: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = Card;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Paper = __webpack_require__(504);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Paper2.default;

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var rounded = props.rounded,
	      circle = props.circle,
	      transitionEnabled = props.transitionEnabled,
	      zDepth = props.zDepth;
	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      paper = _context$muiTheme.paper,
	      borderRadius = _context$muiTheme.borderRadius;


	  return {
	    root: {
	      color: paper.color,
	      backgroundColor: paper.backgroundColor,
	      transition: transitionEnabled && _transitions2.default.easeOut(),
	      boxSizing: 'border-box',
	      fontFamily: baseTheme.fontFamily,
	      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
	      boxShadow: paper.zDepthShadows[zDepth - 1], // No shadow for 0 depth papers
	      borderRadius: circle ? '50%' : rounded ? borderRadius : '0px'
	    }
	  };
	}

	var Paper = function (_Component) {
	  (0, _inherits3.default)(Paper, _Component);

	  function Paper() {
	    (0, _classCallCheck3.default)(this, Paper);
	    return (0, _possibleConstructorReturn3.default)(this, (Paper.__proto__ || (0, _getPrototypeOf2.default)(Paper)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(Paper, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          circle = _props.circle,
	          rounded = _props.rounded,
	          style = _props.style,
	          transitionEnabled = _props.transitionEnabled,
	          zDepth = _props.zDepth,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'circle', 'rounded', 'style', 'transitionEnabled', 'zDepth']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	        children
	      );
	    }
	  }]);
	  return Paper;
	}(_react.Component);

	Paper.defaultProps = {
	  circle: false,
	  rounded: true,
	  transitionEnabled: true,
	  zDepth: 1
	};
	Paper.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Paper.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Children passed into the paper element.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Set to true to generate a circular paper container.
	   */
	  circle: _propTypes2.default.bool,
	  /**
	   * By default, the paper container will have a border radius.
	   * Set this to false to generate a container with sharp corners.
	   */
	  rounded: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Set to false to disable CSS transitions for the paper element.
	   */
	  transitionEnabled: _propTypes2.default.bool,
	  /**
	   * This number represents the zDepth of the paper shadow.
	   */
	  zDepth: _propTypes4.default.zDepth
	} : {};
	exports.default = Paper;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var horizontal = _propTypes2.default.oneOf(['left', 'middle', 'right']);
	var vertical = _propTypes2.default.oneOf(['top', 'center', 'bottom']);

	exports.default = {

	  corners: _propTypes2.default.oneOf(['bottom-left', 'bottom-right', 'top-left', 'top-right']),

	  horizontal: horizontal,

	  vertical: vertical,

	  origin: _propTypes2.default.shape({
	    horizontal: horizontal,
	    vertical: vertical
	  }),

	  cornersAndCenter: _propTypes2.default.oneOf(['bottom-center', 'bottom-left', 'bottom-right', 'top-center', 'top-left', 'top-right']),

	  stringOrNumber: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),

	  zDepth: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5])

	};

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _keyboardArrowUp = __webpack_require__(507);

	var _keyboardArrowUp2 = _interopRequireDefault(_keyboardArrowUp);

	var _keyboardArrowDown = __webpack_require__(516);

	var _keyboardArrowDown2 = _interopRequireDefault(_keyboardArrowDown);

	var _IconButton = __webpack_require__(517);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles() {
	  return {
	    root: {
	      top: 0,
	      bottom: 0,
	      right: 4,
	      margin: 'auto',
	      position: 'absolute'
	    }
	  };
	}

	var CardExpandable = function (_Component) {
	  (0, _inherits3.default)(CardExpandable, _Component);

	  function CardExpandable() {
	    (0, _classCallCheck3.default)(this, CardExpandable);
	    return (0, _possibleConstructorReturn3.default)(this, (CardExpandable.__proto__ || (0, _getPrototypeOf2.default)(CardExpandable)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardExpandable, [{
	    key: 'render',
	    value: function render() {
	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        _IconButton2.default,
	        {
	          style: (0, _simpleAssign2.default)(styles.root, this.props.style),
	          onClick: this.props.onExpanding,
	          iconStyle: this.props.iconStyle
	        },
	        this.props.expanded ? this.props.openIcon : this.props.closeIcon
	      );
	    }
	  }]);
	  return CardExpandable;
	}(_react.Component);

	CardExpandable.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardExpandable.defaultProps = {
	  closeIcon: _react2.default.createElement(_keyboardArrowDown2.default, null),
	  openIcon: _react2.default.createElement(_keyboardArrowUp2.default, null)
	};
	CardExpandable.propTypes = process.env.NODE_ENV !== "production" ? {
	  closeIcon: _propTypes2.default.node,
	  expanded: _propTypes2.default.bool,
	  iconStyle: _propTypes2.default.object,
	  onExpanding: _propTypes2.default.func.isRequired,
	  openIcon: _propTypes2.default.node,
	  style: _propTypes2.default.object
	} : {};
	exports.default = CardExpandable;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HardwareKeyboardArrowUp = function HardwareKeyboardArrowUp(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z' })
	  );
	};
	HardwareKeyboardArrowUp = (0, _pure2.default)(HardwareKeyboardArrowUp);
	HardwareKeyboardArrowUp.displayName = 'HardwareKeyboardArrowUp';
	HardwareKeyboardArrowUp.muiName = 'SvgIcon';

	exports.default = HardwareKeyboardArrowUp;

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _shouldUpdate = __webpack_require__(509);

	var _shouldUpdate2 = _interopRequireDefault(_shouldUpdate);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _setDisplayName = __webpack_require__(510);

	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

	var _wrapDisplayName = __webpack_require__(512);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var pure = function pure(BaseComponent) {
	  var hoc = (0, _shouldUpdate2.default)(function (props, nextProps) {
	    return !(0, _shallowEqual2.default)(props, nextProps);
	  });

	  if (process.env.NODE_ENV !== 'production') {
	    return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'pure'))(hoc(BaseComponent));
	  }

	  return hoc(BaseComponent);
	};

	exports.default = pure;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(241);

	var _setDisplayName = __webpack_require__(510);

	var _setDisplayName2 = _interopRequireDefault(_setDisplayName);

	var _wrapDisplayName = __webpack_require__(512);

	var _wrapDisplayName2 = _interopRequireDefault(_wrapDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var shouldUpdate = function shouldUpdate(test) {
	  return function (BaseComponent) {
	    var factory = (0, _react.createFactory)(BaseComponent);

	    var ShouldUpdate = function (_Component) {
	      _inherits(ShouldUpdate, _Component);

	      function ShouldUpdate() {
	        _classCallCheck(this, ShouldUpdate);

	        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	      }

	      ShouldUpdate.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
	        return test(this.props, nextProps);
	      };

	      ShouldUpdate.prototype.render = function render() {
	        return factory(this.props);
	      };

	      return ShouldUpdate;
	    }(_react.Component);

	    if (process.env.NODE_ENV !== 'production') {
	      return (0, _setDisplayName2.default)((0, _wrapDisplayName2.default)(BaseComponent, 'shouldUpdate'))(ShouldUpdate);
	    }
	    return ShouldUpdate;
	  };
	};

	exports.default = shouldUpdate;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _setStatic = __webpack_require__(511);

	var _setStatic2 = _interopRequireDefault(_setStatic);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var setDisplayName = function setDisplayName(displayName) {
	  return (0, _setStatic2.default)('displayName', displayName);
	};

	exports.default = setDisplayName;

/***/ }),
/* 511 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var setStatic = function setStatic(key, value) {
	  return function (BaseComponent) {
	    /* eslint-disable no-param-reassign */
	    BaseComponent[key] = value;
	    /* eslint-enable no-param-reassign */
	    return BaseComponent;
	  };
	};

	exports.default = setStatic;

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _getDisplayName = __webpack_require__(513);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var wrapDisplayName = function wrapDisplayName(BaseComponent, hocName) {
	  return hocName + '(' + (0, _getDisplayName2.default)(BaseComponent) + ')';
	};

	exports.default = wrapDisplayName;

/***/ }),
/* 513 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var getDisplayName = function getDisplayName(Component) {
	  if (typeof Component === 'string') {
	    return Component;
	  }

	  if (!Component) {
	    return undefined;
	  }

	  return Component.displayName || Component.name || 'Component';
	};

	exports.default = getDisplayName;

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _SvgIcon = __webpack_require__(515);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SvgIcon2.default;

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SvgIcon = function (_Component) {
	  (0, _inherits3.default)(SvgIcon, _Component);

	  function SvgIcon() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, SvgIcon);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SvgIcon.__proto__ || (0, _getPrototypeOf2.default)(SvgIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false
	    }, _this.handleMouseLeave = function (event) {
	      _this.setState({ hovered: false });
	      _this.props.onMouseLeave(event);
	    }, _this.handleMouseEnter = function (event) {
	      _this.setState({ hovered: true });
	      _this.props.onMouseEnter(event);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(SvgIcon, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          color = _props.color,
	          hoverColor = _props.hoverColor,
	          onMouseEnter = _props.onMouseEnter,
	          onMouseLeave = _props.onMouseLeave,
	          style = _props.style,
	          viewBox = _props.viewBox,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'color', 'hoverColor', 'onMouseEnter', 'onMouseLeave', 'style', 'viewBox']);
	      var _context$muiTheme = this.context.muiTheme,
	          svgIcon = _context$muiTheme.svgIcon,
	          prepareStyles = _context$muiTheme.prepareStyles;


	      var offColor = color ? color : 'currentColor';
	      var onColor = hoverColor ? hoverColor : offColor;

	      var mergedStyles = (0, _simpleAssign2.default)({
	        display: 'inline-block',
	        color: svgIcon.color,
	        fill: this.state.hovered ? onColor : offColor,
	        height: 24,
	        width: 24,
	        userSelect: 'none',
	        transition: _transitions2.default.easeOut()
	      }, style);

	      return _react2.default.createElement(
	        'svg',
	        (0, _extends3.default)({}, other, {
	          onMouseEnter: this.handleMouseEnter,
	          onMouseLeave: this.handleMouseLeave,
	          style: prepareStyles(mergedStyles),
	          viewBox: viewBox
	        }),
	        children
	      );
	    }
	  }]);
	  return SvgIcon;
	}(_react.Component);

	SvgIcon.muiName = 'SvgIcon';
	SvgIcon.defaultProps = {
	  onMouseEnter: function onMouseEnter() {},
	  onMouseLeave: function onMouseLeave() {},
	  viewBox: '0 0 24 24'
	};
	SvgIcon.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	SvgIcon.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Elements passed into the SVG Icon.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * This is the fill color of the svg icon.
	   * If not specified, this component will default
	   * to muiTheme.palette.textColor.
	   */
	  color: _propTypes2.default.string,
	  /**
	   * This is the icon color when the mouse hovers over the icon.
	   */
	  hoverColor: _propTypes2.default.string,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Allows you to redefine what the coordinates
	   * without units mean inside an svg element. For example,
	   * if the SVG element is 500 (width) by 200 (height), and you
	   * pass viewBox="0 0 50 20", this means that the coordinates inside
	   * the svg will go from the top left corner (0,0) to bottom right (50,20)
	   * and each unit will be worth 10px.
	   */
	  viewBox: _propTypes2.default.string
	} : {};
	exports.default = SvgIcon;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HardwareKeyboardArrowDown = function HardwareKeyboardArrowDown(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z' })
	  );
	};
	HardwareKeyboardArrowDown = (0, _pure2.default)(HardwareKeyboardArrowDown);
	HardwareKeyboardArrowDown.displayName = 'HardwareKeyboardArrowDown';
	HardwareKeyboardArrowDown.muiName = 'SvgIcon';

	exports.default = HardwareKeyboardArrowDown;

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _IconButton = __webpack_require__(518);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _IconButton2.default;

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _EnhancedButton = __webpack_require__(519);

	var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

	var _FontIcon = __webpack_require__(533);

	var _FontIcon2 = _interopRequireDefault(_FontIcon);

	var _Tooltip = __webpack_require__(535);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	var _childUtils = __webpack_require__(536);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var baseTheme = context.muiTheme.baseTheme;


	  return {
	    root: {
	      boxSizing: 'border-box',
	      overflow: 'visible',
	      transition: _transitions2.default.easeOut(),
	      padding: baseTheme.spacing.iconSize / 2,
	      width: baseTheme.spacing.iconSize * 2,
	      height: baseTheme.spacing.iconSize * 2,
	      fontSize: 0
	    },
	    tooltip: {
	      boxSizing: 'border-box'
	    },
	    disabled: {
	      color: baseTheme.palette.disabledColor,
	      fill: baseTheme.palette.disabledColor,
	      cursor: 'default'
	    }
	  };
	}

	var IconButton = function (_Component) {
	  (0, _inherits3.default)(IconButton, _Component);

	  function IconButton() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, IconButton);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = IconButton.__proto__ || (0, _getPrototypeOf2.default)(IconButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false,
	      isKeyboardFocused: false,
	      // Not to be confonded with the touch property.
	      // This state is to determined if it's a mobile device.
	      touch: false,
	      tooltipShown: false
	    }, _this.handleBlur = function (event) {
	      _this.hideTooltip();
	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleFocus = function (event) {
	      _this.showTooltip();
	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _this.handleMouseLeave = function (event) {
	      if (!_this.button.isKeyboardFocused()) {
	        _this.hideTooltip();
	      }
	      _this.setState({ hovered: false });
	      if (_this.props.onMouseLeave) {
	        _this.props.onMouseLeave(event);
	      }
	    }, _this.handleMouseOut = function (event) {
	      if (_this.props.disabled) _this.hideTooltip();
	      if (_this.props.onMouseOut) _this.props.onMouseOut(event);
	    }, _this.handleMouseEnter = function (event) {
	      _this.showTooltip();

	      // Cancel hover styles for touch devices
	      if (!_this.state.touch) {
	        _this.setState({ hovered: true });
	      }
	      if (_this.props.onMouseEnter) {
	        _this.props.onMouseEnter(event);
	      }
	    }, _this.handleTouchStart = function (event) {
	      _this.setState({ touch: true });

	      if (_this.props.onTouchStart) {
	        _this.props.onTouchStart(event);
	      }
	    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          onFocus = _this$props.onFocus,
	          onBlur = _this$props.onBlur,
	          onKeyboardFocus = _this$props.onKeyboardFocus;

	      if (isKeyboardFocused && !disabled) {
	        _this.showTooltip();
	        if (onFocus) {
	          onFocus(event);
	        }
	      } else {
	        _this.hideTooltip();
	        if (onBlur) {
	          onBlur(event);
	        }
	      }

	      _this.setState({ isKeyboardFocused: isKeyboardFocused });
	      if (onKeyboardFocus) {
	        onKeyboardFocus(event, isKeyboardFocused);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(IconButton, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.disabled) {
	        this.setState({ hovered: false });
	      }
	    }
	  }, {
	    key: 'setKeyboardFocus',
	    value: function setKeyboardFocus() {
	      this.button.setKeyboardFocus();
	    }
	  }, {
	    key: 'showTooltip',
	    value: function showTooltip() {
	      if (this.props.tooltip) {
	        this.setState({ tooltipShown: true });
	      }
	    }
	  }, {
	    key: 'hideTooltip',
	    value: function hideTooltip() {
	      if (this.props.tooltip) this.setState({ tooltipShown: false });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          disabled = _props.disabled,
	          hoveredStyle = _props.hoveredStyle,
	          disableTouchRipple = _props.disableTouchRipple,
	          children = _props.children,
	          iconClassName = _props.iconClassName,
	          style = _props.style,
	          tooltip = _props.tooltip,
	          tooltipPositionProp = _props.tooltipPosition,
	          tooltipStyles = _props.tooltipStyles,
	          touch = _props.touch,
	          iconStyle = _props.iconStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['disabled', 'hoveredStyle', 'disableTouchRipple', 'children', 'iconClassName', 'style', 'tooltip', 'tooltipPosition', 'tooltipStyles', 'touch', 'iconStyle']);

	      var fonticon = void 0;

	      var styles = getStyles(this.props, this.context);
	      var tooltipPosition = tooltipPositionProp.split('-');

	      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

	      var mergedRootStyles = (0, _simpleAssign2.default)(styles.root, style, hovered ? hoveredStyle : {});

	      var tooltipElement = tooltip ? _react2.default.createElement(_Tooltip2.default, {
	        label: tooltip,
	        show: this.state.tooltipShown,
	        touch: touch,
	        style: (0, _simpleAssign2.default)(styles.tooltip, tooltipStyles),
	        verticalPosition: tooltipPosition[0],
	        horizontalPosition: tooltipPosition[1]
	      }) : null;

	      if (iconClassName) {
	        var iconHoverColor = iconStyle.iconHoverColor,
	            iconStyleFontIcon = (0, _objectWithoutProperties3.default)(iconStyle, ['iconHoverColor']);


	        fonticon = _react2.default.createElement(
	          _FontIcon2.default,
	          {
	            className: iconClassName,
	            hoverColor: disabled ? null : iconHoverColor,
	            style: (0, _simpleAssign2.default)({}, disabled && styles.disabled, iconStyleFontIcon),
	            color: this.context.muiTheme.baseTheme.palette.textColor
	          },
	          children
	        );
	      }

	      var childrenStyle = disabled ? (0, _simpleAssign2.default)({}, iconStyle, styles.disabled) : iconStyle;

	      return _react2.default.createElement(
	        _EnhancedButton2.default,
	        (0, _extends3.default)({
	          ref: function ref(_ref2) {
	            return _this2.button = _ref2;
	          }
	        }, other, {
	          centerRipple: true,
	          disabled: disabled,
	          onTouchStart: this.handleTouchStart,
	          style: mergedRootStyles,
	          disableTouchRipple: disableTouchRipple,
	          onBlur: this.handleBlur,
	          onFocus: this.handleFocus,
	          onMouseLeave: this.handleMouseLeave,
	          onMouseEnter: this.handleMouseEnter,
	          onMouseOut: this.handleMouseOut,
	          onKeyboardFocus: this.handleKeyboardFocus
	        }),
	        tooltipElement,
	        fonticon,
	        (0, _childUtils.extendChildren)(children, {
	          style: childrenStyle
	        })
	      );
	    }
	  }]);
	  return IconButton;
	}(_react.Component);

	IconButton.muiName = 'IconButton';
	IconButton.defaultProps = {
	  disabled: false,
	  disableTouchRipple: false,
	  iconStyle: {},
	  tooltipPosition: 'bottom-center',
	  touch: false
	};
	IconButton.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	IconButton.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Can be used to pass a `FontIcon` element as the icon for the button.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The CSS class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * If true, the element's ripple effect will be disabled.
	   */
	  disableTouchRipple: _propTypes2.default.bool,
	  /**
	   * If true, the element will be disabled.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element when the component is hovered.
	   */
	  hoveredStyle: _propTypes2.default.object,
	  /**
	   * The URL to link to when the button is clicked.
	   */
	  href: _propTypes2.default.string,
	  /**
	   * The CSS class name of the icon. Used for setting the icon with a stylesheet.
	   */
	  iconClassName: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the icon element.
	   * Note: you can specify iconHoverColor as a String inside this object.
	   */
	  iconStyle: _propTypes2.default.object,
	  /** @ignore */
	  onBlur: _propTypes2.default.func,
	  /**
	   * Callback function fired when the button is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the button.
	   */
	  onClick: _propTypes2.default.func,
	  /** @ignore */
	  onFocus: _propTypes2.default.func,
	  /**
	   * Callback function fired when the element is focused or blurred by the keyboard.
	   *
	   * @param {object} event `focus` or `blur` event targeting the element.
	   * @param {boolean} keyboardFocused Indicates whether the element is focused.
	   */
	  onKeyboardFocus: _propTypes2.default.func,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /** @ignore */
	  onMouseOut: _propTypes2.default.func,
	  /** @ignore */
	  onTouchStart: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The text to supply to the element's tooltip.
	   */
	  tooltip: _propTypes2.default.node,
	  /**
	   * The vertical and horizontal positions, respectively, of the element's tooltip.
	   * Possible values are: "bottom-center", "top-center", "bottom-right", "top-right",
	   * "bottom-left", and "top-left".
	   */
	  tooltipPosition: _propTypes4.default.cornersAndCenter,
	  /**
	   * Override the inline-styles of the tooltip element.
	   */
	  tooltipStyles: _propTypes2.default.object,
	  /**
	   * If true, increase the tooltip element's size. Useful for increasing tooltip
	   * readability on mobile devices.
	   */
	  touch: _propTypes2.default.bool
	} : {};
	exports.default = IconButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _events = __webpack_require__(520);

	var _events2 = _interopRequireDefault(_events);

	var _keycode = __webpack_require__(521);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _FocusRipple = __webpack_require__(522);

	var _FocusRipple2 = _interopRequireDefault(_FocusRipple);

	var _TouchRipple = __webpack_require__(529);

	var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styleInjected = false;
	var listening = false;
	var tabPressed = false;

	function injectStyle() {
	  if (!styleInjected) {
	    // Remove inner padding and border in Firefox 4+.
	    var style = document.createElement('style');
	    style.innerHTML = '\n      button::-moz-focus-inner,\n      input::-moz-focus-inner {\n        border: 0;\n        padding: 0;\n      }\n    ';

	    document.body.appendChild(style);
	    styleInjected = true;
	  }
	}

	function listenForTabPresses() {
	  if (!listening) {
	    _events2.default.on(window, 'keydown', function (event) {
	      tabPressed = (0, _keycode2.default)(event) === 'tab';
	    });
	    listening = true;
	  }
	}

	var EnhancedButton = function (_Component) {
	  (0, _inherits3.default)(EnhancedButton, _Component);

	  function EnhancedButton() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, EnhancedButton);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = EnhancedButton.__proto__ || (0, _getPrototypeOf2.default)(EnhancedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isKeyboardFocused: false
	    }, _this.handleKeyDown = function (event) {
	      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
	        if ((0, _keycode2.default)(event) === 'enter' && _this.state.isKeyboardFocused) {
	          _this.handleTouchTap(event);
	        }
	        if ((0, _keycode2.default)(event) === 'esc' && _this.state.isKeyboardFocused) {
	          _this.removeKeyboardFocus(event);
	        }
	      }
	      _this.props.onKeyDown(event);
	    }, _this.handleKeyUp = function (event) {
	      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
	        if ((0, _keycode2.default)(event) === 'space' && _this.state.isKeyboardFocused) {
	          _this.handleTouchTap(event);
	        }
	      }
	      _this.props.onKeyUp(event);
	    }, _this.handleBlur = function (event) {
	      _this.cancelFocusTimeout();
	      _this.removeKeyboardFocus(event);
	      _this.props.onBlur(event);
	    }, _this.handleFocus = function (event) {
	      if (event) event.persist();
	      if (!_this.props.disabled && !_this.props.disableKeyboardFocus) {
	        // setTimeout is needed because the focus event fires first
	        // Wait so that we can capture if this was a keyboard focus
	        // or touch focus
	        _this.focusTimeout = setTimeout(function () {
	          if (tabPressed) {
	            _this.setKeyboardFocus(event);
	            tabPressed = false;
	          }
	        }, 150);

	        _this.props.onFocus(event);
	      }
	    }, _this.handleTouchTap = function (event) {
	      _this.cancelFocusTimeout();
	      if (!_this.props.disabled) {
	        tabPressed = false;
	        _this.removeKeyboardFocus(event);
	        _this.props.onClick(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(EnhancedButton, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _props = this.props,
	          disabled = _props.disabled,
	          disableKeyboardFocus = _props.disableKeyboardFocus,
	          keyboardFocused = _props.keyboardFocused;

	      if (!disabled && keyboardFocused && !disableKeyboardFocus) {
	        this.setState({ isKeyboardFocused: true });
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      injectStyle();
	      listenForTabPresses();
	      if (this.state.isKeyboardFocused) {
	        this.button.focus();
	        this.props.onKeyboardFocus(null, true);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if ((nextProps.disabled || nextProps.disableKeyboardFocus) && this.state.isKeyboardFocused) {
	        this.setState({ isKeyboardFocused: false });
	        if (nextProps.onKeyboardFocus) {
	          nextProps.onKeyboardFocus(null, false);
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.focusTimeout) {
	        clearTimeout(this.focusTimeout);
	      }
	    }
	  }, {
	    key: 'isKeyboardFocused',
	    value: function isKeyboardFocused() {
	      return this.state.isKeyboardFocused;
	    }
	  }, {
	    key: 'removeKeyboardFocus',
	    value: function removeKeyboardFocus(event) {
	      if (this.state.isKeyboardFocused) {
	        this.setState({ isKeyboardFocused: false });
	        this.props.onKeyboardFocus(event, false);
	      }
	    }
	  }, {
	    key: 'setKeyboardFocus',
	    value: function setKeyboardFocus(event) {
	      if (!this.state.isKeyboardFocused) {
	        this.setState({ isKeyboardFocused: true });
	        this.props.onKeyboardFocus(event, true);
	      }
	    }
	  }, {
	    key: 'cancelFocusTimeout',
	    value: function cancelFocusTimeout() {
	      if (this.focusTimeout) {
	        clearTimeout(this.focusTimeout);
	        this.focusTimeout = null;
	      }
	    }
	  }, {
	    key: 'createButtonChildren',
	    value: function createButtonChildren() {
	      var _props2 = this.props,
	          centerRipple = _props2.centerRipple,
	          children = _props2.children,
	          disabled = _props2.disabled,
	          disableFocusRipple = _props2.disableFocusRipple,
	          disableKeyboardFocus = _props2.disableKeyboardFocus,
	          disableTouchRipple = _props2.disableTouchRipple,
	          focusRippleColor = _props2.focusRippleColor,
	          focusRippleOpacity = _props2.focusRippleOpacity,
	          touchRippleColor = _props2.touchRippleColor,
	          touchRippleOpacity = _props2.touchRippleOpacity;
	      var isKeyboardFocused = this.state.isKeyboardFocused;

	      // Focus Ripple

	      var focusRipple = isKeyboardFocused && !disabled && !disableFocusRipple && !disableKeyboardFocus ? _react2.default.createElement(_FocusRipple2.default, {
	        color: focusRippleColor,
	        opacity: focusRippleOpacity,
	        show: isKeyboardFocused,
	        style: {
	          overflow: 'hidden'
	        },
	        key: 'focusRipple'
	      }) : undefined;

	      // Touch Ripple
	      var touchRipple = !disabled && !disableTouchRipple ? _react2.default.createElement(
	        _TouchRipple2.default,
	        {
	          centerRipple: centerRipple,
	          color: touchRippleColor,
	          opacity: touchRippleOpacity,
	          key: 'touchRipple'
	        },
	        children
	      ) : undefined;

	      return [focusRipple, touchRipple, touchRipple ? undefined : children];
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props3 = this.props,
	          centerRipple = _props3.centerRipple,
	          children = _props3.children,
	          containerElement = _props3.containerElement,
	          disabled = _props3.disabled,
	          disableFocusRipple = _props3.disableFocusRipple,
	          disableKeyboardFocus = _props3.disableKeyboardFocus,
	          disableTouchRipple = _props3.disableTouchRipple,
	          focusRippleColor = _props3.focusRippleColor,
	          focusRippleOpacity = _props3.focusRippleOpacity,
	          href = _props3.href,
	          keyboardFocused = _props3.keyboardFocused,
	          touchRippleColor = _props3.touchRippleColor,
	          touchRippleOpacity = _props3.touchRippleOpacity,
	          onBlur = _props3.onBlur,
	          onClick = _props3.onClick,
	          onFocus = _props3.onFocus,
	          onKeyUp = _props3.onKeyUp,
	          onKeyDown = _props3.onKeyDown,
	          onKeyboardFocus = _props3.onKeyboardFocus,
	          style = _props3.style,
	          tabIndex = _props3.tabIndex,
	          type = _props3.type,
	          other = (0, _objectWithoutProperties3.default)(_props3, ['centerRipple', 'children', 'containerElement', 'disabled', 'disableFocusRipple', 'disableKeyboardFocus', 'disableTouchRipple', 'focusRippleColor', 'focusRippleOpacity', 'href', 'keyboardFocused', 'touchRippleColor', 'touchRippleOpacity', 'onBlur', 'onClick', 'onFocus', 'onKeyUp', 'onKeyDown', 'onKeyboardFocus', 'style', 'tabIndex', 'type']);
	      var _context$muiTheme = this.context.muiTheme,
	          prepareStyles = _context$muiTheme.prepareStyles,
	          enhancedButton = _context$muiTheme.enhancedButton;


	      var mergedStyles = (0, _simpleAssign2.default)({
	        border: 10,
	        boxSizing: 'border-box',
	        display: 'inline-block',
	        fontFamily: this.context.muiTheme.baseTheme.fontFamily,
	        WebkitTapHighlightColor: enhancedButton.tapHighlightColor, // Remove mobile color flashing (deprecated)
	        cursor: disabled ? 'default' : 'pointer',
	        textDecoration: 'none',
	        margin: 0,
	        padding: 0,
	        outline: 'none',
	        fontSize: 'inherit',
	        fontWeight: 'inherit',
	        position: 'relative', // This is needed so that ripples do not bleed past border radius.
	        verticalAlign: href ? 'middle' : null
	      }, style);

	      // Passing both background:none & backgroundColor can break due to object iteration order
	      if (!mergedStyles.backgroundColor && !mergedStyles.background) {
	        mergedStyles.background = 'none';
	      }

	      if (disabled && href) {
	        return _react2.default.createElement(
	          'span',
	          (0, _extends3.default)({}, other, {
	            style: mergedStyles
	          }),
	          children
	        );
	      }

	      var buttonProps = (0, _extends3.default)({}, other, {
	        style: prepareStyles(mergedStyles),
	        ref: function ref(node) {
	          return _this2.button = node;
	        },
	        disabled: disabled,
	        onBlur: this.handleBlur,
	        onFocus: this.handleFocus,
	        onKeyUp: this.handleKeyUp,
	        onKeyDown: this.handleKeyDown,
	        onClick: this.handleTouchTap,
	        tabIndex: disabled || disableKeyboardFocus ? -1 : tabIndex
	      });

	      if (href) buttonProps.href = href;

	      var buttonChildren = this.createButtonChildren();

	      if (_react2.default.isValidElement(containerElement)) {
	        return _react2.default.cloneElement(containerElement, buttonProps, buttonChildren);
	      }

	      if (!href && containerElement === 'button') {
	        buttonProps.type = type;
	      }

	      return _react2.default.createElement(href ? 'a' : containerElement, buttonProps, buttonChildren);
	    }
	  }]);
	  return EnhancedButton;
	}(_react.Component);

	EnhancedButton.defaultProps = {
	  containerElement: 'button',
	  onBlur: function onBlur() {},
	  onClick: function onClick() {},
	  onFocus: function onFocus() {},
	  onKeyDown: function onKeyDown() {},
	  onKeyUp: function onKeyUp() {},
	  onKeyboardFocus: function onKeyboardFocus() {},
	  tabIndex: 0,
	  type: 'button'
	};
	EnhancedButton.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	EnhancedButton.propTypes = process.env.NODE_ENV !== "production" ? {
	  centerRipple: _propTypes2.default.bool,
	  children: _propTypes2.default.node,
	  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
	  disableFocusRipple: _propTypes2.default.bool,
	  disableKeyboardFocus: _propTypes2.default.bool,
	  disableTouchRipple: _propTypes2.default.bool,
	  disabled: _propTypes2.default.bool,
	  focusRippleColor: _propTypes2.default.string,
	  focusRippleOpacity: _propTypes2.default.number,
	  href: _propTypes2.default.string,
	  keyboardFocused: _propTypes2.default.bool,
	  onBlur: _propTypes2.default.func,
	  onClick: _propTypes2.default.func,
	  onFocus: _propTypes2.default.func,
	  onKeyDown: _propTypes2.default.func,
	  onKeyUp: _propTypes2.default.func,
	  onKeyboardFocus: _propTypes2.default.func,
	  style: _propTypes2.default.object,
	  tabIndex: _propTypes2.default.number,
	  touchRippleColor: _propTypes2.default.string,
	  touchRippleOpacity: _propTypes2.default.number,
	  type: _propTypes2.default.string
	} : {};
	exports.default = EnhancedButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 520 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  once: function once(el, type, callback) {
	    var typeArray = type ? type.split(' ') : [];
	    var recursiveFunction = function recursiveFunction(event) {
	      event.target.removeEventListener(event.type, recursiveFunction);
	      return callback(event);
	    };

	    for (var i = typeArray.length - 1; i >= 0; i--) {
	      this.on(el, typeArray[i], recursiveFunction);
	    }
	  },
	  on: function on(el, type, callback) {
	    if (el.addEventListener) {
	      el.addEventListener(type, callback);
	    } else {
	      // IE8+ Support
	      el.attachEvent('on' + type, function () {
	        callback.call(el);
	      });
	    }
	  },
	  off: function off(el, type, callback) {
	    if (el.removeEventListener) {
	      el.removeEventListener(type, callback);
	    } else {
	      // IE8+ Support
	      el.detachEvent('on' + type, callback);
	    }
	  },
	  isKeyboard: function isKeyboard(event) {
	    return ['keydown', 'keypress', 'keyup'].indexOf(event.type) !== -1;
	  }
	};

/***/ }),
/* 521 */
/***/ (function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */

	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }

	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]

	  // Everything else (cast to string)
	  var search = String(searchInput)

	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)

	  return undefined
	}

	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */

	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}

	// Helper aliases

	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}


	/*!
	 * Programatically add the following
	 */

	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i

	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111

	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */

	var names = exports.names = exports.title = {} // title for backward compat

	// Create reverse mapping
	for (i in codes) names[codes[i]] = i

	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _autoPrefix = __webpack_require__(523);

	var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _ScaleIn = __webpack_require__(524);

	var _ScaleIn2 = _interopRequireDefault(_ScaleIn);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var pulsateDuration = 750;

	var FocusRipple = function (_Component) {
	  (0, _inherits3.default)(FocusRipple, _Component);

	  function FocusRipple() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, FocusRipple);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FocusRipple.__proto__ || (0, _getPrototypeOf2.default)(FocusRipple)).call.apply(_ref, [this].concat(args))), _this), _this.pulsate = function () {
	      var innerCircle = _reactDom2.default.findDOMNode(_this.refs.innerCircle);
	      if (!innerCircle) return;

	      var startScale = 'scale(1)';
	      var endScale = 'scale(0.85)';
	      var currentScale = innerCircle.style.transform || startScale;
	      var nextScale = currentScale === startScale ? endScale : startScale;

	      _autoPrefix2.default.set(innerCircle.style, 'transform', nextScale);
	      _this.timeout = setTimeout(_this.pulsate, pulsateDuration);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(FocusRipple, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.show) {
	        this.setRippleSize();
	        this.pulsate();
	      }
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      if (this.props.show) {
	        this.setRippleSize();
	        this.pulsate();
	      } else {
	        if (this.timeout) clearTimeout(this.timeout);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.timeout);
	    }
	  }, {
	    key: 'getRippleElement',
	    value: function getRippleElement(props) {
	      var color = props.color,
	          innerStyle = props.innerStyle,
	          opacity = props.opacity;
	      var _context$muiTheme = this.context.muiTheme,
	          prepareStyles = _context$muiTheme.prepareStyles,
	          ripple = _context$muiTheme.ripple;


	      var innerStyles = (0, _simpleAssign2.default)({
	        position: 'absolute',
	        height: '100%',
	        width: '100%',
	        borderRadius: '50%',
	        opacity: opacity ? opacity : 0.16,
	        backgroundColor: color || ripple.color,
	        transition: _transitions2.default.easeOut(pulsateDuration + 'ms', 'transform', null, _transitions2.default.easeInOutFunction)
	      }, innerStyle);

	      return _react2.default.createElement('div', { ref: 'innerCircle', style: prepareStyles((0, _simpleAssign2.default)({}, innerStyles)) });
	    }
	  }, {
	    key: 'setRippleSize',
	    value: function setRippleSize() {
	      var el = _reactDom2.default.findDOMNode(this.refs.innerCircle);
	      var height = el.offsetHeight;
	      var width = el.offsetWidth;
	      var size = Math.max(height, width);

	      var oldTop = 0;
	      // For browsers that don't support endsWith()
	      if (el.style.top.indexOf('px', el.style.top.length - 2) !== -1) {
	        oldTop = parseInt(el.style.top);
	      }
	      el.style.height = size + 'px';
	      el.style.top = height / 2 - size / 2 + oldTop + 'px';
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          show = _props.show,
	          style = _props.style;


	      var mergedRootStyles = (0, _simpleAssign2.default)({
	        height: '100%',
	        width: '100%',
	        position: 'absolute',
	        top: 0,
	        left: 0
	      }, style);

	      var ripple = show ? this.getRippleElement(this.props) : null;

	      return _react2.default.createElement(
	        _ScaleIn2.default,
	        {
	          maxScale: 0.85,
	          style: mergedRootStyles
	        },
	        ripple
	      );
	    }
	  }]);
	  return FocusRipple;
	}(_react.Component);

	FocusRipple.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	FocusRipple.propTypes = process.env.NODE_ENV !== "production" ? {
	  color: _propTypes2.default.string,
	  innerStyle: _propTypes2.default.object,
	  opacity: _propTypes2.default.number,
	  show: _propTypes2.default.bool,
	  style: _propTypes2.default.object
	} : {};
	exports.default = FocusRipple;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 523 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  set: function set(style, key, value) {
	    style[key] = value;
	  }
	};

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _TransitionGroup = __webpack_require__(525);

	var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

	var _ScaleInChild = __webpack_require__(528);

	var _ScaleInChild2 = _interopRequireDefault(_ScaleInChild);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ScaleIn = function (_Component) {
	  (0, _inherits3.default)(ScaleIn, _Component);

	  function ScaleIn() {
	    (0, _classCallCheck3.default)(this, ScaleIn);
	    return (0, _possibleConstructorReturn3.default)(this, (ScaleIn.__proto__ || (0, _getPrototypeOf2.default)(ScaleIn)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(ScaleIn, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          childStyle = _props.childStyle,
	          enterDelay = _props.enterDelay,
	          maxScale = _props.maxScale,
	          minScale = _props.minScale,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'childStyle', 'enterDelay', 'maxScale', 'minScale', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var mergedRootStyles = (0, _simpleAssign2.default)({}, {
	        position: 'relative',
	        height: '100%'
	      }, style);

	      var newChildren = _react2.default.Children.map(children, function (child) {
	        return _react2.default.createElement(
	          _ScaleInChild2.default,
	          {
	            key: child.key,
	            enterDelay: enterDelay,
	            maxScale: maxScale,
	            minScale: minScale,
	            style: childStyle
	          },
	          child
	        );
	      });

	      return _react2.default.createElement(
	        _TransitionGroup2.default,
	        (0, _extends3.default)({}, other, {
	          style: prepareStyles(mergedRootStyles),
	          component: 'div'
	        }),
	        newChildren
	      );
	    }
	  }]);
	  return ScaleIn;
	}(_react.Component);

	ScaleIn.defaultProps = {
	  enterDelay: 0
	};
	ScaleIn.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	ScaleIn.propTypes = process.env.NODE_ENV !== "production" ? {
	  childStyle: _propTypes2.default.object,
	  children: _propTypes2.default.node,
	  enterDelay: _propTypes2.default.number,
	  maxScale: _propTypes2.default.number,
	  minScale: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = ScaleIn;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _chainFunction = __webpack_require__(526);

	var _chainFunction2 = _interopRequireDefault(_chainFunction);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _ChildMapping = __webpack_require__(527);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var propTypes = {
	  component: _propTypes2.default.any,
	  childFactory: _propTypes2.default.func,
	  children: _propTypes2.default.node
	};

	var defaultProps = {
	  component: 'span',
	  childFactory: function childFactory(child) {
	    return child;
	  }
	};

	var TransitionGroup = function (_React$Component) {
	  _inherits(TransitionGroup, _React$Component);

	  function TransitionGroup(props, context) {
	    _classCallCheck(this, TransitionGroup);

	    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));

	    _this.performAppear = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;

	      if (component.componentWillAppear) {
	        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));
	      } else {
	        _this._handleDoneAppearing(key, component);
	      }
	    };

	    _this._handleDoneAppearing = function (key, component) {
	      if (component.componentDidAppear) {
	        component.componentDidAppear();
	      }

	      delete _this.currentlyTransitioningKeys[key];

	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully appeared. Remove it.
	        _this.performLeave(key, component);
	      }
	    };

	    _this.performEnter = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;

	      if (component.componentWillEnter) {
	        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));
	      } else {
	        _this._handleDoneEntering(key, component);
	      }
	    };

	    _this._handleDoneEntering = function (key, component) {
	      if (component.componentDidEnter) {
	        component.componentDidEnter();
	      }

	      delete _this.currentlyTransitioningKeys[key];

	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

	      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
	        // This was removed before it had fully entered. Remove it.
	        _this.performLeave(key, component);
	      }
	    };

	    _this.performLeave = function (key, component) {
	      _this.currentlyTransitioningKeys[key] = true;

	      if (component.componentWillLeave) {
	        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));
	      } else {
	        // Note that this is somewhat dangerous b/c it calls setState()
	        // again, effectively mutating the component before all the work
	        // is done.
	        _this._handleDoneLeaving(key, component);
	      }
	    };

	    _this._handleDoneLeaving = function (key, component) {
	      if (component.componentDidLeave) {
	        component.componentDidLeave();
	      }

	      delete _this.currentlyTransitioningKeys[key];

	      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);

	      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
	        // This entered again before it fully left. Add it again.
	        _this.keysToEnter.push(key);
	      } else {
	        _this.setState(function (state) {
	          var newChildren = _extends({}, state.children);
	          delete newChildren[key];
	          return { children: newChildren };
	        });
	      }
	    };

	    _this.childRefs = Object.create(null);

	    _this.state = {
	      children: (0, _ChildMapping.getChildMapping)(props.children)
	    };
	    return _this;
	  }

	  TransitionGroup.prototype.componentWillMount = function componentWillMount() {
	    this.currentlyTransitioningKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	  };

	  TransitionGroup.prototype.componentDidMount = function componentDidMount() {
	    var initialChildMapping = this.state.children;
	    for (var key in initialChildMapping) {
	      if (initialChildMapping[key]) {
	        this.performAppear(key, this.childRefs[key]);
	      }
	    }
	  };

	  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);
	    var prevChildMapping = this.state.children;

	    this.setState({
	      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)
	    });

	    for (var key in nextChildMapping) {
	      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
	      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
	        this.keysToEnter.push(key);
	      }
	    }

	    for (var _key in prevChildMapping) {
	      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);
	      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {
	        this.keysToLeave.push(_key);
	      }
	    }

	    // If we want to someday check for reordering, we could do it here.
	  };

	  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this2 = this;

	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(function (key) {
	      return _this2.performEnter(key, _this2.childRefs[key]);
	    });

	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(function (key) {
	      return _this2.performLeave(key, _this2.childRefs[key]);
	    });
	  };

	  TransitionGroup.prototype.render = function render() {
	    var _this3 = this;

	    // TODO: we could get rid of the need for the wrapper node
	    // by cloning a single child
	    var childrenToRender = [];

	    var _loop = function _loop(key) {
	      var child = _this3.state.children[key];
	      if (child) {
	        var isCallbackRef = typeof child.ref !== 'string';
	        var factoryChild = _this3.props.childFactory(child);
	        var ref = function ref(r) {
	          _this3.childRefs[key] = r;
	        };

	        process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;

	        // Always chaining the refs leads to problems when the childFactory
	        // wraps the child. The child ref callback gets called twice with the
	        // wrapper and the child. So we only need to chain the ref if the
	        // factoryChild is not different from child.
	        if (factoryChild === child && isCallbackRef) {
	          ref = (0, _chainFunction2.default)(child.ref, ref);
	        }

	        // You may need to apply reactive updates to a child as it is leaving.
	        // The normal React way to do it won't work since the child will have
	        // already been removed. In case you need this behavior you can provide
	        // a childFactory function to wrap every child, even the ones that are
	        // leaving.
	        childrenToRender.push(_react2.default.cloneElement(factoryChild, {
	          key: key,
	          ref: ref
	        }));
	      }
	    };

	    for (var key in this.state.children) {
	      _loop(key);
	    }

	    // Do not forward TransitionGroup props to primitive DOM nodes
	    var props = _extends({}, this.props);
	    delete props.transitionLeave;
	    delete props.transitionName;
	    delete props.transitionAppear;
	    delete props.transitionEnter;
	    delete props.childFactory;
	    delete props.transitionLeaveTimeout;
	    delete props.transitionEnterTimeout;
	    delete props.transitionAppearTimeout;
	    delete props.component;

	    return _react2.default.createElement(this.props.component, props, childrenToRender);
	  };

	  return TransitionGroup;
	}(_react2.default.Component);

	TransitionGroup.displayName = 'TransitionGroup';


	TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? propTypes : {};
	TransitionGroup.defaultProps = defaultProps;

	exports.default = TransitionGroup;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 526 */
/***/ (function(module, exports) {

	
	module.exports = function chain(){
	  var len = arguments.length
	  var args = [];

	  for (var i = 0; i < len; i++)
	    args[i] = arguments[i]

	  args = args.filter(function(fn){ return fn != null })

	  if (args.length === 0) return undefined
	  if (args.length === 1) return args[0]

	  return args.reduce(function(current, next){
	    return function chainedFunction() {
	      current.apply(this, arguments);
	      next.apply(this, arguments);
	    };
	  })
	}


/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.getChildMapping = getChildMapping;
	exports.mergeChildMappings = mergeChildMappings;

	var _react = __webpack_require__(241);

	/**
	 * Given `this.props.children`, return an object mapping key to child.
	 *
	 * @param {*} children `this.props.children`
	 * @return {object} Mapping of key to child
	 */
	function getChildMapping(children) {
	  if (!children) {
	    return children;
	  }
	  var result = {};
	  _react.Children.map(children, function (child) {
	    return child;
	  }).forEach(function (child) {
	    result[child.key] = child;
	  });
	  return result;
	}

	/**
	 * When you're adding or removing children some may be added or removed in the
	 * same render pass. We want to show *both* since we want to simultaneously
	 * animate elements in and out. This function takes a previous set of keys
	 * and a new set of keys and merges them with its best guess of the correct
	 * ordering. In the future we may expose some of the utilities in
	 * ReactMultiChild to make this easy, but for now React itself does not
	 * directly have this concept of the union of prevChildren and nextChildren
	 * so we implement it here.
	 *
	 * @param {object} prev prev children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @param {object} next next children as returned from
	 * `ReactTransitionChildMapping.getChildMapping()`.
	 * @return {object} a key set that contains all keys in `prev` and all keys
	 * in `next` in a reasonable order.
	 */
	function mergeChildMappings(prev, next) {
	  prev = prev || {};
	  next = next || {};

	  function getValueForKey(key) {
	    if (next.hasOwnProperty(key)) {
	      return next[key];
	    }

	    return prev[key];
	  }

	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextKeysPending = {};

	  var pendingKeys = [];
	  for (var prevKey in prev) {
	    if (next.hasOwnProperty(prevKey)) {
	      if (pendingKeys.length) {
	        nextKeysPending[prevKey] = pendingKeys;
	        pendingKeys = [];
	      }
	    } else {
	      pendingKeys.push(prevKey);
	    }
	  }

	  var i = void 0;
	  var childMapping = {};
	  for (var nextKey in next) {
	    if (nextKeysPending.hasOwnProperty(nextKey)) {
	      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
	        var pendingNextKey = nextKeysPending[nextKey][i];
	        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
	      }
	    }
	    childMapping[nextKey] = getValueForKey(nextKey);
	  }

	  // Finally, add the keys which didn't appear before any key in `next`
	  for (i = 0; i < pendingKeys.length; i++) {
	    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
	  }

	  return childMapping;
	}

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _autoPrefix = __webpack_require__(523);

	var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ScaleInChild = function (_Component) {
	  (0, _inherits3.default)(ScaleInChild, _Component);

	  function ScaleInChild() {
	    (0, _classCallCheck3.default)(this, ScaleInChild);
	    return (0, _possibleConstructorReturn3.default)(this, (ScaleInChild.__proto__ || (0, _getPrototypeOf2.default)(ScaleInChild)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(ScaleInChild, [{
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.enterTimer);
	      clearTimeout(this.leaveTimer);
	    }
	  }, {
	    key: 'componentWillAppear',
	    value: function componentWillAppear(callback) {
	      this.initializeAnimation(callback);
	    }
	  }, {
	    key: 'componentWillEnter',
	    value: function componentWillEnter(callback) {
	      this.initializeAnimation(callback);
	    }
	  }, {
	    key: 'componentDidAppear',
	    value: function componentDidAppear() {
	      this.animate();
	    }
	  }, {
	    key: 'componentDidEnter',
	    value: function componentDidEnter() {
	      this.animate();
	    }
	  }, {
	    key: 'componentWillLeave',
	    value: function componentWillLeave(callback) {
	      var style = _reactDom2.default.findDOMNode(this).style;

	      style.opacity = '0';
	      _autoPrefix2.default.set(style, 'transform', 'scale(' + this.props.minScale + ')');

	      this.leaveTimer = setTimeout(callback, 450);
	    }
	  }, {
	    key: 'animate',
	    value: function animate() {
	      var style = _reactDom2.default.findDOMNode(this).style;

	      style.opacity = '1';
	      _autoPrefix2.default.set(style, 'transform', 'scale(' + this.props.maxScale + ')');
	    }
	  }, {
	    key: 'initializeAnimation',
	    value: function initializeAnimation(callback) {
	      var style = _reactDom2.default.findDOMNode(this).style;

	      style.opacity = '0';
	      _autoPrefix2.default.set(style, 'transform', 'scale(0)');

	      this.enterTimer = setTimeout(callback, this.props.enterDelay);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          enterDelay = _props.enterDelay,
	          maxScale = _props.maxScale,
	          minScale = _props.minScale,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'enterDelay', 'maxScale', 'minScale', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var mergedRootStyles = (0, _simpleAssign2.default)({}, {
	        position: 'absolute',
	        height: '100%',
	        width: '100%',
	        top: 0,
	        left: 0,
	        transition: _transitions2.default.easeOut(null, ['transform', 'opacity'])
	      }, style);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles(mergedRootStyles) }),
	        children
	      );
	    }
	  }]);
	  return ScaleInChild;
	}(_react.Component);

	ScaleInChild.defaultProps = {
	  enterDelay: 0,
	  maxScale: 1,
	  minScale: 0
	};
	ScaleInChild.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	ScaleInChild.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  enterDelay: _propTypes2.default.number,
	  maxScale: _propTypes2.default.number,
	  minScale: _propTypes2.default.number,
	  style: _propTypes2.default.object
	} : {};
	exports.default = ScaleInChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(279);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _toArray2 = __webpack_require__(530);

	var _toArray3 = _interopRequireDefault(_toArray2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _TransitionGroup = __webpack_require__(525);

	var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

	var _dom = __webpack_require__(531);

	var _dom2 = _interopRequireDefault(_dom);

	var _CircleRipple = __webpack_require__(532);

	var _CircleRipple2 = _interopRequireDefault(_CircleRipple);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Remove the first element of the array
	var shift = function shift(_ref) {
	  var _ref2 = (0, _toArray3.default)(_ref),
	      newArray = _ref2.slice(1);

	  return newArray;
	};

	var TouchRipple = function (_Component) {
	  (0, _inherits3.default)(TouchRipple, _Component);

	  function TouchRipple(props, context) {
	    (0, _classCallCheck3.default)(this, TouchRipple);

	    // Touch start produces a mouse down event for compat reasons. To avoid
	    // showing ripples twice we skip showing a ripple for the first mouse down
	    // after a touch start. Note we don't store ignoreNextMouseDown in this.state
	    // to avoid re-rendering when we change it.
	    var _this = (0, _possibleConstructorReturn3.default)(this, (TouchRipple.__proto__ || (0, _getPrototypeOf2.default)(TouchRipple)).call(this, props, context));

	    _this.handleMouseDown = function (event) {
	      // only listen to left clicks
	      if (event.button === 0) {
	        _this.start(event, false);
	      }
	    };

	    _this.handleMouseUp = function () {
	      _this.end();
	    };

	    _this.handleMouseLeave = function () {
	      _this.end();
	    };

	    _this.handleTouchStart = function (event) {
	      event.stopPropagation();
	      // If the user is swiping (not just tapping), save the position so we can
	      // abort ripples if the user appears to be scrolling.
	      if (_this.props.abortOnScroll && event.touches) {
	        _this.startListeningForScrollAbort(event);
	        _this.startTime = Date.now();
	      }
	      _this.start(event, true);
	    };

	    _this.handleTouchEnd = function () {
	      _this.end();
	    };

	    _this.handleTouchMove = function (event) {
	      // Stop trying to abort if we're already 300ms into the animation
	      var timeSinceStart = Math.abs(Date.now() - _this.startTime);
	      if (timeSinceStart > 300) {
	        _this.stopListeningForScrollAbort();
	        return;
	      }

	      // If the user is scrolling...
	      var deltaY = Math.abs(event.touches[0].clientY - _this.firstTouchY);
	      var deltaX = Math.abs(event.touches[0].clientX - _this.firstTouchX);
	      // Call it a scroll after an arbitrary 6px (feels reasonable in testing)
	      if (deltaY > 6 || deltaX > 6) {
	        var currentRipples = _this.state.ripples;
	        var ripple = currentRipples[0];
	        // This clone will replace the ripple in ReactTransitionGroup with a
	        // version that will disappear immediately when removed from the DOM
	        var abortedRipple = _react2.default.cloneElement(ripple, { aborted: true });
	        // Remove the old ripple and replace it with the new updated one
	        currentRipples = shift(currentRipples);
	        currentRipples = [].concat((0, _toConsumableArray3.default)(currentRipples), [abortedRipple]);
	        _this.setState({ ripples: currentRipples }, function () {
	          // Call end after we've set the ripple to abort otherwise the setState
	          // in end() merges with this and the ripple abort fails
	          _this.end();
	        });
	      }
	    };

	    _this.ignoreNextMouseDown = false;

	    _this.state = {
	      // This prop allows us to only render the ReactTransitionGroup
	      // on the first click of the component, making the inital render faster.
	      hasRipples: false,
	      nextKey: 0,
	      ripples: []
	    };
	    return _this;
	  }

	  (0, _createClass3.default)(TouchRipple, [{
	    key: 'start',
	    value: function start(event, isRippleTouchGenerated) {
	      var theme = this.context.muiTheme.ripple;

	      if (this.ignoreNextMouseDown && !isRippleTouchGenerated) {
	        this.ignoreNextMouseDown = false;
	        return;
	      }

	      var ripples = this.state.ripples;

	      // Add a ripple to the ripples array
	      ripples = [].concat((0, _toConsumableArray3.default)(ripples), [_react2.default.createElement(_CircleRipple2.default, {
	        key: this.state.nextKey,
	        style: !this.props.centerRipple ? this.getRippleStyle(event) : {},
	        color: this.props.color || theme.color,
	        opacity: this.props.opacity,
	        touchGenerated: isRippleTouchGenerated
	      })]);

	      this.ignoreNextMouseDown = isRippleTouchGenerated;
	      this.setState({
	        hasRipples: true,
	        nextKey: this.state.nextKey + 1,
	        ripples: ripples
	      });
	    }
	  }, {
	    key: 'end',
	    value: function end() {
	      var currentRipples = this.state.ripples;
	      this.setState({
	        ripples: shift(currentRipples)
	      });
	      if (this.props.abortOnScroll) {
	        this.stopListeningForScrollAbort();
	      }
	    }

	    // Check if the user seems to be scrolling and abort the animation if so

	  }, {
	    key: 'startListeningForScrollAbort',
	    value: function startListeningForScrollAbort(event) {
	      this.firstTouchY = event.touches[0].clientY;
	      this.firstTouchX = event.touches[0].clientX;
	      // Note that when scolling Chrome throttles this event to every 200ms
	      // Also note we don't listen for scroll events directly as there's no general
	      // way to cover cases like scrolling within containers on the page
	      document.body.addEventListener('touchmove', this.handleTouchMove);
	    }
	  }, {
	    key: 'stopListeningForScrollAbort',
	    value: function stopListeningForScrollAbort() {
	      document.body.removeEventListener('touchmove', this.handleTouchMove);
	    }
	  }, {
	    key: 'getRippleStyle',
	    value: function getRippleStyle(event) {
	      var el = _reactDom2.default.findDOMNode(this);
	      var elHeight = el.offsetHeight;
	      var elWidth = el.offsetWidth;
	      var offset = _dom2.default.offset(el);
	      var isTouchEvent = event.touches && event.touches.length;
	      var pageX = isTouchEvent ? event.touches[0].pageX : event.pageX;
	      var pageY = isTouchEvent ? event.touches[0].pageY : event.pageY;
	      var pointerX = pageX - offset.left;
	      var pointerY = pageY - offset.top;
	      var topLeftDiag = this.calcDiag(pointerX, pointerY);
	      var topRightDiag = this.calcDiag(elWidth - pointerX, pointerY);
	      var botRightDiag = this.calcDiag(elWidth - pointerX, elHeight - pointerY);
	      var botLeftDiag = this.calcDiag(pointerX, elHeight - pointerY);
	      var rippleRadius = Math.max(topLeftDiag, topRightDiag, botRightDiag, botLeftDiag);
	      var rippleSize = rippleRadius * 2;
	      var left = pointerX - rippleRadius;
	      var top = pointerY - rippleRadius;

	      return {
	        directionInvariant: true,
	        height: rippleSize,
	        width: rippleSize,
	        top: top,
	        left: left
	      };
	    }
	  }, {
	    key: 'calcDiag',
	    value: function calcDiag(a, b) {
	      return Math.sqrt(a * a + b * b);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          style = _props.style;
	      var _state = this.state,
	          hasRipples = _state.hasRipples,
	          ripples = _state.ripples;
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var rippleGroup = void 0;

	      if (hasRipples) {
	        var mergedStyles = (0, _simpleAssign2.default)({
	          height: '100%',
	          width: '100%',
	          position: 'absolute',
	          top: 0,
	          left: 0,
	          overflow: 'hidden',
	          pointerEvents: 'none',
	          zIndex: 1 // This is also needed so that ripples do not bleed past a parent border radius.
	        }, style);

	        rippleGroup = _react2.default.createElement(
	          _TransitionGroup2.default,
	          { style: prepareStyles(mergedStyles) },
	          ripples
	        );
	      }

	      return _react2.default.createElement(
	        'div',
	        {
	          onMouseUp: this.handleMouseUp,
	          onMouseDown: this.handleMouseDown,
	          onMouseLeave: this.handleMouseLeave,
	          onTouchStart: this.handleTouchStart,
	          onTouchEnd: this.handleTouchEnd
	        },
	        rippleGroup,
	        children
	      );
	    }
	  }]);
	  return TouchRipple;
	}(_react.Component);

	TouchRipple.defaultProps = {
	  abortOnScroll: true
	};
	TouchRipple.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TouchRipple.propTypes = process.env.NODE_ENV !== "production" ? {
	  abortOnScroll: _propTypes2.default.bool,
	  centerRipple: _propTypes2.default.bool,
	  children: _propTypes2.default.node,
	  color: _propTypes2.default.string,
	  opacity: _propTypes2.default.number,
	  style: _propTypes2.default.object
	} : {};
	exports.default = TouchRipple;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _from = __webpack_require__(280);

	var _from2 = _interopRequireDefault(_from);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (arr) {
	  return Array.isArray(arr) ? arr : (0, _from2.default)(arr);
	};

/***/ }),
/* 531 */
/***/ (function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	  isDescendant: function isDescendant(parent, child) {
	    var node = child.parentNode;

	    while (node !== null) {
	      if (node === parent) return true;
	      node = node.parentNode;
	    }

	    return false;
	  },
	  offset: function offset(el) {
	    var rect = el.getBoundingClientRect();
	    return {
	      top: rect.top + document.body.scrollTop,
	      left: rect.left + document.body.scrollLeft
	    };
	  }
	};

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _autoPrefix = __webpack_require__(523);

	var _autoPrefix2 = _interopRequireDefault(_autoPrefix);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var CircleRipple = function (_Component) {
	  (0, _inherits3.default)(CircleRipple, _Component);

	  function CircleRipple() {
	    (0, _classCallCheck3.default)(this, CircleRipple);
	    return (0, _possibleConstructorReturn3.default)(this, (CircleRipple.__proto__ || (0, _getPrototypeOf2.default)(CircleRipple)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CircleRipple, [{
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.enterTimer);
	      clearTimeout(this.leaveTimer);
	    }
	  }, {
	    key: 'componentWillAppear',
	    value: function componentWillAppear(callback) {
	      this.initializeAnimation(callback);
	    }
	  }, {
	    key: 'componentWillEnter',
	    value: function componentWillEnter(callback) {
	      this.initializeAnimation(callback);
	    }
	  }, {
	    key: 'componentDidAppear',
	    value: function componentDidAppear() {
	      this.animate();
	    }
	  }, {
	    key: 'componentDidEnter',
	    value: function componentDidEnter() {
	      this.animate();
	    }
	  }, {
	    key: 'componentWillLeave',
	    value: function componentWillLeave(callback) {
	      var style = _reactDom2.default.findDOMNode(this).style;
	      style.opacity = 0;
	      // If the animation is aborted, remove from the DOM immediately
	      var removeAfter = this.props.aborted ? 0 : 2000;
	      this.enterTimer = setTimeout(callback, removeAfter);
	    }
	  }, {
	    key: 'animate',
	    value: function animate() {
	      var style = _reactDom2.default.findDOMNode(this).style;
	      var transitionValue = _transitions2.default.easeOut('2s', 'opacity') + ', ' + _transitions2.default.easeOut('1s', 'transform');
	      _autoPrefix2.default.set(style, 'transition', transitionValue);
	      _autoPrefix2.default.set(style, 'transform', 'scale(1)');
	    }
	  }, {
	    key: 'initializeAnimation',
	    value: function initializeAnimation(callback) {
	      var style = _reactDom2.default.findDOMNode(this).style;
	      style.opacity = this.props.opacity;
	      _autoPrefix2.default.set(style, 'transform', 'scale(0)');
	      this.leaveTimer = setTimeout(callback, 0);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          aborted = _props.aborted,
	          color = _props.color,
	          opacity = _props.opacity,
	          style = _props.style,
	          touchGenerated = _props.touchGenerated,
	          other = (0, _objectWithoutProperties3.default)(_props, ['aborted', 'color', 'opacity', 'style', 'touchGenerated']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var mergedStyles = (0, _simpleAssign2.default)({
	        position: 'absolute',
	        top: 0,
	        left: 0,
	        height: '100%',
	        width: '100%',
	        borderRadius: '50%',
	        backgroundColor: color
	      }, style);

	      return _react2.default.createElement('div', (0, _extends3.default)({}, other, { style: prepareStyles(mergedStyles) }));
	    }
	  }]);
	  return CircleRipple;
	}(_react.Component);

	CircleRipple.defaultProps = {
	  opacity: 0.1,
	  aborted: false
	};
	CircleRipple.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CircleRipple.propTypes = process.env.NODE_ENV !== "production" ? {
	  aborted: _propTypes2.default.bool,
	  color: _propTypes2.default.string,
	  opacity: _propTypes2.default.number,
	  style: _propTypes2.default.object,
	  touchGenerated: _propTypes2.default.bool
	} : {};
	exports.default = CircleRipple;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _FontIcon = __webpack_require__(534);

	var _FontIcon2 = _interopRequireDefault(_FontIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _FontIcon2.default;

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var color = props.color,
	      hoverColor = props.hoverColor;
	  var baseTheme = context.muiTheme.baseTheme;

	  var offColor = color || baseTheme.palette.textColor;
	  var onColor = hoverColor || offColor;

	  return {
	    root: {
	      color: state.hovered ? onColor : offColor,
	      position: 'relative',
	      fontSize: baseTheme.spacing.iconSize,
	      display: 'inline-block',
	      userSelect: 'none',
	      transition: _transitions2.default.easeOut()
	    }
	  };
	}

	var FontIcon = function (_Component) {
	  (0, _inherits3.default)(FontIcon, _Component);

	  function FontIcon() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, FontIcon);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FontIcon.__proto__ || (0, _getPrototypeOf2.default)(FontIcon)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false
	    }, _this.handleMouseLeave = function (event) {
	      // hover is needed only when a hoverColor is defined
	      if (_this.props.hoverColor !== undefined) {
	        _this.setState({ hovered: false });
	      }
	      if (_this.props.onMouseLeave) {
	        _this.props.onMouseLeave(event);
	      }
	    }, _this.handleMouseEnter = function (event) {
	      // hover is needed only when a hoverColor is defined
	      if (_this.props.hoverColor !== undefined) {
	        _this.setState({ hovered: true });
	      }
	      if (_this.props.onMouseEnter) {
	        _this.props.onMouseEnter(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(FontIcon, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          hoverColor = _props.hoverColor,
	          onMouseLeave = _props.onMouseLeave,
	          onMouseEnter = _props.onMouseEnter,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['hoverColor', 'onMouseLeave', 'onMouseEnter', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);

	      return _react2.default.createElement('span', (0, _extends3.default)({}, other, {
	        onMouseLeave: this.handleMouseLeave,
	        onMouseEnter: this.handleMouseEnter,
	        style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	      }));
	    }
	  }]);
	  return FontIcon;
	}(_react.Component);

	FontIcon.muiName = 'FontIcon';
	FontIcon.defaultProps = {
	  onMouseEnter: function onMouseEnter() {},
	  onMouseLeave: function onMouseLeave() {}
	};
	FontIcon.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	FontIcon.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * This is the font color of the font icon. If not specified,
	   * this component will default to muiTheme.palette.textColor.
	   */
	  color: _propTypes2.default.string,
	  /**
	   * This is the icon color when the mouse hovers over the icon.
	   */
	  hoverColor: _propTypes2.default.string,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = FontIcon;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var verticalPosition = props.verticalPosition;
	  var horizontalPosition = props.horizontalPosition;
	  var touchMarginOffset = props.touch ? 10 : 0;
	  var touchOffsetTop = props.touch ? -20 : -10;
	  var offset = verticalPosition === 'bottom' ? 14 + touchMarginOffset : -14 - touchMarginOffset;

	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      zIndex = _context$muiTheme.zIndex,
	      tooltip = _context$muiTheme.tooltip,
	      borderRadius = _context$muiTheme.borderRadius;


	  var styles = {
	    root: {
	      position: 'absolute',
	      fontFamily: baseTheme.fontFamily,
	      fontSize: '10px',
	      lineHeight: '22px',
	      padding: '0 8px',
	      zIndex: zIndex.tooltip,
	      color: tooltip.color,
	      overflow: 'hidden',
	      top: -10000,
	      borderRadius: borderRadius,
	      userSelect: 'none',
	      opacity: 0,
	      right: horizontalPosition === 'left' ? 12 : null,
	      left: horizontalPosition === 'center' ? (state.offsetWidth - 48) / 2 * -1 : horizontalPosition === 'right' ? 12 : null,
	      transition: _transitions2.default.easeOut('0ms', 'top', '450ms') + ', ' + _transitions2.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2.default.easeOut('450ms', 'opacity', '0ms')
	    },
	    label: {
	      position: 'relative',
	      whiteSpace: 'nowrap'
	    },
	    ripple: {
	      position: 'absolute',
	      left: horizontalPosition === 'center' ? '50%' : horizontalPosition === 'left' ? '100%' : '0%',
	      top: verticalPosition === 'bottom' ? 0 : '100%',
	      transform: 'translate(-50%, -50%)',
	      borderRadius: '50%',
	      backgroundColor: 'transparent',
	      transition: _transitions2.default.easeOut('0ms', 'width', '450ms') + ', ' + _transitions2.default.easeOut('0ms', 'height', '450ms') + ', ' + _transitions2.default.easeOut('450ms', 'backgroundColor', '0ms')
	    },
	    rootWhenShown: {
	      top: verticalPosition === 'top' ? touchOffsetTop : 36,
	      opacity: tooltip.opacity,
	      transform: 'translate(0px, ' + offset + 'px)',
	      transition: _transitions2.default.easeOut('0ms', 'top', '0ms') + ', ' + _transitions2.default.easeOut('450ms', 'transform', '0ms') + ', ' + _transitions2.default.easeOut('450ms', 'opacity', '0ms')
	    },
	    rootWhenTouched: {
	      fontSize: '14px',
	      lineHeight: '32px',
	      padding: '0 16px'
	    },
	    rippleWhenShown: {
	      backgroundColor: tooltip.rippleBackgroundColor,
	      transition: _transitions2.default.easeOut('450ms', 'width', '0ms') + ', ' + _transitions2.default.easeOut('450ms', 'height', '0ms') + ', ' + _transitions2.default.easeOut('450ms', 'backgroundColor', '0ms')
	    }
	  };

	  return styles;
	}

	var Tooltip = function (_Component) {
	  (0, _inherits3.default)(Tooltip, _Component);

	  function Tooltip() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Tooltip);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tooltip.__proto__ || (0, _getPrototypeOf2.default)(Tooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      offsetWidth: null
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Tooltip, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setRippleSize();
	      this.setTooltipPosition();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps() {
	      this.setTooltipPosition();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.setRippleSize();
	    }
	  }, {
	    key: 'setRippleSize',
	    value: function setRippleSize() {
	      var ripple = this.refs.ripple;
	      var tooltip = this.refs.tooltip;
	      var tooltipWidth = parseInt(tooltip.offsetWidth, 10) / (this.props.horizontalPosition === 'center' ? 2 : 1);
	      var tooltipHeight = parseInt(tooltip.offsetHeight, 10);

	      var rippleDiameter = Math.ceil(Math.sqrt(Math.pow(tooltipHeight, 2) + Math.pow(tooltipWidth, 2)) * 2);
	      if (this.props.show) {
	        ripple.style.height = rippleDiameter + 'px';
	        ripple.style.width = rippleDiameter + 'px';
	      } else {
	        ripple.style.width = '0px';
	        ripple.style.height = '0px';
	      }
	    }
	  }, {
	    key: 'setTooltipPosition',
	    value: function setTooltipPosition() {
	      this.setState({ offsetWidth: this.refs.tooltip.offsetWidth });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          horizontalPosition = _props.horizontalPosition,
	          label = _props.label,
	          show = _props.show,
	          touch = _props.touch,
	          verticalPosition = _props.verticalPosition,
	          other = (0, _objectWithoutProperties3.default)(_props, ['horizontalPosition', 'label', 'show', 'touch', 'verticalPosition']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, {
	          ref: 'tooltip',
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, this.props.show && styles.rootWhenShown, this.props.touch && styles.rootWhenTouched, this.props.style))
	        }),
	        _react2.default.createElement('div', {
	          ref: 'ripple',
	          style: prepareStyles((0, _simpleAssign2.default)(styles.ripple, this.props.show && styles.rippleWhenShown))
	        }),
	        _react2.default.createElement(
	          'span',
	          { style: prepareStyles(styles.label) },
	          label
	        )
	      );
	    }
	  }]);
	  return Tooltip;
	}(_react.Component);

	Tooltip.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Tooltip.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  horizontalPosition: _propTypes2.default.oneOf(['left', 'right', 'center']),
	  label: _propTypes2.default.node.isRequired,
	  show: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  touch: _propTypes2.default.bool,
	  verticalPosition: _propTypes2.default.oneOf(['top', 'bottom'])
	} : {};
	exports.default = Tooltip;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.extendChildren = extendChildren;

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function extendChildren(children, extendedProps, extendedChildren) {
	  return _react2.default.Children.map(children, function (child) {
	    if (!_react2.default.isValidElement(child)) {
	      return child;
	    }

	    var newProps = typeof extendedProps === 'function' ? extendedProps(child) : extendedProps;

	    var newChildren = typeof extendedChildren === 'function' ? extendedChildren(child) : extendedChildren ? extendedChildren : child.props.children;

	    return _react2.default.cloneElement(child, newProps, newChildren);
	  });
	}

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Avatar = __webpack_require__(538);

	var _Avatar2 = _interopRequireDefault(_Avatar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var card = context.muiTheme.card;


	  return {
	    root: {
	      padding: 16,
	      fontWeight: card.fontWeight,
	      boxSizing: 'border-box',
	      position: 'relative',
	      whiteSpace: 'nowrap'
	    },
	    text: {
	      display: 'inline-block',
	      verticalAlign: 'top',
	      whiteSpace: 'normal',
	      paddingRight: '90px'
	    },
	    avatar: {
	      marginRight: 16
	    },
	    title: {
	      color: props.titleColor || card.titleColor,
	      display: 'block',
	      fontSize: 15
	    },
	    subtitle: {
	      color: props.subtitleColor || card.subtitleColor,
	      display: 'block',
	      fontSize: 14
	    }
	  };
	}

	var CardHeader = function (_Component) {
	  (0, _inherits3.default)(CardHeader, _Component);

	  function CardHeader() {
	    (0, _classCallCheck3.default)(this, CardHeader);
	    return (0, _possibleConstructorReturn3.default)(this, (CardHeader.__proto__ || (0, _getPrototypeOf2.default)(CardHeader)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardHeader, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          actAsExpander = _props.actAsExpander,
	          avatarProp = _props.avatar,
	          children = _props.children,
	          closeIcon = _props.closeIcon,
	          expandable = _props.expandable,
	          openIcon = _props.openIcon,
	          showExpandableButton = _props.showExpandableButton,
	          style = _props.style,
	          subtitle = _props.subtitle,
	          subtitleColor = _props.subtitleColor,
	          subtitleStyle = _props.subtitleStyle,
	          textStyle = _props.textStyle,
	          title = _props.title,
	          titleColor = _props.titleColor,
	          titleStyle = _props.titleStyle,
	          iconStyle = _props.iconStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'avatar', 'children', 'closeIcon', 'expandable', 'openIcon', 'showExpandableButton', 'style', 'subtitle', 'subtitleColor', 'subtitleStyle', 'textStyle', 'title', 'titleColor', 'titleStyle', 'iconStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var avatar = avatarProp;

	      if ((0, _react.isValidElement)(avatarProp)) {
	        avatar = _react2.default.cloneElement(avatar, {
	          style: (0, _simpleAssign2.default)(styles.avatar, avatar.props.style)
	        });
	      } else if (avatar !== null) {
	        avatar = _react2.default.createElement(_Avatar2.default, { src: avatarProp, style: styles.avatar });
	      }

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	        avatar,
	        _react2.default.createElement(
	          'div',
	          { style: prepareStyles((0, _simpleAssign2.default)(styles.text, textStyle)) },
	          _react2.default.createElement(
	            'span',
	            { style: prepareStyles((0, _simpleAssign2.default)(styles.title, titleStyle)) },
	            title
	          ),
	          _react2.default.createElement(
	            'span',
	            { style: prepareStyles((0, _simpleAssign2.default)(styles.subtitle, subtitleStyle)) },
	            subtitle
	          )
	        ),
	        children
	      );
	    }
	  }]);
	  return CardHeader;
	}(_react.Component);

	CardHeader.muiName = 'CardHeader';
	CardHeader.defaultProps = {
	  avatar: null
	};
	CardHeader.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, a click on this card component expands the card.
	   */
	  actAsExpander: _propTypes2.default.bool,
	  /**
	   * This is the [Avatar](/#/components/avatar) element to be displayed on the Card Header.
	   * If `avatar` is an `Avatar` or other element, it will be rendered.
	   * If `avatar` is a string, it will be used as the image `src` for an `Avatar`.
	   */
	  avatar: _propTypes2.default.node,
	  /**
	   * Can be used to render elements inside the Card Header.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Can be used to pass a closeIcon if you don't like the default expandable close Icon.
	   */
	  closeIcon: _propTypes2.default.node,
	  /**
	   * If true, this card component is expandable.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * Override the iconStyle of the Icon Button.
	   */
	  iconStyle: _propTypes2.default.object,
	  /**
	   * Can be used to pass a openIcon if you don't like the default expandable open Icon.
	   */
	  openIcon: _propTypes2.default.node,
	  /**
	   * If true, this card component will include a button to expand the card.
	   */
	  showExpandableButton: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Can be used to render a subtitle in Card Header.
	   */
	  subtitle: _propTypes2.default.node,
	  /**
	   * Override the subtitle color.
	   */
	  subtitleColor: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the subtitle.
	   */
	  subtitleStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the text.
	   */
	  textStyle: _propTypes2.default.object,
	  /**
	   * Can be used to render a title in Card Header.
	   */
	  title: _propTypes2.default.node,
	  /**
	   * Override the title color.
	   */
	  titleColor: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the title.
	   */
	  titleStyle: _propTypes2.default.object
	} : {};
	exports.default = CardHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Avatar = __webpack_require__(539);

	var _Avatar2 = _interopRequireDefault(_Avatar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Avatar2.default;

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var backgroundColor = props.backgroundColor,
	      color = props.color,
	      size = props.size;
	  var avatar = context.muiTheme.avatar;


	  var styles = {
	    root: {
	      color: color || avatar.color,
	      backgroundColor: backgroundColor || avatar.backgroundColor,
	      userSelect: 'none',
	      display: 'inline-flex',
	      alignItems: 'center',
	      justifyContent: 'center',
	      fontSize: size / 2,
	      borderRadius: '50%',
	      height: size,
	      width: size
	    },
	    icon: {
	      color: color || avatar.color,
	      width: size * 0.6,
	      height: size * 0.6,
	      fontSize: size * 0.6,
	      margin: size * 0.2
	    }
	  };

	  return styles;
	}

	var Avatar = function (_Component) {
	  (0, _inherits3.default)(Avatar, _Component);

	  function Avatar() {
	    (0, _classCallCheck3.default)(this, Avatar);
	    return (0, _possibleConstructorReturn3.default)(this, (Avatar.__proto__ || (0, _getPrototypeOf2.default)(Avatar)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(Avatar, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          backgroundColor = _props.backgroundColor,
	          icon = _props.icon,
	          src = _props.src,
	          style = _props.style,
	          className = _props.className,
	          other = (0, _objectWithoutProperties3.default)(_props, ['backgroundColor', 'icon', 'src', 'style', 'className']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      if (src) {
	        return _react2.default.createElement('img', (0, _extends3.default)({
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	        }, other, {
	          src: src,
	          className: className
	        }));
	      } else {
	        return _react2.default.createElement(
	          'div',
	          (0, _extends3.default)({}, other, {
	            style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)),
	            className: className
	          }),
	          icon && _react2.default.cloneElement(icon, {
	            color: styles.icon.color,
	            style: (0, _simpleAssign2.default)(styles.icon, icon.props.style)
	          }),
	          this.props.children
	        );
	      }
	    }
	  }]);
	  return Avatar;
	}(_react.Component);

	Avatar.muiName = 'Avatar';
	Avatar.defaultProps = {
	  size: 40
	};
	Avatar.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Avatar.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * The backgroundColor of the avatar. Does not apply to image avatars.
	   */
	  backgroundColor: _propTypes2.default.string,
	  /**
	   * Can be used, for instance, to render a letter inside the avatar.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root `div` or `img` element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The icon or letter's color.
	   */
	  color: _propTypes2.default.string,
	  /**
	   * This is the SvgIcon or FontIcon to be used inside the avatar.
	   */
	  icon: _propTypes2.default.element,
	  /**
	   * This is the size of the avatar in pixels.
	   */
	  size: _propTypes2.default.number,
	  /**
	   * If passed in, this component will render an img element. Otherwise, a div will be rendered.
	   */
	  src: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = Avatar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var card = context.muiTheme.card;


	  return {
	    root: {
	      padding: 16,
	      position: 'relative'
	    },
	    title: {
	      fontSize: 24,
	      color: props.titleColor || card.titleColor,
	      display: 'block',
	      lineHeight: '36px'
	    },
	    subtitle: {
	      fontSize: 14,
	      color: props.subtitleColor || card.subtitleColor,
	      display: 'block'
	    }
	  };
	}

	var CardTitle = function (_Component) {
	  (0, _inherits3.default)(CardTitle, _Component);

	  function CardTitle() {
	    (0, _classCallCheck3.default)(this, CardTitle);
	    return (0, _possibleConstructorReturn3.default)(this, (CardTitle.__proto__ || (0, _getPrototypeOf2.default)(CardTitle)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardTitle, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          actAsExpander = _props.actAsExpander,
	          children = _props.children,
	          closeIcon = _props.closeIcon,
	          expandable = _props.expandable,
	          showExpandableButton = _props.showExpandableButton,
	          style = _props.style,
	          subtitle = _props.subtitle,
	          subtitleColor = _props.subtitleColor,
	          subtitleStyle = _props.subtitleStyle,
	          title = _props.title,
	          titleColor = _props.titleColor,
	          titleStyle = _props.titleStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'children', 'closeIcon', 'expandable', 'showExpandableButton', 'style', 'subtitle', 'subtitleColor', 'subtitleStyle', 'title', 'titleColor', 'titleStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var rootStyle = (0, _simpleAssign2.default)({}, styles.root, style);
	      var extendedTitleStyle = (0, _simpleAssign2.default)({}, styles.title, titleStyle);
	      var extendedSubtitleStyle = (0, _simpleAssign2.default)({}, styles.subtitle, subtitleStyle);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles(rootStyle) }),
	        _react2.default.createElement(
	          'span',
	          { style: prepareStyles(extendedTitleStyle) },
	          title
	        ),
	        _react2.default.createElement(
	          'span',
	          { style: prepareStyles(extendedSubtitleStyle) },
	          subtitle
	        ),
	        children
	      );
	    }
	  }]);
	  return CardTitle;
	}(_react.Component);

	CardTitle.muiName = 'CardTitle';
	CardTitle.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardTitle.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, a click on this card component expands the card.
	   */
	  actAsExpander: _propTypes2.default.bool,
	  /**
	   * Can be used to render elements inside the Card Title.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Can be used to pass a closeIcon if you don't like the default expandable close Icon.
	   */
	  closeIcon: _propTypes2.default.node,
	  /**
	   * If true, this card component is expandable.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * If true, this card component will include a button to expand the card.
	   */
	  showExpandableButton: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Can be used to render a subtitle in the Card Title.
	   */
	  subtitle: _propTypes2.default.node,
	  /**
	   * Override the subtitle color.
	   */
	  subtitleColor: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the subtitle.
	   */
	  subtitleStyle: _propTypes2.default.object,
	  /**
	   * Can be used to render a title in the Card Title.
	   */
	  title: _propTypes2.default.node,
	  /**
	   * Override the title color.
	   */
	  titleColor: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the title.
	   */
	  titleStyle: _propTypes2.default.object
	} : {};
	exports.default = CardTitle;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var cardMedia = context.muiTheme.cardMedia;


	  return {
	    root: {
	      position: 'relative'
	    },
	    overlayContainer: {
	      position: 'absolute',
	      top: 0,
	      bottom: 0,
	      right: 0,
	      left: 0
	    },
	    overlay: {
	      height: '100%',
	      position: 'relative'
	    },
	    overlayContent: {
	      position: 'absolute',
	      bottom: 0,
	      right: 0,
	      left: 0,
	      paddingTop: 8,
	      background: cardMedia.overlayContentBackground
	    },
	    media: {},
	    mediaChild: {
	      verticalAlign: 'top',
	      maxWidth: '100%',
	      minWidth: '100%',
	      width: '100%'
	    }
	  };
	}

	var CardMedia = function (_Component) {
	  (0, _inherits3.default)(CardMedia, _Component);

	  function CardMedia() {
	    (0, _classCallCheck3.default)(this, CardMedia);
	    return (0, _possibleConstructorReturn3.default)(this, (CardMedia.__proto__ || (0, _getPrototypeOf2.default)(CardMedia)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardMedia, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          actAsExpander = _props.actAsExpander,
	          children = _props.children,
	          expandable = _props.expandable,
	          mediaStyle = _props.mediaStyle,
	          overlay = _props.overlay,
	          overlayContainerStyle = _props.overlayContainerStyle,
	          overlayContentStyle = _props.overlayContentStyle,
	          overlayStyle = _props.overlayStyle,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'children', 'expandable', 'mediaStyle', 'overlay', 'overlayContainerStyle', 'overlayContentStyle', 'overlayStyle', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var rootStyle = (0, _simpleAssign2.default)(styles.root, style);
	      var extendedMediaStyle = (0, _simpleAssign2.default)(styles.media, mediaStyle);
	      var extendedOverlayContainerStyle = (0, _simpleAssign2.default)(styles.overlayContainer, overlayContainerStyle);
	      var extendedOverlayContentStyle = (0, _simpleAssign2.default)(styles.overlayContent, overlayContentStyle);
	      var extendedOverlayStyle = (0, _simpleAssign2.default)(styles.overlay, overlayStyle);
	      var titleColor = this.context.muiTheme.cardMedia.titleColor;
	      var subtitleColor = this.context.muiTheme.cardMedia.subtitleColor;
	      var color = this.context.muiTheme.cardMedia.color;

	      var styledChildren = _react2.default.Children.map(children, function (child) {
	        if (!child) {
	          return child;
	        }

	        return _react2.default.cloneElement(child, {
	          style: prepareStyles((0, _simpleAssign2.default)({}, styles.mediaChild, child.props.style))
	        });
	      });

	      var overlayChildren = _react2.default.Children.map(overlay, function (child) {
	        var childMuiName = child && child.type ? child.type.muiName : null;

	        if (childMuiName === 'CardHeader' || childMuiName === 'CardTitle') {
	          return _react2.default.cloneElement(child, {
	            titleColor: titleColor,
	            subtitleColor: subtitleColor
	          });
	        } else if (childMuiName === 'CardText') {
	          return _react2.default.cloneElement(child, {
	            color: color
	          });
	        } else {
	          return child;
	        }
	      });

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles(rootStyle) }),
	        _react2.default.createElement(
	          'div',
	          { style: prepareStyles(extendedMediaStyle) },
	          styledChildren
	        ),
	        overlay ? _react2.default.createElement(
	          'div',
	          { style: prepareStyles(extendedOverlayContainerStyle) },
	          _react2.default.createElement(
	            'div',
	            { style: prepareStyles(extendedOverlayStyle) },
	            _react2.default.createElement(
	              'div',
	              { style: prepareStyles(extendedOverlayContentStyle) },
	              overlayChildren
	            )
	          )
	        ) : ''
	      );
	    }
	  }]);
	  return CardMedia;
	}(_react.Component);

	CardMedia.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardMedia.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, a click on this card component expands the card.
	   */
	  actAsExpander: _propTypes2.default.bool,
	  /**
	   * Can be used to render elements inside the Card Media.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * If true, this card component is expandable.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the Card Media.
	   */
	  mediaStyle: _propTypes2.default.object,
	  /**
	   * Can be used to render overlay element in Card Media.
	   */
	  overlay: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the overlay container.
	   */
	  overlayContainerStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the overlay content.
	   */
	  overlayContentStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the overlay element.
	   */
	  overlayStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = CardMedia;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var cardText = context.muiTheme.cardText;


	  return {
	    root: {
	      padding: 16,
	      fontSize: 14,
	      color: props.color || cardText.textColor
	    }
	  };
	}

	var CardText = function (_Component) {
	  (0, _inherits3.default)(CardText, _Component);

	  function CardText() {
	    (0, _classCallCheck3.default)(this, CardText);
	    return (0, _possibleConstructorReturn3.default)(this, (CardText.__proto__ || (0, _getPrototypeOf2.default)(CardText)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardText, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          actAsExpander = _props.actAsExpander,
	          children = _props.children,
	          color = _props.color,
	          expandable = _props.expandable,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'children', 'color', 'expandable', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var rootStyle = (0, _simpleAssign2.default)(styles.root, style);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles(rootStyle) }),
	        children
	      );
	    }
	  }]);
	  return CardText;
	}(_react.Component);

	CardText.muiName = 'CardText';
	CardText.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardText.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, a click on this card component expands the card.
	   */
	  actAsExpander: _propTypes2.default.bool,
	  /**
	   * Can be used to render elements inside the Card Text.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Override the CardText color.
	   */
	  color: _propTypes2.default.string,
	  /**
	   * If true, this card component is expandable.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = CardText;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles() {
	  return {
	    root: {
	      padding: 8,
	      position: 'relative'
	    },
	    action: {
	      marginRight: 8
	    }
	  };
	}

	var CardActions = function (_Component) {
	  (0, _inherits3.default)(CardActions, _Component);

	  function CardActions() {
	    (0, _classCallCheck3.default)(this, CardActions);
	    return (0, _possibleConstructorReturn3.default)(this, (CardActions.__proto__ || (0, _getPrototypeOf2.default)(CardActions)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(CardActions, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          actAsExpander = _props.actAsExpander,
	          children = _props.children,
	          expandable = _props.expandable,
	          showExpandableButton = _props.showExpandableButton,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['actAsExpander', 'children', 'expandable', 'showExpandableButton', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var styledChildren = _react2.default.Children.map(children, function (child) {
	        if (_react2.default.isValidElement(child)) {
	          return _react2.default.cloneElement(child, {
	            style: (0, _simpleAssign2.default)({}, styles.action, child.props.style)
	          });
	        }
	      });

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	        styledChildren
	      );
	    }
	  }]);
	  return CardActions;
	}(_react.Component);

	CardActions.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	CardActions.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, a click on this card component expands the card.
	   */
	  actAsExpander: _propTypes2.default.bool,
	  /**
	   * Can be used to render elements inside the Card Action.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * If true, this card component is expandable.
	   */
	  expandable: _propTypes2.default.bool,
	  /**
	   * If true, this card component will include a button to expand the card.
	   */
	  showExpandableButton: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = CardActions;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Snackbar = __webpack_require__(545);

	var _Snackbar2 = _interopRequireDefault(_Snackbar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Snackbar2.default;

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _ClickAwayListener = __webpack_require__(546);

	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

	var _SnackbarBody = __webpack_require__(547);

	var _SnackbarBody2 = _interopRequireDefault(_SnackbarBody);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var _context$muiTheme = context.muiTheme,
	      desktopSubheaderHeight = _context$muiTheme.baseTheme.spacing.desktopSubheaderHeight,
	      zIndex = _context$muiTheme.zIndex;
	  var open = state.open;


	  var styles = {
	    root: {
	      position: 'fixed',
	      left: '50%',
	      display: 'flex',
	      bottom: 0,
	      zIndex: zIndex.snackbar,
	      visibility: open ? 'visible' : 'hidden',
	      transform: open ? 'translate(-50%, 0)' : 'translate(-50%, ' + desktopSubheaderHeight + 'px)',
	      transition: _transitions2.default.easeOut('400ms', 'transform') + ', ' + _transitions2.default.easeOut('400ms', 'visibility')
	    }
	  };

	  return styles;
	}

	var Snackbar = function (_Component) {
	  (0, _inherits3.default)(Snackbar, _Component);

	  function Snackbar() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Snackbar);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Snackbar.__proto__ || (0, _getPrototypeOf2.default)(Snackbar)).call.apply(_ref, [this].concat(args))), _this), _this.componentClickAway = function () {
	      if (_this.timerTransitionId) {
	        // If transitioning, don't close the snackbar.
	        return;
	      }

	      if (_this.props.open !== null && _this.props.onRequestClose) {
	        _this.props.onRequestClose('clickaway');
	      } else {
	        _this.setState({ open: false });
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Snackbar, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        open: this.props.open,
	        message: this.props.message,
	        action: this.props.action
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.state.open) {
	        this.setAutoHideTimer();
	        this.setTransitionTimer();
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;

	      if (this.props.open && nextProps.open && (nextProps.message !== this.props.message || nextProps.action !== this.props.action)) {
	        this.setState({
	          open: false
	        });

	        clearTimeout(this.timerOneAtTheTimeId);
	        this.timerOneAtTheTimeId = setTimeout(function () {
	          _this2.setState({
	            message: nextProps.message,
	            action: nextProps.action,
	            open: true
	          });
	        }, 400);
	      } else {
	        var open = nextProps.open;

	        this.setState({
	          open: open !== null ? open : this.state.open,
	          message: nextProps.message,
	          action: nextProps.action
	        });
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (prevState.open !== this.state.open) {
	        if (this.state.open) {
	          this.setAutoHideTimer();
	          this.setTransitionTimer();
	        } else {
	          clearTimeout(this.timerAutoHideId);
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.timerAutoHideId);
	      clearTimeout(this.timerTransitionId);
	      clearTimeout(this.timerOneAtTheTimeId);
	    }
	  }, {
	    key: 'setAutoHideTimer',


	    // Timer that controls delay before snackbar auto hides
	    value: function setAutoHideTimer() {
	      var _this3 = this;

	      var autoHideDuration = this.props.autoHideDuration;

	      if (autoHideDuration > 0) {
	        clearTimeout(this.timerAutoHideId);
	        this.timerAutoHideId = setTimeout(function () {
	          if (_this3.props.open !== null && _this3.props.onRequestClose) {
	            _this3.props.onRequestClose('timeout');
	          } else {
	            _this3.setState({ open: false });
	          }
	        }, autoHideDuration);
	      }
	    }

	    // Timer that controls delay before click-away events are captured (based on when animation completes)

	  }, {
	    key: 'setTransitionTimer',
	    value: function setTransitionTimer() {
	      var _this4 = this;

	      this.timerTransitionId = setTimeout(function () {
	        _this4.timerTransitionId = undefined;
	      }, 400);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          autoHideDuration = _props.autoHideDuration,
	          contentStyle = _props.contentStyle,
	          bodyStyle = _props.bodyStyle,
	          messageProp = _props.message,
	          onRequestClose = _props.onRequestClose,
	          onActionTouchTap = _props.onActionTouchTap,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoHideDuration', 'contentStyle', 'bodyStyle', 'message', 'onRequestClose', 'onActionTouchTap', 'style']);
	      var _state = this.state,
	          action = _state.action,
	          message = _state.message,
	          open = _state.open;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);

	      return _react2.default.createElement(
	        _ClickAwayListener2.default,
	        { onClickAway: open ? this.componentClickAway : null },
	        _react2.default.createElement(
	          'div',
	          (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	          _react2.default.createElement(_SnackbarBody2.default, {
	            action: action,
	            contentStyle: contentStyle,
	            message: message,
	            open: open,
	            onActionTouchTap: onActionTouchTap,
	            style: bodyStyle
	          })
	        )
	      );
	    }
	  }]);
	  return Snackbar;
	}(_react.Component);

	Snackbar.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Snackbar.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * The label for the action on the snackbar.
	   */
	  action: _propTypes2.default.node,
	  /**
	   * The number of milliseconds to wait before automatically dismissing.
	   * If no value is specified the snackbar will dismiss normally.
	   * If a value is provided the snackbar can still be dismissed normally.
	   * If a snackbar is dismissed before the timer expires, the timer will be cleared.
	   */
	  autoHideDuration: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of the body element.
	   */
	  bodyStyle: _propTypes2.default.object,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the content element.
	   */
	  contentStyle: _propTypes2.default.object,
	  /**
	   * The message to be displayed.
	   *
	   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
	   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
	   * showing again)
	   */
	  message: _propTypes2.default.node.isRequired,
	  /**
	   * Fired when the action button is touchtapped.
	   *
	   * @param {object} event Action button event.
	   */
	  onActionTouchTap: _propTypes2.default.func,
	  /**
	   * Fired when the `Snackbar` is requested to be closed by a click outside the `Snackbar`, or after the
	   * `autoHideDuration` timer expires.
	   *
	   * Typically `onRequestClose` is used to set state in the parent component, which is used to control the `Snackbar`
	   * `open` prop.
	   *
	   * The `reason` parameter can optionally be used to control the response to `onRequestClose`,
	   * for example ignoring `clickaway`.
	   *
	   * @param {string} reason Can be:`"timeout"` (`autoHideDuration` expired) or: `"clickaway"`
	   */
	  onRequestClose: _propTypes2.default.func,
	  /**
	   * Controls whether the `Snackbar` is opened or not.
	   */
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = Snackbar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(241);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _events = __webpack_require__(520);

	var _events2 = _interopRequireDefault(_events);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isDescendant = function isDescendant(el, target) {
	  if (target !== null) {
	    return el === target || isDescendant(el, target.parentNode);
	  }
	  return false;
	};

	var clickAwayEvents = ['mouseup', 'touchend'];
	var bind = function bind(callback) {
	  return clickAwayEvents.forEach(function (event) {
	    return _events2.default.on(document, event, callback);
	  });
	};
	var unbind = function unbind(callback) {
	  return clickAwayEvents.forEach(function (event) {
	    return _events2.default.off(document, event, callback);
	  });
	};

	var ClickAwayListener = function (_Component) {
	  (0, _inherits3.default)(ClickAwayListener, _Component);

	  function ClickAwayListener() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, ClickAwayListener);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ClickAwayListener.__proto__ || (0, _getPrototypeOf2.default)(ClickAwayListener)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickAway = function (event) {
	      if (event.defaultPrevented) {
	        return;
	      }

	      // IE11 support, which trigger the handleClickAway even after the unbind
	      if (_this.isCurrentlyMounted) {
	        var el = _reactDom2.default.findDOMNode(_this);

	        if (document.documentElement.contains(event.target) && !isDescendant(el, event.target)) {
	          _this.props.onClickAway(event);
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(ClickAwayListener, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.isCurrentlyMounted = true;
	      if (this.props.onClickAway) {
	        bind(this.handleClickAway);
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (prevProps.onClickAway !== this.props.onClickAway) {
	        unbind(this.handleClickAway);
	        if (this.props.onClickAway) {
	          bind(this.handleClickAway);
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.isCurrentlyMounted = false;
	      unbind(this.handleClickAway);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return this.props.children;
	    }
	  }]);
	  return ClickAwayListener;
	}(_react.Component);

	ClickAwayListener.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.element,
	  onClickAway: _propTypes2.default.func
	} : {};
	exports.default = ClickAwayListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.SnackbarBody = undefined;

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _withWidth = __webpack_require__(548);

	var _withWidth2 = _interopRequireDefault(_withWidth);

	var _FlatButton = __webpack_require__(549);

	var _FlatButton2 = _interopRequireDefault(_FlatButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var open = props.open,
	      width = props.width;
	  var _context$muiTheme = context.muiTheme,
	      _context$muiTheme$bas = _context$muiTheme.baseTheme,
	      _context$muiTheme$bas2 = _context$muiTheme$bas.spacing,
	      desktopGutter = _context$muiTheme$bas2.desktopGutter,
	      desktopSubheaderHeight = _context$muiTheme$bas2.desktopSubheaderHeight,
	      fontFamily = _context$muiTheme$bas.fontFamily,
	      _context$muiTheme$sna = _context$muiTheme.snackbar,
	      backgroundColor = _context$muiTheme$sna.backgroundColor,
	      textColor = _context$muiTheme$sna.textColor,
	      actionColor = _context$muiTheme$sna.actionColor,
	      borderRadius = _context$muiTheme.borderRadius;


	  var isSmall = width === _withWidth.SMALL;

	  var styles = {
	    root: {
	      fontFamily: fontFamily,
	      backgroundColor: backgroundColor,
	      padding: '0 ' + desktopGutter + 'px',
	      height: desktopSubheaderHeight,
	      lineHeight: desktopSubheaderHeight + 'px',
	      borderRadius: isSmall ? 0 : borderRadius,
	      maxWidth: isSmall ? 'inherit' : 568,
	      minWidth: isSmall ? 'inherit' : 288,
	      width: isSmall ? 'calc(100vw - ' + desktopGutter * 2 + 'px)' : 'auto',
	      flexGrow: isSmall ? 1 : 0
	    },
	    content: {
	      fontSize: 14,
	      color: textColor,
	      opacity: open ? 1 : 0,
	      transition: open ? _transitions2.default.easeOut('500ms', 'opacity', '100ms') : _transitions2.default.easeOut('400ms', 'opacity')
	    },
	    action: {
	      color: actionColor,
	      float: 'right',
	      marginTop: 6,
	      marginRight: -16,
	      marginLeft: desktopGutter,
	      backgroundColor: 'transparent'
	    }
	  };

	  return styles;
	}

	var SnackbarBody = function SnackbarBody(props, context) {
	  var action = props.action,
	      contentStyle = props.contentStyle,
	      message = props.message,
	      open = props.open,
	      onActionTouchTap = props.onActionTouchTap,
	      style = props.style,
	      other = (0, _objectWithoutProperties3.default)(props, ['action', 'contentStyle', 'message', 'open', 'onActionTouchTap', 'style']);
	  var prepareStyles = context.muiTheme.prepareStyles;

	  var styles = getStyles(props, context);

	  var actionButton = action && _react2.default.createElement(_FlatButton2.default, {
	    style: styles.action,
	    label: action,
	    onClick: onActionTouchTap
	  });

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	    _react2.default.createElement(
	      'div',
	      { style: prepareStyles((0, _simpleAssign2.default)(styles.content, contentStyle)) },
	      _react2.default.createElement(
	        'span',
	        null,
	        message
	      ),
	      actionButton
	    )
	  );
	};

	exports.SnackbarBody = SnackbarBody;
	SnackbarBody.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * The label for the action on the snackbar.
	   */
	  action: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the content element.
	   */
	  contentStyle: _propTypes2.default.object,
	  /**
	   * The message to be displayed.
	   *
	   * (Note: If the message is an element or array, and the `Snackbar` may re-render while it is still open,
	   * ensure that the same object remains as the `message` property if you want to avoid the `Snackbar` hiding and
	   * showing again)
	   */
	  message: _propTypes2.default.node.isRequired,
	  /**
	   * Fired when the action button is touchtapped.
	   *
	   * @param {object} event Action button event.
	   */
	  onActionTouchTap: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Controls whether the `Snackbar` is opened or not.
	   */
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * @ignore
	   * Width of the screen.
	   */
	  width: _propTypes2.default.number.isRequired
	} : {};

	SnackbarBody.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};

	exports.default = (0, _withWidth2.default)()(SnackbarBody);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.LARGE = exports.MEDIUM = exports.SMALL = undefined;

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	exports.default = withWidth;

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _reactEventListener = __webpack_require__(495);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var SMALL = exports.SMALL = 1;
	var MEDIUM = exports.MEDIUM = 2;
	var LARGE = exports.LARGE = 3;

	function withWidth() {
	  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var _options$largeWidth = options.largeWidth,
	      largeWidth = _options$largeWidth === undefined ? 992 : _options$largeWidth,
	      _options$mediumWidth = options.mediumWidth,
	      mediumWidth = _options$mediumWidth === undefined ? 768 : _options$mediumWidth,
	      _options$resizeInterv = options.resizeInterval,
	      resizeInterval = _options$resizeInterv === undefined ? 166 : _options$resizeInterv;


	  return function (MyComponent) {
	    return function (_Component) {
	      (0, _inherits3.default)(WithWidth, _Component);

	      function WithWidth() {
	        var _ref;

	        var _temp, _this, _ret;

	        (0, _classCallCheck3.default)(this, WithWidth);

	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	          args[_key] = arguments[_key];
	        }

	        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = WithWidth.__proto__ || (0, _getPrototypeOf2.default)(WithWidth)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	          width: null
	        }, _this.handleResize = function () {
	          clearTimeout(_this.deferTimer);
	          _this.deferTimer = setTimeout(function () {
	            _this.updateWidth();
	          }, resizeInterval);
	        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	      }

	      (0, _createClass3.default)(WithWidth, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	          this.updateWidth();
	        }
	      }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	          clearTimeout(this.deferTimer);
	        }
	      }, {
	        key: 'updateWidth',
	        value: function updateWidth() {
	          var innerWidth = window.innerWidth;
	          var width = void 0;

	          if (innerWidth >= largeWidth) {
	            width = LARGE;
	          } else if (innerWidth >= mediumWidth) {
	            width = MEDIUM;
	          } else {
	            // innerWidth < 768
	            width = SMALL;
	          }

	          if (width !== this.state.width) {
	            this.setState({
	              width: width
	            });
	          }
	        }
	      }, {
	        key: 'render',
	        value: function render() {
	          var width = this.state.width;

	          /**
	           * When rendering the component on the server,
	           * we have no idea about the screen width.
	           * In order to prevent blinks and help the reconciliation
	           * we are not rendering the component.
	           *
	           * A better alternative would be to send client hints.
	           * But the browser support of this API is low:
	           * http://caniuse.com/#search=client%20hint
	           */
	          if (width === null) {
	            return null;
	          }

	          return _react2.default.createElement(
	            _reactEventListener2.default,
	            { target: 'window', onResize: this.handleResize },
	            _react2.default.createElement(MyComponent, (0, _extends3.default)({
	              width: width
	            }, this.props))
	          );
	        }
	      }]);
	      return WithWidth;
	    }(_react.Component);
	  };
	}

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _FlatButton = __webpack_require__(550);

	var _FlatButton2 = _interopRequireDefault(_FlatButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _FlatButton2.default;

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _colorManipulator = __webpack_require__(291);

	var _EnhancedButton = __webpack_require__(519);

	var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

	var _FlatButtonLabel = __webpack_require__(551);

	var _FlatButtonLabel2 = _interopRequireDefault(_FlatButtonLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function validateLabel(props, propName, componentName) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
	      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
	    }
	  }
	}

	var FlatButton = function (_Component) {
	  (0, _inherits3.default)(FlatButton, _Component);

	  function FlatButton() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, FlatButton);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FlatButton.__proto__ || (0, _getPrototypeOf2.default)(FlatButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false,
	      isKeyboardFocused: false,
	      touch: false
	    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
	      _this.setState({ isKeyboardFocused: isKeyboardFocused });
	      _this.props.onKeyboardFocus(event, isKeyboardFocused);
	    }, _this.handleMouseEnter = function (event) {
	      // Cancel hover styles for touch devices
	      if (!_this.state.touch) _this.setState({ hovered: true });
	      _this.props.onMouseEnter(event);
	    }, _this.handleMouseLeave = function (event) {
	      _this.setState({ hovered: false });
	      _this.props.onMouseLeave(event);
	    }, _this.handleTouchStart = function (event) {
	      _this.setState({ touch: true });
	      _this.props.onTouchStart(event);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(FlatButton, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.disabled) {
	        this.setState({
	          hovered: false
	        });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          backgroundColor = _props.backgroundColor,
	          children = _props.children,
	          disabled = _props.disabled,
	          fullWidth = _props.fullWidth,
	          hoverColor = _props.hoverColor,
	          icon = _props.icon,
	          label = _props.label,
	          labelStyle = _props.labelStyle,
	          labelPosition = _props.labelPosition,
	          primary = _props.primary,
	          rippleColor = _props.rippleColor,
	          secondary = _props.secondary,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['backgroundColor', 'children', 'disabled', 'fullWidth', 'hoverColor', 'icon', 'label', 'labelStyle', 'labelPosition', 'primary', 'rippleColor', 'secondary', 'style']);
	      var _context$muiTheme = this.context.muiTheme,
	          borderRadius = _context$muiTheme.borderRadius,
	          _context$muiTheme$but = _context$muiTheme.button,
	          buttonHeight = _context$muiTheme$but.height,
	          buttonMinWidth = _context$muiTheme$but.minWidth,
	          buttonTextTransform = _context$muiTheme$but.textTransform,
	          _context$muiTheme$fla = _context$muiTheme.flatButton,
	          buttonFilterColor = _context$muiTheme$fla.buttonFilterColor,
	          buttonColor = _context$muiTheme$fla.color,
	          disabledTextColor = _context$muiTheme$fla.disabledTextColor,
	          fontSize = _context$muiTheme$fla.fontSize,
	          fontWeight = _context$muiTheme$fla.fontWeight,
	          primaryTextColor = _context$muiTheme$fla.primaryTextColor,
	          secondaryTextColor = _context$muiTheme$fla.secondaryTextColor,
	          textColor = _context$muiTheme$fla.textColor,
	          _context$muiTheme$fla2 = _context$muiTheme$fla.textTransform,
	          textTransform = _context$muiTheme$fla2 === undefined ? buttonTextTransform || 'uppercase' : _context$muiTheme$fla2;

	      var defaultTextColor = disabled ? disabledTextColor : primary ? primaryTextColor : secondary ? secondaryTextColor : textColor;

	      var defaultHoverColor = (0, _colorManipulator.fade)(buttonFilterColor, 0.2);
	      var defaultRippleColor = buttonFilterColor;
	      var buttonHoverColor = hoverColor || defaultHoverColor;
	      var buttonRippleColor = rippleColor || defaultRippleColor;
	      var buttonBackgroundColor = backgroundColor || buttonColor;
	      var hovered = (this.state.hovered || this.state.isKeyboardFocused) && !disabled;

	      var mergedRootStyles = (0, _simpleAssign2.default)({}, {
	        height: buttonHeight,
	        lineHeight: buttonHeight + 'px',
	        minWidth: fullWidth ? '100%' : buttonMinWidth,
	        color: defaultTextColor,
	        transition: _transitions2.default.easeOut(),
	        borderRadius: borderRadius,
	        userSelect: 'none',
	        overflow: 'hidden',
	        backgroundColor: hovered ? buttonHoverColor : buttonBackgroundColor,
	        padding: 0,
	        margin: 0,
	        textAlign: 'center'
	      }, style);

	      var iconCloned = void 0;
	      var labelStyleIcon = {};

	      if (icon) {
	        var iconStyles = (0, _simpleAssign2.default)({
	          verticalAlign: 'middle',
	          marginLeft: label && labelPosition !== 'before' ? 12 : 0,
	          marginRight: label && labelPosition === 'before' ? 12 : 0
	        }, icon.props.style);
	        iconCloned = _react2.default.cloneElement(icon, {
	          color: icon.props.color || mergedRootStyles.color,
	          style: iconStyles,
	          key: 'iconCloned'
	        });

	        if (labelPosition === 'before') {
	          labelStyleIcon.paddingRight = 8;
	        } else {
	          labelStyleIcon.paddingLeft = 8;
	        }
	      }

	      var mergedLabelStyles = (0, _simpleAssign2.default)({
	        letterSpacing: 0,
	        textTransform: textTransform,
	        fontWeight: fontWeight,
	        fontSize: fontSize
	      }, labelStyleIcon, labelStyle);

	      var labelElement = label ? _react2.default.createElement(_FlatButtonLabel2.default, { key: 'labelElement', label: label, style: mergedLabelStyles }) : undefined;

	      // Place label before or after children.
	      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

	      return _react2.default.createElement(
	        _EnhancedButton2.default,
	        (0, _extends3.default)({}, other, {
	          disabled: disabled,
	          focusRippleColor: buttonRippleColor,
	          focusRippleOpacity: 0.3,
	          onKeyboardFocus: this.handleKeyboardFocus,
	          onMouseLeave: this.handleMouseLeave,
	          onMouseEnter: this.handleMouseEnter,
	          onTouchStart: this.handleTouchStart,
	          style: mergedRootStyles,
	          touchRippleColor: buttonRippleColor,
	          touchRippleOpacity: 0.3
	        }),
	        enhancedButtonChildren
	      );
	    }
	  }]);
	  return FlatButton;
	}(_react.Component);

	FlatButton.muiName = 'FlatButton';
	FlatButton.defaultProps = {
	  disabled: false,
	  fullWidth: false,
	  labelStyle: {},
	  labelPosition: 'after',
	  onKeyboardFocus: function onKeyboardFocus() {},
	  onMouseEnter: function onMouseEnter() {},
	  onMouseLeave: function onMouseLeave() {},
	  onTouchStart: function onTouchStart() {},
	  primary: false,
	  secondary: false
	};
	FlatButton.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	FlatButton.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Color of button when mouse is not hovering over it.
	   */
	  backgroundColor: _propTypes2.default.string,
	  /**
	   * This is what will be displayed inside the button.
	   * If a label is specified, the text within the label prop will
	   * be displayed. Otherwise, the component will expect children
	   * which will then be displayed. (In our example,
	   * we are nesting an `<input type="file" />` and a `span`
	   * that acts as our label to be displayed.) This only
	   * applies to flat and raised buttons.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The CSS class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The element to use as the container for the FlatButton. Either a string to
	   * use a DOM element or a ReactElement. This is useful for wrapping the
	   * FlatButton in a custom Link component. If a ReactElement is given, ensure
	   * that it passes all of its given props through to the underlying DOM
	   * element and renders its children prop for proper integration.
	   */
	  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
	  /**
	   * If true, the element's ripple effect will be disabled.
	   */
	  disableTouchRipple: _propTypes2.default.bool,
	  /**
	   * Disables the button if set to true.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * If true, the button will take up the full width of its container.
	   */
	  fullWidth: _propTypes2.default.bool,
	  /**
	   * Color of button when mouse hovers over.
	   */
	  hoverColor: _propTypes2.default.string,
	  /**
	   * The URL to link to when the button is clicked.
	   */
	  href: _propTypes2.default.string,
	  /**
	   * Use this property to display an icon.
	   */
	  icon: _propTypes2.default.node,
	  /**
	   * Label for the button.
	   */
	  label: validateLabel,
	  /**
	   * Place label before or after the passed children.
	   */
	  labelPosition: _propTypes2.default.oneOf(['before', 'after']),
	  /**
	   * Override the inline-styles of the button's label element.
	   */
	  labelStyle: _propTypes2.default.object,
	  /**
	   * Callback function fired when the button is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the button.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * Callback function fired when the element is focused or blurred by the keyboard.
	   *
	   * @param {object} event `focus` or `blur` event targeting the element.
	   * @param {boolean} isKeyboardFocused Indicates whether the element is focused.
	   */
	  onKeyboardFocus: _propTypes2.default.func,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /** @ignore */
	  onTouchStart: _propTypes2.default.func,
	  /**
	   * If true, colors button according to
	   * primaryTextColor from the Theme.
	   */
	  primary: _propTypes2.default.bool,
	  /**
	   * Color for the ripple after button is clicked.
	   */
	  rippleColor: _propTypes2.default.string,
	  /**
	   * If true, colors button according to secondaryTextColor from the theme.
	   * The primary prop has precendent if set to true.
	   */
	  secondary: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = FlatButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var baseTheme = context.muiTheme.baseTheme;


	  return {
	    root: {
	      position: 'relative',
	      paddingLeft: baseTheme.spacing.desktopGutterLess,
	      paddingRight: baseTheme.spacing.desktopGutterLess,
	      verticalAlign: 'middle'
	    }
	  };
	}

	var FlatButtonLabel = function (_Component) {
	  (0, _inherits3.default)(FlatButtonLabel, _Component);

	  function FlatButtonLabel() {
	    (0, _classCallCheck3.default)(this, FlatButtonLabel);
	    return (0, _possibleConstructorReturn3.default)(this, (FlatButtonLabel.__proto__ || (0, _getPrototypeOf2.default)(FlatButtonLabel)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(FlatButtonLabel, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          label = _props.label,
	          style = _props.style;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        'span',
	        { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) },
	        label
	      );
	    }
	  }]);
	  return FlatButtonLabel;
	}(_react.Component);

	FlatButtonLabel.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	FlatButtonLabel.propTypes = process.env.NODE_ENV !== "production" ? {
	  label: _propTypes2.default.node,
	  style: _propTypes2.default.object
	} : {};
	exports.default = FlatButtonLabel;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Componente de barra Nav sin login*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiSvgIconsActionHelp = __webpack_require__(553);

	var _materialUiSvgIconsActionHelp2 = _interopRequireDefault(_materialUiSvgIconsActionHelp);

	var _materialUiSvgIconsActionHome = __webpack_require__(554);

	var _materialUiSvgIconsActionHome2 = _interopRequireDefault(_materialUiSvgIconsActionHome);

	var _materialUiAppBar = __webpack_require__(555);

	var _materialUiAppBar2 = _interopRequireDefault(_materialUiAppBar);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var React = __webpack_require__(241);

	var itemcolor = {
	  color: '#FFFFFF'
	};
	var cursor = {
	  cursor: 'pointer'
	};

	var Nav = (function (_React$Component) {
	  _inherits(Nav, _React$Component);

	  function Nav(props) {
	    _classCallCheck(this, Nav);

	    _get(Object.getPrototypeOf(Nav.prototype), 'constructor', this).call(this, props);

	    this.redirect = this.redirect.bind(this);
	  }

	  _createClass(Nav, [{
	    key: 'redirect',
	    value: function redirect() {

	      this.props.history.push({ pathname: '/' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      return React.createElement(
	        'section',
	        null,
	        React.createElement(
	          'div',
	          null,
	          React.createElement(
	            _materialUiStylesMuiThemeProvider2['default'],
	            null,
	            React.createElement(_materialUiAppBar2['default'], {
	              title: React.createElement(
	                'span',
	                { style: cursor },
	                'PMPROJECTS'
	              ),
	              showMenuIconButton: false,
	              onTitleTouchTap: function () {
	                return _this.redirect();
	              },
	              iconElementRight: React.createElement(
	                'div',
	                null,
	                React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Iniciar Sesión', href: '/login' }),
	                ' ',
	                React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Acerca de', href: '/contacto' })
	              )
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return Nav;
	})(React.Component);

	exports['default'] = Nav;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "nav.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ActionHelp = function ActionHelp(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 17h-2v-2h2v2zm2.07-7.75l-.9.92C13.45 12.9 13 13.5 13 15h-2v-.5c0-1.1.45-2.1 1.17-2.83l1.24-1.26c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 .88-.36 1.68-.93 2.25z' })
	  );
	};
	ActionHelp = (0, _pure2.default)(ActionHelp);
	ActionHelp.displayName = 'ActionHelp';
	ActionHelp.muiName = 'SvgIcon';

	exports.default = ActionHelp;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ActionHome = function ActionHome(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z' })
	  );
	};
	ActionHome = (0, _pure2.default)(ActionHome);
	ActionHome.displayName = 'ActionHome';
	ActionHome.muiName = 'SvgIcon';

	exports.default = ActionHome;

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _AppBar = __webpack_require__(556);

	var _AppBar2 = _interopRequireDefault(_AppBar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _AppBar2.default;

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _keys = __webpack_require__(331);

	var _keys2 = _interopRequireDefault(_keys);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	exports.getStyles = getStyles;

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _IconButton = __webpack_require__(517);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _menu = __webpack_require__(557);

	var _menu2 = _interopRequireDefault(_menu);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var _context$muiTheme = context.muiTheme,
	      appBar = _context$muiTheme.appBar,
	      iconButtonSize = _context$muiTheme.button.iconButtonSize,
	      zIndex = _context$muiTheme.zIndex;


	  var flatButtonSize = 36;

	  var styles = {
	    root: {
	      position: 'relative',
	      zIndex: zIndex.appBar,
	      width: '100%',
	      display: 'flex',
	      backgroundColor: appBar.color,
	      paddingLeft: appBar.padding,
	      paddingRight: appBar.padding
	    },
	    title: {
	      whiteSpace: 'nowrap',
	      overflow: 'hidden',
	      textOverflow: 'ellipsis',
	      margin: 0,
	      paddingTop: 0,
	      letterSpacing: 0,
	      fontSize: 24,
	      fontWeight: appBar.titleFontWeight,
	      color: appBar.textColor,
	      height: appBar.height,
	      lineHeight: appBar.height + 'px'
	    },
	    mainElement: {
	      boxFlex: 1,
	      flex: '1'
	    },
	    iconButtonStyle: {
	      marginTop: (appBar.height - iconButtonSize) / 2,
	      marginRight: 8,
	      marginLeft: -16
	    },
	    iconButtonIconStyle: {
	      fill: appBar.textColor,
	      color: appBar.textColor
	    },
	    flatButton: {
	      color: appBar.textColor,
	      marginTop: (iconButtonSize - flatButtonSize) / 2 + 1
	    }
	  };

	  return styles;
	}

	var AppBar = function (_Component) {
	  (0, _inherits3.default)(AppBar, _Component);

	  function AppBar() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, AppBar);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AppBar.__proto__ || (0, _getPrototypeOf2.default)(AppBar)).call.apply(_ref, [this].concat(args))), _this), _this.handleTouchTapLeftIconButton = function (event) {
	      if (_this.props.onLeftIconButtonTouchTap) {
	        _this.props.onLeftIconButtonTouchTap(event);
	      }
	    }, _this.handleTouchTapRightIconButton = function (event) {
	      if (_this.props.onRightIconButtonTouchTap) {
	        _this.props.onRightIconButtonTouchTap(event);
	      }
	    }, _this.handleTitleTouchTap = function (event) {
	      if (_this.props.onTitleTouchTap) {
	        _this.props.onTitleTouchTap(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(AppBar, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!this.props.iconElementLeft || !this.props.iconClassNameLeft, 'Material-UI: Properties iconElementLeft\n      and iconClassNameLeft cannot be simultaneously defined. Please use one or the other.') : void 0;

	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!this.props.iconElementRight || !this.props.iconClassNameRight, 'Material-UI: Properties iconElementRight\n      and iconClassNameRight cannot be simultaneously defined. Please use one or the other.') : void 0;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          title = _props.title,
	          titleStyle = _props.titleStyle,
	          iconStyleLeft = _props.iconStyleLeft,
	          iconStyleRight = _props.iconStyleRight,
	          onTitleTouchTap = _props.onTitleTouchTap,
	          showMenuIconButton = _props.showMenuIconButton,
	          iconElementLeft = _props.iconElementLeft,
	          iconElementRight = _props.iconElementRight,
	          iconClassNameLeft = _props.iconClassNameLeft,
	          iconClassNameRight = _props.iconClassNameRight,
	          onLeftIconButtonTouchTap = _props.onLeftIconButtonTouchTap,
	          onRightIconButtonTouchTap = _props.onRightIconButtonTouchTap,
	          className = _props.className,
	          style = _props.style,
	          zDepth = _props.zDepth,
	          children = _props.children,
	          other = (0, _objectWithoutProperties3.default)(_props, ['title', 'titleStyle', 'iconStyleLeft', 'iconStyleRight', 'onTitleTouchTap', 'showMenuIconButton', 'iconElementLeft', 'iconElementRight', 'iconClassNameLeft', 'iconClassNameRight', 'onLeftIconButtonTouchTap', 'onRightIconButtonTouchTap', 'className', 'style', 'zDepth', 'children']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var menuElementLeft = void 0;
	      var menuElementRight = void 0;

	      // If the title is a string, wrap in an h1 tag.
	      // If not, wrap in a div tag.
	      var titleComponent = typeof title === 'string' || title instanceof String ? 'h1' : 'div';

	      var titleElement = _react2.default.createElement(titleComponent, {
	        onClick: this.handleTitleTouchTap,
	        style: prepareStyles((0, _simpleAssign2.default)(styles.title, styles.mainElement, titleStyle))
	      }, title);

	      var iconLeftStyle = (0, _simpleAssign2.default)({}, styles.iconButtonStyle, iconStyleLeft);

	      if (showMenuIconButton) {
	        if (iconElementLeft) {
	          var iconElementLeftProps = {};

	          if (iconElementLeft.type.muiName === 'IconButton') {
	            var iconElemLeftChildren = iconElementLeft.props.children;
	            var iconButtonIconStyle = !(iconElemLeftChildren && iconElemLeftChildren.props && iconElemLeftChildren.props.color) ? styles.iconButtonIconStyle : null;

	            iconElementLeftProps.iconStyle = (0, _simpleAssign2.default)({}, iconButtonIconStyle, iconElementLeft.props.iconStyle);
	          }

	          if (!iconElementLeft.props.onClick && this.props.onLeftIconButtonTouchTap) {
	            iconElementLeftProps.onClick = this.handleTouchTapLeftIconButton;
	          }

	          menuElementLeft = _react2.default.createElement(
	            'div',
	            { style: prepareStyles(iconLeftStyle) },
	            (0, _keys2.default)(iconElementLeftProps).length > 0 ? (0, _react.cloneElement)(iconElementLeft, iconElementLeftProps) : iconElementLeft
	          );
	        } else {
	          menuElementLeft = _react2.default.createElement(
	            _IconButton2.default,
	            {
	              style: iconLeftStyle,
	              iconStyle: styles.iconButtonIconStyle,
	              iconClassName: iconClassNameLeft,
	              onClick: this.handleTouchTapLeftIconButton
	            },
	            iconClassNameLeft ? '' : _react2.default.createElement(_menu2.default, { style: (0, _simpleAssign2.default)({}, styles.iconButtonIconStyle) })
	          );
	        }
	      }

	      var iconRightStyle = (0, _simpleAssign2.default)({}, styles.iconButtonStyle, {
	        marginRight: -16,
	        marginLeft: 'auto'
	      }, iconStyleRight);

	      if (iconElementRight) {
	        var iconElementRightProps = {};

	        switch (iconElementRight.type.muiName) {
	          case 'IconMenu':
	          case 'IconButton':
	            var iconElemRightChildren = iconElementRight.props.children;
	            var _iconButtonIconStyle = !(iconElemRightChildren && iconElemRightChildren.props && iconElemRightChildren.props.color) ? styles.iconButtonIconStyle : null;

	            iconElementRightProps.iconStyle = (0, _simpleAssign2.default)({}, _iconButtonIconStyle, iconElementRight.props.iconStyle);
	            break;

	          case 'FlatButton':
	            iconElementRightProps.style = (0, _simpleAssign2.default)({}, styles.flatButton, iconElementRight.props.style);
	            break;

	          default:
	        }

	        if (!iconElementRight.props.onClick && this.props.onRightIconButtonTouchTap) {
	          iconElementRightProps.onClick = this.handleTouchTapRightIconButton;
	        }

	        menuElementRight = _react2.default.createElement(
	          'div',
	          { style: prepareStyles(iconRightStyle) },
	          (0, _keys2.default)(iconElementRightProps).length > 0 ? (0, _react.cloneElement)(iconElementRight, iconElementRightProps) : iconElementRight
	        );
	      } else if (iconClassNameRight) {
	        menuElementRight = _react2.default.createElement(_IconButton2.default, {
	          style: iconRightStyle,
	          iconStyle: styles.iconButtonIconStyle,
	          iconClassName: iconClassNameRight,
	          onClick: this.handleTouchTapRightIconButton
	        });
	      }

	      return _react2.default.createElement(
	        _Paper2.default,
	        (0, _extends3.default)({}, other, {
	          rounded: false,
	          className: className,
	          style: (0, _simpleAssign2.default)({}, styles.root, style),
	          zDepth: zDepth
	        }),
	        menuElementLeft,
	        titleElement,
	        menuElementRight,
	        children
	      );
	    }
	  }]);
	  return AppBar;
	}(_react.Component);

	AppBar.muiName = 'AppBar';
	AppBar.defaultProps = {
	  showMenuIconButton: true,
	  title: '',
	  zDepth: 1
	};
	AppBar.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	AppBar.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Can be used to render a tab inside an app bar for instance.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Applied to the app bar's root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The classname of the icon on the left of the app bar.
	   * If you are using a stylesheet for your icons, enter the class name for the icon to be used here.
	   */
	  iconClassNameLeft: _propTypes2.default.string,
	  /**
	   * Similiar to the iconClassNameLeft prop except that
	   * it applies to the icon displayed on the right of the app bar.
	   */
	  iconClassNameRight: _propTypes2.default.string,
	  /**
	   * The custom element to be displayed on the left side of the
	   * app bar such as an SvgIcon.
	   */
	  iconElementLeft: _propTypes2.default.element,
	  /**
	   * Similiar to the iconElementLeft prop except that this element is displayed on the right of the app bar.
	   */
	  iconElementRight: _propTypes2.default.element,
	  /**
	   * Override the inline-styles of the element displayed on the left side of the app bar.
	   */
	  iconStyleLeft: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the element displayed on the right side of the app bar.
	   */
	  iconStyleRight: _propTypes2.default.object,
	  /**
	   * Callback function for when the left icon is selected via a touch tap.
	   *
	   * @param {object} event TouchTap event targeting the left `IconButton`.
	   */
	  onLeftIconButtonTouchTap: _propTypes2.default.func,
	  /**
	   * Callback function for when the right icon is selected via a touch tap.
	   *
	   * @param {object} event TouchTap event targeting the right `IconButton`.
	   */
	  onRightIconButtonTouchTap: _propTypes2.default.func,
	  /**
	   * Callback function for when the title text is selected via a touch tap.
	   *
	   * @param {object} event TouchTap event targeting the `title` node.
	   */
	  onTitleTouchTap: _propTypes2.default.func,
	  /**
	   * Determines whether or not to display the Menu icon next to the title.
	   * Setting this prop to false will hide the icon.
	   */
	  showMenuIconButton: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The title to display on the app bar.
	   */
	  title: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the app bar's title element.
	   */
	  titleStyle: _propTypes2.default.object,
	  /**
	   * The zDepth of the component.
	   * The shadow of the app bar is also dependent on this property.
	   */
	  zDepth: _propTypes4.default.zDepth
	} : {};
	exports.default = AppBar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationMenu = function NavigationMenu(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' })
	  );
	};
	NavigationMenu = (0, _pure2.default)(NavigationMenu);
	NavigationMenu.displayName = 'NavigationMenu';
	NavigationMenu.muiName = 'SvgIcon';

	exports.default = NavigationMenu;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _configJsx = __webpack_require__(2);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var React = __webpack_require__(241);
	var Navlog = __webpack_require__(559);
	var Organizacion = __webpack_require__(560);
	var Portafolio = __webpack_require__(570);
	var Proyecto = __webpack_require__(572);
	var Documento = __webpack_require__(574);

	var Home = (function (_React$Component) {
	  _inherits(Home, _React$Component);

	  function Home(props) {
	    _classCallCheck(this, Home);

	    _get(Object.getPrototypeOf(Home.prototype), 'constructor', this).call(this, props);

	    this.state = {
	      auth: "",
	      showport: false,
	      id: '',
	      idport: '',
	      showproy: false,
	      idproy: '',
	      showdoc: false,
	      admin: ''
	    };

	    this.asignarorg = this.asignarorg.bind(this);
	    this.asignarport = this.asignarport.bind(this);
	    this.asignarproy = this.asignarproy.bind(this);
	  }

	  _createClass(Home, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {

	      var padre = this;
	      firebase.auth().onAuthStateChanged(function (user) {

	        if (user) {

	          firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	            var messages = snapshot.val();

	            padre.setState({
	              auth: true,
	              admin: messages.admin
	            });
	          });
	        } else {

	          padre.setState({ auth: false });
	          padre.props.history.push({ pathname: '/login' });
	        }
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {}
	  }, {
	    key: 'asignarorg',
	    value: function asignarorg(id) {
	      this.setState({ id: id, showport: true, showproy: false, showdoc: false });
	    }
	  }, {
	    key: 'asignarport',
	    value: function asignarport(id) {

	      this.setState({ idport: id, showproy: true, showdoc: false });
	    }
	  }, {
	    key: 'asignarproy',
	    value: function asignarproy(id) {

	      this.setState({ idproy: id, showdoc: true });
	    }
	  }, {
	    key: 'render',
	    value: function render() {

	      if (this.state.auth == true) {
	        /*  IF */
	        return React.createElement(
	          'div',
	          null,
	          React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	          React.createElement(
	            'div',
	            { className: 'pantalla' },
	            React.createElement(
	              'div',
	              { className: 'divisor' },
	              React.createElement(Organizacion, { guardarid: this.asignarorg, admin: this.state.admin })
	            ),
	            React.createElement(
	              'div',
	              { className: 'divisor' },
	              this.state.showport ? React.createElement(Portafolio, { data: this.state.id, guardarport: this.asignarport }) : null
	            ),
	            React.createElement(
	              'div',
	              { className: 'divisor' },
	              this.state.showproy ? React.createElement(Proyecto, { data: this.state.id, dataport: this.state.idport, guardarproy: this.asignarproy }) : null
	            ),
	            React.createElement(
	              'div',
	              { className: 'divisor' },
	              this.state.showdoc ? React.createElement(Documento, { data: this.state.id, dataport: this.state.idport, dataproy: this.state.idproy, history: this.props.history }) : null
	            )
	          )
	        );
	      } else {

	        return React.createElement('div', null);
	      } /* END IF*/
	    }
	    /* END RENDER */

	  }]);

	  return Home;
	})(React.Component);

	exports['default'] = Home;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "home.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Componente de barra nav CON login*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiSvgIconsActionHelp = __webpack_require__(553);

	var _materialUiSvgIconsActionHelp2 = _interopRequireDefault(_materialUiSvgIconsActionHelp);

	var _materialUiSvgIconsActionHome = __webpack_require__(554);

	var _materialUiSvgIconsActionHome2 = _interopRequireDefault(_materialUiSvgIconsActionHome);

	var _materialUiAppBar = __webpack_require__(555);

	var _materialUiAppBar2 = _interopRequireDefault(_materialUiAppBar);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _configJsx = __webpack_require__(2);

	var React = __webpack_require__(241);

	/*global localStorage*/

	var itemcolor = {
	  color: '#FFFFFF'
	};
	var cursor = {
	  cursor: 'pointer'
	};

	var Navlog = (function (_React$Component) {
	  _inherits(Navlog, _React$Component);

	  function Navlog(props) {
	    _classCallCheck(this, Navlog);

	    _get(Object.getPrototypeOf(Navlog.prototype), 'constructor', this).call(this, props);

	    this.lout = this.lout.bind(this);
	    this.redirect = this.redirect.bind(this);
	  }

	  _createClass(Navlog, [{
	    key: 'redirect',
	    value: function redirect() {

	      this.props.history.push({ pathname: '/' });
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {

	      return true;
	    }
	  }, {
	    key: 'guardarid',
	    value: function guardarid() {
	      var token = (0, _configJsx.getToken)();
	      var id = token.uid;
	      localStorage.setItem('iduser', id);
	    }
	  }, {
	    key: 'lout',
	    value: function lout() {

	      (0, _configJsx.logout)();
	      localStorage.clear();
	      this.props.history.push({ pathname: '/' });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      return React.createElement(
	        'header',
	        null,
	        React.createElement(
	          _materialUiStylesMuiThemeProvider2['default'],
	          null,
	          React.createElement(_materialUiAppBar2['default'], {
	            title: React.createElement(
	              'span',
	              { style: cursor },
	              'PMPROJECTS'
	            ),
	            showMenuIconButton: false,
	            onTitleTouchTap: function () {
	              return _this.redirect();
	            },
	            iconElementRight: React.createElement(
	              'div',
	              null,
	              React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Inicio', href: '/' }),
	              React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Mi Perfil', href: '/perfil', onClick: function () {
	                  return _this.guardarid();
	                } }),
	              React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Usuarios', href: '/usuarios' }),
	              this.props.admin == 'true' ? React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Formatos', href: '/formatos' }) : null,
	              React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Acerca de', href: '/contacto' }),
	              React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Logout', onClick: function () {
	                  return _this.lout();
	                } })
	            )
	          })
	        )
	      );
	    }
	  }]);

	  return Navlog;
	})(React.Component);

	exports['default'] = Navlog;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "navlog.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*COMPONENTE ORGANIZACION DE LA PAGINA HOME*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiBadge = __webpack_require__(561);

	var _materialUiBadge2 = _interopRequireDefault(_materialUiBadge);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiSvgIconsHardwareDeveloperBoard = __webpack_require__(564);

	var _materialUiSvgIconsHardwareDeveloperBoard2 = _interopRequireDefault(_materialUiSvgIconsHardwareDeveloperBoard);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	/*global localStorage*/

	var React = __webpack_require__(241);
	var iconbutton = {
	  padding: 0
	};
	var styles = {
	  mediumIcon: {
	    width: 48,
	    height: 48
	  }
	};

	var Organizacion = (function (_React$Component) {
	  _inherits(Organizacion, _React$Component);

	  function Organizacion(props) {
	    _classCallCheck(this, Organizacion);

	    _get(Object.getPrototypeOf(Organizacion.prototype), 'constructor', this).call(this, props);

	    this.state = {
	      open: false,
	      name: " ",
	      description: '',
	      messages: [],
	      idactivo: localStorage.getItem('idactivo'),
	      snack: false
	    };
	    this.handleChange = this.handleChange.bind(this);
	    this.handleSubmit = this.handleSubmit.bind(this);
	    this.handleRequestClose = this.handleRequestClose.bind(this);
	  }

	  _createClass(Organizacion, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this = this;

	      if (this.props.admin == "true") {

	        var messageRef = firebase.database().ref().child('organizacion');
	        messageRef.on('value', function (snapshot) {

	          var messages = snapshot.val();
	          var newState = [];
	          for (var message in messages) {

	            newState.push({
	              id: message,
	              nombre: messages[message].nombre,
	              descripcion: messages[message].descripcion
	            });
	          }

	          _this.setState({
	            messages: newState
	          });
	        });
	      } else {

	        firebase.database().ref().child('usuarios/' + this.state.idactivo).on('value', function (snapshot) {
	          var messages = snapshot.val();
	          var orgid = messages.orgid;
	          firebase.database().ref().child('organizacion/' + orgid + '/nombre').on('value', function (snapshot) {
	            var messages = snapshot.val();
	            var newState = [];

	            newState.push({
	              id: orgid,
	              nombre: messages
	            });

	            _this.setState({
	              messages: newState
	            });
	          }); /*    Segundo Query */
	        }); /*  Primer Query  */
	      } /* Else  */
	    }
	  }, {
	    key: 'handleOpen',
	    value: function handleOpen() {
	      this.setState({ open: true });
	    }
	  }, {
	    key: 'handleClose',
	    value: function handleClose() {
	      this.setState({ open: false });
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {
	      e.preventDefault();
	      this.setState(_defineProperty({}, e.target.name, e.target.value));
	    }
	  }, {
	    key: 'orgseleccionada',
	    value: function orgseleccionada(id) {

	      this.props.guardarid(id);
	    }
	  }, {
	    key: 'handleRequestClose',
	    value: function handleRequestClose() {

	      this.setState({
	        snack: false
	      });
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {

	      var nametemp = this.state.name;
	      var descriptiontemp = this.state.description;

	      var object = {
	        name: nametemp,
	        description: descriptiontemp
	      };

	      (0, _configJsx.saveOrg)(object);
	      this.setState({ open: false, name: '', description: '', snack: true });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return React.createElement(
	        'section',
	        null,
	        React.createElement(
	          'div',
	          null,
	          React.createElement(
	            _materialUiStylesMuiThemeProvider2['default'],
	            null,
	            React.createElement(
	              'div',
	              null,
	              this.state.messages.map(function (item) {
	                return React.createElement(
	                  'div',
	                  { className: 'nombreicon', key: item.id },
	                  React.createElement(
	                    'div',
	                    { className: 'iconwrapper' },
	                    React.createElement(_materialUiBadge2['default'], {

	                      badgeContent: React.createElement(
	                        _materialUiIconButton2['default'],
	                        { style: iconbutton, iconStyle: styles.mediumIcon, onClick: function () {
	                            return _this2.orgseleccionada(item.id);
	                          }, tooltip: item.nombre },
	                        React.createElement(_materialUiSvgIconsHardwareDeveloperBoard2['default'], null)
	                      )
	                    })
	                  ),
	                  React.createElement(
	                    'p',
	                    null,
	                    item.nombre
	                  )
	                );
	              }),
	              React.createElement(_materialUiBadge2['default'], {

	                badgeContent: React.createElement(
	                  _materialUiIconButton2['default'],
	                  { style: iconbutton, onClick: function () {
	                      return _this2.handleOpen();
	                    }, iconStyle: styles.mediumIcon, tooltip: 'Crear Organización' },
	                  React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                )
	              }),
	              React.createElement(
	                _materialUiDialog2['default'],
	                {
	                  title: 'Crear Organización',

	                  modal: true,
	                  open: this.state.open
	                },
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text',
	                  floatingLabelText: 'Nombre'
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.description, onChange: this.handleChange, name: 'description', type: 'text',
	                  fullWidth: true,
	                  floatingLabelText: 'Descripción',
	                  multiLine: true,
	                  rows: 3
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Cancel',
	                  primary: true,
	                  onClick: function () {
	                    return _this2.handleClose();
	                  }
	                }),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Aceptar',
	                  primary: true,
	                  onClick: function () {
	                    return _this2.handleSubmit();
	                  }
	                })
	              ),
	              React.createElement(_materialUiSnackbar2['default'], {
	                open: this.state.snack,
	                message: 'Organización Creada',
	                autoHideDuration: 2000,
	                onRequestClose: this.handleRequestClose
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Organizacion;
	})(React.Component);

	exports['default'] = Organizacion;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "organizacion.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Badge = __webpack_require__(562);

	var _Badge2 = _interopRequireDefault(_Badge);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Badge2.default;

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var primary = props.primary,
	      secondary = props.secondary;
	  var badge = context.muiTheme.badge;


	  var badgeBackgroundColor = void 0;
	  var badgeTextColor = void 0;

	  if (primary) {
	    badgeBackgroundColor = badge.primaryColor;
	    badgeTextColor = badge.primaryTextColor;
	  } else if (secondary) {
	    badgeBackgroundColor = badge.secondaryColor;
	    badgeTextColor = badge.secondaryTextColor;
	  } else {
	    badgeBackgroundColor = badge.color;
	    badgeTextColor = badge.textColor;
	  }

	  var radius = 12;
	  var radius2x = Math.floor(2 * radius);

	  return {
	    root: {
	      position: 'relative',
	      display: 'inline-block',
	      padding: radius2x + 'px ' + radius2x + 'px ' + radius + 'px ' + radius + 'px'
	    },
	    badge: {
	      display: 'flex',
	      flexDirection: 'row',
	      flexWrap: 'wrap',
	      justifyContent: 'center',
	      alignContent: 'center',
	      alignItems: 'center',
	      position: 'absolute',
	      top: 0,
	      right: 0,
	      fontWeight: badge.fontWeight,
	      fontSize: radius,
	      width: radius2x,
	      height: radius2x,
	      borderRadius: '50%',
	      backgroundColor: badgeBackgroundColor,
	      color: badgeTextColor
	    }
	  };
	}

	var Badge = function (_Component) {
	  (0, _inherits3.default)(Badge, _Component);

	  function Badge() {
	    (0, _classCallCheck3.default)(this, Badge);
	    return (0, _possibleConstructorReturn3.default)(this, (Badge.__proto__ || (0, _getPrototypeOf2.default)(Badge)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(Badge, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          badgeContent = _props.badgeContent,
	          badgeStyle = _props.badgeStyle,
	          children = _props.children,
	          primary = _props.primary,
	          secondary = _props.secondary,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['badgeContent', 'badgeStyle', 'children', 'primary', 'secondary', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)({}, styles.root, style)) }),
	        children,
	        _react2.default.createElement(
	          'span',
	          { style: prepareStyles((0, _simpleAssign2.default)({}, styles.badge, badgeStyle)) },
	          badgeContent
	        )
	      );
	    }
	  }]);
	  return Badge;
	}(_react.Component);

	Badge.defaultProps = {
	  primary: false,
	  secondary: false
	};
	Badge.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Badge.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * This is the content rendered within the badge.
	   */
	  badgeContent: _propTypes2.default.node.isRequired,
	  /**
	   * Override the inline-styles of the badge element.
	   */
	  badgeStyle: _propTypes2.default.object,
	  /**
	   * The badge will be added relativelty to this node.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * If true, the badge will use the primary badge colors.
	   */
	  primary: _propTypes2.default.bool,
	  /**
	   * If true, the badge will use the secondary badge colors.
	   */
	  secondary: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = Badge;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ContentAdd = function ContentAdd(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' })
	  );
	};
	ContentAdd = (0, _pure2.default)(ContentAdd);
	ContentAdd.displayName = 'ContentAdd';
	ContentAdd.muiName = 'SvgIcon';

	exports.default = ContentAdd;

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HardwareDeveloperBoard = function HardwareDeveloperBoard(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M22 9V7h-2V5c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-2h2v-2h-2v-2h2v-2h-2V9h2zm-4 10H4V5h14v14zM6 13h5v4H6zm6-6h4v3h-4zM6 7h5v5H6zm6 4h4v6h-4z' })
	  );
	};
	HardwareDeveloperBoard = (0, _pure2.default)(HardwareDeveloperBoard);
	HardwareDeveloperBoard.displayName = 'HardwareDeveloperBoard';
	HardwareDeveloperBoard.muiName = 'SvgIcon';

	exports.default = HardwareDeveloperBoard;

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Dialog = __webpack_require__(566);

	var _Dialog2 = _interopRequireDefault(_Dialog);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Dialog2.default;

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactEventListener = __webpack_require__(495);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _keycode = __webpack_require__(521);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _Overlay = __webpack_require__(567);

	var _Overlay2 = _interopRequireDefault(_Overlay);

	var _RenderToLayer = __webpack_require__(569);

	var _RenderToLayer2 = _interopRequireDefault(_RenderToLayer);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _TransitionGroup = __webpack_require__(525);

	var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var TransitionItem = function (_Component) {
	  (0, _inherits3.default)(TransitionItem, _Component);

	  function TransitionItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TransitionItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TransitionItem.__proto__ || (0, _getPrototypeOf2.default)(TransitionItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      style: {}
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TransitionItem, [{
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.enterTimeout);
	      clearTimeout(this.leaveTimeout);
	    }
	  }, {
	    key: 'componentWillEnter',
	    value: function componentWillEnter(callback) {
	      this.componentWillAppear(callback);
	    }
	  }, {
	    key: 'componentWillAppear',
	    value: function componentWillAppear(callback) {
	      var spacing = this.context.muiTheme.baseTheme.spacing;

	      this.setState({
	        style: {
	          opacity: 1,
	          transform: 'translate(0, ' + spacing.desktopKeylineIncrement + 'px)'
	        }
	      });

	      this.enterTimeout = setTimeout(callback, 450); // matches transition duration
	    }
	  }, {
	    key: 'componentWillLeave',
	    value: function componentWillLeave(callback) {
	      this.setState({
	        style: {
	          opacity: 0,
	          transform: 'translate(0, 0)'
	        }
	      });

	      this.leaveTimeout = setTimeout(callback, 450); // matches transition duration
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          style = _props.style,
	          children = _props.children,
	          other = (0, _objectWithoutProperties3.default)(_props, ['style', 'children']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)({}, this.state.style, style)) }),
	        children
	      );
	    }
	  }]);
	  return TransitionItem;
	}(_react.Component);

	TransitionItem.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TransitionItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  style: _propTypes2.default.object
	} : {};


	function getStyles(props, context) {
	  var autoScrollBodyContent = props.autoScrollBodyContent,
	      open = props.open;
	  var _context$muiTheme = context.muiTheme,
	      _context$muiTheme$bas = _context$muiTheme.baseTheme,
	      spacing = _context$muiTheme$bas.spacing,
	      palette = _context$muiTheme$bas.palette,
	      dialog = _context$muiTheme.dialog,
	      zIndex = _context$muiTheme.zIndex;


	  var gutter = spacing.desktopGutter;
	  var borderScroll = '1px solid ' + palette.borderColor;

	  return {
	    root: {
	      position: 'fixed',
	      boxSizing: 'border-box',
	      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
	      zIndex: zIndex.dialog,
	      top: 0,
	      left: open ? 0 : -10000,
	      width: '100%',
	      height: '100%',
	      transition: open ? _transitions2.default.easeOut('0ms', 'left', '0ms') : _transitions2.default.easeOut('0ms', 'left', '450ms')
	    },
	    content: {
	      boxSizing: 'border-box',
	      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
	      transition: _transitions2.default.easeOut(),
	      position: 'relative',
	      width: '75%',
	      maxWidth: spacing.desktopKeylineIncrement * 12,
	      margin: '0 auto',
	      zIndex: zIndex.dialog
	    },
	    actionsContainer: {
	      boxSizing: 'border-box',
	      WebkitTapHighlightColor: 'rgba(0,0,0,0)', // Remove mobile color flashing (deprecated)
	      padding: 8,
	      width: '100%',
	      textAlign: 'right',
	      marginTop: autoScrollBodyContent ? -1 : 0
	    },
	    overlay: {
	      zIndex: zIndex.dialogOverlay
	    },
	    title: {
	      margin: 0,
	      padding: gutter + 'px ' + gutter + 'px 20px ' + gutter + 'px',
	      color: palette.textColor,
	      fontSize: dialog.titleFontSize,
	      lineHeight: '32px',
	      fontWeight: 400,
	      marginBottom: autoScrollBodyContent ? -1 : 0
	    },
	    body: {
	      fontSize: dialog.bodyFontSize,
	      color: dialog.bodyColor,
	      padding: (props.title ? 0 : gutter) + 'px ' + gutter + 'px ' + gutter + 'px',
	      boxSizing: 'border-box',
	      overflowY: autoScrollBodyContent ? 'auto' : 'hidden',
	      borderTop: autoScrollBodyContent ? borderScroll : 'none',
	      borderBottom: autoScrollBodyContent ? borderScroll : 'none'
	    }
	  };
	}

	var DialogInline = function (_Component2) {
	  (0, _inherits3.default)(DialogInline, _Component2);

	  function DialogInline() {
	    var _ref2;

	    var _temp2, _this2, _ret2;

	    (0, _classCallCheck3.default)(this, DialogInline);

	    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }

	    return _ret2 = (_temp2 = (_this2 = (0, _possibleConstructorReturn3.default)(this, (_ref2 = DialogInline.__proto__ || (0, _getPrototypeOf2.default)(DialogInline)).call.apply(_ref2, [this].concat(args))), _this2), _this2.handleTouchTapOverlay = function () {
	      _this2.requestClose(false);
	    }, _this2.handleKeyUp = function (event) {
	      if ((0, _keycode2.default)(event) === 'esc') {
	        _this2.requestClose(false);
	      }
	    }, _this2.handleResize = function () {
	      _this2.positionDialog();
	    }, _temp2), (0, _possibleConstructorReturn3.default)(_this2, _ret2);
	  }

	  (0, _createClass3.default)(DialogInline, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.positionDialog();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.positionDialog();
	    }
	  }, {
	    key: 'positionDialog',
	    value: function positionDialog() {
	      var _props2 = this.props,
	          actions = _props2.actions,
	          autoDetectWindowHeight = _props2.autoDetectWindowHeight,
	          autoScrollBodyContent = _props2.autoScrollBodyContent,
	          bodyStyle = _props2.bodyStyle,
	          open = _props2.open,
	          repositionOnUpdate = _props2.repositionOnUpdate,
	          title = _props2.title;


	      if (!open) {
	        return;
	      }

	      var clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
	      var container = _reactDom2.default.findDOMNode(this);
	      var dialogWindow = _reactDom2.default.findDOMNode(this.refs.dialogWindow);
	      var dialogContent = _reactDom2.default.findDOMNode(this.refs.dialogContent);
	      var minPaddingTop = 16;

	      // Reset the height in case the window was resized.
	      dialogWindow.style.height = '';
	      dialogContent.style.height = '';

	      var dialogWindowHeight = dialogWindow.offsetHeight;
	      var paddingTop = (clientHeight - dialogWindowHeight) / 2 - 64;
	      if (paddingTop < minPaddingTop) paddingTop = minPaddingTop;

	      // Vertically center the dialog window, but make sure it doesn't
	      // transition to that position.
	      if (repositionOnUpdate || !container.style.paddingTop) {
	        container.style.paddingTop = paddingTop + 'px';
	      }

	      // Force a height if the dialog is taller than clientHeight
	      if (autoDetectWindowHeight || autoScrollBodyContent) {
	        var styles = getStyles(this.props, this.context);
	        styles.body = (0, _simpleAssign2.default)(styles.body, bodyStyle);
	        var maxDialogContentHeight = clientHeight - 2 * 64;

	        if (title) maxDialogContentHeight -= dialogContent.previousSibling.offsetHeight;

	        if (_react2.default.Children.count(actions)) {
	          maxDialogContentHeight -= dialogContent.nextSibling.offsetHeight;
	        }

	        dialogContent.style.maxHeight = maxDialogContentHeight + 'px';
	        if (maxDialogContentHeight > dialogWindowHeight) {
	          dialogContent.style.borderBottom = 'none';
	          dialogContent.style.borderTop = 'none';
	        }
	      }
	    }
	  }, {
	    key: 'requestClose',
	    value: function requestClose(buttonClicked) {
	      if (!buttonClicked && this.props.modal) {
	        return;
	      }

	      if (this.props.onRequestClose) {
	        this.props.onRequestClose(!!buttonClicked);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props3 = this.props,
	          actions = _props3.actions,
	          actionsContainerClassName = _props3.actionsContainerClassName,
	          actionsContainerStyle = _props3.actionsContainerStyle,
	          bodyClassName = _props3.bodyClassName,
	          bodyStyle = _props3.bodyStyle,
	          children = _props3.children,
	          className = _props3.className,
	          contentClassName = _props3.contentClassName,
	          contentStyle = _props3.contentStyle,
	          overlayClassName = _props3.overlayClassName,
	          overlayStyle = _props3.overlayStyle,
	          open = _props3.open,
	          paperClassName = _props3.paperClassName,
	          paperProps = _props3.paperProps,
	          style = _props3.style,
	          titleClassName = _props3.titleClassName,
	          titleStyle = _props3.titleStyle,
	          title = _props3.title;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      styles.root = (0, _simpleAssign2.default)(styles.root, style);
	      styles.content = (0, _simpleAssign2.default)(styles.content, contentStyle);
	      styles.body = (0, _simpleAssign2.default)(styles.body, bodyStyle);
	      styles.actionsContainer = (0, _simpleAssign2.default)(styles.actionsContainer, actionsContainerStyle);
	      styles.overlay = (0, _simpleAssign2.default)(styles.overlay, overlayStyle);
	      styles.title = (0, _simpleAssign2.default)(styles.title, titleStyle);

	      var actionsContainer = _react2.default.Children.count(actions) > 0 && _react2.default.createElement(
	        'div',
	        { className: actionsContainerClassName, style: prepareStyles(styles.actionsContainer) },
	        _react2.default.Children.toArray(actions)
	      );

	      var titleElement = title;
	      if (_react2.default.isValidElement(title)) {
	        titleElement = _react2.default.cloneElement(title, {
	          className: title.props.className || titleClassName,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.title, title.props.style))
	        });
	      } else if (typeof title === 'string') {
	        titleElement = _react2.default.createElement(
	          'h3',
	          { className: titleClassName, style: prepareStyles(styles.title) },
	          title
	        );
	      }

	      return _react2.default.createElement(
	        'div',
	        { className: className, style: prepareStyles(styles.root) },
	        open && _react2.default.createElement(_reactEventListener2.default, {
	          target: 'window',
	          onKeyUp: this.handleKeyUp,
	          onResize: this.handleResize
	        }),
	        _react2.default.createElement(
	          _TransitionGroup2.default,
	          {
	            component: 'div',
	            ref: 'dialogWindow',
	            transitionAppear: true,
	            transitionAppearTimeout: 450,
	            transitionEnter: true,
	            transitionEnterTimeout: 450
	          },
	          open && _react2.default.createElement(
	            TransitionItem,
	            {
	              className: contentClassName,
	              style: styles.content
	            },
	            _react2.default.createElement(
	              _Paper2.default,
	              (0, _extends3.default)({ className: paperClassName, zDepth: 4 }, paperProps),
	              titleElement,
	              _react2.default.createElement(
	                'div',
	                {
	                  ref: 'dialogContent',
	                  className: bodyClassName,
	                  style: prepareStyles(styles.body)
	                },
	                children
	              ),
	              actionsContainer
	            )
	          )
	        ),
	        _react2.default.createElement(_Overlay2.default, {
	          show: open,
	          className: overlayClassName,
	          style: styles.overlay,
	          onClick: this.handleTouchTapOverlay
	        })
	      );
	    }
	  }]);
	  return DialogInline;
	}(_react.Component);

	DialogInline.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	DialogInline.propTypes = process.env.NODE_ENV !== "production" ? {
	  actions: _propTypes2.default.node,
	  actionsContainerClassName: _propTypes2.default.string,
	  actionsContainerStyle: _propTypes2.default.object,
	  autoDetectWindowHeight: _propTypes2.default.bool,
	  autoScrollBodyContent: _propTypes2.default.bool,
	  bodyClassName: _propTypes2.default.string,
	  bodyStyle: _propTypes2.default.object,
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.string,
	  contentClassName: _propTypes2.default.string,
	  contentStyle: _propTypes2.default.object,
	  modal: _propTypes2.default.bool,
	  onRequestClose: _propTypes2.default.func,
	  open: _propTypes2.default.bool.isRequired,
	  overlayClassName: _propTypes2.default.string,
	  overlayStyle: _propTypes2.default.object,
	  paperClassName: _propTypes2.default.string,
	  paperProps: _propTypes2.default.object,
	  repositionOnUpdate: _propTypes2.default.bool,
	  style: _propTypes2.default.object,
	  title: _propTypes2.default.node,
	  titleClassName: _propTypes2.default.string,
	  titleStyle: _propTypes2.default.object
	} : {};

	var Dialog = function (_Component3) {
	  (0, _inherits3.default)(Dialog, _Component3);

	  function Dialog() {
	    var _ref3;

	    var _temp3, _this3, _ret3;

	    (0, _classCallCheck3.default)(this, Dialog);

	    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	      args[_key3] = arguments[_key3];
	    }

	    return _ret3 = (_temp3 = (_this3 = (0, _possibleConstructorReturn3.default)(this, (_ref3 = Dialog.__proto__ || (0, _getPrototypeOf2.default)(Dialog)).call.apply(_ref3, [this].concat(args))), _this3), _this3.renderLayer = function () {
	      return _react2.default.createElement(DialogInline, _this3.props);
	    }, _temp3), (0, _possibleConstructorReturn3.default)(_this3, _ret3);
	  }

	  (0, _createClass3.default)(Dialog, [{
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(_RenderToLayer2.default, { render: this.renderLayer, open: true, useLayerForClickAway: false });
	    }
	  }]);
	  return Dialog;
	}(_react.Component);

	Dialog.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Dialog.defaultProps = {
	  autoDetectWindowHeight: true,
	  autoScrollBodyContent: false,
	  modal: false,
	  repositionOnUpdate: true
	};
	Dialog.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Action buttons to display below the Dialog content (`children`).
	   * This property accepts either a React element, or an array of React elements.
	   */
	  actions: _propTypes2.default.node,
	  /**
	   * The `className` to add to the actions container's root element.
	   */
	  actionsContainerClassName: _propTypes2.default.string,
	  /**
	   * Overrides the inline-styles of the actions container's root element.
	   */
	  actionsContainerStyle: _propTypes2.default.object,
	  /**
	   * If set to true, the height of the `Dialog` will be auto detected. A max height
	   * will be enforced so that the content does not extend beyond the viewport.
	   */
	  autoDetectWindowHeight: _propTypes2.default.bool,
	  /**
	   * If set to true, the body content of the `Dialog` will be scrollable.
	   */
	  autoScrollBodyContent: _propTypes2.default.bool,
	  /**
	   * The `className` to add to the content's root element under the title.
	   */
	  bodyClassName: _propTypes2.default.string,
	  /**
	   * Overrides the inline-styles of the content's root element under the title.
	   */
	  bodyStyle: _propTypes2.default.object,
	  /**
	   * The contents of the `Dialog`.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * @ignore
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The `className` to add to the content container.
	   */
	  contentClassName: _propTypes2.default.string,
	  /**
	   * Overrides the inline-styles of the content container.
	   */
	  contentStyle: _propTypes2.default.object,
	  /**
	   * Force the user to use one of the actions in the `Dialog`.
	   * Clicking outside the `Dialog` will not trigger the `onRequestClose`.
	   */
	  modal: _propTypes2.default.bool,
	  /**
	   * Fired when the `Dialog` is requested to be closed by a click outside the `Dialog` or on the buttons.
	   *
	   * @param {bool} buttonClicked Determines whether a button click triggered this request.
	   */
	  onRequestClose: _propTypes2.default.func,
	  /**
	   * Controls whether the Dialog is opened or not.
	   */
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * The `className` to add to the `Overlay` component that is rendered behind the `Dialog`.
	   */
	  overlayClassName: _propTypes2.default.string,
	  /**
	   * Overrides the inline-styles of the `Overlay` component that is rendered behind the `Dialog`.
	   */
	  overlayStyle: _propTypes2.default.object,
	  /**
	   * The CSS class name of the `Paper` element.
	   */
	  paperClassName: _propTypes2.default.string,
	  /**
	   * Properties applied to the `Paper` element.
	   */
	  paperProps: _propTypes2.default.object,
	  /**
	   * Determines whether the `Dialog` should be repositioned when it's contents are updated.
	   */
	  repositionOnUpdate: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The title to display on the `Dialog`. Could be number, string, element or an array containing these types.
	   */
	  title: _propTypes2.default.node,
	  /**
	   * The `className` to add to the title's root container element.
	   */
	  titleClassName: _propTypes2.default.string,
	  /**
	   * Overrides the inline-styles of the title's root container element.
	   */
	  titleStyle: _propTypes2.default.object
	} : {};
	exports.default = Dialog;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _AutoLockScrolling = __webpack_require__(568);

	var _AutoLockScrolling2 = _interopRequireDefault(_AutoLockScrolling);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var overlay = context.muiTheme.overlay;


	  var style = {
	    root: {
	      position: 'fixed',
	      height: '100%',
	      width: '100%',
	      top: 0,
	      left: '-100%',
	      opacity: 0,
	      backgroundColor: overlay.backgroundColor,
	      WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)', // Remove mobile color flashing (deprecated)

	      // Two ways to promote overlay to its own render layer
	      willChange: 'opacity',
	      transform: 'translateZ(0)',

	      transition: props.transitionEnabled && _transitions2.default.easeOut('0ms', 'left', '400ms') + ', ' + _transitions2.default.easeOut('400ms', 'opacity')
	    }
	  };

	  if (props.show) {
	    (0, _simpleAssign2.default)(style.root, {
	      left: 0,
	      opacity: 1,
	      transition: _transitions2.default.easeOut('0ms', 'left') + ', ' + _transitions2.default.easeOut('400ms', 'opacity')
	    });
	  }

	  return style;
	}

	var Overlay = function (_Component) {
	  (0, _inherits3.default)(Overlay, _Component);

	  function Overlay() {
	    (0, _classCallCheck3.default)(this, Overlay);
	    return (0, _possibleConstructorReturn3.default)(this, (Overlay.__proto__ || (0, _getPrototypeOf2.default)(Overlay)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(Overlay, [{
	    key: 'setOpacity',
	    value: function setOpacity(opacity) {
	      this.refs.overlay.style.opacity = opacity;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          autoLockScrolling = _props.autoLockScrolling,
	          show = _props.show,
	          style = _props.style,
	          transitionEnabled = _props.transitionEnabled,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoLockScrolling', 'show', 'style', 'transitionEnabled']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { ref: 'overlay', style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	        autoLockScrolling && _react2.default.createElement(_AutoLockScrolling2.default, { lock: show })
	      );
	    }
	  }]);
	  return Overlay;
	}(_react.Component);

	Overlay.defaultProps = {
	  autoLockScrolling: true,
	  style: {},
	  transitionEnabled: true
	};
	Overlay.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Overlay.propTypes = process.env.NODE_ENV !== "production" ? {
	  autoLockScrolling: _propTypes2.default.bool,
	  show: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  transitionEnabled: _propTypes2.default.bool
	} : {};
	exports.default = Overlay;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(241);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var originalBodyOverflow = null;
	var lockingCounter = 0;

	var AutoLockScrolling = function (_Component) {
	  (0, _inherits3.default)(AutoLockScrolling, _Component);

	  function AutoLockScrolling() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, AutoLockScrolling);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AutoLockScrolling.__proto__ || (0, _getPrototypeOf2.default)(AutoLockScrolling)).call.apply(_ref, [this].concat(args))), _this), _this.locked = false, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(AutoLockScrolling, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.lock === true) {
	        this.preventScrolling();
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.lock !== nextProps.lock) {
	        if (nextProps.lock) {
	          this.preventScrolling();
	        } else {
	          this.allowScrolling();
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.allowScrolling();
	    }

	    // force to only lock/unlock once

	  }, {
	    key: 'preventScrolling',
	    value: function preventScrolling() {
	      if (this.locked === true) {
	        return;
	      }

	      lockingCounter = lockingCounter + 1;
	      this.locked = true;

	      // only lock the first time the component is mounted.
	      if (lockingCounter === 1) {
	        var body = document.getElementsByTagName('body')[0];
	        originalBodyOverflow = body.style.overflow;
	        body.style.overflow = 'hidden';
	      }
	    }
	  }, {
	    key: 'allowScrolling',
	    value: function allowScrolling() {
	      if (this.locked === true) {
	        lockingCounter = lockingCounter - 1;
	        this.locked = false;
	      }

	      if (lockingCounter === 0 && originalBodyOverflow !== null) {
	        var body = document.getElementsByTagName('body')[0];
	        body.style.overflow = originalBodyOverflow || '';
	        originalBodyOverflow = null;
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	  return AutoLockScrolling;
	}(_react.Component);

	AutoLockScrolling.propTypes = process.env.NODE_ENV !== "production" ? {
	  lock: _propTypes2.default.bool.isRequired
	} : {};
	exports.default = AutoLockScrolling;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _react = __webpack_require__(241);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _dom = __webpack_require__(531);

	var _dom2 = _interopRequireDefault(_dom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// heavily inspired by https://github.com/Khan/react-components/blob/master/js/layered-component-mixin.jsx
	var RenderToLayer = function (_Component) {
	  (0, _inherits3.default)(RenderToLayer, _Component);

	  function RenderToLayer() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, RenderToLayer);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RenderToLayer.__proto__ || (0, _getPrototypeOf2.default)(RenderToLayer)).call.apply(_ref, [this].concat(args))), _this), _this.onClickAway = function (event) {
	      if (event.defaultPrevented) {
	        return;
	      }

	      if (!_this.props.componentClickAway) {
	        return;
	      }

	      if (!_this.props.open) {
	        return;
	      }

	      var el = _this.layer;
	      if (event.target !== el && event.target === window || document.documentElement.contains(event.target) && !_dom2.default.isDescendant(el, event.target)) {
	        _this.props.componentClickAway(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(RenderToLayer, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.renderLayer();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.renderLayer();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unrenderLayer();
	    }
	  }, {
	    key: 'getLayer',
	    value: function getLayer() {
	      return this.layer;
	    }
	  }, {
	    key: 'unrenderLayer',
	    value: function unrenderLayer() {
	      if (!this.layer) {
	        return;
	      }

	      if (this.props.useLayerForClickAway) {
	        this.layer.style.position = 'relative';
	        this.layer.removeEventListener('touchstart', this.onClickAway);
	        this.layer.removeEventListener('click', this.onClickAway);
	      } else {
	        window.removeEventListener('touchstart', this.onClickAway);
	        window.removeEventListener('click', this.onClickAway);
	      }

	      (0, _reactDom.unmountComponentAtNode)(this.layer);
	      document.body.removeChild(this.layer);
	      this.layer = null;
	    }

	    /**
	     * By calling this method in componentDidMount() and
	     * componentDidUpdate(), you're effectively creating a "wormhole" that
	     * funnels React's hierarchical updates through to a DOM node on an
	     * entirely different part of the page.
	     */

	  }, {
	    key: 'renderLayer',
	    value: function renderLayer() {
	      var _this2 = this;

	      var _props = this.props,
	          open = _props.open,
	          render = _props.render;


	      if (open) {
	        if (!this.layer) {
	          this.layer = document.createElement('div');
	          document.body.appendChild(this.layer);

	          if (this.props.useLayerForClickAway) {
	            this.layer.addEventListener('touchstart', this.onClickAway);
	            this.layer.addEventListener('click', this.onClickAway);
	            this.layer.style.position = 'fixed';
	            this.layer.style.top = 0;
	            this.layer.style.bottom = 0;
	            this.layer.style.left = 0;
	            this.layer.style.right = 0;
	            this.layer.style.zIndex = this.context.muiTheme.zIndex.layer;
	          } else {
	            setTimeout(function () {
	              window.addEventListener('touchstart', _this2.onClickAway);
	              window.addEventListener('click', _this2.onClickAway);
	            }, 0);
	          }
	        }

	        var layerElement = render();
	        this.layerElement = (0, _reactDom.unstable_renderSubtreeIntoContainer)(this, layerElement, this.layer);
	      } else {
	        this.unrenderLayer();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return null;
	    }
	  }]);
	  return RenderToLayer;
	}(_react.Component);

	RenderToLayer.defaultProps = {
	  useLayerForClickAway: true
	};
	RenderToLayer.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	RenderToLayer.propTypes = process.env.NODE_ENV !== "production" ? {
	  componentClickAway: _propTypes2.default.func,
	  open: _propTypes2.default.bool.isRequired,
	  render: _propTypes2.default.func.isRequired,
	  useLayerForClickAway: _propTypes2.default.bool
	} : {};
	exports.default = RenderToLayer;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*COMPONENTE PORTAFOLIO DE LA PAGINA HOME*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiBadge = __webpack_require__(561);

	var _materialUiBadge2 = _interopRequireDefault(_materialUiBadge);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiSvgIconsFileFolder = __webpack_require__(571);

	var _materialUiSvgIconsFileFolder2 = _interopRequireDefault(_materialUiSvgIconsFileFolder);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	/*global localStorage*/

	var React = __webpack_require__(241);
	var iconbutton = {
	  padding: 0
	};

	var styles = {
	  mediumIcon: {
	    width: 48,
	    height: 48
	  }
	};

	var Portafolio = (function (_React$Component) {
	  _inherits(Portafolio, _React$Component);

	  function Portafolio(props) {
	    _classCallCheck(this, Portafolio);

	    _get(Object.getPrototypeOf(Portafolio.prototype), 'constructor', this).call(this, props);

	    this.state = {
	      open: false,
	      name: " ",
	      description: '',
	      messages: [],
	      snack: false

	    };

	    this.handleChange = this.handleChange.bind(this);
	    this.handleSubmit = this.handleSubmit.bind(this);
	    this.montarportafolios = this.montarportafolios.bind(this);
	    this.handleRequestClose = this.handleRequestClose.bind(this);
	  }

	  _createClass(Portafolio, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {

	      this.montarportafolios(this.props.data);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {

	      this.montarportafolios(nextProps.data);
	      return true;
	    }
	  }, {
	    key: 'montarportafolios',
	    value: function montarportafolios(idorg) {

	      var messageRef = firebase.database().ref().child('organizacion/' + idorg + '/portafolio');
	      messageRef.on('value', function (snapshot) {

	        var messages = snapshot.val();
	        var newState = [];
	        for (var message in messages) {

	          newState.push({
	            id: message,
	            nombre: messages[message].nombre,
	            descripcion: messages[message].descripcion
	          });
	        }

	        window.mensajes = newState;
	      });
	    }
	  }, {
	    key: 'handleOpen',
	    value: function handleOpen() {
	      this.setState({ open: true });
	    }
	  }, {
	    key: 'handleClose',
	    value: function handleClose() {
	      this.setState({ open: false, name: '', description: '' });
	    }
	  }, {
	    key: 'handleRequestClose',
	    value: function handleRequestClose() {

	      this.setState({
	        snack: false
	      });
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {
	      e.preventDefault();
	      this.setState(_defineProperty({}, e.target.name, e.target.value));
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {

	      var nametemp = this.state.name;
	      var descriptiontemp = this.state.description;
	      var idorg = this.props.data;
	      console.log(this.props.data);
	      var object = {
	        name: nametemp,
	        description: descriptiontemp
	      };

	      (0, _configJsx.savePort)(idorg, object);
	      this.setState({ open: false, name: '', description: '', snack: true });
	    }
	  }, {
	    key: 'portseleccionada',
	    value: function portseleccionada(id) {
	      this.props.guardarport(id);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      return React.createElement(
	        'section',
	        null,
	        React.createElement(
	          'div',
	          null,
	          React.createElement(
	            _materialUiStylesMuiThemeProvider2['default'],
	            null,
	            React.createElement(
	              'div',
	              null,
	              window.mensajes.map(function (item) {
	                return React.createElement(
	                  'div',
	                  { className: 'nombreicon', key: item.id },
	                  React.createElement(
	                    'div',
	                    { className: 'iconwrapper' },
	                    React.createElement(_materialUiBadge2['default'], {
	                      badgeContent: React.createElement(
	                        _materialUiIconButton2['default'],
	                        { style: iconbutton, iconStyle: styles.mediumIcon, onClick: function () {
	                            return _this.portseleccionada(item.id);
	                          }, tooltip: item.nombre },
	                        React.createElement(_materialUiSvgIconsFileFolder2['default'], null),
	                        ' '
	                      )
	                    })
	                  ),
	                  React.createElement(
	                    'p',
	                    null,
	                    item.nombre
	                  )
	                );
	              }),
	              React.createElement(_materialUiBadge2['default'], {
	                badgeContent: React.createElement(
	                  _materialUiIconButton2['default'],
	                  { style: iconbutton, onClick: function () {
	                      return _this.handleOpen();
	                    }, iconStyle: styles.mediumIcon, tooltip: 'Crear Portafolio' },
	                  React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                )
	              }),
	              React.createElement(
	                _materialUiDialog2['default'],
	                {
	                  title: 'Crear Portafolio',

	                  modal: true,
	                  open: this.state.open
	                },
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text',
	                  floatingLabelText: 'Nombre'
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.description, onChange: this.handleChange, name: 'description', type: 'text',
	                  fullWidth: true,
	                  floatingLabelText: 'Descripción',
	                  multiLine: true,
	                  rows: 3
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Cancel',
	                  primary: true,
	                  onClick: function () {
	                    return _this.handleClose();
	                  }
	                }),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Aceptar',
	                  primary: true,
	                  onClick: function () {
	                    return _this.handleSubmit();
	                  }
	                })
	              ),
	              React.createElement(_materialUiSnackbar2['default'], {
	                open: this.state.snack,
	                message: 'Portafolio Creado',
	                autoHideDuration: 2000,
	                onRequestClose: this.handleRequestClose
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Portafolio;
	})(React.Component);

	exports['default'] = Portafolio;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "portafolio.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var FileFolder = function FileFolder(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z' })
	  );
	};
	FileFolder = (0, _pure2.default)(FileFolder);
	FileFolder.displayName = 'FileFolder';
	FileFolder.muiName = 'SvgIcon';

	exports.default = FileFolder;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*COMPONENTE PROYECTOS DE LA PAGINA HOME*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiBadge = __webpack_require__(561);

	var _materialUiBadge2 = _interopRequireDefault(_materialUiBadge);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiSvgIconsActionWork = __webpack_require__(573);

	var _materialUiSvgIconsActionWork2 = _interopRequireDefault(_materialUiSvgIconsActionWork);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	/*global localStorage*/

	var React = __webpack_require__(241);
	var styles = {
	  mediumIcon: {
	    width: 48,
	    height: 48
	  }
	};

	var iconbutton = {
	  padding: 0
	};

	var Proyecto = (function (_React$Component) {
	  _inherits(Proyecto, _React$Component);

	  function Proyecto(props) {
	    _classCallCheck(this, Proyecto);

	    _get(Object.getPrototypeOf(Proyecto.prototype), 'constructor', this).call(this, props);

	    this.state = {
	      open: false,
	      name: " ",
	      description: '',
	      messages: [],
	      snack: false

	    };
	    this.handleChange = this.handleChange.bind(this);
	    this.handleSubmit = this.handleSubmit.bind(this);
	    this.montarproyecto = this.montarproyecto.bind(this);
	    this.handleRequestClose = this.handleRequestClose.bind(this);
	  }

	  _createClass(Proyecto, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {

	      this.montarproyecto(this.props.data, this.props.dataport);
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {

	      this.montarproyecto(nextProps.data, nextProps.dataport);
	      return true;
	    }
	  }, {
	    key: 'montarproyecto',
	    value: function montarproyecto(idorg, idport) {

	      var messageRef = firebase.database().ref().child('organizacion/' + idorg + '/portafolio/' + idport + '/proyecto');
	      messageRef.on('value', function (snapshot) {

	        var messages = snapshot.val();
	        var newState = [];
	        for (var message in messages) {

	          newState.push({
	            id: message,
	            nombre: messages[message].nombre,
	            descripcion: messages[message].descripcion
	          });
	        }

	        window.proyectos = newState;
	      });
	    }
	  }, {
	    key: 'handleOpen',
	    value: function handleOpen() {
	      this.setState({ open: true });
	    }
	  }, {
	    key: 'handleClose',
	    value: function handleClose() {
	      this.setState({ open: false, name: '', description: '' });
	    }
	  }, {
	    key: 'handleRequestClose',
	    value: function handleRequestClose() {

	      this.setState({
	        snack: false
	      });
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {
	      e.preventDefault();
	      this.setState(_defineProperty({}, e.target.name, e.target.value));
	    }
	  }, {
	    key: 'handleSubmit',
	    value: function handleSubmit() {

	      var nametemp = this.state.name;
	      var descriptiontemp = this.state.description;
	      var idorg = this.props.data;
	      var idport = this.props.dataport;
	      var object = {
	        name: nametemp,
	        description: descriptiontemp
	      };

	      (0, _configJsx.saveProy)(idorg, idport, object);
	      this.setState({ open: false, name: '', description: '', snack: true });
	    }
	  }, {
	    key: 'proyseleccionada',
	    value: function proyseleccionada(id) {
	      this.props.guardarproy(id);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      return React.createElement(
	        'section',
	        null,
	        React.createElement(
	          'div',
	          null,
	          React.createElement(
	            _materialUiStylesMuiThemeProvider2['default'],
	            null,
	            React.createElement(
	              'div',
	              null,
	              window.proyectos.map(function (item) {
	                return React.createElement(
	                  'div',
	                  { className: 'nombreicon', key: item.id },
	                  React.createElement(
	                    'div',
	                    { className: 'iconwrapper' },
	                    React.createElement(_materialUiBadge2['default'], {
	                      badgeContent: React.createElement(
	                        _materialUiIconButton2['default'],
	                        { style: iconbutton, iconStyle: styles.mediumIcon, onClick: function () {
	                            return _this.proyseleccionada(item.id);
	                          }, tooltip: item.nombre },
	                        React.createElement(_materialUiSvgIconsActionWork2['default'], null),
	                        ' '
	                      )
	                    })
	                  ),
	                  React.createElement(
	                    'p',
	                    null,
	                    item.nombre
	                  )
	                );
	              }),
	              React.createElement(_materialUiBadge2['default'], {
	                badgeContent: React.createElement(
	                  _materialUiIconButton2['default'],
	                  { style: iconbutton, onClick: function () {
	                      return _this.handleOpen();
	                    }, iconStyle: styles.mediumIcon, tooltip: 'Crear Proyecto' },
	                  React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                )
	              }),
	              React.createElement(
	                _materialUiDialog2['default'],
	                {
	                  title: 'Crear Proyecto',

	                  modal: true,
	                  open: this.state.open
	                },
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text',
	                  floatingLabelText: 'Nombre'
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiTextField2['default'], {
	                  value: this.state.description, onChange: this.handleChange, name: 'description', type: 'text',
	                  fullWidth: true,
	                  floatingLabelText: 'Descripción',
	                  multiLine: true,
	                  rows: 3
	                }),
	                React.createElement('br', null),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Cancel',
	                  primary: true,
	                  onClick: function () {
	                    return _this.handleClose();
	                  }
	                }),
	                React.createElement(_materialUiFlatButton2['default'], {
	                  label: 'Aceptar',
	                  primary: true,
	                  onClick: function () {
	                    return _this.handleSubmit();
	                  }
	                })
	              ),
	              React.createElement(_materialUiSnackbar2['default'], {
	                open: this.state.snack,
	                message: 'Proyecto Creado',
	                autoHideDuration: 2000,
	                onRequestClose: this.handleRequestClose
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Proyecto;
	})(React.Component);

	exports['default'] = Proyecto;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "proyecto.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ActionWork = function ActionWork(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M20 6h-4V4c0-1.11-.89-2-2-2h-4c-1.11 0-2 .89-2 2v2H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-6 0h-4V4h4v2z' })
	  );
	};
	ActionWork = (0, _pure2.default)(ActionWork);
	ActionWork.displayName = 'ActionWork';
	ActionWork.muiName = 'SvgIcon';

	exports.default = ActionWork;

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Componente Documento de Home*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiBadge = __webpack_require__(561);

	var _materialUiBadge2 = _interopRequireDefault(_materialUiBadge);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiSvgIconsActionDescription = __webpack_require__(575);

	var _materialUiSvgIconsActionDescription2 = _interopRequireDefault(_materialUiSvgIconsActionDescription);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	/*global localStorage*/

	var React = __webpack_require__(241);
	var styles = {
	    mediumIcon: {
	        width: 48,
	        height: 48
	    }
	};

	var iconbutton = {
	    padding: 0
	};

	var Documento = (function (_React$Component) {
	    _inherits(Documento, _React$Component);

	    function Documento(props) {
	        _classCallCheck(this, Documento);

	        _get(Object.getPrototypeOf(Documento.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            open: false,
	            name: " ",
	            description: '',
	            messages: [],
	            snack: false,
	            tipoformato: 0,
	            formatoseleccionado: '',
	            formatolist: []

	        };
	        this.handleChange = this.handleChange.bind(this);
	        this.handleSubmit = this.handleSubmit.bind(this);
	        this.montardocumento = this.montardocumento.bind(this);
	        this.handleRequestClose = this.handleRequestClose.bind(this);
	        this.tipoformatoseleccionado = this.tipoformatoseleccionado.bind(this);
	    }

	    _createClass(Documento, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {

	            this.montardocumento(this.props.data, this.props.dataport, this.props.dataproy);
	        }
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {

	            this.montardocumento(nextProps.data, nextProps.dataport, nextProps.dataproy);
	            return true;
	        }
	    }, {
	        key: 'montardocumento',
	        value: function montardocumento(idorg, idport, idproy) {

	            var messageRef = firebase.database().ref().child('organizacion/' + idorg + '/portafolio/' + idport + '/proyecto/' + idproy + '/documentos');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();
	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message,
	                        nombre: messages[message].nombre,
	                        descripcion: messages[message].descripcion
	                    });
	                }

	                window.documentos = newState;
	            });
	        }
	    }, {
	        key: 'handleOpen',
	        value: function handleOpen() {
	            this.setState({ open: true });
	        }
	    }, {
	        key: 'handleClose',
	        value: function handleClose() {
	            this.setState({ open: false, name: '', description: '' });
	        }
	    }, {
	        key: 'handleRequestClose',
	        value: function handleRequestClose() {

	            this.setState({
	                snack: false
	            });
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {
	            e.preventDefault();
	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'handleSubmit',
	        value: function handleSubmit() {
	            var _this = this;

	            var nametemp = this.state.name;
	            var descriptiontemp = this.state.description;
	            var idorg = this.props.data;
	            var idport = this.props.dataport;
	            var idproy = this.props.dataproy;
	            var object = {
	                name: nametemp,
	                description: descriptiontemp,
	                formato: this.state.formatoseleccionado,
	                tipoformato: this.state.tipoformato
	            };

	            (0, _configJsx.saveDoc)(idorg, idport, idproy, object);
	            var keydocumentoagregado = localStorage.getItem("keyagregada");

	            if (this.state.tipoformato == 1) {

	                var messageRef = firebase.database().ref().child('formatos/documentos/' + this.state.formatoseleccionado);
	                messageRef.on('value', function (snapshot) {
	                    (0, _configJsx.CrearDocumentoConFormato)(keydocumentoagregado, snapshot.val(), object, _this.state.tipoformato);
	                });
	            }

	            if (this.state.tipoformato == 2) {

	                var messageRef = firebase.database().ref().child('formatos/tablas/' + this.state.formatoseleccionado);
	                messageRef.on('value', function (snapshot) {
	                    (0, _configJsx.CrearTablaConFormato)(keydocumentoagregado, snapshot.val(), object, _this.state.tipoformato);
	                });
	            }

	            this.setState({ open: false, name: '', description: '', snack: true });
	        }
	    }, {
	        key: 'modificardocumento',
	        value: function modificardocumento(id, nombre) {
	            var _this2 = this;

	            localStorage.setItem('iddocumento', id);
	            var tipo = '';
	            var padre = this;
	            var messageRef = firebase.database().ref().child('documentos/' + id + "/");
	            messageRef.on('value', function (snapshot) {
	                padre.tipo = snapshot.val().tipoformato;
	                var nombreformato = snapshot.val().formato;
	                localStorage.setItem('nombreformato', nombreformato);
	                localStorage.setItem('doctitulo', nombre);

	                if (padre.tipo == 1) {
	                    _this2.props.history.push({ pathname: '/editardocumento' });
	                }

	                if (padre.tipo == 2) {
	                    _this2.props.history.push({ pathname: '/editartabla' });
	                }
	            });
	        }
	    }, {
	        key: 'tipoformatoseleccionado',
	        value: function tipoformatoseleccionado(e) {
	            var _this3 = this;

	            var padre = this;
	            this.setState(_defineProperty({}, e.target.name, e.target.value), function () {

	                if (_this3.state.tipoformato == 1) {

	                    var messageRef = firebase.database().ref().child('formatos/documentos/');
	                    messageRef.on('value', function (snapshot) {

	                        var messages = snapshot.val();
	                        var newState = [];
	                        for (var message in messages) {

	                            newState.push({
	                                id: message,
	                                nombre: messages[message].nombre
	                            });
	                        }

	                        padre.setState({
	                            formatolist: newState
	                        });
	                    });
	                }

	                if (_this3.state.tipoformato == 2) {

	                    var messageRef = firebase.database().ref().child('formatos/tablas/');
	                    messageRef.on('value', function (snapshot) {

	                        var messages = snapshot.val();
	                        var newState = [];
	                        for (var message in messages) {

	                            newState.push({
	                                id: message,
	                                nombre: messages[message].nombre
	                            });
	                        }

	                        padre.setState({
	                            formatolist: newState
	                        });
	                    });
	                }
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this4 = this;

	            return React.createElement(
	                'section',
	                null,
	                React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        _materialUiStylesMuiThemeProvider2['default'],
	                        null,
	                        React.createElement(
	                            'div',
	                            null,
	                            window.documentos.map(function (item) {
	                                return React.createElement(
	                                    'div',
	                                    { className: 'nombreicon', key: item.id },
	                                    React.createElement(
	                                        'div',
	                                        { className: 'iconwrapper' },
	                                        React.createElement(_materialUiBadge2['default'], {
	                                            badgeContent: React.createElement(
	                                                _materialUiIconButton2['default'],
	                                                { style: iconbutton, iconStyle: styles.mediumIcon, onClick: function () {
	                                                        return _this4.modificardocumento(item.id, item.nombre);
	                                                    }, tooltip: item.nombre },
	                                                React.createElement(_materialUiSvgIconsActionDescription2['default'], null),
	                                                ' '
	                                            )
	                                        })
	                                    ),
	                                    React.createElement(
	                                        'p',
	                                        null,
	                                        item.nombre
	                                    )
	                                );
	                            }),
	                            React.createElement(_materialUiBadge2['default'], {
	                                badgeContent: React.createElement(
	                                    _materialUiIconButton2['default'],
	                                    { style: iconbutton, onClick: function () {
	                                            return _this4.handleOpen();
	                                        }, iconStyle: styles.mediumIcon, tooltip: 'Crear Portafolio' },
	                                    React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                                )
	                            }),
	                            React.createElement(
	                                _materialUiDialog2['default'],
	                                {
	                                    title: 'Crear Documento',

	                                    modal: true,
	                                    open: this.state.open
	                                },
	                                React.createElement(_materialUiTextField2['default'], {
	                                    value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text',
	                                    floatingLabelText: 'Nombre'
	                                }),
	                                React.createElement('br', null),
	                                React.createElement(_materialUiTextField2['default'], {
	                                    value: this.state.description, onChange: this.handleChange, name: 'description', type: 'text',
	                                    fullWidth: true,
	                                    floatingLabelText: 'Descripción',
	                                    multiLine: true,
	                                    rows: 3
	                                }),
	                                React.createElement('br', null),
	                                React.createElement(
	                                    'div',
	                                    { className: 'selectoresformatos' },
	                                    React.createElement(
	                                        'select',
	                                        { className: 'selecteditar', value: this.state.tipoformato, onChange: this.tipoformatoseleccionado, name: 'tipoformato' },
	                                        React.createElement(
	                                            'option',
	                                            { value: 0 },
	                                            'Tipo de Formato'
	                                        ),
	                                        React.createElement(
	                                            'option',
	                                            { value: 1 },
	                                            'Documento'
	                                        ),
	                                        React.createElement(
	                                            'option',
	                                            { value: 2 },
	                                            'Tabla'
	                                        )
	                                    ),
	                                    React.createElement(
	                                        'select',
	                                        { className: 'selecteditar', value: this.state.formatoseleccionado, onChange: this.handleChange, name: 'formatoseleccionado' },
	                                        React.createElement(
	                                            'option',
	                                            { value: '' },
	                                            'Seleccionar Formato'
	                                        ),
	                                        this.state.formatolist.map(function (item) {
	                                            return React.createElement(
	                                                'option',
	                                                { key: item.id, value: item.id },
	                                                ' ',
	                                                item.nombre,
	                                                ' '
	                                            );
	                                        })
	                                    )
	                                ),
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Cancel',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this4.handleClose();
	                                    }
	                                }),
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Aceptar',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this4.handleSubmit();
	                                    }
	                                })
	                            ),
	                            React.createElement(_materialUiSnackbar2['default'], {
	                                open: this.state.snack,
	                                message: 'Documento Creado',
	                                autoHideDuration: 2000,
	                                onRequestClose: this.handleRequestClose
	                            })
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Documento;
	})(React.Component);

	exports['default'] = Documento;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "documento.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ActionDescription = function ActionDescription(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z' })
	  );
	};
	ActionDescription = (0, _pure2.default)(ActionDescription);
	ActionDescription.displayName = 'ActionDescription';
	ActionDescription.muiName = 'SvgIcon';

	exports.default = ActionDescription;

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _configJsx = __webpack_require__(2);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiCard = __webpack_require__(501);

	var _materialUiSelectField = __webpack_require__(577);

	var _materialUiSelectField2 = _interopRequireDefault(_materialUiSelectField);

	var _materialUiMenuItem = __webpack_require__(599);

	var _materialUiMenuItem2 = _interopRequireDefault(_materialUiMenuItem);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	var React = __webpack_require__(241);
	var Navlog = __webpack_require__(559);

	var card = {
	    display: 'flex',
	    'justifycontent': 'center',
	    padding: '0px',
	    'paddingTop': '16px',
	    'flexDirection': 'column',
	    'alignItems': 'center'

	};

	var Registro = (function (_React$Component) {
	    _inherits(Registro, _React$Component);

	    function Registro() {
	        _classCallCheck(this, Registro);

	        _get(Object.getPrototypeOf(Registro.prototype), 'constructor', this).call(this);
	        this.state = {
	            email: '',
	            name: '',
	            orgselected: '',
	            lastname: '',
	            admin: '',
	            orglist: [],
	            org: "",
	            acctype: 'false',
	            snack: false,
	            snackuso: false,
	            snackinvalido: false,
	            snackdebil: false

	        };
	        this.handleChange = this.handleChange.bind(this);
	        this.handleSubmit = this.handleSubmit.bind(this);
	        this.handleRequestClose = this.handleRequestClose.bind(this);
	    }

	    _createClass(Registro, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {

	            var padre = this;
	            firebase.auth().onAuthStateChanged(function (user) {

	                if (user) {

	                    firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	                        var messages = snapshot.val();

	                        padre.setState({
	                            auth: true,
	                            admin: messages.admin,
	                            orgid: messages.orgid

	                        });
	                    });

	                    if (padre.state.admin == "true") {

	                        var messageRef = firebase.database().ref().child('organizacion');
	                        messageRef.on('value', function (snapshot) {

	                            var messages = snapshot.val();
	                            var newState = [];
	                            for (var message in messages) {

	                                newState.push({
	                                    id: message,
	                                    nombre: messages[message].nombre
	                                });
	                            }

	                            padre.setState({
	                                orglist: newState
	                            });
	                        });
	                    } else {

	                        padre.props.history.push({ pathname: '/ ' });
	                    }
	                } else {
	                    padre.setState({ auth: false });
	                    padre.props.history.push({ pathname: '/login' });
	                }
	            });
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {

	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'handleSubmit',
	        value: function handleSubmit(e) {
	            e.preventDefault();
	            var padre = this;
	            var emailtemp = this.state.email;
	            var nametemp = this.state.name;
	            var lastnametemp = this.state.lastname;
	            var passwordtemp = '137946852';
	            var orgtemp = this.state.org;
	            var admin = this.state.acctype;
	            var organizacion = this.state.orgselected;

	            (0, _configJsx.auth)(emailtemp, passwordtemp).then(function (userRecord) {
	                var objeto = {
	                    uid: userRecord.uid,
	                    email: userRecord.email,
	                    name: nametemp + " " + lastnametemp,
	                    password: passwordtemp,
	                    admin: admin,
	                    org: organizacion,
	                    link: 'https://firebasestorage.googleapis.com/v0/b/proyectofinal-a3139.appspot.com/o/fotodefault%2Fphoto.jpg?alt=media&token=1a60d501-a316-403f-80e5-28f9c9cd9358'
	                };
	                (0, _configJsx.saveUser)(objeto);
	                (0, _configJsx.saveFotoDefault)(objeto);
	                (0, _configJsx.saveUserEnOrg)(organizacion, userRecord, objeto.name);
	                userRecord.updateProfile({ displayName: nametemp + " " + lastnametemp });

	                firebase.auth().sendPasswordResetEmail(emailtemp).then(function () {
	                    padre.setState({ snack: true });
	                    (0, _configJsx.logout)();
	                    location.reload();
	                })['catch'](function (error) {});
	            })['catch'](function (error) {
	                var errorCode = error.code;
	                var errorMessage = error.message;
	                if (errorCode === "auth/email-already-in-use") {
	                    padre.setState({ snackuso: true });
	                } else {
	                    if (errorCode === "auth/invalid-email") {

	                        padre.setState({ snackinvalido: true });
	                    } else {

	                        if (errorCode === "auth/weak-password") {

	                            padre.setState({ snackdebil: true });
	                        }
	                    }
	                }
	            });
	        }
	    }, {
	        key: 'handleRequestClose',
	        value: function handleRequestClose() {

	            this.setState({
	                snack: false,
	                snackuso: false,
	                snackinvalido: false,
	                snackdebil: false
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            return React.createElement(
	                'section',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(Navlog, { history: this.props.history }),
	                        React.createElement(
	                            'form',
	                            { className: 'cardloginregistro', onSubmit: this.handleSubmit },
	                            React.createElement(
	                                'div',
	                                { className: 'login' },
	                                React.createElement(
	                                    _materialUiCard.Card,
	                                    null,
	                                    React.createElement(_materialUiCard.CardTitle, { style: card, titleStyle: card, title: 'Registro' }),
	                                    React.createElement(
	                                        _materialUiCard.CardActions,
	                                        null,
	                                        React.createElement(_materialUiTextField2['default'], {
	                                            floatingLabelText: 'Nombre', value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text'
	                                        }),
	                                        React.createElement('br', null),
	                                        React.createElement(_materialUiTextField2['default'], {

	                                            floatingLabelText: 'Apellido', value: this.state.lastname, onChange: this.handleChange, name: 'lastname', type: 'text'
	                                        }),
	                                        React.createElement('br', null),
	                                        React.createElement(_materialUiTextField2['default'], {

	                                            floatingLabelText: 'Correo Electronico', value: this.state.email, onChange: this.handleChange, name: 'email', type: 'mail'
	                                        }),
	                                        React.createElement('br', null),
	                                        React.createElement(
	                                            'select',
	                                            { className: 'selectfield', value: this.state.acctype, onChange: this.handleChange, name: 'acctype' },
	                                            React.createElement(
	                                                'option',
	                                                { value: false },
	                                                'Usuario'
	                                            ),
	                                            React.createElement(
	                                                'option',
	                                                { value: true },
	                                                'Administrador'
	                                            )
	                                        ),
	                                        React.createElement(
	                                            'select',
	                                            { className: 'selectfield', value: this.state.orgselected, onChange: this.handleChange, name: 'orgselected' },
	                                            React.createElement(
	                                                'option',
	                                                { value: '' },
	                                                'Organizacion'
	                                            ),
	                                            this.state.orglist.map(function (item) {
	                                                return React.createElement(
	                                                    'option',
	                                                    { key: item.id, value: item.id },
	                                                    item.nombre
	                                                );
	                                            })
	                                        ),
	                                        React.createElement(
	                                            'button',
	                                            { className: 'botoncard' },
	                                            'Aceptar'
	                                        )
	                                    )
	                                ),
	                                React.createElement(_materialUiSnackbar2['default'], {
	                                    open: this.state.snack,
	                                    message: 'Usuario Creado',
	                                    autoHideDuration: 2000,
	                                    onRequestClose: this.handleRequestClose
	                                }),
	                                React.createElement(_materialUiSnackbar2['default'], {
	                                    open: this.state.snackuso,
	                                    message: 'Correo Electronico en Uso',
	                                    autoHideDuration: 2000,
	                                    onRequestClose: this.handleRequestClose
	                                }),
	                                React.createElement(_materialUiSnackbar2['default'], {
	                                    open: this.state.snackinvalido,
	                                    message: 'Correo Electronico Invalido',
	                                    autoHideDuration: 2000,
	                                    onRequestClose: this.handleRequestClose
	                                }),
	                                React.createElement(_materialUiSnackbar2['default'], {
	                                    open: this.state.snackdebil,
	                                    message: 'Contraseña muy debil',
	                                    autoHideDuration: 2000,
	                                    onRequestClose: this.handleRequestClose
	                                })
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Registro;
	})(React.Component);

	exports['default'] = Registro;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "registro.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _SelectField = __webpack_require__(578);

	var _SelectField2 = _interopRequireDefault(_SelectField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SelectField2.default;

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _TextField = __webpack_require__(336);

	var _TextField2 = _interopRequireDefault(_TextField);

	var _DropDownMenu = __webpack_require__(579);

	var _DropDownMenu2 = _interopRequireDefault(_DropDownMenu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props) {
	  return {
	    label: {
	      paddingLeft: 0,
	      top: props.floatingLabelText ? 6 : -4
	    },
	    icon: {
	      right: 0,
	      top: props.floatingLabelText ? 8 : 0
	    },
	    hideDropDownUnderline: {
	      borderTop: 'none'
	    },
	    dropDownMenu: {
	      display: 'block'
	    }
	  };
	}

	var SelectField = function (_Component) {
	  (0, _inherits3.default)(SelectField, _Component);

	  function SelectField() {
	    (0, _classCallCheck3.default)(this, SelectField);
	    return (0, _possibleConstructorReturn3.default)(this, (SelectField.__proto__ || (0, _getPrototypeOf2.default)(SelectField)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(SelectField, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          autoWidth = _props.autoWidth,
	          multiple = _props.multiple,
	          children = _props.children,
	          style = _props.style,
	          labelStyle = _props.labelStyle,
	          iconStyle = _props.iconStyle,
	          id = _props.id,
	          underlineDisabledStyle = _props.underlineDisabledStyle,
	          underlineFocusStyle = _props.underlineFocusStyle,
	          menuItemStyle = _props.menuItemStyle,
	          selectedMenuItemStyle = _props.selectedMenuItemStyle,
	          underlineStyle = _props.underlineStyle,
	          dropDownMenuProps = _props.dropDownMenuProps,
	          errorStyle = _props.errorStyle,
	          disabled = _props.disabled,
	          floatingLabelFixed = _props.floatingLabelFixed,
	          floatingLabelText = _props.floatingLabelText,
	          floatingLabelStyle = _props.floatingLabelStyle,
	          hintStyle = _props.hintStyle,
	          hintText = _props.hintText,
	          fullWidth = _props.fullWidth,
	          errorText = _props.errorText,
	          listStyle = _props.listStyle,
	          maxHeight = _props.maxHeight,
	          menuStyle = _props.menuStyle,
	          onFocus = _props.onFocus,
	          onBlur = _props.onBlur,
	          onChange = _props.onChange,
	          selectionRenderer = _props.selectionRenderer,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoWidth', 'multiple', 'children', 'style', 'labelStyle', 'iconStyle', 'id', 'underlineDisabledStyle', 'underlineFocusStyle', 'menuItemStyle', 'selectedMenuItemStyle', 'underlineStyle', 'dropDownMenuProps', 'errorStyle', 'disabled', 'floatingLabelFixed', 'floatingLabelText', 'floatingLabelStyle', 'hintStyle', 'hintText', 'fullWidth', 'errorText', 'listStyle', 'maxHeight', 'menuStyle', 'onFocus', 'onBlur', 'onChange', 'selectionRenderer', 'value']);


	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement(
	        _TextField2.default,
	        (0, _extends3.default)({}, other, {
	          style: style,
	          disabled: disabled,
	          floatingLabelFixed: floatingLabelFixed,
	          floatingLabelText: floatingLabelText,
	          floatingLabelStyle: floatingLabelStyle,
	          hintStyle: hintStyle,
	          hintText: !hintText && !floatingLabelText ? ' ' : hintText,
	          fullWidth: fullWidth,
	          errorText: errorText,
	          underlineStyle: underlineStyle,
	          errorStyle: errorStyle,
	          onFocus: onFocus,
	          onBlur: onBlur,
	          id: id,
	          underlineDisabledStyle: underlineDisabledStyle,
	          underlineFocusStyle: underlineFocusStyle
	        }),
	        _react2.default.createElement(
	          _DropDownMenu2.default,
	          (0, _extends3.default)({
	            disabled: disabled,
	            style: (0, _simpleAssign2.default)(styles.dropDownMenu, menuStyle),
	            labelStyle: (0, _simpleAssign2.default)(styles.label, labelStyle),
	            iconStyle: (0, _simpleAssign2.default)(styles.icon, iconStyle),
	            menuItemStyle: menuItemStyle,
	            selectedMenuItemStyle: selectedMenuItemStyle,
	            underlineStyle: styles.hideDropDownUnderline,
	            listStyle: listStyle,
	            autoWidth: autoWidth,
	            value: value,
	            onChange: onChange,
	            maxHeight: maxHeight,
	            multiple: multiple,
	            selectionRenderer: selectionRenderer
	          }, dropDownMenuProps),
	          children
	        )
	      );
	    }
	  }]);
	  return SelectField;
	}(_react.Component);

	SelectField.defaultProps = {
	  autoWidth: false,
	  disabled: false,
	  fullWidth: false,
	  multiple: false
	};
	SelectField.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	SelectField.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, the width will automatically be set according to the
	   * items inside the menu.
	   * To control the width in CSS instead, leave this prop set to `false`.
	   */
	  autoWidth: _propTypes2.default.bool,
	  /**
	   * The `MenuItem` elements to populate the select field with.
	   * If the menu items have a `label` prop, that value will
	   * represent the selected menu item in the rendered select field.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * If true, the select field will be disabled.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Object that can handle and override any property of component DropDownMenu.
	   */
	  dropDownMenuProps: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the error element.
	   */
	  errorStyle: _propTypes2.default.object,
	  /**
	   * The error content to display.
	   */
	  errorText: _propTypes2.default.node,
	  /**
	   * If true, the floating label will float even when no value is selected.
	   */
	  floatingLabelFixed: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the floating label.
	   */
	  floatingLabelStyle: _propTypes2.default.object,
	  /**
	   * The content of the floating label.
	   */
	  floatingLabelText: _propTypes2.default.node,
	  /**
	   * If true, the select field will take up the full width of its container.
	   */
	  fullWidth: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the hint element.
	   */
	  hintStyle: _propTypes2.default.object,
	  /**
	   * The hint content to display.
	   */
	  hintText: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the icon element.
	   */
	  iconStyle: _propTypes2.default.object,
	  /**
	   * The id prop for the text field.
	   */
	  id: _propTypes2.default.string,
	  /**
	   * Override the label style when the select field is inactive.
	   */
	  labelStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underlying `List` element.
	   */
	  listStyle: _propTypes2.default.object,
	  /**
	   * Override the default max-height of the underlying `DropDownMenu` element.
	   */
	  maxHeight: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of menu items.
	   */
	  menuItemStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underlying `DropDownMenu` element.
	   */
	  menuStyle: _propTypes2.default.object,
	  /**
	   * If true, `value` must be an array and the menu will support
	   * multiple selections.
	   */
	  multiple: _propTypes2.default.bool,
	  /** @ignore */
	  onBlur: _propTypes2.default.func,
	  /**
	   * Callback function fired when a menu item is selected.
	   *
	   * @param {object} event TouchTap event targeting the menu item
	   * that was selected.
	   * @param {number} key The index of the selected menu item, or undefined
	   * if `multiple` is true.
	   * @param {any} payload If `multiple` is true, the menu's `value`
	   * array with either the menu item's `value` added (if
	   * it wasn't already selected) or omitted (if it was already selected).
	   * Otherwise, the `value` of the menu item.
	   */
	  onChange: _propTypes2.default.func,
	  /** @ignore */
	  onFocus: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of selected menu items.
	   */
	  selectedMenuItemStyle: _propTypes2.default.object,
	  /**
	   * Customize the rendering of the selected item.
	   *
	   * @param {any} value If `multiple` is true, the menu's `value`
	   * array with either the menu item's `value` added (if
	   * it wasn't already selected) or omitted (if it was already selected).
	   * Otherwise, the `value` of the menu item.
	   * @param {any} menuItem The selected `MenuItem`.
	   * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.
	   */
	  selectionRenderer: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underline element when the select
	   * field is disabled.
	   */
	  underlineDisabledStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underline element when the select field
	   * is focused.
	   */
	  underlineFocusStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underline element.
	   */
	  underlineStyle: _propTypes2.default.object,
	  /**
	   * If `multiple` is true, an array of the `value`s of the selected
	   * menu items. Otherwise, the `value` of the selected menu item.
	   * If provided, the menu will be a controlled component.
	   */
	  value: _propTypes2.default.any
	} : {};
	exports.default = SelectField;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.MenuItem = exports.DropDownMenu = undefined;

	var _DropDownMenu2 = __webpack_require__(580);

	var _DropDownMenu3 = _interopRequireDefault(_DropDownMenu2);

	var _MenuItem2 = __webpack_require__(593);

	var _MenuItem3 = _interopRequireDefault(_MenuItem2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.DropDownMenu = _DropDownMenu3.default;
	exports.MenuItem = _MenuItem3.default;
	exports.default = _DropDownMenu3.default;

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _arrowDropDown = __webpack_require__(581);

	var _arrowDropDown2 = _interopRequireDefault(_arrowDropDown);

	var _Menu = __webpack_require__(582);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _ClearFix = __webpack_require__(587);

	var _ClearFix2 = _interopRequireDefault(_ClearFix);

	var _Popover = __webpack_require__(589);

	var _Popover2 = _interopRequireDefault(_Popover);

	var _PopoverAnimationVertical = __webpack_require__(592);

	var _PopoverAnimationVertical2 = _interopRequireDefault(_PopoverAnimationVertical);

	var _keycode = __webpack_require__(521);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _events = __webpack_require__(520);

	var _events2 = _interopRequireDefault(_events);

	var _IconButton = __webpack_require__(517);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var disabled = props.disabled;

	  var spacing = context.muiTheme.baseTheme.spacing;
	  var palette = context.muiTheme.baseTheme.palette;
	  var accentColor = context.muiTheme.dropDownMenu.accentColor;
	  return {
	    control: {
	      cursor: disabled ? 'not-allowed' : 'pointer',
	      height: '100%',
	      position: 'relative',
	      width: '100%'
	    },
	    icon: {
	      fill: accentColor,
	      position: 'absolute',
	      right: spacing.desktopGutterLess,
	      top: (spacing.iconSize - 24) / 2 + spacing.desktopGutterMini / 2
	    },
	    iconChildren: {
	      fill: 'inherit'
	    },
	    label: {
	      color: disabled ? palette.disabledColor : palette.textColor,
	      height: spacing.desktopToolbarHeight + 'px',
	      lineHeight: spacing.desktopToolbarHeight + 'px',
	      overflow: 'hidden',
	      opacity: 1,
	      position: 'relative',
	      paddingLeft: spacing.desktopGutter,
	      paddingRight: spacing.iconSize * 2 + spacing.desktopGutterMini,
	      textOverflow: 'ellipsis',
	      top: 0,
	      whiteSpace: 'nowrap'
	    },
	    labelWhenOpen: {
	      opacity: 0,
	      top: spacing.desktopToolbarHeight / 8
	    },
	    root: {
	      display: 'inline-block',
	      fontSize: spacing.desktopDropDownMenuFontSize,
	      height: spacing.desktopSubheaderHeight,
	      fontFamily: context.muiTheme.baseTheme.fontFamily,
	      outline: 'none',
	      position: 'relative',
	      transition: _transitions2.default.easeOut()
	    },
	    rootWhenOpen: {
	      opacity: 1
	    },
	    underline: {
	      borderTop: 'solid 1px ' + accentColor,
	      bottom: 1,
	      left: 0,
	      margin: '-1px ' + spacing.desktopGutter + 'px',
	      right: 0,
	      position: 'absolute'
	    }
	  };
	}

	var DropDownMenu = function (_Component) {
	  (0, _inherits3.default)(DropDownMenu, _Component);

	  function DropDownMenu() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, DropDownMenu);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = DropDownMenu.__proto__ || (0, _getPrototypeOf2.default)(DropDownMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      open: false
	    }, _this.rootNode = undefined, _this.arrowNode = undefined, _this.handleTouchTapControl = function (event) {
	      event.preventDefault();
	      if (!_this.props.disabled) {
	        _this.setState({
	          open: !_this.state.open,
	          anchorEl: _this.rootNode
	        });
	      }
	    }, _this.handleRequestCloseMenu = function () {
	      _this.close(false);
	    }, _this.handleEscKeyDownMenu = function () {
	      _this.close(true);
	    }, _this.handleKeyDown = function (event) {
	      switch ((0, _keycode2.default)(event)) {
	        case 'up':
	        case 'down':
	        case 'space':
	        case 'enter':
	          event.preventDefault();
	          _this.setState({
	            open: true,
	            anchorEl: _this.rootNode
	          });
	          break;
	      }
	    }, _this.handleItemTouchTap = function (event, child, index) {
	      if (_this.props.multiple) {
	        if (!_this.state.open) {
	          _this.setState({ open: true });
	        }
	      } else {
	        event.persist();
	        _this.setState({
	          open: false
	        }, function () {
	          if (_this.props.onChange) {
	            _this.props.onChange(event, index, child.props.value);
	          }

	          _this.close(_events2.default.isKeyboard(event));
	        });
	      }
	    }, _this.handleChange = function (event, value) {
	      if (_this.props.multiple && _this.props.onChange) {
	        _this.props.onChange(event, undefined, value);
	      }
	    }, _this.close = function (isKeyboard) {
	      _this.setState({
	        open: false
	      }, function () {
	        if (_this.props.onClose) {
	          _this.props.onClose();
	        }

	        if (isKeyboard) {
	          var dropArrow = _this.arrowNode;
	          var dropNode = _reactDom2.default.findDOMNode(dropArrow);
	          dropNode.focus();
	          dropArrow.setKeyboardFocus(true);
	        }
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  // The nested styles for drop-down-menu are modified by toolbar and possibly
	  // other user components, so it will give full access to its js styles rather
	  // than just the parent.


	  (0, _createClass3.default)(DropDownMenu, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      if (this.props.autoWidth) {
	        this.setWidth();
	      }
	      if (this.props.openImmediately) {
	        // TODO: Temporary fix to make openImmediately work with popover.
	        /* eslint-disable react/no-did-mount-set-state */
	        setTimeout(function () {
	          return _this2.setState({
	            open: true,
	            anchorEl: _this2.rootNode
	          });
	        }, 0);
	        /* eslint-enable react/no-did-mount-set-state */
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps() {
	      if (this.props.autoWidth) {
	        this.setWidth();
	      }
	    }
	  }, {
	    key: 'getInputNode',


	    /**
	     * This method is deprecated but still here because the TextField
	     * need it in order to work. TODO: That will be addressed later.
	     */
	    value: function getInputNode() {
	      var _this3 = this;

	      var rootNode = this.rootNode;

	      rootNode.focus = function () {
	        if (!_this3.props.disabled) {
	          _this3.setState({
	            open: !_this3.state.open,
	            anchorEl: _this3.rootNode
	          });
	        }
	      };

	      return rootNode;
	    }
	  }, {
	    key: 'setWidth',
	    value: function setWidth() {
	      var el = this.rootNode;
	      if (!this.props.style || !this.props.style.hasOwnProperty('width')) {
	        el.style.width = 'auto';
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;

	      var _props = this.props,
	          animated = _props.animated,
	          animation = _props.animation,
	          autoWidth = _props.autoWidth,
	          multiple = _props.multiple,
	          children = _props.children,
	          className = _props.className,
	          disabled = _props.disabled,
	          iconStyle = _props.iconStyle,
	          labelStyle = _props.labelStyle,
	          listStyle = _props.listStyle,
	          maxHeight = _props.maxHeight,
	          menuStyleProp = _props.menuStyle,
	          selectionRenderer = _props.selectionRenderer,
	          onClose = _props.onClose,
	          openImmediately = _props.openImmediately,
	          menuItemStyle = _props.menuItemStyle,
	          selectedMenuItemStyle = _props.selectedMenuItemStyle,
	          style = _props.style,
	          underlineStyle = _props.underlineStyle,
	          value = _props.value,
	          iconButton = _props.iconButton,
	          anchorOrigin = _props.anchorOrigin,
	          targetOrigin = _props.targetOrigin,
	          other = (0, _objectWithoutProperties3.default)(_props, ['animated', 'animation', 'autoWidth', 'multiple', 'children', 'className', 'disabled', 'iconStyle', 'labelStyle', 'listStyle', 'maxHeight', 'menuStyle', 'selectionRenderer', 'onClose', 'openImmediately', 'menuItemStyle', 'selectedMenuItemStyle', 'style', 'underlineStyle', 'value', 'iconButton', 'anchorOrigin', 'targetOrigin']);
	      var _state = this.state,
	          anchorEl = _state.anchorEl,
	          open = _state.open;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var displayValue = '';
	      if (!multiple) {
	        _react2.default.Children.forEach(children, function (child) {
	          if (child && value === child.props.value) {
	            if (selectionRenderer) {
	              displayValue = selectionRenderer(value, child);
	            } else {
	              // This will need to be improved (in case primaryText is a node)
	              displayValue = child.props.label || child.props.primaryText;
	            }
	          }
	        });
	      } else {
	        var values = [];
	        var selectionRendererChildren = [];
	        _react2.default.Children.forEach(children, function (child) {
	          if (child && value && value.indexOf(child.props.value) > -1) {
	            if (selectionRenderer) {
	              values.push(child.props.value);
	              selectionRendererChildren.push(child);
	            } else {
	              values.push(child.props.label || child.props.primaryText);
	            }
	          }
	        });

	        displayValue = [];
	        if (selectionRenderer) {
	          displayValue = selectionRenderer(values, selectionRendererChildren);
	        } else {
	          displayValue = values.join(', ');
	        }
	      }

	      var menuStyle = void 0;
	      if (anchorEl && !autoWidth) {
	        menuStyle = (0, _simpleAssign2.default)({
	          width: anchorEl.clientWidth
	        }, menuStyleProp);
	      } else {
	        menuStyle = menuStyleProp;
	      }

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, {
	          ref: function ref(node) {
	            _this4.rootNode = node;
	          },
	          className: className,
	          style: prepareStyles((0, _simpleAssign2.default)({}, styles.root, open && styles.rootWhenOpen, style))
	        }),
	        _react2.default.createElement(
	          _ClearFix2.default,
	          { style: styles.control, onClick: this.handleTouchTapControl },
	          _react2.default.createElement(
	            'div',
	            { style: prepareStyles((0, _simpleAssign2.default)({}, styles.label, open && styles.labelWhenOpen, labelStyle)) },
	            displayValue
	          ),
	          _react2.default.createElement(
	            _IconButton2.default,
	            {
	              disabled: disabled,
	              onKeyDown: this.handleKeyDown,
	              ref: function ref(node) {
	                _this4.arrowNode = node;
	              },
	              style: (0, _simpleAssign2.default)({}, styles.icon, iconStyle),
	              iconStyle: styles.iconChildren
	            },
	            iconButton
	          ),
	          _react2.default.createElement('div', { style: prepareStyles((0, _simpleAssign2.default)({}, styles.underline, underlineStyle)) })
	        ),
	        _react2.default.createElement(
	          _Popover2.default,
	          {
	            anchorOrigin: anchorOrigin,
	            targetOrigin: targetOrigin,
	            anchorEl: anchorEl,
	            animation: animation || _PopoverAnimationVertical2.default,
	            open: open,
	            animated: animated,
	            onRequestClose: this.handleRequestCloseMenu
	          },
	          _react2.default.createElement(
	            _Menu2.default,
	            {
	              multiple: multiple,
	              maxHeight: maxHeight,
	              desktop: true,
	              value: value,
	              onEscKeyDown: this.handleEscKeyDownMenu,
	              style: menuStyle,
	              listStyle: listStyle,
	              onItemTouchTap: this.handleItemTouchTap,
	              onChange: this.handleChange,
	              menuItemStyle: menuItemStyle,
	              selectedMenuItemStyle: selectedMenuItemStyle,
	              autoWidth: autoWidth,
	              width: !autoWidth && menuStyle ? menuStyle.width : null
	            },
	            children
	          )
	        )
	      );
	    }
	  }]);
	  return DropDownMenu;
	}(_react.Component);

	DropDownMenu.muiName = 'DropDownMenu';
	DropDownMenu.defaultProps = {
	  animated: true,
	  autoWidth: true,
	  disabled: false,
	  iconButton: _react2.default.createElement(_arrowDropDown2.default, null),
	  openImmediately: false,
	  maxHeight: 500,
	  multiple: false,
	  anchorOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  }
	};
	DropDownMenu.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	DropDownMenu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * This is the point on the anchor that the popover's
	   * `targetOrigin` will attach to.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  anchorOrigin: _propTypes4.default.origin,
	  /**
	   * If true, the popover will apply transitions when
	   * it gets added to the DOM.
	   */
	  animated: _propTypes2.default.bool,
	  /**
	   * Override the default animation component used.
	   */
	  animation: _propTypes2.default.func,
	  /**
	   * The width will automatically be set according to the items inside the menu.
	   * To control this width in css instead, set this prop to `false`.
	   */
	  autoWidth: _propTypes2.default.bool,
	  /**
	   * The `MenuItem`s to populate the `Menu` with. If the `MenuItems` have the
	   * prop `label` that value will be used to render the representation of that
	   * item within the field.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Disables the menu.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Overrides default `SvgIcon` dropdown arrow component.
	   */
	  iconButton: _propTypes2.default.node,
	  /**
	   * Overrides the styles of icon element.
	   */
	  iconStyle: _propTypes2.default.object,
	  /**
	   * Overrides the styles of label when the `DropDownMenu` is inactive.
	   */
	  labelStyle: _propTypes2.default.object,
	  /**
	   * The style object to use to override underlying list style.
	   */
	  listStyle: _propTypes2.default.object,
	  /**
	   * The maximum height of the `Menu` when it is displayed.
	   */
	  maxHeight: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of menu items.
	   */
	  menuItemStyle: _propTypes2.default.object,
	  /**
	   * Overrides the styles of `Menu` when the `DropDownMenu` is displayed.
	   */
	  menuStyle: _propTypes2.default.object,
	  /**
	   * If true, `value` must be an array and the menu will support
	   * multiple selections.
	   */
	  multiple: _propTypes2.default.bool,
	  /**
	   * Callback function fired when a menu item is clicked, other than the one currently selected.
	   *
	   * @param {object} event TouchTap event targeting the menu item that was clicked.
	   * @param {number} key The index of the clicked menu item in the `children` collection.
	   * @param {any} value If `multiple` is true, the menu's `value`
	   * array with either the menu item's `value` added (if
	   * it wasn't already selected) or omitted (if it was already selected).
	   * Otherwise, the `value` of the menu item.
	   */
	  onChange: _propTypes2.default.func,
	  /**
	   * Callback function fired when the menu is closed.
	   */
	  onClose: _propTypes2.default.func,
	  /**
	   * Set to true to have the `DropDownMenu` automatically open on mount.
	   */
	  openImmediately: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of selected menu items.
	   */
	  selectedMenuItemStyle: _propTypes2.default.object,
	  /**
	   * Callback function fired when a menu item is clicked, other than the one currently selected.
	   *
	   * @param {any} value If `multiple` is true, the menu's `value`
	   * array with either the menu item's `value` added (if
	   * it wasn't already selected) or omitted (if it was already selected).
	   * Otherwise, the `value` of the menu item.
	   * @param {any} menuItem The selected `MenuItem`.
	   * If `multiple` is true, this will be an array with the `MenuItem`s matching the `value`s parameter.
	   */
	  selectionRenderer: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * This is the point on the popover which will attach to
	   * the anchor's origin.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  targetOrigin: _propTypes4.default.origin,
	  /**
	   * Overrides the inline-styles of the underline.
	   */
	  underlineStyle: _propTypes2.default.object,
	  /**
	   * If `multiple` is true, an array of the `value`s of the selected
	   * menu items. Otherwise, the `value` of the selected menu item.
	   * If provided, the menu will be a controlled component.
	   */
	  value: _propTypes2.default.any
	} : {};
	exports.default = DropDownMenu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationArrowDropDown = function NavigationArrowDropDown(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M7 10l5 5 5-5z' })
	  );
	};
	NavigationArrowDropDown = (0, _pure2.default)(NavigationArrowDropDown);
	NavigationArrowDropDown.displayName = 'NavigationArrowDropDown';
	NavigationArrowDropDown.muiName = 'SvgIcon';

	exports.default = NavigationArrowDropDown;

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _toArray2 = __webpack_require__(530);

	var _toArray3 = _interopRequireDefault(_toArray2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _ClickAwayListener = __webpack_require__(546);

	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

	var _keycode = __webpack_require__(521);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _List = __webpack_require__(583);

	var _List2 = _interopRequireDefault(_List);

	var _menuUtils = __webpack_require__(586);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var desktop = props.desktop,
	      maxHeight = props.maxHeight,
	      width = props.width;
	  var muiTheme = context.muiTheme;


	  var styles = {
	    root: {
	      // Nested div because the List scales x faster than it scales y
	      zIndex: muiTheme.zIndex.menu,
	      maxHeight: maxHeight,
	      overflowY: maxHeight ? 'auto' : null
	    },
	    divider: {
	      marginTop: 7,
	      marginBottom: 8
	    },
	    list: {
	      display: 'table-cell',
	      paddingBottom: desktop ? 16 : 8,
	      paddingTop: desktop ? 16 : 8,
	      userSelect: 'none',
	      width: width
	    },
	    selectedMenuItem: {
	      color: muiTheme.menuItem.selectedTextColor
	    }
	  };

	  return styles;
	}

	var Menu = function (_Component) {
	  (0, _inherits3.default)(Menu, _Component);

	  function Menu(props, context) {
	    (0, _classCallCheck3.default)(this, Menu);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Menu.__proto__ || (0, _getPrototypeOf2.default)(Menu)).call(this, props, context));

	    _initialiseProps.call(_this);

	    var filteredChildren = _this.getFilteredChildren(props.children);
	    var selectedIndex = _this.getLastSelectedIndex(props, filteredChildren);

	    var newFocusIndex = props.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
	    if (newFocusIndex !== -1 && props.onMenuItemFocusChange) {
	      props.onMenuItemFocusChange(null, newFocusIndex);
	    }
	    _this.state = {
	      focusIndex: newFocusIndex,
	      isKeyboardFocused: props.initiallyKeyboardFocused,
	      keyWidth: props.desktop ? 64 : 56
	    };

	    _this.hotKeyHolder = new _menuUtils.HotKeyHolder();
	    return _this;
	  }

	  (0, _createClass3.default)(Menu, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.autoWidth) {
	        this.setWidth();
	      }
	      this.setScollPosition();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var selectedIndex = void 0;
	      var filteredChildren = this.getFilteredChildren(nextProps.children);

	      if (this.props.multiple !== true) {
	        selectedIndex = this.getLastSelectedIndex(nextProps, filteredChildren);
	      } else {
	        selectedIndex = this.state.focusIndex;
	      }

	      var newFocusIndex = nextProps.disableAutoFocus ? -1 : selectedIndex >= 0 ? selectedIndex : 0;
	      if (newFocusIndex !== this.state.focusIndex && this.props.onMenuItemFocusChange) {
	        this.props.onMenuItemFocusChange(null, newFocusIndex);
	      }
	      this.setState({
	        focusIndex: newFocusIndex,
	        keyWidth: nextProps.desktop ? 64 : 56
	      });
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState) || !(0, _shallowEqual2.default)(this.context, nextContext);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      if (this.props.autoWidth) this.setWidth();
	    }
	  }, {
	    key: 'getValueLink',


	    // Do not use outside of this component, it will be removed once valueLink is deprecated
	    value: function getValueLink(props) {
	      return props.valueLink || {
	        value: props.value,
	        requestChange: props.onChange
	      };
	    }
	  }, {
	    key: 'setKeyboardFocused',
	    value: function setKeyboardFocused(keyboardFocused) {
	      this.setState({
	        isKeyboardFocused: keyboardFocused
	      });
	    }
	  }, {
	    key: 'getFilteredChildren',
	    value: function getFilteredChildren(children) {
	      var filteredChildren = [];
	      _react2.default.Children.forEach(children, function (child) {
	        if (child) {
	          filteredChildren.push(child);
	        }
	      });
	      return filteredChildren;
	    }
	  }, {
	    key: 'cloneMenuItem',
	    value: function cloneMenuItem(child, childIndex, styles, index) {
	      var _this2 = this;

	      var childIsDisabled = child.props.disabled;

	      var selectedChildStyles = {};
	      if (!childIsDisabled) {
	        var selected = this.isChildSelected(child, this.props);

	        if (selected) {
	          (0, _simpleAssign2.default)(selectedChildStyles, styles.selectedMenuItem, this.props.selectedMenuItemStyle);
	        }
	      }
	      var mergedChildStyles = (0, _simpleAssign2.default)({}, child.props.style, this.props.menuItemStyle, selectedChildStyles);

	      var extraProps = {
	        desktop: this.props.desktop,
	        style: mergedChildStyles
	      };
	      if (!childIsDisabled) {
	        var isFocused = childIndex === this.state.focusIndex;
	        var focusState = 'none';
	        if (isFocused) {
	          focusState = this.state.isKeyboardFocused ? 'keyboard-focused' : 'focused';
	        }

	        (0, _simpleAssign2.default)(extraProps, {
	          focusState: focusState,
	          onClick: function onClick(event) {
	            _this2.handleMenuItemTouchTap(event, child, index);
	            if (child.props.onClick) child.props.onClick(event);
	          },
	          ref: isFocused ? 'focusedMenuItem' : null
	        });
	      }
	      return _react2.default.cloneElement(child, extraProps);
	    }
	  }, {
	    key: 'decrementKeyboardFocusIndex',
	    value: function decrementKeyboardFocusIndex(event) {
	      var index = this.state.focusIndex;

	      index--;
	      if (index < 0) index = 0;

	      this.setFocusIndex(event, index, true);
	    }
	  }, {
	    key: 'getMenuItemCount',
	    value: function getMenuItemCount(filteredChildren) {
	      var menuItemCount = 0;
	      filteredChildren.forEach(function (child) {
	        var childIsADivider = child.type && child.type.muiName === 'Divider';
	        var childIsDisabled = child.props.disabled;
	        if (!childIsADivider && !childIsDisabled) menuItemCount++;
	      });
	      return menuItemCount;
	    }
	  }, {
	    key: 'getLastSelectedIndex',
	    value: function getLastSelectedIndex(props, filteredChildren) {
	      var _this3 = this;

	      var selectedIndex = -1;
	      var menuItemIndex = 0;

	      filteredChildren.forEach(function (child) {
	        var childIsADivider = child.type && child.type.muiName === 'Divider';

	        if (_this3.isChildSelected(child, props)) selectedIndex = menuItemIndex;
	        if (!childIsADivider) menuItemIndex++;
	      });

	      return selectedIndex;
	    }
	  }, {
	    key: 'setFocusIndexStartsWith',
	    value: function setFocusIndexStartsWith(event, keys) {
	      var foundIndex = -1;
	      _react2.default.Children.forEach(this.props.children, function (child, index) {
	        if (foundIndex >= 0) {
	          return;
	        }
	        var primaryText = child.props.primaryText;

	        if (typeof primaryText === 'string' && primaryText.substr(0, keys.length).toLowerCase() === keys.toLowerCase()) {
	          foundIndex = index;
	        }
	      });
	      if (foundIndex >= 0) {
	        this.setFocusIndex(event, foundIndex, true);
	        return true;
	      }
	      return false;
	    }
	  }, {
	    key: 'handleMenuItemTouchTap',
	    value: function handleMenuItemTouchTap(event, item, index) {
	      var children = this.props.children;
	      var multiple = this.props.multiple;
	      var valueLink = this.getValueLink(this.props);
	      var menuValue = valueLink.value;
	      var itemValue = item.props.value;
	      var focusIndex = _react2.default.isValidElement(children) ? 0 : children.indexOf(item);

	      this.setFocusIndex(event, focusIndex, false);

	      if (multiple) {
	        menuValue = menuValue || [];

	        var itemIndex = menuValue.indexOf(itemValue);

	        var _menuValue = menuValue,
	            _menuValue2 = (0, _toArray3.default)(_menuValue),
	            newMenuValue = _menuValue2.slice(0);

	        if (itemIndex === -1) {
	          newMenuValue.push(itemValue);
	        } else {
	          newMenuValue.splice(itemIndex, 1);
	        }

	        valueLink.requestChange(event, newMenuValue);
	      } else if (!multiple && itemValue !== menuValue) {
	        valueLink.requestChange(event, itemValue);
	      }

	      this.props.onItemTouchTap(event, item, index);
	    }
	  }, {
	    key: 'incrementKeyboardFocusIndex',
	    value: function incrementKeyboardFocusIndex(event, filteredChildren) {
	      var index = this.state.focusIndex;
	      var maxIndex = this.getMenuItemCount(filteredChildren) - 1;

	      index++;
	      if (index > maxIndex) index = maxIndex;

	      this.setFocusIndex(event, index, true);
	    }
	  }, {
	    key: 'isChildSelected',
	    value: function isChildSelected(child, props) {
	      var menuValue = this.getValueLink(props).value;
	      var childValue = child.props.value;

	      if (props.multiple) {
	        return menuValue && menuValue.length && menuValue.indexOf(childValue) !== -1;
	      } else {
	        return child.props.hasOwnProperty('value') && menuValue === childValue;
	      }
	    }
	  }, {
	    key: 'setFocusIndex',
	    value: function setFocusIndex(event, newIndex, isKeyboardFocused) {
	      if (this.props.onMenuItemFocusChange) {
	        // Do this even if `newIndex === this.state.focusIndex` to allow users
	        // to detect up-arrow on the first MenuItem or down-arrow on the last.
	        this.props.onMenuItemFocusChange(event, newIndex);
	      }
	      this.setState({
	        focusIndex: newIndex,
	        isKeyboardFocused: isKeyboardFocused
	      });
	    }
	  }, {
	    key: 'setScollPosition',
	    value: function setScollPosition() {
	      var desktop = this.props.desktop;
	      var focusedMenuItem = this.refs.focusedMenuItem;
	      var menuItemHeight = desktop ? 32 : 48;

	      if (focusedMenuItem) {
	        var selectedOffSet = _reactDom2.default.findDOMNode(focusedMenuItem).offsetTop;

	        // Make the focused item be the 2nd item in the list the user sees
	        var scrollTop = selectedOffSet - menuItemHeight;
	        if (scrollTop < menuItemHeight) scrollTop = 0;

	        _reactDom2.default.findDOMNode(this.refs.scrollContainer).scrollTop = scrollTop;
	      }
	    }
	  }, {
	    key: 'cancelScrollEvent',
	    value: function cancelScrollEvent(event) {
	      event.stopPropagation();
	      event.preventDefault();
	      return false;
	    }
	  }, {
	    key: 'setWidth',
	    value: function setWidth() {
	      var el = _reactDom2.default.findDOMNode(this);
	      var listEl = _reactDom2.default.findDOMNode(this.refs.list);
	      var elWidth = el.offsetWidth;
	      var keyWidth = this.state.keyWidth;
	      var minWidth = keyWidth * 1.5;
	      var keyIncrements = elWidth / keyWidth;
	      var newWidth = void 0;

	      keyIncrements = keyIncrements <= 1.5 ? 1.5 : Math.ceil(keyIncrements);
	      newWidth = keyIncrements * keyWidth;

	      if (newWidth < minWidth) newWidth = minWidth;

	      el.style.width = newWidth + 'px';
	      listEl.style.width = newWidth + 'px';
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this4 = this;

	      var _props = this.props,
	          autoWidth = _props.autoWidth,
	          children = _props.children,
	          desktop = _props.desktop,
	          disableAutoFocus = _props.disableAutoFocus,
	          initiallyKeyboardFocused = _props.initiallyKeyboardFocused,
	          listStyle = _props.listStyle,
	          maxHeight = _props.maxHeight,
	          multiple = _props.multiple,
	          onItemTouchTap = _props.onItemTouchTap,
	          onEscKeyDown = _props.onEscKeyDown,
	          onMenuItemFocusChange = _props.onMenuItemFocusChange,
	          selectedMenuItemStyle = _props.selectedMenuItemStyle,
	          menuItemStyle = _props.menuItemStyle,
	          style = _props.style,
	          value = _props.value,
	          valueLink = _props.valueLink,
	          width = _props.width,
	          other = (0, _objectWithoutProperties3.default)(_props, ['autoWidth', 'children', 'desktop', 'disableAutoFocus', 'initiallyKeyboardFocused', 'listStyle', 'maxHeight', 'multiple', 'onItemTouchTap', 'onEscKeyDown', 'onMenuItemFocusChange', 'selectedMenuItemStyle', 'menuItemStyle', 'style', 'value', 'valueLink', 'width']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var mergedRootStyles = (0, _simpleAssign2.default)(styles.root, style);
	      var mergedListStyles = (0, _simpleAssign2.default)(styles.list, listStyle);

	      var filteredChildren = this.getFilteredChildren(children);

	      var menuItemIndex = 0;
	      var newChildren = _react2.default.Children.map(filteredChildren, function (child, index) {
	        var childIsDisabled = child.props.disabled;
	        var childName = child.type ? child.type.muiName : '';
	        var newChild = child;

	        switch (childName) {
	          case 'MenuItem':
	            newChild = _this4.cloneMenuItem(child, menuItemIndex, styles, index);
	            break;

	          case 'Divider':
	            newChild = _react2.default.cloneElement(child, {
	              style: (0, _simpleAssign2.default)({}, styles.divider, child.props.style)
	            });
	            break;
	        }

	        if (childName === 'MenuItem' && !childIsDisabled) {
	          menuItemIndex++;
	        }

	        return newChild;
	      });

	      return _react2.default.createElement(
	        _ClickAwayListener2.default,
	        { onClickAway: this.handleClickAway },
	        _react2.default.createElement(
	          'div',
	          {
	            onKeyDown: this.handleKeyDown,
	            onWheel: this.handleOnWheel,
	            style: prepareStyles(mergedRootStyles),
	            ref: 'scrollContainer',
	            role: 'presentation'
	          },
	          _react2.default.createElement(
	            _List2.default,
	            (0, _extends3.default)({}, other, {
	              ref: 'list',
	              style: mergedListStyles,
	              role: 'menu'
	            }),
	            newChildren
	          )
	        )
	      );
	    }
	  }]);
	  return Menu;
	}(_react.Component);

	Menu.defaultProps = {
	  autoWidth: true,
	  desktop: false,
	  disableAutoFocus: false,
	  initiallyKeyboardFocused: false,
	  maxHeight: null,
	  multiple: false,
	  onChange: function onChange() {},
	  onEscKeyDown: function onEscKeyDown() {},
	  onItemTouchTap: function onItemTouchTap() {},
	  onKeyDown: function onKeyDown() {}
	};
	Menu.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};

	var _initialiseProps = function _initialiseProps() {
	  var _this5 = this;

	  this.handleClickAway = function (event) {
	    if (event.defaultPrevented) {
	      return;
	    }

	    var focusIndex = _this5.state.focusIndex;

	    if (focusIndex < 0) {
	      return;
	    }

	    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
	    var focusedItem = filteredChildren[focusIndex];
	    if (focusedItem.props.menuItems && focusedItem.props.menuItems.length > 0) {
	      return;
	    }

	    _this5.setFocusIndex(event, -1, false);
	  };

	  this.handleKeyDown = function (event) {
	    var filteredChildren = _this5.getFilteredChildren(_this5.props.children);
	    var key = (0, _keycode2.default)(event);
	    switch (key) {
	      case 'down':
	        event.preventDefault();
	        _this5.incrementKeyboardFocusIndex(event, filteredChildren);
	        break;
	      case 'esc':
	        _this5.props.onEscKeyDown(event);
	        break;
	      case 'tab':
	        event.preventDefault();
	        if (event.shiftKey) {
	          _this5.decrementKeyboardFocusIndex(event);
	        } else {
	          _this5.incrementKeyboardFocusIndex(event, filteredChildren);
	        }
	        break;
	      case 'up':
	        event.preventDefault();
	        _this5.decrementKeyboardFocusIndex(event);
	        break;
	      default:
	        if (key && key.length === 1) {
	          var hotKeys = _this5.hotKeyHolder.append(key);
	          if (_this5.setFocusIndexStartsWith(event, hotKeys)) {
	            event.preventDefault();
	          }
	        }
	    }
	    _this5.props.onKeyDown(event);
	  };

	  this.handleOnWheel = function (event) {
	    var scrollContainer = _this5.refs.scrollContainer;
	    // Only scroll lock if the the Menu is scrollable.
	    if (scrollContainer.scrollHeight <= scrollContainer.clientHeight) return;

	    var scrollTop = scrollContainer.scrollTop,
	        scrollHeight = scrollContainer.scrollHeight,
	        clientHeight = scrollContainer.clientHeight;

	    var wheelDelta = event.deltaY;
	    var isDeltaPositive = wheelDelta > 0;

	    if (isDeltaPositive && wheelDelta > scrollHeight - clientHeight - scrollTop) {
	      scrollContainer.scrollTop = scrollHeight;
	      return _this5.cancelScrollEvent(event);
	    } else if (!isDeltaPositive && -wheelDelta > scrollTop) {
	      scrollContainer.scrollTop = 0;
	      return _this5.cancelScrollEvent(event);
	    }
	  };
	};

	Menu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, the width of the menu will be set automatically
	   * according to the widths of its children,
	   * using proper keyline increments (64px for desktop,
	   * 56px otherwise).
	   */
	  autoWidth: _propTypes2.default.bool,
	  /**
	   * The content of the menu. This is usually used to pass `MenuItem`
	   * elements.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * If true, the menu item will render with compact desktop styles.
	   */
	  desktop: _propTypes2.default.bool,
	  /**
	   * If true, the menu will not be auto-focused.
	   */
	  disableAutoFocus: _propTypes2.default.bool,
	  /**
	   * If true, the menu will be keyboard-focused initially.
	   */
	  initiallyKeyboardFocused: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the underlying `List` element.
	   */
	  listStyle: _propTypes2.default.object,
	  /**
	   * The maximum height of the menu in pixels. If specified,
	   * the menu will be scrollable if it is taller than the provided
	   * height.
	   */
	  maxHeight: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of menu items.
	   */
	  menuItemStyle: _propTypes2.default.object,
	  /**
	   * If true, `value` must be an array and the menu will support
	   * multiple selections.
	   */
	  multiple: _propTypes2.default.bool,
	  /**
	   * Callback function fired when a menu item with `value` not
	   * equal to the current `value` of the menu is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the menu item.
	   * @param {any}  value If `multiple` is true, the menu's `value`
	   * array with either the menu item's `value` added (if
	   * it wasn't already selected) or omitted (if it was already selected).
	   * Otherwise, the `value` of the menu item.
	   */
	  onChange: _propTypes2.default.func,
	  /**
	   * Callback function fired when the menu is focused and the *Esc* key
	   * is pressed.
	   *
	   * @param {object} event `keydown` event targeting the menu.
	   */
	  onEscKeyDown: _propTypes2.default.func,
	  /**
	   * Callback function fired when a menu item is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the menu item.
	   * @param {object} menuItem The menu item.
	   * @param {number} index The index of the menu item.
	   */
	  onItemTouchTap: _propTypes2.default.func,
	  /** @ignore */
	  onKeyDown: _propTypes2.default.func,
	  /**
	   * Callback function fired when the focus on a `MenuItem` is changed.
	   * There will be some "duplicate" changes reported if two different
	   * focusing event happen, for example if a `MenuItem` is focused via
	   * the keyboard and then it is clicked on.
	   *
	   * @param {object} event The event that triggered the focus change.
	   * The event can be null since the focus can be changed for non-event
	   * reasons such as prop changes.
	   * @param {number} newFocusIndex The index of the newly focused
	   * `MenuItem` or `-1` if focus was lost.
	   */
	  onMenuItemFocusChange: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of selected menu items.
	   */
	  selectedMenuItemStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * If `multiple` is true, an array of the `value`s of the selected
	   * menu items. Otherwise, the `value` of the selected menu item.
	   * If provided, the menu will be a controlled component.
	   * This component also supports valueLink.
	   */
	  value: _propTypes2.default.any,
	  /**
	   * ValueLink for the menu's `value`.
	   */
	  valueLink: _propTypes2.default.object,
	  /**
	   * The width of the menu. If not specified, the menu's width
	   * will be set according to the widths of its children, using
	   * proper keyline increments (64px for desktop, 56px otherwise).
	   */
	  width: _propTypes4.default.stringOrNumber
	} : {};
	exports.default = Menu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Subheader = __webpack_require__(584);

	var _Subheader2 = _interopRequireDefault(_Subheader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var List = function (_Component) {
	  (0, _inherits3.default)(List, _Component);

	  function List() {
	    (0, _classCallCheck3.default)(this, List);
	    return (0, _possibleConstructorReturn3.default)(this, (List.__proto__ || (0, _getPrototypeOf2.default)(List)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(List, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var hasSubheader = false;

	      var firstChild = _react.Children.toArray(children)[0];
	      if ((0, _react.isValidElement)(firstChild) && firstChild.type === _Subheader2.default) {
	        hasSubheader = true;
	      }

	      var styles = {
	        root: {
	          padding: (hasSubheader ? 0 : 8) + 'px 0px 8px 0px'
	        }
	      };

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	        children
	      );
	    }
	  }]);
	  return List;
	}(_react.Component);

	List.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	List.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * These are usually `ListItem`s that are passed to
	   * be part of the list.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = List;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Subheader = __webpack_require__(585);

	var _Subheader2 = _interopRequireDefault(_Subheader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Subheader2.default;

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Subheader = function Subheader(props, context) {
	  var children = props.children,
	      inset = props.inset,
	      style = props.style,
	      other = (0, _objectWithoutProperties3.default)(props, ['children', 'inset', 'style']);
	  var _context$muiTheme = context.muiTheme,
	      prepareStyles = _context$muiTheme.prepareStyles,
	      subheader = _context$muiTheme.subheader;


	  var styles = {
	    root: {
	      boxSizing: 'border-box',
	      color: subheader.color,
	      fontSize: 14,
	      fontWeight: subheader.fontWeight,
	      lineHeight: '48px',
	      paddingLeft: inset ? 72 : 16,
	      width: '100%'
	    }
	  };

	  return _react2.default.createElement(
	    'div',
	    (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }),
	    children
	  );
	};

	Subheader.muiName = 'Subheader';

	Subheader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Node that will be placed inside the `Subheader`.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * If true, the `Subheader` will be indented.
	   */
	  inset: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};

	Subheader.defaultProps = {
	  inset: false
	};

	Subheader.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};

	exports.default = Subheader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.HotKeyHolder = undefined;

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HotKeyHolder = exports.HotKeyHolder = function () {
	  function HotKeyHolder() {
	    var _this = this;

	    (0, _classCallCheck3.default)(this, HotKeyHolder);

	    this.clear = function () {
	      _this.timerId = null;
	      _this.lastKeys = null;
	    };
	  }

	  (0, _createClass3.default)(HotKeyHolder, [{
	    key: 'append',
	    value: function append(key) {
	      clearTimeout(this.timerId);
	      this.timerId = setTimeout(this.clear, 500);
	      return this.lastKeys = (this.lastKeys || '') + key;
	    }
	  }]);
	  return HotKeyHolder;
	}();

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _BeforeAfterWrapper = __webpack_require__(588);

	var _BeforeAfterWrapper2 = _interopRequireDefault(_BeforeAfterWrapper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = {
	  before: {
	    content: "' '",
	    display: 'table'
	  },
	  after: {
	    content: "' '",
	    clear: 'both',
	    display: 'table'
	  }
	};

	var ClearFix = function ClearFix(_ref) {
	  var style = _ref.style,
	      children = _ref.children,
	      other = (0, _objectWithoutProperties3.default)(_ref, ['style', 'children']);
	  return _react2.default.createElement(
	    _BeforeAfterWrapper2.default,
	    (0, _extends3.default)({}, other, {
	      beforeStyle: styles.before,
	      afterStyle: styles.after,
	      style: style
	    }),
	    children
	  );
	};

	ClearFix.muiName = 'ClearFix';

	ClearFix.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};

	exports.default = ClearFix;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 *  BeforeAfterWrapper
	 *    An alternative for the ::before and ::after css pseudo-elements for
	 *    components whose styles are defined in javascript instead of css.
	 *
	 *  Usage: For the element that we want to apply before and after elements to,
	 *    wrap its children with BeforeAfterWrapper. For example:
	 *
	 *                                            <Paper>
	 *  <Paper>                                     <div> // See notice
	 *    <BeforeAfterWrapper>        renders         <div/> // before element
	 *      [children of paper]       ------>         [children of paper]
	 *    </BeforeAfterWrapper>                       <div/> // after element
	 *  </Paper>                                    </div>
	 *                                            </Paper>
	 *
	 *  Notice: Notice that this div bundles together our elements. If the element
	 *    that we want to apply before and after elements is a HTML tag (i.e. a
	 *    div, p, or button tag), we can avoid this extra nesting by passing using
	 *    the BeforeAfterWrapper in place of said tag like so:
	 *
	 *  <p>
	 *    <BeforeAfterWrapper>   do this instead   <BeforeAfterWrapper elementType='p'>
	 *      [children of p]          ------>         [children of p]
	 *    </BeforeAfterWrapper>                    </BeforeAfterWrapper>
	 *  </p>
	 *
	 *  BeforeAfterWrapper features spread functionality. This means that we can
	 *  pass HTML tag properties directly into the BeforeAfterWrapper tag.
	 *
	 *  When using BeforeAfterWrapper, ensure that the parent of the beforeElement
	 *  and afterElement have a defined style position.
	 */

	var styles = {
	  box: {
	    boxSizing: 'border-box'
	  }
	};

	var BeforeAfterWrapper = function (_Component) {
	  (0, _inherits3.default)(BeforeAfterWrapper, _Component);

	  function BeforeAfterWrapper() {
	    (0, _classCallCheck3.default)(this, BeforeAfterWrapper);
	    return (0, _possibleConstructorReturn3.default)(this, (BeforeAfterWrapper.__proto__ || (0, _getPrototypeOf2.default)(BeforeAfterWrapper)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(BeforeAfterWrapper, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          beforeStyle = _props.beforeStyle,
	          afterStyle = _props.afterStyle,
	          beforeElementType = _props.beforeElementType,
	          afterElementType = _props.afterElementType,
	          elementType = _props.elementType,
	          other = (0, _objectWithoutProperties3.default)(_props, ['beforeStyle', 'afterStyle', 'beforeElementType', 'afterElementType', 'elementType']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      var beforeElement = void 0;
	      var afterElement = void 0;

	      if (beforeStyle) {
	        beforeElement = _react2.default.createElement(this.props.beforeElementType, {
	          style: prepareStyles((0, _simpleAssign2.default)({}, styles.box, beforeStyle)),
	          key: '::before'
	        });
	      }

	      if (afterStyle) {
	        afterElement = _react2.default.createElement(this.props.afterElementType, {
	          style: prepareStyles((0, _simpleAssign2.default)({}, styles.box, afterStyle)),
	          key: '::after'
	        });
	      }

	      var children = [beforeElement, this.props.children, afterElement];

	      var props = other;
	      props.style = prepareStyles((0, _simpleAssign2.default)({}, this.props.style));

	      return _react2.default.createElement(this.props.elementType, props, children);
	    }
	  }]);
	  return BeforeAfterWrapper;
	}(_react.Component);

	BeforeAfterWrapper.defaultProps = {
	  beforeElementType: 'div',
	  afterElementType: 'div',
	  elementType: 'div'
	};
	BeforeAfterWrapper.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	BeforeAfterWrapper.propTypes = process.env.NODE_ENV !== "production" ? {
	  afterElementType: _propTypes2.default.string,
	  afterStyle: _propTypes2.default.object,
	  beforeElementType: _propTypes2.default.string,
	  beforeStyle: _propTypes2.default.object,
	  children: _propTypes2.default.node,
	  elementType: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = BeforeAfterWrapper;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactEventListener = __webpack_require__(495);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _RenderToLayer = __webpack_require__(569);

	var _RenderToLayer2 = _interopRequireDefault(_RenderToLayer);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _lodash = __webpack_require__(590);

	var _lodash2 = _interopRequireDefault(_lodash);

	var _PopoverAnimationDefault = __webpack_require__(591);

	var _PopoverAnimationDefault2 = _interopRequireDefault(_PopoverAnimationDefault);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = {
	  root: {
	    display: 'none'
	  }
	};

	var Popover = function (_Component) {
	  (0, _inherits3.default)(Popover, _Component);

	  function Popover(props, context) {
	    (0, _classCallCheck3.default)(this, Popover);

	    var _this = (0, _possibleConstructorReturn3.default)(this, (Popover.__proto__ || (0, _getPrototypeOf2.default)(Popover)).call(this, props, context));

	    _this.timeout = null;

	    _this.renderLayer = function () {
	      var _this$props = _this.props,
	          animated = _this$props.animated,
	          animation = _this$props.animation,
	          anchorEl = _this$props.anchorEl,
	          anchorOrigin = _this$props.anchorOrigin,
	          autoCloseWhenOffScreen = _this$props.autoCloseWhenOffScreen,
	          canAutoPosition = _this$props.canAutoPosition,
	          children = _this$props.children,
	          onRequestClose = _this$props.onRequestClose,
	          style = _this$props.style,
	          targetOrigin = _this$props.targetOrigin,
	          useLayerForClickAway = _this$props.useLayerForClickAway,
	          scrollableContainer = _this$props.scrollableContainer,
	          other = (0, _objectWithoutProperties3.default)(_this$props, ['animated', 'animation', 'anchorEl', 'anchorOrigin', 'autoCloseWhenOffScreen', 'canAutoPosition', 'children', 'onRequestClose', 'style', 'targetOrigin', 'useLayerForClickAway', 'scrollableContainer']);


	      var styleRoot = style;

	      if (!animated) {
	        styleRoot = {
	          position: 'fixed',
	          zIndex: _this.context.muiTheme.zIndex.popover
	        };

	        if (!_this.state.open) {
	          return null;
	        }

	        return _react2.default.createElement(
	          _Paper2.default,
	          (0, _extends3.default)({ style: (0, _simpleAssign2.default)(styleRoot, style) }, other),
	          children
	        );
	      }

	      var Animation = animation || _PopoverAnimationDefault2.default;

	      return _react2.default.createElement(
	        Animation,
	        (0, _extends3.default)({
	          targetOrigin: targetOrigin,
	          style: styleRoot
	        }, other, {
	          open: _this.state.open && !_this.state.closing
	        }),
	        children
	      );
	    };

	    _this.componentClickAway = function () {
	      _this.requestClose('clickAway');
	    };

	    _this.setPlacement = function (scrolling) {
	      if (!_this.state.open) {
	        return;
	      }

	      if (!_this.popoverRefs.layer.getLayer()) {
	        return;
	      }

	      var targetEl = _this.popoverRefs.layer.getLayer().children[0];
	      if (!targetEl) {
	        return;
	      }

	      var _this$props2 = _this.props,
	          targetOrigin = _this$props2.targetOrigin,
	          anchorOrigin = _this$props2.anchorOrigin;

	      var anchorEl = _this.props.anchorEl || _this.anchorEl;

	      var anchor = _this.getAnchorPosition(anchorEl);
	      var target = _this.getTargetPosition(targetEl);

	      var targetPosition = {
	        top: anchor[anchorOrigin.vertical] - target[targetOrigin.vertical],
	        left: anchor[anchorOrigin.horizontal] - target[targetOrigin.horizontal]
	      };

	      if (scrolling && _this.props.autoCloseWhenOffScreen) {
	        _this.autoCloseWhenOffScreen(anchor);
	      }

	      if (_this.props.canAutoPosition) {
	        target = _this.getTargetPosition(targetEl); // update as height may have changed
	        targetPosition = _this.applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition);
	      }

	      targetEl.style.top = targetPosition.top + 'px';
	      targetEl.style.left = targetPosition.left + 'px';
	      targetEl.style.maxHeight = window.innerHeight + 'px';
	    };

	    _this.handleResize = (0, _lodash2.default)(_this.setPlacement, 100);
	    _this.handleScroll = (0, _lodash2.default)(_this.setPlacement.bind(_this, true), 50);

	    _this.popoverRefs = {};

	    _this.state = {
	      open: props.open,
	      closing: false
	    };
	    return _this;
	  }

	  (0, _createClass3.default)(Popover, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.placementTimeout = setTimeout(this.setPlacement);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this2 = this;

	      if (nextProps.open === this.props.open) {
	        return;
	      }

	      if (nextProps.open) {
	        clearTimeout(this.timeout);
	        this.timeout = null;
	        this.anchorEl = nextProps.anchorEl || this.props.anchorEl;
	        this.setState({
	          open: true,
	          closing: false
	        });
	      } else {
	        if (nextProps.animated) {
	          if (this.timeout !== null) return;
	          this.setState({ closing: true });
	          this.timeout = setTimeout(function () {
	            _this2.setState({
	              open: false
	            }, function () {
	              _this2.timeout = null;
	            });
	          }, 500);
	        } else {
	          this.setState({
	            open: false
	          });
	        }
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      clearTimeout(this.placementTimeout);
	      this.placementTimeout = setTimeout(this.setPlacement);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.handleResize.cancel();
	      this.handleScroll.cancel();

	      if (this.placementTimeout) {
	        clearTimeout(this.placementTimeout);
	        this.placementTimeout = null;
	      }

	      if (this.timeout) {
	        clearTimeout(this.timeout);
	        this.timeout = null;
	      }
	    }
	  }, {
	    key: 'requestClose',
	    value: function requestClose(reason) {
	      if (this.props.onRequestClose) {
	        this.props.onRequestClose(reason);
	      }
	    }
	  }, {
	    key: 'getAnchorPosition',
	    value: function getAnchorPosition(el) {
	      if (!el) {
	        el = _reactDom2.default.findDOMNode(this);
	      }

	      var rect = el.getBoundingClientRect();
	      var a = {
	        top: rect.top,
	        left: rect.left,
	        width: el.offsetWidth,
	        height: el.offsetHeight
	      };

	      a.right = rect.right || a.left + a.width;
	      a.bottom = rect.bottom || a.top + a.height;
	      a.middle = a.left + (a.right - a.left) / 2;
	      a.center = a.top + (a.bottom - a.top) / 2;

	      return a;
	    }
	  }, {
	    key: 'getTargetPosition',
	    value: function getTargetPosition(targetEl) {
	      return {
	        top: 0,
	        center: targetEl.offsetHeight / 2,
	        bottom: targetEl.offsetHeight,
	        left: 0,
	        middle: targetEl.offsetWidth / 2,
	        right: targetEl.offsetWidth
	      };
	    }
	  }, {
	    key: 'autoCloseWhenOffScreen',
	    value: function autoCloseWhenOffScreen(anchorPosition) {
	      if (anchorPosition.top < 0 || anchorPosition.top > window.innerHeight || anchorPosition.left < 0 || anchorPosition.left > window.innerWidth) {
	        this.requestClose('offScreen');
	      }
	    }
	  }, {
	    key: 'getOverlapMode',
	    value: function getOverlapMode(anchor, target, median) {
	      if ([anchor, target].indexOf(median) >= 0) return 'auto';
	      if (anchor === target) return 'inclusive';
	      return 'exclusive';
	    }
	  }, {
	    key: 'getPositions',
	    value: function getPositions(anchor, target) {
	      var a = (0, _extends3.default)({}, anchor);
	      var t = (0, _extends3.default)({}, target);

	      var positions = {
	        x: ['left', 'right'].filter(function (p) {
	          return p !== t.horizontal;
	        }),
	        y: ['top', 'bottom'].filter(function (p) {
	          return p !== t.vertical;
	        })
	      };

	      var overlap = {
	        x: this.getOverlapMode(a.horizontal, t.horizontal, 'middle'),
	        y: this.getOverlapMode(a.vertical, t.vertical, 'center')
	      };

	      positions.x.splice(overlap.x === 'auto' ? 0 : 1, 0, 'middle');
	      positions.y.splice(overlap.y === 'auto' ? 0 : 1, 0, 'center');

	      if (overlap.y !== 'auto') {
	        a.vertical = a.vertical === 'top' ? 'bottom' : 'top';
	        if (overlap.y === 'inclusive') {
	          t.vertical = t.vertical;
	        }
	      }

	      if (overlap.x !== 'auto') {
	        a.horizontal = a.horizontal === 'left' ? 'right' : 'left';
	        if (overlap.y === 'inclusive') {
	          t.horizontal = t.horizontal;
	        }
	      }

	      return {
	        positions: positions,
	        anchorPos: a
	      };
	    }
	  }, {
	    key: 'applyAutoPositionIfNeeded',
	    value: function applyAutoPositionIfNeeded(anchor, target, targetOrigin, anchorOrigin, targetPosition) {
	      var _getPositions = this.getPositions(anchorOrigin, targetOrigin),
	          positions = _getPositions.positions,
	          anchorPos = _getPositions.anchorPos;

	      if (targetPosition.top < 0 || targetPosition.top + target.bottom > window.innerHeight) {
	        var newTop = anchor[anchorPos.vertical] - target[positions.y[0]];
	        if (newTop + target.bottom <= window.innerHeight) {
	          targetPosition.top = Math.max(0, newTop);
	        } else {
	          newTop = anchor[anchorPos.vertical] - target[positions.y[1]];
	          if (newTop + target.bottom <= window.innerHeight) {
	            targetPosition.top = Math.max(0, newTop);
	          }
	        }
	      }

	      if (targetPosition.left < 0 || targetPosition.left + target.right > window.innerWidth) {
	        var newLeft = anchor[anchorPos.horizontal] - target[positions.x[0]];
	        if (newLeft + target.right <= window.innerWidth) {
	          targetPosition.left = Math.max(0, newLeft);
	        } else {
	          newLeft = anchor[anchorPos.horizontal] - target[positions.x[1]];
	          if (newLeft + target.right <= window.innerWidth) {
	            targetPosition.left = Math.max(0, newLeft);
	          }
	        }
	      }

	      return targetPosition;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;

	      return _react2.default.createElement(
	        'div',
	        { style: styles.root },
	        _react2.default.createElement(_reactEventListener2.default, {
	          target: this.props.scrollableContainer,
	          onScroll: this.handleScroll,
	          onResize: this.handleResize
	        }),
	        _react2.default.createElement(_RenderToLayer2.default, {
	          ref: function ref(_ref) {
	            return _this3.popoverRefs.layer = _ref;
	          },
	          open: this.state.open,
	          componentClickAway: this.componentClickAway,
	          useLayerForClickAway: this.props.useLayerForClickAway,
	          render: this.renderLayer
	        })
	      );
	    }
	  }]);
	  return Popover;
	}(_react.Component);

	Popover.defaultProps = {
	  anchorOrigin: {
	    vertical: 'bottom',
	    horizontal: 'left'
	  },
	  animated: true,
	  autoCloseWhenOffScreen: true,
	  canAutoPosition: true,
	  onRequestClose: function onRequestClose() {},
	  open: false,
	  scrollableContainer: 'window',
	  style: {
	    overflowY: 'auto'
	  },
	  targetOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  useLayerForClickAway: true,
	  zDepth: 1
	};
	Popover.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Popover.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * This is the DOM element that will be used to set the position of the
	   * popover.
	   */
	  anchorEl: _propTypes2.default.object,
	  /**
	   * This is the point on the anchor where the popover's
	   * `targetOrigin` will attach to.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  anchorOrigin: _propTypes4.default.origin,
	  /**
	   * If true, the popover will apply transitions when
	   * it is added to the DOM.
	   */
	  animated: _propTypes2.default.bool,
	  /**
	   * Override the default animation component used.
	   */
	  animation: _propTypes2.default.func,
	  /**
	   * If true, the popover will hide when the anchor is scrolled off the screen.
	   */
	  autoCloseWhenOffScreen: _propTypes2.default.bool,
	  /**
	   * If true, the popover (potentially) ignores `targetOrigin`
	   * and `anchorOrigin` to make itself fit on screen,
	   * which is useful for mobile devices.
	   */
	  canAutoPosition: _propTypes2.default.bool,
	  /**
	   * The content of the popover.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The CSS class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Callback function fired when the popover is requested to be closed.
	   *
	   * @param {string} reason The reason for the close request. Possibles values
	   * are 'clickAway' and 'offScreen'.
	   */
	  onRequestClose: _propTypes2.default.func,
	  /**
	   * If true, the popover is visible.
	   */
	  open: _propTypes2.default.bool,
	  /**
	   * Represents the parent scrollable container.
	   * It can be an element or a string like `window`.
	   */
	  scrollableContainer: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * This is the point on the popover which will attach to
	   * the anchor's origin.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  targetOrigin: _propTypes4.default.origin,
	  /**
	   * If true, the popover will render on top of an invisible
	   * layer, which will prevent clicks to the underlying
	   * elements, and trigger an `onRequestClose('clickAway')` call.
	   */
	  useLayerForClickAway: _propTypes2.default.bool,
	  /**
	   * The zDepth of the popover.
	   */
	  zDepth: _propTypes4.default.zDepth
	} : {};
	exports.default = Popover;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 590 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * lodash (Custom Build) <https://lodash.com/>
	 * Build: `lodash modularize exports="npm" -o ./`
	 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
	 * Released under MIT license <https://lodash.com/license>
	 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
	 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
	 */

	/** Used as the `TypeError` message for "Functions" methods. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * Gets the timestamp of the number of milliseconds that have elapsed since
	 * the Unix epoch (1 January 1970 00:00:00 UTC).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Date
	 * @returns {number} Returns the timestamp.
	 * @example
	 *
	 * _.defer(function(stamp) {
	 *   console.log(_.now() - stamp);
	 * }, _.now());
	 * // => Logs the number of milliseconds it took for the deferred invocation.
	 */
	var now = function() {
	  return root.Date.now();
	};

	/**
	 * Creates a debounced function that delays invoking `func` until after `wait`
	 * milliseconds have elapsed since the last time the debounced function was
	 * invoked. The debounced function comes with a `cancel` method to cancel
	 * delayed `func` invocations and a `flush` method to immediately invoke them.
	 * Provide `options` to indicate whether `func` should be invoked on the
	 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
	 * with the last arguments provided to the debounced function. Subsequent
	 * calls to the debounced function return the result of the last `func`
	 * invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the debounced function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.debounce` and `_.throttle`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to debounce.
	 * @param {number} [wait=0] The number of milliseconds to delay.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=false]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {number} [options.maxWait]
	 *  The maximum time `func` is allowed to be delayed before it's invoked.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new debounced function.
	 * @example
	 *
	 * // Avoid costly calculations while the window size is in flux.
	 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
	 *
	 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
	 * jQuery(element).on('click', _.debounce(sendMail, 300, {
	 *   'leading': true,
	 *   'trailing': false
	 * }));
	 *
	 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
	 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
	 * var source = new EventSource('/stream');
	 * jQuery(source).on('message', debounced);
	 *
	 * // Cancel the trailing debounced invocation.
	 * jQuery(window).on('popstate', debounced.cancel);
	 */
	function debounce(func, wait, options) {
	  var lastArgs,
	      lastThis,
	      maxWait,
	      result,
	      timerId,
	      lastCallTime,
	      lastInvokeTime = 0,
	      leading = false,
	      maxing = false,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  wait = toNumber(wait) || 0;
	  if (isObject(options)) {
	    leading = !!options.leading;
	    maxing = 'maxWait' in options;
	    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }

	  function invokeFunc(time) {
	    var args = lastArgs,
	        thisArg = lastThis;

	    lastArgs = lastThis = undefined;
	    lastInvokeTime = time;
	    result = func.apply(thisArg, args);
	    return result;
	  }

	  function leadingEdge(time) {
	    // Reset any `maxWait` timer.
	    lastInvokeTime = time;
	    // Start the timer for the trailing edge.
	    timerId = setTimeout(timerExpired, wait);
	    // Invoke the leading edge.
	    return leading ? invokeFunc(time) : result;
	  }

	  function remainingWait(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime,
	        result = wait - timeSinceLastCall;

	    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
	  }

	  function shouldInvoke(time) {
	    var timeSinceLastCall = time - lastCallTime,
	        timeSinceLastInvoke = time - lastInvokeTime;

	    // Either this is the first call, activity has stopped and we're at the
	    // trailing edge, the system time has gone backwards and we're treating
	    // it as the trailing edge, or we've hit the `maxWait` limit.
	    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
	      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
	  }

	  function timerExpired() {
	    var time = now();
	    if (shouldInvoke(time)) {
	      return trailingEdge(time);
	    }
	    // Restart the timer.
	    timerId = setTimeout(timerExpired, remainingWait(time));
	  }

	  function trailingEdge(time) {
	    timerId = undefined;

	    // Only invoke if we have `lastArgs` which means `func` has been
	    // debounced at least once.
	    if (trailing && lastArgs) {
	      return invokeFunc(time);
	    }
	    lastArgs = lastThis = undefined;
	    return result;
	  }

	  function cancel() {
	    if (timerId !== undefined) {
	      clearTimeout(timerId);
	    }
	    lastInvokeTime = 0;
	    lastArgs = lastCallTime = lastThis = timerId = undefined;
	  }

	  function flush() {
	    return timerId === undefined ? result : trailingEdge(now());
	  }

	  function debounced() {
	    var time = now(),
	        isInvoking = shouldInvoke(time);

	    lastArgs = arguments;
	    lastThis = this;
	    lastCallTime = time;

	    if (isInvoking) {
	      if (timerId === undefined) {
	        return leadingEdge(lastCallTime);
	      }
	      if (maxing) {
	        // Handle invocations in a tight loop.
	        timerId = setTimeout(timerExpired, wait);
	        return invokeFunc(lastCallTime);
	      }
	    }
	    if (timerId === undefined) {
	      timerId = setTimeout(timerExpired, wait);
	    }
	    return result;
	  }
	  debounced.cancel = cancel;
	  debounced.flush = flush;
	  return debounced;
	}

	/**
	 * Creates a throttled function that only invokes `func` at most once per
	 * every `wait` milliseconds. The throttled function comes with a `cancel`
	 * method to cancel delayed `func` invocations and a `flush` method to
	 * immediately invoke them. Provide `options` to indicate whether `func`
	 * should be invoked on the leading and/or trailing edge of the `wait`
	 * timeout. The `func` is invoked with the last arguments provided to the
	 * throttled function. Subsequent calls to the throttled function return the
	 * result of the last `func` invocation.
	 *
	 * **Note:** If `leading` and `trailing` options are `true`, `func` is
	 * invoked on the trailing edge of the timeout only if the throttled function
	 * is invoked more than once during the `wait` timeout.
	 *
	 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
	 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
	 *
	 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
	 * for details over the differences between `_.throttle` and `_.debounce`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to throttle.
	 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
	 * @param {Object} [options={}] The options object.
	 * @param {boolean} [options.leading=true]
	 *  Specify invoking on the leading edge of the timeout.
	 * @param {boolean} [options.trailing=true]
	 *  Specify invoking on the trailing edge of the timeout.
	 * @returns {Function} Returns the new throttled function.
	 * @example
	 *
	 * // Avoid excessively updating the position while scrolling.
	 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
	 *
	 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
	 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
	 * jQuery(element).on('click', throttled);
	 *
	 * // Cancel the trailing throttled invocation.
	 * jQuery(window).on('popstate', throttled.cancel);
	 */
	function throttle(func, wait, options) {
	  var leading = true,
	      trailing = true;

	  if (typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  if (isObject(options)) {
	    leading = 'leading' in options ? !!options.leading : leading;
	    trailing = 'trailing' in options ? !!options.trailing : trailing;
	  }
	  return debounce(func, wait, {
	    'leading': leading,
	    'maxWait': wait,
	    'trailing': trailing
	  });
	}

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return !!value && (type == 'object' || type == 'function');
	}

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && objectToString.call(value) == symbolTag);
	}

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = throttle;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var targetOrigin = props.targetOrigin;
	  var open = state.open;
	  var muiTheme = context.muiTheme;

	  var horizontal = targetOrigin.horizontal.replace('middle', 'vertical');

	  return {
	    root: {
	      position: 'fixed',
	      zIndex: muiTheme.zIndex.popover,
	      opacity: open ? 1 : 0,
	      transform: open ? 'scale(1, 1)' : 'scale(0, 0)',
	      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
	      transition: _transitions2.default.easeOut('250ms', ['transform', 'opacity']),
	      maxHeight: '100%'
	    },
	    horizontal: {
	      maxHeight: '100%',
	      overflowY: 'auto',
	      transform: open ? 'scaleX(1)' : 'scaleX(0)',
	      opacity: open ? 1 : 0,
	      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
	      transition: _transitions2.default.easeOut('250ms', ['transform', 'opacity'])
	    },
	    vertical: {
	      opacity: open ? 1 : 0,
	      transform: open ? 'scaleY(1)' : 'scaleY(0)',
	      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
	      transition: _transitions2.default.easeOut('500ms', ['transform', 'opacity'])
	    }
	  };
	}

	var PopoverAnimationDefault = function (_Component) {
	  (0, _inherits3.default)(PopoverAnimationDefault, _Component);

	  function PopoverAnimationDefault() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, PopoverAnimationDefault);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = PopoverAnimationDefault.__proto__ || (0, _getPrototypeOf2.default)(PopoverAnimationDefault)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      open: false
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(PopoverAnimationDefault, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.setState({
	        open: nextProps.open
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          style = _props.style,
	          zDepth = _props.zDepth;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);

	      return _react2.default.createElement(
	        _Paper2.default,
	        {
	          style: (0, _simpleAssign2.default)(styles.root, style),
	          zDepth: zDepth,
	          className: className
	        },
	        _react2.default.createElement(
	          'div',
	          { style: prepareStyles(styles.horizontal) },
	          _react2.default.createElement(
	            'div',
	            { style: prepareStyles(styles.vertical) },
	            this.props.children
	          )
	        )
	      );
	    }
	  }]);
	  return PopoverAnimationDefault;
	}(_react.Component);

	PopoverAnimationDefault.defaultProps = {
	  style: {},
	  zDepth: 1
	};
	PopoverAnimationDefault.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	PopoverAnimationDefault.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  targetOrigin: _propTypes4.default.origin.isRequired,
	  zDepth: _propTypes4.default.zDepth
	} : {};
	exports.default = PopoverAnimationDefault;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var targetOrigin = props.targetOrigin;
	  var open = state.open;
	  var muiTheme = context.muiTheme;

	  var horizontal = targetOrigin.horizontal.replace('middle', 'center');

	  return {
	    root: {
	      position: 'fixed',
	      zIndex: muiTheme.zIndex.popover,
	      opacity: open ? 1 : 0,
	      transform: open ? 'scaleY(1)' : 'scaleY(0)',
	      transformOrigin: horizontal + ' ' + targetOrigin.vertical,
	      transition: _transitions2.default.easeOut('450ms', ['transform', 'opacity']),
	      maxHeight: '100%'
	    }
	  };
	}

	var PopoverAnimationVertical = function (_Component) {
	  (0, _inherits3.default)(PopoverAnimationVertical, _Component);

	  function PopoverAnimationVertical() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, PopoverAnimationVertical);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = PopoverAnimationVertical.__proto__ || (0, _getPrototypeOf2.default)(PopoverAnimationVertical)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      open: false
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(PopoverAnimationVertical, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setState({ open: true }); // eslint-disable-line react/no-did-mount-set-state
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      this.setState({
	        open: nextProps.open
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          style = _props.style,
	          zDepth = _props.zDepth;


	      var styles = getStyles(this.props, this.context, this.state);

	      return _react2.default.createElement(
	        _Paper2.default,
	        {
	          style: (0, _simpleAssign2.default)(styles.root, style),
	          zDepth: zDepth,
	          className: className
	        },
	        this.props.children
	      );
	    }
	  }]);
	  return PopoverAnimationVertical;
	}(_react.Component);

	PopoverAnimationVertical.defaultProps = {
	  style: {},
	  zDepth: 1
	};
	PopoverAnimationVertical.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	PopoverAnimationVertical.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  className: _propTypes2.default.string,
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  targetOrigin: _propTypes4.default.origin.isRequired,
	  zDepth: _propTypes4.default.zDepth
	} : {};
	exports.default = PopoverAnimationVertical;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _Popover = __webpack_require__(589);

	var _Popover2 = _interopRequireDefault(_Popover);

	var _check = __webpack_require__(594);

	var _check2 = _interopRequireDefault(_check);

	var _ListItem = __webpack_require__(595);

	var _ListItem2 = _interopRequireDefault(_ListItem);

	var _Menu = __webpack_require__(582);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var nestedMenuStyle = {
	  position: 'relative'
	};

	function getStyles(props, context) {
	  var disabledColor = context.muiTheme.baseTheme.palette.disabledColor;
	  var textColor = context.muiTheme.baseTheme.palette.textColor;
	  var indent = props.desktop ? 64 : 72;
	  var sidePadding = props.desktop ? 24 : 16;

	  var styles = {
	    root: {
	      color: props.disabled ? disabledColor : textColor,
	      cursor: props.disabled ? 'default' : 'pointer',
	      minHeight: props.desktop ? '32px' : '48px',
	      lineHeight: props.desktop ? '32px' : '48px',
	      fontSize: props.desktop ? 15 : 16,
	      whiteSpace: 'nowrap'
	    },

	    innerDivStyle: {
	      paddingLeft: props.leftIcon || props.insetChildren || props.checked ? indent : sidePadding,
	      paddingRight: props.rightIcon ? indent : sidePadding,
	      paddingBottom: 0,
	      paddingTop: 0
	    },

	    secondaryText: {
	      float: 'right'
	    },

	    leftIconDesktop: {
	      margin: 0,
	      left: 24,
	      top: 4
	    },

	    rightIconDesktop: {
	      margin: 0,
	      right: 24,
	      top: 4,
	      fill: context.muiTheme.menuItem.rightIconDesktopFill
	    }
	  };

	  return styles;
	}

	var MenuItem = function (_Component) {
	  (0, _inherits3.default)(MenuItem, _Component);

	  function MenuItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, MenuItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = MenuItem.__proto__ || (0, _getPrototypeOf2.default)(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      open: false
	    }, _this.cloneMenuItem = function (item) {
	      return _react2.default.cloneElement(item, {
	        onClick: function onClick(event) {
	          if (!item.props.menuItems) {
	            _this.handleRequestClose();
	          }

	          if (item.props.onClick) {
	            item.props.onClick(event);
	          }
	        }
	      });
	    }, _this.handleTouchTap = function (event) {
	      event.preventDefault();

	      _this.setState({
	        open: true,
	        anchorEl: _reactDom2.default.findDOMNode(_this)
	      });

	      if (_this.props.onClick) {
	        _this.props.onClick(event);
	      }
	    }, _this.handleRequestClose = function () {
	      _this.setState({
	        open: false,
	        anchorEl: null
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(MenuItem, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.applyFocusState();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.state.open && nextProps.focusState === 'none') {
	        this.handleRequestClose();
	      }
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState) || !(0, _shallowEqual2.default)(this.context, nextContext);
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.applyFocusState();
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      if (this.state.open) {
	        this.setState({
	          open: false
	        });
	      }
	    }
	  }, {
	    key: 'applyFocusState',
	    value: function applyFocusState() {
	      this.refs.listItem.applyFocusState(this.props.focusState);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          checked = _props.checked,
	          children = _props.children,
	          desktop = _props.desktop,
	          disabled = _props.disabled,
	          focusState = _props.focusState,
	          innerDivStyle = _props.innerDivStyle,
	          insetChildren = _props.insetChildren,
	          leftIcon = _props.leftIcon,
	          menuItems = _props.menuItems,
	          rightIcon = _props.rightIcon,
	          secondaryText = _props.secondaryText,
	          style = _props.style,
	          animation = _props.animation,
	          anchorOrigin = _props.anchorOrigin,
	          targetOrigin = _props.targetOrigin,
	          value = _props.value,
	          other = (0, _objectWithoutProperties3.default)(_props, ['checked', 'children', 'desktop', 'disabled', 'focusState', 'innerDivStyle', 'insetChildren', 'leftIcon', 'menuItems', 'rightIcon', 'secondaryText', 'style', 'animation', 'anchorOrigin', 'targetOrigin', 'value']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var mergedRootStyles = (0, _simpleAssign2.default)(styles.root, style);
	      var mergedInnerDivStyles = (0, _simpleAssign2.default)(styles.innerDivStyle, innerDivStyle);

	      // Left Icon
	      var leftIconElement = leftIcon ? leftIcon : checked ? _react2.default.createElement(_check2.default, null) : null;
	      if (leftIconElement) {
	        var mergedLeftIconStyles = desktop ? (0, _simpleAssign2.default)(styles.leftIconDesktop, leftIconElement.props.style) : leftIconElement.props.style;
	        leftIconElement = _react2.default.cloneElement(leftIconElement, { style: mergedLeftIconStyles });
	      }

	      // Right Icon
	      var rightIconElement = void 0;
	      if (rightIcon) {
	        var mergedRightIconStyles = desktop ? (0, _simpleAssign2.default)(styles.rightIconDesktop, rightIcon.props.style) : rightIcon.props.style;
	        rightIconElement = _react2.default.cloneElement(rightIcon, { style: mergedRightIconStyles });
	      }

	      // Secondary Text
	      var secondaryTextElement = void 0;
	      if (secondaryText) {
	        var secondaryTextIsAnElement = _react2.default.isValidElement(secondaryText);
	        var mergedSecondaryTextStyles = secondaryTextIsAnElement ? (0, _simpleAssign2.default)(styles.secondaryText, secondaryText.props.style) : null;

	        secondaryTextElement = secondaryTextIsAnElement ? _react2.default.cloneElement(secondaryText, { style: mergedSecondaryTextStyles }) : _react2.default.createElement(
	          'div',
	          { style: prepareStyles(styles.secondaryText) },
	          secondaryText
	        );
	      }
	      var childMenuPopover = void 0;
	      if (menuItems) {
	        childMenuPopover = _react2.default.createElement(
	          _Popover2.default,
	          {
	            animation: animation,
	            anchorOrigin: anchorOrigin,
	            anchorEl: this.state.anchorEl,
	            open: this.state.open,
	            targetOrigin: targetOrigin,
	            useLayerForClickAway: false,
	            onRequestClose: this.handleRequestClose
	          },
	          _react2.default.createElement(
	            _Menu2.default,
	            { desktop: desktop, disabled: disabled, style: nestedMenuStyle },
	            _react2.default.Children.map(menuItems, this.cloneMenuItem)
	          )
	        );
	        other.onClick = this.handleTouchTap;
	      }

	      return _react2.default.createElement(
	        _ListItem2.default,
	        (0, _extends3.default)({}, other, {
	          disabled: disabled,
	          hoverColor: this.context.muiTheme.menuItem.hoverColor,
	          innerDivStyle: mergedInnerDivStyles,
	          insetChildren: insetChildren,
	          leftIcon: leftIconElement,
	          ref: 'listItem',
	          rightIcon: rightIconElement,
	          role: 'menuitem',
	          style: mergedRootStyles
	        }),
	        children,
	        secondaryTextElement,
	        childMenuPopover
	      );
	    }
	  }]);
	  return MenuItem;
	}(_react.Component);

	MenuItem.muiName = 'MenuItem';
	MenuItem.defaultProps = {
	  anchorOrigin: { horizontal: 'right', vertical: 'top' },
	  checked: false,
	  desktop: false,
	  disabled: false,
	  focusState: 'none',
	  insetChildren: false,
	  targetOrigin: { horizontal: 'left', vertical: 'top' }
	};
	MenuItem.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	MenuItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Location of the anchor for the popover of nested `MenuItem`
	   * elements.
	   * Options:
	   * horizontal: [left, middle, right]
	   * vertical: [top, center, bottom].
	   */
	  anchorOrigin: _propTypes4.default.origin,
	  /**
	   * Override the default animation component used.
	   */
	  animation: _propTypes2.default.func,
	  /**
	   * If true, a left check mark will be rendered.
	   */
	  checked: _propTypes2.default.bool,
	  /**
	   * Elements passed as children to the underlying `ListItem`.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * @ignore
	   * If true, the menu item will render with compact desktop
	   * styles.
	   */
	  desktop: _propTypes2.default.bool,
	  /**
	   * If true, the menu item will be disabled.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * The focus state of the menu item. This prop is used to set the focus
	   * state of the underlying `ListItem`.
	   */
	  focusState: _propTypes2.default.oneOf(['none', 'focused', 'keyboard-focused']),
	  /**
	   * Override the inline-styles of the inner div.
	   */
	  innerDivStyle: _propTypes2.default.object,
	  /**
	   * If true, the children will be indented.
	   * This is only needed when there is no `leftIcon`.
	   */
	  insetChildren: _propTypes2.default.bool,
	  /**
	   * The `SvgIcon` or `FontIcon` to be displayed on the left side.
	   */
	  leftIcon: _propTypes2.default.element,
	  /**
	   * `MenuItem` elements to nest within the menu item.
	   */
	  menuItems: _propTypes2.default.node,
	  /**
	   * Callback function fired when the menu item is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the menu item.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * Can be used to render primary text within the menu item.
	   */
	  primaryText: _propTypes2.default.node,
	  /**
	   * The `SvgIcon` or `FontIcon` to be displayed on the right side.
	   */
	  rightIcon: _propTypes2.default.element,
	  /**
	   * Can be used to render secondary text within the menu item.
	   */
	  secondaryText: _propTypes2.default.node,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Location on the popover of nested `MenuItem` elements that will attach
	   * to the anchor's origin.
	   * Options:
	   * horizontal: [left, middle, right]
	   * vertical: [top, center, bottom].
	   */
	  targetOrigin: _propTypes4.default.origin,
	  /**
	   * The value of the menu item.
	   */
	  value: _propTypes2.default.any
	} : {};
	exports.default = MenuItem;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationCheck = function NavigationCheck(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z' })
	  );
	};
	NavigationCheck = (0, _pure2.default)(NavigationCheck);
	NavigationCheck.displayName = 'NavigationCheck';
	NavigationCheck.muiName = 'SvgIcon';

	exports.default = NavigationCheck;

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _shallowEqual = __webpack_require__(492);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _colorManipulator = __webpack_require__(291);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _EnhancedButton = __webpack_require__(519);

	var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

	var _IconButton = __webpack_require__(517);

	var _IconButton2 = _interopRequireDefault(_IconButton);

	var _expandLess = __webpack_require__(596);

	var _expandLess2 = _interopRequireDefault(_expandLess);

	var _expandMore = __webpack_require__(597);

	var _expandMore2 = _interopRequireDefault(_expandMore);

	var _NestedList = __webpack_require__(598);

	var _NestedList2 = _interopRequireDefault(_NestedList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var autoGenerateNestedIndicator = props.autoGenerateNestedIndicator,
	      insetChildren = props.insetChildren,
	      leftAvatar = props.leftAvatar,
	      leftCheckbox = props.leftCheckbox,
	      leftIcon = props.leftIcon,
	      nestedItems = props.nestedItems,
	      nestedLevel = props.nestedLevel,
	      rightAvatar = props.rightAvatar,
	      rightIcon = props.rightIcon,
	      rightIconButton = props.rightIconButton,
	      rightToggle = props.rightToggle,
	      secondaryText = props.secondaryText,
	      secondaryTextLines = props.secondaryTextLines;
	  var muiTheme = context.muiTheme;
	  var listItem = muiTheme.listItem;


	  var textColor = muiTheme.baseTheme.palette.textColor;
	  var hoverColor = props.hoverColor || (0, _colorManipulator.fade)(textColor, 0.1);
	  var singleAvatar = !secondaryText && (leftAvatar || rightAvatar);
	  var singleNoAvatar = !secondaryText && !(leftAvatar || rightAvatar);
	  var twoLine = secondaryText && secondaryTextLines === 1;
	  var threeLine = secondaryText && secondaryTextLines > 1;

	  var isKeyboardFocused = (props.isKeyboardFocused !== undefined ? props : state).isKeyboardFocused;

	  var styles = {
	    root: {
	      backgroundColor: (isKeyboardFocused || state.hovered) && !state.rightIconButtonHovered && !state.rightIconButtonKeyboardFocused ? hoverColor : null,
	      color: textColor,
	      display: 'block',
	      fontSize: 16,
	      lineHeight: '16px',
	      position: 'relative',
	      transition: _transitions2.default.easeOut()
	    },

	    // This inner div is needed so that ripples will span the entire container
	    innerDiv: {
	      marginLeft: nestedLevel * listItem.nestedLevelDepth,
	      paddingLeft: leftIcon || leftAvatar || leftCheckbox || insetChildren ? 72 : 16,
	      paddingRight: rightIcon || rightAvatar || rightIconButton || nestedItems.length && autoGenerateNestedIndicator ? 56 : rightToggle ? 72 : 16,
	      paddingBottom: singleAvatar ? 20 : 16,
	      paddingTop: singleNoAvatar || threeLine ? 16 : 20,
	      position: 'relative'
	    },

	    icons: {
	      height: 24,
	      width: 24,
	      display: 'block',
	      position: 'absolute',
	      top: twoLine ? 12 : singleAvatar ? 4 : 0,
	      margin: 12
	    },

	    leftIcon: {
	      left: 4
	    },

	    rightIcon: {
	      right: 4
	    },

	    avatars: {
	      position: 'absolute',
	      top: singleAvatar ? 8 : 16
	    },

	    label: {
	      cursor: 'pointer'
	    },

	    leftAvatar: {
	      left: 16
	    },

	    rightAvatar: {
	      right: 16
	    },

	    leftCheckbox: {
	      position: 'absolute',
	      display: 'block',
	      width: 24,
	      top: twoLine ? 24 : singleAvatar ? 16 : 12,
	      left: 16
	    },

	    primaryText: {},

	    rightIconButton: {
	      position: 'absolute',
	      display: 'block',
	      top: twoLine ? 12 : singleAvatar ? 4 : 0,
	      right: 4
	    },

	    rightToggle: {
	      position: 'absolute',
	      display: 'block',
	      width: 54,
	      top: twoLine ? 25 : singleAvatar ? 17 : 13,
	      right: 8
	    },

	    secondaryText: {
	      fontSize: 14,
	      lineHeight: threeLine ? '18px' : '16px',
	      height: threeLine ? 36 : 16,
	      margin: 0,
	      marginTop: 4,
	      color: listItem.secondaryTextColor,

	      // needed for 2 and 3 line ellipsis
	      overflow: 'hidden',
	      textOverflow: 'ellipsis',
	      whiteSpace: threeLine ? null : 'nowrap',
	      display: threeLine ? '-webkit-box' : null,
	      WebkitLineClamp: threeLine ? 2 : null,
	      WebkitBoxOrient: threeLine ? 'vertical' : null
	    }
	  };

	  return styles;
	}

	var ListItem = function (_Component) {
	  (0, _inherits3.default)(ListItem, _Component);

	  function ListItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, ListItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ListItem.__proto__ || (0, _getPrototypeOf2.default)(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false,
	      isKeyboardFocused: false,
	      open: false,
	      rightIconButtonHovered: false,
	      rightIconButtonKeyboardFocused: false,
	      touch: false
	    }, _this.handleKeyboardFocus = function (event, isKeyboardFocused) {
	      _this.setState({ isKeyboardFocused: isKeyboardFocused });
	      _this.props.onKeyboardFocus(event, isKeyboardFocused);
	    }, _this.handleMouseEnter = function (event) {
	      if (!_this.state.touch) _this.setState({ hovered: true });
	      _this.props.onMouseEnter(event);
	    }, _this.handleMouseLeave = function (event) {
	      _this.setState({ hovered: false });
	      _this.props.onMouseLeave(event);
	    }, _this.handleTouchTap = function (event) {
	      if (_this.props.onClick) {
	        _this.props.onClick(event);
	      }

	      if (_this.props.primaryTogglesNestedList) {
	        _this.handleNestedListToggle(event);
	      }
	    }, _this.handleNestedListToggle = function (event) {
	      if (_this.props.leftCheckbox) {
	        event.preventDefault();
	      }
	      event.stopPropagation();

	      if (_this.props.open === null) {
	        _this.setState({ open: !_this.state.open }, function () {
	          _this.props.onNestedListToggle(_this);
	        });
	      } else {
	        // Exposing `this` in the callback is quite a bad API.
	        // I'm doing a one level deep clone to expose a fake state.open.
	        _this.props.onNestedListToggle((0, _extends3.default)({}, _this, {
	          state: {
	            open: !_this.state.open
	          }
	        }));
	      }
	    }, _this.handleRightIconButtonKeyboardFocus = function (event, isKeyboardFocused) {
	      if (isKeyboardFocused) {
	        _this.setState({
	          isKeyboardFocused: false,
	          rightIconButtonKeyboardFocused: isKeyboardFocused
	        });
	      }

	      var iconButton = _this.props.rightIconButton;

	      if (iconButton && iconButton.props.onKeyboardFocus) iconButton.props.onKeyboardFocus(event, isKeyboardFocused);
	    }, _this.handleRightIconButtonMouseLeave = function (event) {
	      var iconButton = _this.props.rightIconButton;
	      _this.setState({ rightIconButtonHovered: false });
	      if (iconButton && iconButton.props.onMouseLeave) iconButton.props.onMouseLeave(event);
	    }, _this.handleRightIconButtonMouseEnter = function (event) {
	      var iconButton = _this.props.rightIconButton;
	      _this.setState({ rightIconButtonHovered: true });
	      if (iconButton && iconButton.props.onMouseEnter) iconButton.props.onMouseEnter(event);
	    }, _this.handleRightIconButtonMouseUp = function (event) {
	      var iconButton = _this.props.rightIconButton;
	      event.stopPropagation();
	      if (iconButton && iconButton.props.onMouseUp) iconButton.props.onMouseUp(event);
	    }, _this.handleRightIconButtonTouchTap = function (event) {
	      var iconButton = _this.props.rightIconButton;

	      // Stop the event from bubbling up to the list-item
	      event.stopPropagation();
	      if (iconButton && iconButton.props.onClick) iconButton.props.onClick(event);
	    }, _this.handleTouchStart = function (event) {
	      _this.setState({ touch: true });
	      _this.props.onTouchStart(event);
	    }, _this.handleTouchEnd = function (event) {
	      _this.setState({ touch: true });
	      _this.props.onTouchEnd(event);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(ListItem, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.setState({
	        open: this.props.open === null ? this.props.initiallyOpen === true : this.props.open
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      // update the state when the component is controlled.
	      if (nextProps.open !== null) this.setState({ open: nextProps.open });
	      if (nextProps.disabled && this.state.hovered) this.setState({ hovered: false });
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
	      return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState) || !(0, _shallowEqual2.default)(this.context, nextContext);
	    }

	    // This method is needed by the `MenuItem` component.

	  }, {
	    key: 'applyFocusState',
	    value: function applyFocusState(focusState) {
	      if (this.button) {
	        var buttonEl = _reactDom2.default.findDOMNode(this.button);

	        switch (focusState) {
	          case 'none':
	            buttonEl.blur();
	            break;
	          case 'focused':
	            buttonEl.focus();
	            break;
	          case 'keyboard-focused':
	            this.button.setKeyboardFocus();
	            buttonEl.focus();
	            break;
	        }
	      }
	    }
	  }, {
	    key: 'createDisabledElement',
	    value: function createDisabledElement(styles, contentChildren, additionalProps) {
	      var _props = this.props,
	          innerDivStyle = _props.innerDivStyle,
	          style = _props.style;


	      var mergedDivStyles = (0, _simpleAssign2.default)({}, styles.root, styles.innerDiv, innerDivStyle, style);

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({}, additionalProps, {
	          style: this.context.muiTheme.prepareStyles(mergedDivStyles)
	        }),
	        contentChildren
	      );
	    }
	  }, {
	    key: 'createLabelElement',
	    value: function createLabelElement(styles, contentChildren, additionalProps) {
	      var _props2 = this.props,
	          innerDivStyle = _props2.innerDivStyle,
	          style = _props2.style;


	      var mergedLabelStyles = (0, _simpleAssign2.default)({}, styles.root, styles.innerDiv, innerDivStyle, styles.label, style);

	      return _react2.default.createElement(
	        'label',
	        (0, _extends3.default)({}, additionalProps, {
	          style: this.context.muiTheme.prepareStyles(mergedLabelStyles)
	        }),
	        contentChildren
	      );
	    }
	  }, {
	    key: 'createTextElement',
	    value: function createTextElement(styles, data, key) {
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      if (_react2.default.isValidElement(data)) {
	        var style = (0, _simpleAssign2.default)({}, styles, data.props.style);
	        if (typeof data.type === 'string') {
	          // if element is a native dom node
	          style = prepareStyles(style);
	        }
	        return _react2.default.cloneElement(data, {
	          key: key,
	          style: style
	        });
	      }

	      return _react2.default.createElement(
	        'div',
	        { key: key, style: prepareStyles(styles) },
	        data
	      );
	    }
	  }, {
	    key: 'pushElement',
	    value: function pushElement(children, element, baseStyles, additionalProps) {
	      if (element) {
	        var styles = (0, _simpleAssign2.default)({}, baseStyles, element.props.style);
	        children.push(_react2.default.cloneElement(element, (0, _extends3.default)({
	          key: children.length,
	          style: styles
	        }, additionalProps)));
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props3 = this.props,
	          autoGenerateNestedIndicator = _props3.autoGenerateNestedIndicator,
	          children = _props3.children,
	          containerElement = _props3.containerElement,
	          disabled = _props3.disabled,
	          disableKeyboardFocus = _props3.disableKeyboardFocus,
	          hoverColor = _props3.hoverColor,
	          initiallyOpen = _props3.initiallyOpen,
	          innerDivStyle = _props3.innerDivStyle,
	          insetChildren = _props3.insetChildren,
	          leftAvatar = _props3.leftAvatar,
	          leftCheckbox = _props3.leftCheckbox,
	          leftIcon = _props3.leftIcon,
	          nestedItems = _props3.nestedItems,
	          nestedLevel = _props3.nestedLevel,
	          nestedListStyle = _props3.nestedListStyle,
	          onKeyboardFocus = _props3.onKeyboardFocus,
	          isKeyboardFocused = _props3.isKeyboardFocused,
	          onMouseEnter = _props3.onMouseEnter,
	          onMouseLeave = _props3.onMouseLeave,
	          onNestedListToggle = _props3.onNestedListToggle,
	          onTouchStart = _props3.onTouchStart,
	          onClick = _props3.onClick,
	          rightAvatar = _props3.rightAvatar,
	          rightIcon = _props3.rightIcon,
	          rightIconButton = _props3.rightIconButton,
	          rightToggle = _props3.rightToggle,
	          primaryText = _props3.primaryText,
	          primaryTogglesNestedList = _props3.primaryTogglesNestedList,
	          secondaryText = _props3.secondaryText,
	          secondaryTextLines = _props3.secondaryTextLines,
	          style = _props3.style,
	          other = (0, _objectWithoutProperties3.default)(_props3, ['autoGenerateNestedIndicator', 'children', 'containerElement', 'disabled', 'disableKeyboardFocus', 'hoverColor', 'initiallyOpen', 'innerDivStyle', 'insetChildren', 'leftAvatar', 'leftCheckbox', 'leftIcon', 'nestedItems', 'nestedLevel', 'nestedListStyle', 'onKeyboardFocus', 'isKeyboardFocused', 'onMouseEnter', 'onMouseLeave', 'onNestedListToggle', 'onTouchStart', 'onClick', 'rightAvatar', 'rightIcon', 'rightIconButton', 'rightToggle', 'primaryText', 'primaryTogglesNestedList', 'secondaryText', 'secondaryTextLines', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);
	      var contentChildren = [children];

	      if (leftIcon) {
	        var additionalProps = {
	          color: leftIcon.props.color || this.context.muiTheme.listItem.leftIconColor
	        };
	        this.pushElement(contentChildren, leftIcon, (0, _simpleAssign2.default)({}, styles.icons, styles.leftIcon), additionalProps);
	      }

	      if (rightIcon) {
	        var _additionalProps = {
	          color: rightIcon.props.color || this.context.muiTheme.listItem.rightIconColor
	        };
	        this.pushElement(contentChildren, rightIcon, (0, _simpleAssign2.default)({}, styles.icons, styles.rightIcon), _additionalProps);
	      }

	      if (leftAvatar) {
	        this.pushElement(contentChildren, leftAvatar, (0, _simpleAssign2.default)({}, styles.avatars, styles.leftAvatar));
	      }

	      if (rightAvatar) {
	        this.pushElement(contentChildren, rightAvatar, (0, _simpleAssign2.default)({}, styles.avatars, styles.rightAvatar));
	      }

	      if (leftCheckbox) {
	        this.pushElement(contentChildren, leftCheckbox, (0, _simpleAssign2.default)({}, styles.leftCheckbox));
	      }

	      // RightIconButtonElement
	      var hasNestListItems = nestedItems.length;
	      var hasRightElement = rightAvatar || rightIcon || rightIconButton || rightToggle;
	      var needsNestedIndicator = hasNestListItems && autoGenerateNestedIndicator && !hasRightElement;

	      if (rightIconButton || needsNestedIndicator) {
	        var rightIconButtonElement = rightIconButton;
	        var rightIconButtonHandlers = {
	          onKeyboardFocus: this.handleRightIconButtonKeyboardFocus,
	          onMouseEnter: this.handleRightIconButtonMouseEnter,
	          onMouseLeave: this.handleRightIconButtonMouseLeave,
	          onClick: this.handleRightIconButtonTouchTap,
	          onMouseDown: this.handleRightIconButtonMouseUp,
	          onMouseUp: this.handleRightIconButtonMouseUp
	        };

	        // Create a nested list indicator icon if we don't have an icon on the right
	        if (needsNestedIndicator) {
	          rightIconButtonElement = this.state.open ? _react2.default.createElement(
	            _IconButton2.default,
	            null,
	            _react2.default.createElement(_expandLess2.default, null)
	          ) : _react2.default.createElement(
	            _IconButton2.default,
	            null,
	            _react2.default.createElement(_expandMore2.default, null)
	          );
	          rightIconButtonHandlers.onClick = this.handleNestedListToggle;
	        }

	        this.pushElement(contentChildren, rightIconButtonElement, (0, _simpleAssign2.default)({}, styles.rightIconButton), rightIconButtonHandlers);
	      }

	      if (rightToggle) {
	        this.pushElement(contentChildren, rightToggle, (0, _simpleAssign2.default)({}, styles.rightToggle));
	      }

	      if (primaryText) {
	        var primaryTextElement = this.createTextElement(styles.primaryText, primaryText, 'primaryText');
	        contentChildren.push(primaryTextElement);
	      }

	      if (secondaryText) {
	        var secondaryTextElement = this.createTextElement(styles.secondaryText, secondaryText, 'secondaryText');
	        contentChildren.push(secondaryTextElement);
	      }

	      var nestedList = nestedItems.length ? _react2.default.createElement(
	        _NestedList2.default,
	        { nestedLevel: nestedLevel, open: this.state.open, style: nestedListStyle },
	        nestedItems
	      ) : undefined;

	      var simpleLabel = !primaryTogglesNestedList && (leftCheckbox || rightToggle);

	      return _react2.default.createElement(
	        'div',
	        null,
	        simpleLabel ? this.createLabelElement(styles, contentChildren, other) : disabled ? this.createDisabledElement(styles, contentChildren, other) : _react2.default.createElement(
	          _EnhancedButton2.default,
	          (0, _extends3.default)({
	            containerElement: containerElement
	          }, other, {
	            disableKeyboardFocus: disableKeyboardFocus || this.state.rightIconButtonKeyboardFocused,
	            onKeyboardFocus: this.handleKeyboardFocus,
	            onMouseLeave: this.handleMouseLeave,
	            onMouseEnter: this.handleMouseEnter,
	            onTouchStart: this.handleTouchStart,
	            onTouchEnd: this.handleTouchEnd,
	            onClick: this.handleTouchTap,
	            disabled: disabled,
	            ref: function ref(node) {
	              return _this2.button = node;
	            },
	            style: (0, _simpleAssign2.default)({}, styles.root, style)
	          }),
	          _react2.default.createElement(
	            'div',
	            { style: prepareStyles((0, _simpleAssign2.default)(styles.innerDiv, innerDivStyle)) },
	            contentChildren
	          )
	        ),
	        nestedList
	      );
	    }
	  }]);
	  return ListItem;
	}(_react.Component);

	ListItem.muiName = 'ListItem';
	ListItem.defaultProps = {
	  autoGenerateNestedIndicator: true,
	  containerElement: 'span',
	  disableKeyboardFocus: false,
	  disabled: false,
	  initiallyOpen: false,
	  insetChildren: false,
	  nestedItems: [],
	  nestedLevel: 0,
	  onKeyboardFocus: function onKeyboardFocus() {},
	  onMouseEnter: function onMouseEnter() {},
	  onMouseLeave: function onMouseLeave() {},
	  onNestedListToggle: function onNestedListToggle() {},
	  onTouchEnd: function onTouchEnd() {},
	  onTouchStart: function onTouchStart() {},
	  open: null,
	  primaryTogglesNestedList: false,
	  secondaryTextLines: 1
	};
	ListItem.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	ListItem.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, generate a nested-list-indicator icon when nested list
	   * items are detected. Note that an indicator will not be created
	   * if a `rightIcon` or `rightIconButton` has been provided to
	   * the element.
	   */
	  autoGenerateNestedIndicator: _propTypes2.default.bool,
	  /**
	   * Children passed into the `ListItem`.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The element to use as the container for the ListItem. Either a string to
	   * use a DOM element or a ReactElement. This is useful for wrapping the
	   * ListItem in a custom Link component. If a ReactElement is given, ensure
	   * that it passes all of its given props through to the underlying DOM
	   * element and renders its children prop for proper integration.
	   */
	  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
	  /**
	   * If true, the element will not be able to be focused by the keyboard.
	   */
	  disableKeyboardFocus: _propTypes2.default.bool,
	  /**
	   * If true, the element will not be clickable
	   * and will not display hover effects.
	   * This is automatically disabled if either `leftCheckbox`
	   * or `rightToggle` is set.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	  * Override the hover background color.
	  */
	  hoverColor: _propTypes2.default.string,
	  /**
	   * If true, the nested `ListItem`s are initially displayed.
	   */
	  initiallyOpen: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the inner div element.
	   */
	  innerDivStyle: _propTypes2.default.object,
	  /**
	   * If true, the children will be indented by 72px.
	   * This is useful if there is no left avatar or left icon.
	   */
	  insetChildren: _propTypes2.default.bool,
	  /**
	   * Use to control if the list item should render as keyboard focused.  If
	   * undefined (default), this will be automatically managed.  If provided,
	   * it will change the components style.  Note that this will not change the
	   * actual focus - and should only be used when you want to simulate
	   * keyboard focus (eg. in a rich text input autocomplete).
	   */
	  isKeyboardFocused: _propTypes2.default.bool,
	  /**
	   * This is the `Avatar` element to be displayed on the left side.
	   */
	  leftAvatar: _propTypes2.default.element,
	  /**
	   * This is the `Checkbox` element to be displayed on the left side.
	   */
	  leftCheckbox: _propTypes2.default.element,
	  /**
	   * This is the `SvgIcon` or `FontIcon` to be displayed on the left side.
	   */
	  leftIcon: _propTypes2.default.element,
	  /**
	   * An array of `ListItem`s to nest underneath the current `ListItem`.
	   */
	  nestedItems: _propTypes2.default.arrayOf(_propTypes2.default.element),
	  /**
	   * Controls how deep a `ListItem` appears.
	   * This property is automatically managed, so modify at your own risk.
	   */
	  nestedLevel: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of the nested items' `NestedList`.
	   */
	  nestedListStyle: _propTypes2.default.object,
	  /**
	   * Callback function fired when the list item is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the list item.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * Callback function fired when the `ListItem` is focused or blurred by the keyboard.
	   *
	   * @param {object} event `focus` or `blur` event targeting the `ListItem`.
	   * @param {boolean} isKeyboardFocused If true, the `ListItem` is focused.
	   */
	  onKeyboardFocus: _propTypes2.default.func,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /**
	   * Callback function fired when the `ListItem` toggles its nested list.
	   *
	   * @param {object} listItem The `ListItem`.
	   */
	  onNestedListToggle: _propTypes2.default.func,
	  /** @ignore */
	  onTouchEnd: _propTypes2.default.func,
	  /** @ignore */
	  onTouchStart: _propTypes2.default.func,
	  /**
	   * Control toggle state of nested list.
	   */
	  open: _propTypes2.default.bool,
	  /**
	   * This is the block element that contains the primary text.
	   * If a string is passed in, a div tag will be rendered.
	   */
	  primaryText: _propTypes2.default.node,
	  /**
	   * If true, clicking or tapping the primary text of the `ListItem`
	   * toggles the nested list.
	   */
	  primaryTogglesNestedList: _propTypes2.default.bool,
	  /**
	   * This is the `Avatar` element to be displayed on the right side.
	   */
	  rightAvatar: _propTypes2.default.element,
	  /**
	   * This is the `SvgIcon` or `FontIcon` to be displayed on the right side.
	   */
	  rightIcon: _propTypes2.default.element,
	  /**
	   * This is the `IconButton` to be displayed on the right side.
	   * Hovering over this button will remove the `ListItem` hover.
	   * Also, clicking on this button will not trigger a
	   * ripple on the `ListItem`; the event will be stopped and prevented
	   * from bubbling up to cause a `ListItem` click.
	   */
	  rightIconButton: _propTypes2.default.element,
	  /**
	   * This is the `Toggle` element to display on the right side.
	   */
	  rightToggle: _propTypes2.default.element,
	  /**
	   * This is the block element that contains the secondary text.
	   * If a string is passed in, a div tag will be rendered.
	   */
	  secondaryText: _propTypes2.default.node,
	  /**
	   * Can be 1 or 2. This is the number of secondary
	   * text lines before ellipsis will show.
	   */
	  secondaryTextLines: _propTypes2.default.oneOf([1, 2]),
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = ListItem;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationExpandLess = function NavigationExpandLess(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z' })
	  );
	};
	NavigationExpandLess = (0, _pure2.default)(NavigationExpandLess);
	NavigationExpandLess.displayName = 'NavigationExpandLess';
	NavigationExpandLess.muiName = 'SvgIcon';

	exports.default = NavigationExpandLess;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationExpandMore = function NavigationExpandMore(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z' })
	  );
	};
	NavigationExpandMore = (0, _pure2.default)(NavigationExpandMore);
	NavigationExpandMore.displayName = 'NavigationExpandMore';
	NavigationExpandMore.muiName = 'SvgIcon';

	exports.default = NavigationExpandMore;

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _List = __webpack_require__(583);

	var _List2 = _interopRequireDefault(_List);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NestedList = function NestedList(props) {
	  var children = props.children,
	      open = props.open,
	      nestedLevel = props.nestedLevel,
	      style = props.style;


	  if (!open) {
	    return null;
	  }

	  return _react2.default.createElement(
	    _List2.default,
	    { style: style },
	    _react.Children.map(children, function (child) {
	      return (0, _react.isValidElement)(child) ? (0, _react.cloneElement)(child, {
	        nestedLevel: nestedLevel + 1
	      }) : child;
	    })
	  );
	};

	NestedList.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  nestedLevel: _propTypes2.default.number.isRequired,
	  open: _propTypes2.default.bool.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};

	exports.default = NestedList;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _MenuItem = __webpack_require__(593);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _MenuItem2.default;

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiAvatar = __webpack_require__(538);

	var _materialUiAvatar2 = _interopRequireDefault(_materialUiAvatar);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiSvgIconsCommunicationContactMail = __webpack_require__(601);

	var _materialUiSvgIconsCommunicationContactMail2 = _interopRequireDefault(_materialUiSvgIconsCommunicationContactMail);

	var _materialUiSvgIconsContentCreate = __webpack_require__(602);

	var _materialUiSvgIconsContentCreate2 = _interopRequireDefault(_materialUiSvgIconsContentCreate);

	var _configJsx = __webpack_require__(2);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiCard = __webpack_require__(501);

	var _materialUiTabs = __webpack_require__(603);

	var _materialUiSnackbar = __webpack_require__(544);

	var _materialUiSnackbar2 = _interopRequireDefault(_materialUiSnackbar);

	/*global  localStorage */

	var React = __webpack_require__(241);

	var Navlog = __webpack_require__(559);
	var itemcolor = {
	  color: '#FFFFFF',
	  marginTop: '1%',
	  marginRight: '2%',
	  display: 'flex',
	  height: '5%'
	};

	var styles = {
	  floatingLabelStyle: {
	    color: 'black'
	  }
	};

	var card = {
	  display: 'flex',
	  'justifycontent': 'center',
	  padding: '0px',
	  'paddingTop': '16px',
	  'flexDirection': 'column',
	  'alignItems': 'center'

	};

	var Perfil = (function (_React$Component) {
	  _inherits(Perfil, _React$Component);

	  function Perfil() {
	    _classCallCheck(this, Perfil);

	    _get(Object.getPrototypeOf(Perfil.prototype), 'constructor', this).call(this);

	    this.state = {
	      open: false,
	      auth: '',
	      id: localStorage.getItem('iduser'),
	      idusuarioactivo: localStorage.getItem('idactivo'),
	      avatar: '',
	      miperfil: true,
	      name: '',
	      email: '',
	      orgname: '',
	      password: '',
	      newpassword: '',
	      confirmpassword: '',
	      showchangepic: true,
	      showchangepass: true,
	      admin: '',
	      mostrar: false,
	      snack: false,
	      snackerror: false
	    };
	    this.handleChange = this.handleChange.bind(this);
	    this.getFileName = this.getFileName.bind(this);
	    this.subirimagen = this.subirimagen.bind(this);
	    this.changepass = this.changepass.bind(this);
	  }

	  _createClass(Perfil, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this = this;

	      var padre = this;
	      firebase.auth().onAuthStateChanged(function (user) {
	        if (user) {

	          padre.setState({ auth: true });
	        } else {
	          padre.setState({ auth: false });
	          padre.props.history.push({ pathname: '/login' });
	        }
	      });

	      firebase.database().ref().child('usuarios/' + this.state.idusuarioactivo).on('value', function (snapshot) {
	        var messages = snapshot.val();

	        /*  Verificacion si es ADMIN O MI LA MISMA PERSONA VIENDO SU PERFIL */

	        if (messages.admin == 'true' || padre.state.id == padre.state.idusuarioactivo) {

	          _this.setState({
	            admin: messages.admin,
	            mostrar: true
	          });
	        } else {

	          _this.setState({
	            admin: messages.admin
	          });
	        }
	      });

	      firebase.database().ref().child('usuarios/' + this.state.id).on('value', function (snapshot) {
	        var messages = snapshot.val();

	        _this.setState({
	          name: messages.nombre,
	          email: messages.correo,
	          orgname: messages.organizacion
	        });
	      });

	      var usuario = this.state.id;
	      firebase.database().ref().child('usuarios/' + this.state.id + '/avatar/link').on('value', function (snapshot) {
	        var messages = snapshot.val();

	        _this.setState({
	          avatar: messages
	        });
	      });
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {

	      return true;
	    }
	  }, {
	    key: 'getFileName',
	    value: function getFileName() {
	      var name = document.getElementById('imageselector');
	      this.state.file = name.files.item(0);
	    }
	  }, {
	    key: 'handleOpen',
	    value: function handleOpen() {
	      this.setState({ open: true });
	    }
	  }, {
	    key: 'handleClose',
	    value: function handleClose() {
	      this.setState({ open: false, name: '', description: '' });
	    }
	  }, {
	    key: 'handleChange',
	    value: function handleChange(e) {

	      this.setState(_defineProperty({}, e.target.name, e.target.value));
	    }
	  }, {
	    key: 'changepass',
	    value: function changepass() {

	      var oldpass = this.state.password;
	      var newpass = this.state.newpassword;
	      var confpass = this.state.confirmpassword;
	      var token = (0, _configJsx.getToken)();
	      var padre = this;

	      var credential = firebase.auth.EmailAuthProvider.credential(token.email, oldpass);

	      token.reauthenticateWithCredential(credential).then(function () {

	        if (newpass == confpass) {

	          token.updatePassword(newpass).then(function () {

	            padre.setState({ snack: true });
	            (0, _configJsx.logout)();
	            localStorage.clear();
	            padre.props.history.push({ pathname: '/' });
	          })['catch'](function (error) {});
	        } else {
	          padre.setState({ snackerror: true });
	          padre.setState({
	            password: '',
	            newpassword: '',
	            confirmpassword: ''
	          });
	        }
	      })['catch'](function (error) {
	        padre.setState({ snackerror: true });
	        padre.setState({
	          password: '',
	          newpassword: '',
	          confirmpassword: ''
	        });
	      });
	    }
	  }, {
	    key: 'subirimagen',
	    value: function subirimagen() {
	      (0, _configJsx.uploadImage)(this.state.file, this.state.file.name, this.state.id);
	      this.setState({ open: false });
	    }
	  }, {
	    key: 'handleRequestClose',
	    value: function handleRequestClose() {

	      this.setState({
	        snack: false,
	        snackerror: false
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return React.createElement(
	        'section',
	        null,
	        React.createElement(
	          'div',
	          null,
	          React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	          React.createElement(
	            _materialUiStylesMuiThemeProvider2['default'],
	            null,
	            React.createElement(
	              'div',
	              null,
	              React.createElement(
	                _materialUiTabs.Tabs,
	                null,
	                React.createElement(
	                  _materialUiTabs.Tab,
	                  {
	                    icon: React.createElement(_materialUiSvgIconsCommunicationContactMail2['default'], null),
	                    label: 'Información Basica'
	                  },
	                  React.createElement(
	                    'div',
	                    { className: 'pantallaperfil' },
	                    React.createElement(
	                      'div',
	                      { className: 'divisorfoto' },
	                      React.createElement(
	                        'h1',
	                        null,
	                        'Foto de Perfil'
	                      ),
	                      React.createElement(_materialUiAvatar2['default'], { src: this.state.avatar, size: 240, className: 'avatar' }),
	                      this.state.mostrar == true ? React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                          'button',
	                          { className: 'botonavatar', onClick: function () {
	                              return _this2.handleOpen();
	                            } },
	                          'Cambiar Avatar'
	                        ),
	                        React.createElement(
	                          _materialUiDialog2['default'],
	                          {
	                            title: 'Cambiar Avatar',
	                            modal: true,
	                            open: this.state.open
	                          },
	                          React.createElement(
	                            'h4',
	                            null,
	                            ' Recomendado: 240x204 pixeles'
	                          ),
	                          React.createElement('br', null),
	                          React.createElement('input', { type: 'file', id: 'imageselector', accept: 'image/*', onChange: this.getFileName }),
	                          React.createElement('br', null),
	                          React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Cancelar', onClick: function () {
	                              return _this2.handleClose();
	                            }, backgroundColor: '#00bcd4', hoverColor: '#006775' }),
	                          React.createElement(_materialUiFlatButton2['default'], { style: itemcolor, label: 'Guardar', backgroundColor: '#00bcd4', hoverColor: '#006775', onClick: function () {
	                              return _this2.subirimagen();
	                            } })
	                        )
	                      ) : null
	                    ),
	                    React.createElement(
	                      'div',
	                      { className: 'divisorperfil' },
	                      React.createElement(
	                        'h1',
	                        null,
	                        'Información Basica'
	                      ),
	                      React.createElement(
	                        'div',
	                        { className: 'perfil' },
	                        React.createElement(
	                          _materialUiCard.Card,
	                          null,
	                          React.createElement(
	                            _materialUiCard.CardActions,
	                            null,
	                            React.createElement(_materialUiTextField2['default'], {

	                              floatingLabelStyle: styles.floatingLabelStyle,
	                              value: this.state.name,
	                              floatingLabelText: 'Nombre Completo'
	                            }),
	                            React.createElement(_materialUiTextField2['default'], {
	                              floatingLabelStyle: styles.floatingLabelStyle,
	                              value: this.state.email,
	                              floatingLabelText: 'Correo  Electrónico'
	                            }),
	                            React.createElement('br', null),
	                            React.createElement(_materialUiTextField2['default'], {
	                              floatingLabelStyle: styles.floatingLabelStyle,
	                              value: this.state.orgname,
	                              floatingLabelText: 'Organización'
	                            })
	                          )
	                        )
	                      )
	                    )
	                  )
	                ),
	                this.state.mostrar == true ? React.createElement(
	                  _materialUiTabs.Tab,
	                  {
	                    icon: React.createElement(_materialUiSvgIconsContentCreate2['default'], null),
	                    label: 'Cambiar Contraseña'
	                  },
	                  React.createElement(
	                    'div',
	                    { className: 'cardloginregistro' },
	                    React.createElement(
	                      _materialUiCard.Card,
	                      { className: 'login' },
	                      React.createElement(_materialUiCard.CardTitle, { style: card, titleStyle: card, title: 'Cambiar Contraseña' }),
	                      React.createElement(
	                        _materialUiCard.CardActions,
	                        null,
	                        React.createElement(_materialUiTextField2['default'], {
	                          value: this.state.password, onChange: this.handleChange, name: 'password', type: 'password',
	                          floatingLabelText: 'Contraseña Actual'
	                        }),
	                        React.createElement('br', null),
	                        React.createElement(_materialUiTextField2['default'], {
	                          value: this.state.newpassword, onChange: this.handleChange, name: 'newpassword', type: 'password',
	                          floatingLabelText: 'Contraseña Nueva'
	                        }),
	                        React.createElement('br', null),
	                        React.createElement(_materialUiTextField2['default'], {
	                          value: this.state.confirmpassword, onChange: this.handleChange, name: 'confirmpassword', type: 'password',
	                          floatingLabelText: 'Confirmar Nueva Contraseña'
	                        }),
	                        React.createElement('br', null),
	                        React.createElement(
	                          'button',
	                          { className: 'botoncard', onClick: function () {
	                              return _this2.changepass();
	                            } },
	                          'Aceptar'
	                        )
	                      )
	                    )
	                  )
	                ) : null
	              ),
	              React.createElement(_materialUiSnackbar2['default'], {
	                open: this.state.snack,
	                message: 'Contraseña Actualizada - Ingrese Nuevamente',
	                autoHideDuration: 2000,
	                onRequestClose: this.handleRequestClose
	              }),
	              React.createElement(_materialUiSnackbar2['default'], {
	                open: this.state.snackerror,
	                message: 'Credenciales Incorrectas - Intente Nuevamente',
	                autoHideDuration: 2000,
	                onRequestClose: this.handleRequestClose
	              })
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return Perfil;
	})(React.Component);

	exports['default'] = Perfil;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "perfil.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var CommunicationContactMail = function CommunicationContactMail(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M21 8V7l-3 2-3-2v1l3 2 3-2zm1-5H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm8-6h-8V6h8v6z' })
	  );
	};
	CommunicationContactMail = (0, _pure2.default)(CommunicationContactMail);
	CommunicationContactMail.displayName = 'CommunicationContactMail';
	CommunicationContactMail.muiName = 'SvgIcon';

	exports.default = CommunicationContactMail;

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ContentCreate = function ContentCreate(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z' })
	  );
	};
	ContentCreate = (0, _pure2.default)(ContentCreate);
	ContentCreate.displayName = 'ContentCreate';
	ContentCreate.muiName = 'SvgIcon';

	exports.default = ContentCreate;

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.Tabs = exports.Tab = undefined;

	var _Tab2 = __webpack_require__(604);

	var _Tab3 = _interopRequireDefault(_Tab2);

	var _Tabs2 = __webpack_require__(605);

	var _Tabs3 = _interopRequireDefault(_Tabs2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Tab = _Tab3.default;
	exports.Tabs = _Tabs3.default;
	exports.default = _Tabs3.default;

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _EnhancedButton = __webpack_require__(519);

	var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tabs = context.muiTheme.tabs;


	  return {
	    root: {
	      color: props.selected ? tabs.selectedTextColor : tabs.textColor,
	      fontWeight: 500,
	      fontSize: 14,
	      width: props.width,
	      textTransform: 'uppercase',
	      padding: 0
	    },
	    button: {
	      display: 'flex',
	      flexDirection: 'column',
	      alignItems: 'center',
	      justifyContent: 'center',
	      height: props.label && props.icon ? 72 : 48
	    }
	  };
	}

	var Tab = function (_Component) {
	  (0, _inherits3.default)(Tab, _Component);

	  function Tab() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Tab);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tab.__proto__ || (0, _getPrototypeOf2.default)(Tab)).call.apply(_ref, [this].concat(args))), _this), _this.handleTouchTap = function (event) {
	      if (_this.props.onClick) {
	        _this.props.onClick(_this.props.value, event, _this);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Tab, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          icon = _props.icon,
	          index = _props.index,
	          onActive = _props.onActive,
	          onClick = _props.onClick,
	          selected = _props.selected,
	          label = _props.label,
	          buttonStyle = _props.buttonStyle,
	          style = _props.style,
	          value = _props.value,
	          width = _props.width,
	          other = (0, _objectWithoutProperties3.default)(_props, ['icon', 'index', 'onActive', 'onClick', 'selected', 'label', 'buttonStyle', 'style', 'value', 'width']);


	      var styles = getStyles(this.props, this.context);

	      var iconElement = void 0;
	      if (icon && _react2.default.isValidElement(icon)) {
	        iconElement = _react2.default.cloneElement(icon, {
	          style: {
	            fontSize: 24,
	            color: icon.props && icon.props.style && icon.props.style.color ? icon.props.style.color : styles.root.color,
	            marginBottom: label ? 5 : 0
	          }
	        });
	      }

	      var rippleOpacity = 0.3;
	      var rippleColor = this.context.muiTheme.tabs.selectedTextColor;

	      return _react2.default.createElement(
	        _EnhancedButton2.default,
	        (0, _extends3.default)({}, other, {
	          style: (0, _simpleAssign2.default)(styles.root, style),
	          focusRippleColor: rippleColor,
	          touchRippleColor: rippleColor,
	          focusRippleOpacity: rippleOpacity,
	          touchRippleOpacity: rippleOpacity,
	          onClick: this.handleTouchTap
	        }),
	        _react2.default.createElement(
	          'div',
	          { style: (0, _simpleAssign2.default)(styles.button, buttonStyle) },
	          iconElement,
	          label
	        )
	      );
	    }
	  }]);
	  return Tab;
	}(_react.Component);

	Tab.muiName = 'Tab';
	Tab.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Tab.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Override the inline-styles of the button element.
	   */
	  buttonStyle: _propTypes2.default.object,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Sets the icon of the tab, you can pass `FontIcon` or `SvgIcon` elements.
	   */
	  icon: _propTypes2.default.node,
	  /**
	   * @ignore
	   */
	  index: _propTypes2.default.any,
	  /**
	   * Sets the text value of the tab item to the string specified.
	   */
	  label: _propTypes2.default.node,
	  /**
	   * Fired when the active tab changes by touch or tap.
	   * Use this event to specify any functionality when an active tab changes.
	   * For example - we are using this to route to home when the third tab becomes active.
	   * This function will always recieve the active tab as it\'s first argument.
	   */
	  onActive: _propTypes2.default.func,
	  /**
	   * @ignore
	   * This property is overriden by the Tabs component.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Defines if the current tab is selected or not.
	   * The Tabs component is responsible for setting this property.
	   */
	  selected: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * If value prop passed to Tabs component, this value prop is also required.
	   * It assigns a value to the tab so that it can be selected by the Tabs.
	   */
	  value: _propTypes2.default.any,
	  /**
	   * @ignore
	   * This property is overriden by the Tabs component.
	   */
	  width: _propTypes2.default.string
	} : {};
	exports.default = Tab;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _TabTemplate = __webpack_require__(606);

	var _TabTemplate2 = _interopRequireDefault(_TabTemplate);

	var _InkBar = __webpack_require__(607);

	var _InkBar2 = _interopRequireDefault(_InkBar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tabs = context.muiTheme.tabs;


	  return {
	    tabItemContainer: {
	      width: '100%',
	      backgroundColor: tabs.backgroundColor,
	      whiteSpace: 'nowrap',
	      display: 'flex'
	    }
	  };
	}

	var Tabs = function (_Component) {
	  (0, _inherits3.default)(Tabs, _Component);

	  function Tabs() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Tabs);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Tabs.__proto__ || (0, _getPrototypeOf2.default)(Tabs)).call.apply(_ref, [this].concat(args))), _this), _this.state = { selectedIndex: 0 }, _this.handleTabTouchTap = function (value, event, tab) {
	      var valueLink = _this.getValueLink(_this.props);
	      var index = tab.props.index;

	      if (valueLink.value && valueLink.value !== value || _this.state.selectedIndex !== index) {
	        valueLink.requestChange(value, event, tab);
	      }

	      _this.setState({ selectedIndex: index });

	      if (tab.props.onActive) {
	        tab.props.onActive(tab);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Tabs, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var valueLink = this.getValueLink(this.props);
	      var initialIndex = this.props.initialSelectedIndex;

	      this.setState({
	        selectedIndex: valueLink.value !== undefined ? this.getSelectedIndex(this.props) : initialIndex < this.getTabCount() ? initialIndex : 0
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(newProps, nextContext) {
	      var valueLink = this.getValueLink(newProps);
	      var newState = {
	        muiTheme: nextContext.muiTheme || this.context.muiTheme
	      };

	      if (valueLink.value !== undefined) {
	        newState.selectedIndex = this.getSelectedIndex(newProps);
	      }

	      this.setState(newState);
	    }
	  }, {
	    key: 'getTabs',
	    value: function getTabs() {
	      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;

	      var tabs = [];

	      _react.Children.forEach(props.children, function (tab) {
	        if ((0, _react.isValidElement)(tab)) {
	          tabs.push(tab);
	        }
	      });

	      return tabs;
	    }
	  }, {
	    key: 'getTabCount',
	    value: function getTabCount() {
	      return this.getTabs().length;
	    }

	    // Do not use outside of this component, it will be removed once valueLink is deprecated

	  }, {
	    key: 'getValueLink',
	    value: function getValueLink(props) {
	      return props.valueLink || {
	        value: props.value,
	        requestChange: props.onChange
	      };
	    }
	  }, {
	    key: 'getSelectedIndex',
	    value: function getSelectedIndex(props) {
	      var valueLink = this.getValueLink(props);
	      var selectedIndex = -1;

	      this.getTabs(props).forEach(function (tab, index) {
	        if (valueLink.value === tab.props.value) {
	          selectedIndex = index;
	        }
	      });

	      return selectedIndex;
	    }
	  }, {
	    key: 'getSelected',
	    value: function getSelected(tab, index) {
	      var valueLink = this.getValueLink(this.props);
	      return valueLink.value ? valueLink.value === tab.props.value : this.state.selectedIndex === index;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          contentContainerClassName = _props.contentContainerClassName,
	          contentContainerStyle = _props.contentContainerStyle,
	          initialSelectedIndex = _props.initialSelectedIndex,
	          inkBarStyle = _props.inkBarStyle,
	          onChange = _props.onChange,
	          style = _props.style,
	          tabItemContainerStyle = _props.tabItemContainerStyle,
	          tabTemplate = _props.tabTemplate,
	          tabTemplateStyle = _props.tabTemplateStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['contentContainerClassName', 'contentContainerStyle', 'initialSelectedIndex', 'inkBarStyle', 'onChange', 'style', 'tabItemContainerStyle', 'tabTemplate', 'tabTemplateStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var valueLink = this.getValueLink(this.props);
	      var tabValue = valueLink.value;
	      var tabContent = [];
	      var width = 100 / this.getTabCount();

	      var tabs = this.getTabs().map(function (tab, index) {
	        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(tab.type && tab.type.muiName === 'Tab', 'Material-UI: Tabs only accepts Tab Components as children.\n        Found ' + (tab.type.muiName || tab.type) + ' as child number ' + (index + 1) + ' of Tabs') : void 0;

	        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(!tabValue || tab.props.value !== undefined, 'Material-UI: Tabs value prop has been passed, but Tab ' + index + '\n        does not have a value prop. Needs value if Tabs is going\n        to be a controlled component.') : void 0;

	        tabContent.push(tab.props.children ? (0, _react.createElement)(tabTemplate || _TabTemplate2.default, {
	          key: index,
	          selected: _this2.getSelected(tab, index),
	          style: tabTemplateStyle
	        }, tab.props.children) : undefined);

	        return (0, _react.cloneElement)(tab, {
	          key: index,
	          index: index,
	          selected: _this2.getSelected(tab, index),
	          width: width + '%',
	          onClick: _this2.handleTabTouchTap
	        });
	      });

	      var realSelectedIndex = valueLink.value ? this.getSelectedIndex(this.props) : this.state.selectedIndex;

	      var inkBar = realSelectedIndex !== -1 ? _react2.default.createElement(_InkBar2.default, {
	        left: width * realSelectedIndex + '%',
	        width: width + '%',
	        style: inkBarStyle
	      }) : null;

	      var inkBarContainerWidth = tabItemContainerStyle ? tabItemContainerStyle.width : '100%';

	      return _react2.default.createElement(
	        'div',
	        (0, _extends3.default)({ style: prepareStyles((0, _simpleAssign2.default)({}, style)) }, other),
	        _react2.default.createElement(
	          'div',
	          { style: prepareStyles((0, _simpleAssign2.default)(styles.tabItemContainer, tabItemContainerStyle)) },
	          tabs
	        ),
	        _react2.default.createElement(
	          'div',
	          { style: { width: inkBarContainerWidth } },
	          inkBar
	        ),
	        _react2.default.createElement(
	          'div',
	          {
	            style: prepareStyles((0, _simpleAssign2.default)({}, contentContainerStyle)),
	            className: contentContainerClassName
	          },
	          tabContent
	        )
	      );
	    }
	  }]);
	  return Tabs;
	}(_react.Component);

	Tabs.defaultProps = {
	  initialSelectedIndex: 0,
	  onChange: function onChange() {}
	};
	Tabs.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Tabs.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Should be used to pass `Tab` components.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * The css class name of the content's container.
	   */
	  contentContainerClassName: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the content's container.
	   */
	  contentContainerStyle: _propTypes2.default.object,
	  /**
	   * Specify initial visible tab index.
	   * If `initialSelectedIndex` is set but larger than the total amount of specified tabs,
	   * `initialSelectedIndex` will revert back to default.
	   * If `initialSelectedIndex` is set to any negative value, no tab will be selected intially.
	   */
	  initialSelectedIndex: _propTypes2.default.number,
	  /**
	   * Override the inline-styles of the InkBar.
	   */
	  inkBarStyle: _propTypes2.default.object,
	  /**
	   * Called when the selected value change.
	   */
	  onChange: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the tab-labels container.
	   */
	  tabItemContainerStyle: _propTypes2.default.object,
	  /**
	   * Override the default tab template used to wrap the content of each tab element.
	   */
	  tabTemplate: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the tab template.
	   */
	  tabTemplateStyle: _propTypes2.default.object,
	  /**
	   * Makes Tabs controllable and selects the tab whose value prop matches this prop.
	   */
	  value: _propTypes2.default.any
	} : {};
	exports.default = Tabs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var styles = {
	  width: '100%',
	  position: 'relative',
	  textAlign: 'initial'
	};

	var TabTemplate = function TabTemplate(_ref) {
	  var children = _ref.children,
	      selected = _ref.selected,
	      style = _ref.style;

	  var templateStyle = (0, _simpleAssign2.default)({}, styles, style);
	  if (!selected) {
	    templateStyle.height = 0;
	    templateStyle.overflow = 'hidden';
	  }

	  return _react2.default.createElement(
	    'div',
	    { style: templateStyle },
	    children
	  );
	};

	TabTemplate.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  selected: _propTypes2.default.bool,
	  style: _propTypes2.default.object
	} : {};

	exports.default = TabTemplate;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var _context$muiTheme = context.muiTheme,
	      inkBar = _context$muiTheme.inkBar,
	      isRtl = _context$muiTheme.isRtl;


	  return {
	    root: {
	      left: props.left,
	      width: props.width,
	      bottom: 0,
	      display: 'block',
	      backgroundColor: props.color || inkBar.backgroundColor,
	      height: 2,
	      marginTop: -2,
	      position: 'relative',
	      transition: _transitions2.default.easeOut('1s', isRtl ? 'right' : 'left')
	    }
	  };
	}

	var InkBar = function (_Component) {
	  (0, _inherits3.default)(InkBar, _Component);

	  function InkBar() {
	    (0, _classCallCheck3.default)(this, InkBar);
	    return (0, _possibleConstructorReturn3.default)(this, (InkBar.__proto__ || (0, _getPrototypeOf2.default)(InkBar)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(InkBar, [{
	    key: 'render',
	    value: function render() {
	      var style = this.props.style;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      return _react2.default.createElement('div', { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) });
	    }
	  }]);
	  return InkBar;
	}(_react.Component);

	InkBar.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	InkBar.propTypes = process.env.NODE_ENV !== "production" ? {
	  color: _propTypes2.default.string,
	  left: _propTypes2.default.string.isRequired,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  width: _propTypes2.default.string.isRequired
	} : {};
	exports.default = InkBar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _configJsx = __webpack_require__(2);

	var _materialUiBadge = __webpack_require__(561);

	var _materialUiBadge2 = _interopRequireDefault(_materialUiBadge);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsNavigationArrowDropDownCircle = __webpack_require__(609);

	var _materialUiSvgIconsNavigationArrowDropDownCircle2 = _interopRequireDefault(_materialUiSvgIconsNavigationArrowDropDownCircle);

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiSvgIconsHardwareDeveloperBoard = __webpack_require__(564);

	var _materialUiSvgIconsHardwareDeveloperBoard2 = _interopRequireDefault(_materialUiSvgIconsHardwareDeveloperBoard);

	var _materialUiDropDownMenu = __webpack_require__(579);

	var _materialUiDropDownMenu2 = _interopRequireDefault(_materialUiDropDownMenu);

	var _materialUiMenuItem = __webpack_require__(599);

	var _materialUiMenuItem2 = _interopRequireDefault(_materialUiMenuItem);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiIconMenu = __webpack_require__(610);

	var _materialUiIconMenu2 = _interopRequireDefault(_materialUiIconMenu);

	var _materialUiTable = __webpack_require__(612);

	var React = __webpack_require__(241);
	var Navlog = __webpack_require__(559);

	var Usuarios = (function (_React$Component) {
	    _inherits(Usuarios, _React$Component);

	    function Usuarios(props) {
	        _classCallCheck(this, Usuarios);

	        _get(Object.getPrototypeOf(Usuarios.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            auth: "",
	            admin: '',
	            orgselected: '',
	            orglist: [],
	            menu: 1,
	            orgid: ''
	        };
	        window.usuarios = [];
	        this.handleChange = this.handleChange.bind(this);
	        this.handletabla = this.handletabla.bind(this);
	        this.handlemenu = this.handlemenu.bind(this);
	        this.verperfil = this.verperfil.bind(this);
	        this.eliminar = this.eliminar.bind(this);
	    }

	    _createClass(Usuarios, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {

	            var padre = this;
	            firebase.auth().onAuthStateChanged(function (user) {

	                if (user) {

	                    firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	                        var messages = snapshot.val();

	                        padre.setState({
	                            auth: true,
	                            admin: messages.admin,
	                            orgid: messages.orgid
	                        });

	                        if (padre.state.admin == "true") {

	                            /*   Listar Todas las Org en el Select si es Admin*/

	                            var messageRef = firebase.database().ref().child('organizacion');
	                            messageRef.on('value', function (snapshot) {

	                                var messages = snapshot.val();
	                                var newState = [];
	                                for (var message in messages) {

	                                    newState.push({
	                                        id: message,
	                                        nombre: messages[message].nombre

	                                    });
	                                }

	                                padre.setState({
	                                    orglist: newState
	                                });
	                            });
	                        } else {

	                            /* Llenar el Select con la org del usuario  */
	                            var orgid = padre.state.orgid;

	                            var messageRef = firebase.database().ref().child('organizacion/' + orgid + '/miembros');
	                            messageRef.on('value', function (snapshot) {

	                                var messages = snapshot.val();

	                                var newState = [];
	                                for (var message in messages) {

	                                    newState.push({
	                                        id: message,
	                                        nombre: messages[message].nombre,
	                                        email: messages[message].correo,
	                                        uid: messages[message].uid
	                                    });
	                                }

	                                window.usuarios = newState;
	                                padre.setState({ orglist: newState });
	                            });
	                        } /* termina else */
	                    });
	                } else {
	                        padre.setState({ auth: false });
	                        padre.props.history.push({ pathname: '/login' });
	                    }
	            });
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {

	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'handlemenu',
	        value: function handlemenu(event, index, value) {

	            this.setState({ menu: value });
	        }
	    }, {
	        key: 'verperfil',
	        value: function verperfil(id) {
	            localStorage.setItem('iduser', id);
	            this.props.history.push({ pathname: '/perfil' });
	        }
	    }, {
	        key: 'eliminar',
	        value: function eliminar(id) {
	            console.log('eliminar' + id);
	        }
	    }, {
	        key: 'handletabla',
	        value: function handletabla(e) {
	            var org = e.target.value;
	            this.setState(_defineProperty({}, e.target.name, e.target.value));

	            console.log(org);
	            var messageRef = firebase.database().ref().child('organizacion/' + org + '/miembros');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message,
	                        nombre: messages[message].nombre,
	                        email: messages[message].correo,
	                        uid: messages[message].uid

	                    });
	                }
	                console.log(newState);
	                window.usuarios = newState;
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this = this;

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	                this.state.admin == "true" ? React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'select',
	                        { className: 'selectorg', value: this.state.orgselected, onChange: this.handletabla, name: 'orgselected' },
	                        React.createElement(
	                            'option',
	                            { value: '' },
	                            'Organizaciones'
	                        ),
	                        this.state.orglist.map(function (item) {
	                            return React.createElement(
	                                'option',
	                                { key: item.id, value: item.id },
	                                item.nombre
	                            );
	                        })
	                    ),
	                    React.createElement(
	                        'button',
	                        { className: 'botonregistro', onClick: function () {
	                                return _this.props.history.push({ pathname: '/registro' });
	                            } },
	                        'Registro'
	                    )
	                ) : null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'tabla' },
	                        React.createElement(
	                            _materialUiTable.Table,
	                            null,
	                            React.createElement(
	                                _materialUiTable.TableHeader,
	                                { adjustForCheckbox: false, displaySelectAll: false },
	                                React.createElement(
	                                    _materialUiTable.TableRow,
	                                    null,
	                                    React.createElement(
	                                        _materialUiTable.TableHeaderColumn,
	                                        { colSpan: '3', tooltip: 'Usuarios', style: { textAlign: 'center' } },
	                                        'Usuarios'
	                                    )
	                                ),
	                                React.createElement(
	                                    _materialUiTable.TableRow,
	                                    null,
	                                    React.createElement(
	                                        _materialUiTable.TableHeaderColumn,
	                                        null,
	                                        'Nombre'
	                                    ),
	                                    React.createElement(
	                                        _materialUiTable.TableHeaderColumn,
	                                        null,
	                                        'Correo'
	                                    ),
	                                    React.createElement(
	                                        _materialUiTable.TableHeaderColumn,
	                                        null,
	                                        'Organización'
	                                    ),
	                                    React.createElement(
	                                        _materialUiTable.TableHeaderColumn,
	                                        null,
	                                        'Opciones'
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                _materialUiTable.TableBody,
	                                { displayRowCheckbox: false, stripedRows: true, showRowHover: true },
	                                window.usuarios.map(function (item) {
	                                    return React.createElement(
	                                        _materialUiTable.TableRow,
	                                        { key: item.id },
	                                        React.createElement(
	                                            _materialUiTable.TableRowColumn,
	                                            null,
	                                            item.nombre
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableRowColumn,
	                                            null,
	                                            item.email
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableRowColumn,
	                                            null,
	                                            item.organizacion
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableRowColumn,
	                                            null,
	                                            React.createElement(
	                                                _materialUiIconMenu2['default'],
	                                                {
	                                                    iconButtonElement: React.createElement(
	                                                        _materialUiIconButton2['default'],
	                                                        null,
	                                                        React.createElement(_materialUiSvgIconsNavigationArrowDropDownCircle2['default'], null)
	                                                    ),
	                                                    onChange: _this.menu,
	                                                    value: _this.state.menu
	                                                },
	                                                React.createElement(_materialUiMenuItem2['default'], { value: 2, primaryText: 'Ver Perfil', onClick: function () {
	                                                        return _this.verperfil(item.uid);
	                                                    } }),
	                                                _this.state.admin == "true" ? React.createElement(_materialUiMenuItem2['default'], { value: 3, primaryText: 'Eliminar', onClick: function () {
	                                                        return _this.eliminar(item.uid);
	                                                    } }) : null
	                                            )
	                                        )
	                                    );
	                                })
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Usuarios;
	})(React.Component);

	exports['default'] = Usuarios;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "usuarios.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NavigationArrowDropDownCircle = function NavigationArrowDropDownCircle(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 12l-4-4h8l-4 4z' })
	  );
	};
	NavigationArrowDropDownCircle = (0, _pure2.default)(NavigationArrowDropDownCircle);
	NavigationArrowDropDownCircle.displayName = 'NavigationArrowDropDownCircle';
	NavigationArrowDropDownCircle.muiName = 'SvgIcon';

	exports.default = NavigationArrowDropDownCircle;

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.MenuItem = exports.IconMenu = undefined;

	var _IconMenu2 = __webpack_require__(611);

	var _IconMenu3 = _interopRequireDefault(_IconMenu2);

	var _MenuItem2 = __webpack_require__(593);

	var _MenuItem3 = _interopRequireDefault(_MenuItem2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.IconMenu = _IconMenu3.default;
	exports.MenuItem = _MenuItem3.default;
	exports.default = _IconMenu3.default;

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactDom = __webpack_require__(345);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _events = __webpack_require__(520);

	var _events2 = _interopRequireDefault(_events);

	var _propTypes3 = __webpack_require__(505);

	var _propTypes4 = _interopRequireDefault(_propTypes3);

	var _Menu = __webpack_require__(582);

	var _Menu2 = _interopRequireDefault(_Menu);

	var _Popover = __webpack_require__(589);

	var _Popover2 = _interopRequireDefault(_Popover);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var IconMenu = function (_Component) {
	  (0, _inherits3.default)(IconMenu, _Component);

	  function IconMenu() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, IconMenu);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = IconMenu.__proto__ || (0, _getPrototypeOf2.default)(IconMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      menuInitiallyKeyboardFocused: false,
	      open: false
	    }, _this.handleItemTouchTap = function (event, child) {
	      if (_this.props.touchTapCloseDelay !== 0 && !child.props.hasOwnProperty('menuItems')) {
	        var isKeyboard = _events2.default.isKeyboard(event);
	        _this.timerCloseId = setTimeout(function () {
	          _this.close(isKeyboard ? 'enter' : 'itemTap', isKeyboard);
	        }, _this.props.touchTapCloseDelay);
	      }

	      _this.props.onItemTouchTap(event, child);
	    }, _this.handleRequestClose = function (reason) {
	      _this.close(reason);
	    }, _this.handleEscKeyDownMenu = function (event) {
	      _this.close('escape', event);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(IconMenu, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.open != null) {
	        this.setState({
	          open: nextProps.open,
	          anchorEl: this.refs.iconMenuContainer
	        });
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      clearTimeout(this.timerCloseId);
	    }
	  }, {
	    key: 'isOpen',
	    value: function isOpen() {
	      return this.state.open;
	    }
	  }, {
	    key: 'close',
	    value: function close(reason, isKeyboard) {
	      var _this2 = this;

	      if (!this.state.open) {
	        return;
	      }

	      if (this.props.open !== null) {
	        this.props.onRequestChange(false, reason);
	      } else {
	        this.setState({ open: false }, function () {
	          // Set focus on the icon button when the menu close
	          if (isKeyboard) {
	            var iconButton = _this2.refs.iconButton;
	            _reactDom2.default.findDOMNode(iconButton).focus();
	            iconButton.setKeyboardFocus();
	          }
	        });
	      }
	    }
	  }, {
	    key: 'open',
	    value: function open(reason, event) {
	      if (this.props.open !== null) {
	        this.props.onRequestChange(true, reason);

	        return this.setState({
	          menuInitiallyKeyboardFocused: _events2.default.isKeyboard(event),
	          anchorEl: event.currentTarget
	        });
	      }

	      this.setState({
	        open: true,
	        menuInitiallyKeyboardFocused: _events2.default.isKeyboard(event),
	        anchorEl: event.currentTarget
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this3 = this;

	      var _props = this.props,
	          anchorOrigin = _props.anchorOrigin,
	          className = _props.className,
	          animated = _props.animated,
	          animation = _props.animation,
	          iconButtonElement = _props.iconButtonElement,
	          iconStyle = _props.iconStyle,
	          onItemTouchTap = _props.onItemTouchTap,
	          onKeyboardFocus = _props.onKeyboardFocus,
	          onMouseDown = _props.onMouseDown,
	          onMouseLeave = _props.onMouseLeave,
	          onMouseEnter = _props.onMouseEnter,
	          onMouseUp = _props.onMouseUp,
	          onRequestChange = _props.onRequestChange,
	          onClick = _props.onClick,
	          listStyle = _props.listStyle,
	          menuStyle = _props.menuStyle,
	          style = _props.style,
	          targetOrigin = _props.targetOrigin,
	          touchTapCloseDelay = _props.touchTapCloseDelay,
	          useLayerForClickAway = _props.useLayerForClickAway,
	          other = (0, _objectWithoutProperties3.default)(_props, ['anchorOrigin', 'className', 'animated', 'animation', 'iconButtonElement', 'iconStyle', 'onItemTouchTap', 'onKeyboardFocus', 'onMouseDown', 'onMouseLeave', 'onMouseEnter', 'onMouseUp', 'onRequestChange', 'onClick', 'listStyle', 'menuStyle', 'style', 'targetOrigin', 'touchTapCloseDelay', 'useLayerForClickAway']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;
	      var _state = this.state,
	          open = _state.open,
	          anchorEl = _state.anchorEl;


	      var styles = {
	        root: {
	          display: 'inline-block',
	          position: 'relative'
	        },
	        menu: {
	          position: 'relative'
	        }
	      };

	      var mergedRootStyles = (0, _simpleAssign2.default)(styles.root, style);
	      var mergedMenuStyles = (0, _simpleAssign2.default)(styles.menu, menuStyle);

	      process.env.NODE_ENV !== "production" ? (0, _warning2.default)(iconButtonElement.type.muiName !== 'SvgIcon', 'Material-UI: You shoud not provide an <SvgIcon /> to the \'iconButtonElement\' property of <IconMenu />.\nYou should wrapped it with an <IconButton />.') : void 0;

	      var iconButtonProps = {
	        onKeyboardFocus: onKeyboardFocus,
	        onClick: function onClick(event) {
	          _this3.open(_events2.default.isKeyboard(event) ? 'keyboard' : 'iconTap', event);
	          if (iconButtonElement.props.onClick) {
	            iconButtonElement.props.onClick(event);
	          }
	        },
	        ref: 'iconButton'
	      };
	      if (iconStyle || iconButtonElement.props.iconStyle) {
	        iconButtonProps.iconStyle = iconStyle ? (0, _simpleAssign2.default)({}, iconStyle, iconButtonElement.props.iconStyle) : iconButtonElement.props.iconStyle;
	      }
	      var iconButton = _react2.default.cloneElement(iconButtonElement, iconButtonProps);

	      var menu = _react2.default.createElement(
	        _Menu2.default,
	        (0, _extends3.default)({}, other, {
	          initiallyKeyboardFocused: this.state.menuInitiallyKeyboardFocused,
	          onEscKeyDown: this.handleEscKeyDownMenu,
	          onItemTouchTap: this.handleItemTouchTap,
	          style: mergedMenuStyles,
	          listStyle: listStyle
	        }),
	        this.props.children
	      );

	      return _react2.default.createElement(
	        'div',
	        {
	          ref: 'iconMenuContainer',
	          className: className,
	          onMouseDown: onMouseDown,
	          onMouseLeave: onMouseLeave,
	          onMouseEnter: onMouseEnter,
	          onMouseUp: onMouseUp,
	          onClick: onClick,
	          style: prepareStyles(mergedRootStyles)
	        },
	        iconButton,
	        _react2.default.createElement(
	          _Popover2.default,
	          {
	            anchorOrigin: anchorOrigin,
	            targetOrigin: targetOrigin,
	            open: open,
	            anchorEl: anchorEl,
	            childContextTypes: this.constructor.childContextTypes,
	            useLayerForClickAway: useLayerForClickAway,
	            onRequestClose: this.handleRequestClose,
	            animated: animated,
	            animation: animation,
	            context: this.context
	          },
	          menu
	        )
	      );
	    }
	  }]);
	  return IconMenu;
	}(_react.Component);

	IconMenu.muiName = 'IconMenu';
	IconMenu.defaultProps = {
	  anchorOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  animated: true,
	  multiple: false,
	  open: null,
	  onItemTouchTap: function onItemTouchTap() {},
	  onKeyboardFocus: function onKeyboardFocus() {},
	  onMouseDown: function onMouseDown() {},
	  onMouseLeave: function onMouseLeave() {},
	  onMouseEnter: function onMouseEnter() {},
	  onMouseUp: function onMouseUp() {},
	  onRequestChange: function onRequestChange() {},
	  onClick: function onClick() {},
	  targetOrigin: {
	    vertical: 'top',
	    horizontal: 'left'
	  },
	  touchTapCloseDelay: 200,
	  useLayerForClickAway: false
	};
	IconMenu.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	IconMenu.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * This is the point on the icon where the menu
	   * `targetOrigin` will attach.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  anchorOrigin: _propTypes4.default.origin,
	  /**
	   * If true, the popover will apply transitions when
	   * it gets added to the DOM.
	   */
	  animated: _propTypes2.default.bool,
	  /**
	   * Override the default animation component used.
	   */
	  animation: _propTypes2.default.func,
	  /**
	   * Should be used to pass `MenuItem` components.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The CSS class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * This is the `IconButton` to render. This button will open the menu.
	   */
	  iconButtonElement: _propTypes2.default.element.isRequired,
	  /**
	   * Override the inline-styles of the underlying icon element.
	   */
	  iconStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the underlying `List` element.
	   */
	  listStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the menu element.
	   */
	  menuStyle: _propTypes2.default.object,
	  /**
	   * If true, the value can an be array and allow the menu to be a multi-select.
	   */
	  multiple: _propTypes2.default.bool,
	  /**
	   * Callback function fired when the `IconButton` element is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the `IconButton` element.
	   */
	  onClick: _propTypes2.default.func,
	  /**
	   * Callback function fired when a menu item is selected with a touch-tap.
	   *
	   * @param {object} event TouchTap event targeting the selected menu item element.
	   * @param {object} child The selected element.
	   */
	  onItemTouchTap: _propTypes2.default.func,
	  /**
	   * Callback function fired when the `IconButton` element is focused or blurred by the keyboard.
	   *
	   * @param {object} event `focus` or `blur` event targeting the `IconButton` element.
	   * @param {boolean} keyboardFocused If true, the `IconButton` element is focused.
	   */
	  onKeyboardFocus: _propTypes2.default.func,
	  /** @ignore */
	  onMouseDown: _propTypes2.default.func,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /** @ignore */
	  onMouseUp: _propTypes2.default.func,
	  /**
	   * Callback function fired when the `open` state of the menu is requested to be changed.
	   *
	   * @param {boolean} open If true, the menu was requested to be opened.
	   * @param {string} reason The reason for the open or close request. Possible values are
	   * 'keyboard' and 'iconTap' for open requests; 'enter', 'escape', 'itemTap', and 'clickAway'
	   * for close requests.
	   */
	  onRequestChange: _propTypes2.default.func,
	  /**
	   * If true, the `IconMenu` is opened.
	   */
	  open: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * This is the point on the menu which will stick to the menu
	   * origin.
	   * Options:
	   * vertical: [top, center, bottom]
	   * horizontal: [left, middle, right].
	   */
	  targetOrigin: _propTypes4.default.origin,
	  /**
	   * Sets the delay in milliseconds before closing the
	   * menu when an item is clicked.
	   * If set to 0 then the auto close functionality
	   * will be disabled.
	   */
	  touchTapCloseDelay: _propTypes2.default.number,
	  /**
	   * If true, the popover will render on top of an invisible
	   * layer, which will prevent clicks to the underlying elements.
	   */
	  useLayerForClickAway: _propTypes2.default.bool
	} : {};
	exports.default = IconMenu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = exports.TableRowColumn = exports.TableRow = exports.TableHeaderColumn = exports.TableHeader = exports.TableFooter = exports.TableBody = exports.Table = undefined;

	var _Table2 = __webpack_require__(613);

	var _Table3 = _interopRequireDefault(_Table2);

	var _TableBody2 = __webpack_require__(614);

	var _TableBody3 = _interopRequireDefault(_TableBody2);

	var _TableFooter2 = __webpack_require__(621);

	var _TableFooter3 = _interopRequireDefault(_TableFooter2);

	var _TableHeader2 = __webpack_require__(622);

	var _TableHeader3 = _interopRequireDefault(_TableHeader2);

	var _TableHeaderColumn2 = __webpack_require__(623);

	var _TableHeaderColumn3 = _interopRequireDefault(_TableHeaderColumn2);

	var _TableRow2 = __webpack_require__(624);

	var _TableRow3 = _interopRequireDefault(_TableRow2);

	var _TableRowColumn2 = __webpack_require__(620);

	var _TableRowColumn3 = _interopRequireDefault(_TableRowColumn2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Table = _Table3.default;
	exports.TableBody = _TableBody3.default;
	exports.TableFooter = _TableFooter3.default;
	exports.TableHeader = _TableHeader3.default;
	exports.TableHeaderColumn = _TableHeaderColumn3.default;
	exports.TableRow = _TableRow3.default;
	exports.TableRowColumn = _TableRowColumn3.default;
	exports.default = _Table3.default;

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      table = _context$muiTheme.table;


	  return {
	    root: {
	      backgroundColor: table.backgroundColor,
	      width: '100%',
	      borderCollapse: 'collapse',
	      borderSpacing: 0,
	      tableLayout: 'fixed',
	      fontFamily: baseTheme.fontFamily
	    },
	    bodyTable: {
	      height: props.fixedHeader || props.fixedFooter ? props.height : 'auto',
	      overflowX: 'hidden',
	      overflowY: 'auto'
	    },
	    tableWrapper: {
	      height: props.fixedHeader || props.fixedFooter ? 'auto' : props.height,
	      overflow: 'auto'
	    }
	  };
	}

	var Table = function (_Component) {
	  (0, _inherits3.default)(Table, _Component);

	  function Table() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Table);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Table.__proto__ || (0, _getPrototypeOf2.default)(Table)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      allRowsSelected: false
	    }, _this.onCellClick = function (rowNumber, columnNumber, event) {
	      if (_this.props.onCellClick) _this.props.onCellClick(rowNumber, columnNumber, event);
	    }, _this.onCellHover = function (rowNumber, columnNumber, event) {
	      if (_this.props.onCellHover) _this.props.onCellHover(rowNumber, columnNumber, event);
	    }, _this.onCellHoverExit = function (rowNumber, columnNumber, event) {
	      if (_this.props.onCellHoverExit) _this.props.onCellHoverExit(rowNumber, columnNumber, event);
	    }, _this.onRowHover = function (rowNumber) {
	      if (_this.props.onRowHover) _this.props.onRowHover(rowNumber);
	    }, _this.onRowHoverExit = function (rowNumber) {
	      if (_this.props.onRowHoverExit) _this.props.onRowHoverExit(rowNumber);
	    }, _this.onRowSelection = function (selectedRows) {
	      if (_this.state.allRowsSelected) {
	        _this.setState({ allRowsSelected: false });
	      }

	      if (_this.props.onRowSelection) {
	        _this.props.onRowSelection(selectedRows);
	      }
	    }, _this.onSelectAll = function () {
	      if (_this.props.onRowSelection) {
	        if (!_this.state.allRowsSelected) {
	          _this.props.onRowSelection('all');
	        } else {
	          _this.props.onRowSelection('none');
	        }
	      }

	      _this.setState({ allRowsSelected: !_this.state.allRowsSelected });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Table, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if (this.props.allRowsSelected) {
	        this.setState({ allRowsSelected: true });
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.allRowsSelected !== nextProps.allRowsSelected) {
	        this.setState({ allRowsSelected: nextProps.allRowsSelected });
	      }
	    }
	  }, {
	    key: 'isScrollbarVisible',
	    value: function isScrollbarVisible() {
	      var tableDivHeight = this.refs.tableDiv.clientHeight;
	      var tableBodyHeight = this.refs.tableBody.clientHeight;

	      return tableBodyHeight > tableDivHeight;
	    }
	  }, {
	    key: 'createTableHeader',
	    value: function createTableHeader(base) {
	      return _react2.default.cloneElement(base, {
	        enableSelectAll: base.props.enableSelectAll && this.props.selectable && this.props.multiSelectable,
	        onSelectAll: this.onSelectAll,
	        selectAllSelected: this.state.allRowsSelected
	      });
	    }
	  }, {
	    key: 'createTableBody',
	    value: function createTableBody(base) {
	      return _react2.default.cloneElement(base, {
	        allRowsSelected: this.state.allRowsSelected,
	        multiSelectable: this.props.multiSelectable,
	        onCellClick: this.onCellClick,
	        onCellHover: this.onCellHover,
	        onCellHoverExit: this.onCellHoverExit,
	        onRowHover: this.onRowHover,
	        onRowHoverExit: this.onRowHoverExit,
	        onRowSelection: this.onRowSelection,
	        selectable: this.props.selectable
	      });
	    }
	  }, {
	    key: 'createTableFooter',
	    value: function createTableFooter(base) {
	      return base;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          fixedFooter = _props.fixedFooter,
	          fixedHeader = _props.fixedHeader,
	          style = _props.style,
	          wrapperStyle = _props.wrapperStyle,
	          headerStyle = _props.headerStyle,
	          bodyStyle = _props.bodyStyle,
	          footerStyle = _props.footerStyle;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var tHead = void 0;
	      var tFoot = void 0;
	      var tBody = void 0;

	      _react2.default.Children.forEach(children, function (child) {
	        if (!_react2.default.isValidElement(child)) return;

	        var muiName = child.type.muiName;

	        if (muiName === 'TableBody') {
	          tBody = _this2.createTableBody(child);
	        } else if (muiName === 'TableHeader') {
	          tHead = _this2.createTableHeader(child);
	        } else if (muiName === 'TableFooter') {
	          tFoot = _this2.createTableFooter(child);
	        } else {
	          process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: Children of the Table component must be TableBody or TableHeader or TableFooter.\n           Nothing is rendered.') : void 0;
	        }
	      });

	      // If we could not find a table-header and a table-body, do not attempt to display anything.
	      if (!tBody && !tHead) return null;

	      var mergedTableStyle = (0, _simpleAssign2.default)(styles.root, style);
	      var headerTable = void 0;
	      var footerTable = void 0;
	      var inlineHeader = void 0;
	      var inlineFooter = void 0;

	      if (fixedHeader) {
	        headerTable = _react2.default.createElement(
	          'div',
	          { style: prepareStyles((0, _simpleAssign2.default)({}, headerStyle)) },
	          _react2.default.createElement(
	            'table',
	            { className: className, style: mergedTableStyle },
	            tHead
	          )
	        );
	      } else {
	        inlineHeader = tHead;
	      }

	      if (tFoot !== undefined) {
	        if (fixedFooter) {
	          footerTable = _react2.default.createElement(
	            'div',
	            { style: prepareStyles((0, _simpleAssign2.default)({}, footerStyle)) },
	            _react2.default.createElement(
	              'table',
	              { className: className, style: prepareStyles(mergedTableStyle) },
	              tFoot
	            )
	          );
	        } else {
	          inlineFooter = tFoot;
	        }
	      }

	      return _react2.default.createElement(
	        'div',
	        { style: prepareStyles((0, _simpleAssign2.default)(styles.tableWrapper, wrapperStyle)) },
	        headerTable,
	        _react2.default.createElement(
	          'div',
	          { style: prepareStyles((0, _simpleAssign2.default)(styles.bodyTable, bodyStyle)), ref: 'tableDiv' },
	          _react2.default.createElement(
	            'table',
	            { className: className, style: mergedTableStyle, ref: 'tableBody' },
	            inlineHeader,
	            inlineFooter,
	            tBody
	          )
	        ),
	        footerTable
	      );
	    }
	  }]);
	  return Table;
	}(_react.Component);

	Table.defaultProps = {
	  allRowsSelected: false,
	  fixedFooter: true,
	  fixedHeader: true,
	  height: 'inherit',
	  multiSelectable: false,
	  selectable: true
	};
	Table.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Table.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Set to true to indicate that all rows should be selected.
	   */
	  allRowsSelected: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the body's table element.
	   */
	  bodyStyle: _propTypes2.default.object,
	  /**
	   * Children passed to table.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * If true, the footer will appear fixed below the table.
	   * The default value is true.
	   */
	  fixedFooter: _propTypes2.default.bool,
	  /**
	   * If true, the header will appear fixed above the table.
	   * The default value is true.
	   */
	  fixedHeader: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the footer's table element.
	   */
	  footerStyle: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the header's table element.
	   */
	  headerStyle: _propTypes2.default.object,
	  /**
	   * The height of the table.
	   */
	  height: _propTypes2.default.string,
	  /**
	   * If true, multiple table rows can be selected.
	   * CTRL/CMD+Click and SHIFT+Click are valid actions.
	   * The default value is false.
	   */
	  multiSelectable: _propTypes2.default.bool,
	  /**
	   * Called when a row cell is clicked.
	   * rowNumber is the row number and columnId is
	   * the column number or the column key.
	   */
	  onCellClick: _propTypes2.default.func,
	  /**
	   * Called when a table cell is hovered.
	   * rowNumber is the row number of the hovered row
	   * and columnId is the column number or the column key of the cell.
	   */
	  onCellHover: _propTypes2.default.func,
	  /**
	   * Called when a table cell is no longer hovered.
	   * rowNumber is the row number of the row and columnId
	   * is the column number or the column key of the cell.
	   */
	  onCellHoverExit: _propTypes2.default.func,
	  /**
	   * Called when a table row is hovered.
	   * rowNumber is the row number of the hovered row.
	   */
	  onRowHover: _propTypes2.default.func,
	  /**
	   * Called when a table row is no longer hovered.
	   * rowNumber is the row number of the row that is no longer hovered.
	   */
	  onRowHoverExit: _propTypes2.default.func,
	  /**
	   * Called when a row is selected.
	   * selectedRows is an array of all row selections.
	   * IF all rows have been selected, the string "all"
	   * will be returned instead to indicate that all rows have been selected.
	   */
	  onRowSelection: _propTypes2.default.func,
	  /**
	   * If true, table rows can be selected.
	   * If multiple row selection is desired, enable multiSelectable.
	   * The default value is true.
	   */
	  selectable: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * Override the inline-styles of the table's wrapper element.
	   */
	  wrapperStyle: _propTypes2.default.object
	} : {};
	exports.default = Table;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _toConsumableArray2 = __webpack_require__(279);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _typeof2 = __webpack_require__(188);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Checkbox = __webpack_require__(615);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _TableRowColumn = __webpack_require__(620);

	var _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);

	var _ClickAwayListener = __webpack_require__(546);

	var _ClickAwayListener2 = _interopRequireDefault(_ClickAwayListener);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var TableBody = function (_Component) {
	  (0, _inherits3.default)(TableBody, _Component);

	  function TableBody() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TableBody);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableBody.__proto__ || (0, _getPrototypeOf2.default)(TableBody)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      selectedRows: []
	    }, _this.isControlled = false, _this.handleClickAway = function () {
	      if (_this.props.deselectOnClickaway && _this.state.selectedRows.length > 0) {
	        var selectedRows = [];
	        _this.setState({ selectedRows: selectedRows });
	        if (_this.props.onRowSelection) {
	          _this.props.onRowSelection(selectedRows);
	        }
	      }
	    }, _this.onRowClick = function (event, rowNumber) {
	      event.stopPropagation();

	      if (_this.props.selectable) {
	        // Prevent text selection while selecting rows.
	        if (window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects.length > 0) {
	          window.getSelection().removeAllRanges();
	        }
	        _this.processRowSelection(event, rowNumber);
	      }
	    }, _this.onCellClick = function (event, rowNumber, columnNumber) {
	      event.stopPropagation();
	      if (_this.props.onCellClick) {
	        _this.props.onCellClick(rowNumber, _this.getColumnId(columnNumber), event);
	      }
	    }, _this.onCellHover = function (event, rowNumber, columnNumber) {
	      if (_this.props.onCellHover) {
	        _this.props.onCellHover(rowNumber, _this.getColumnId(columnNumber), event);
	      }
	      _this.onRowHover(event, rowNumber);
	    }, _this.onCellHoverExit = function (event, rowNumber, columnNumber) {
	      if (_this.props.onCellHoverExit) {
	        _this.props.onCellHoverExit(rowNumber, _this.getColumnId(columnNumber), event);
	      }
	      _this.onRowHoverExit(event, rowNumber);
	    }, _this.onRowHover = function (event, rowNumber) {
	      if (_this.props.onRowHover) {
	        _this.props.onRowHover(rowNumber);
	      }
	    }, _this.onRowHoverExit = function (event, rowNumber) {
	      if (_this.props.onRowHoverExit) {
	        _this.props.onRowHoverExit(rowNumber);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TableBody, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if (this.props.preScanRows) {
	        this.setState({
	          selectedRows: this.getSelectedRows(this.props)
	        });
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (!this.props.preScanRows) {
	        this.setState({ // eslint-disable-line react/no-did-mount-set-state
	          selectedRows: this.getSelectedRows(this.props)
	        });
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.allRowsSelected !== nextProps.allRowsSelected) {
	        if (!nextProps.allRowsSelected) {
	          this.setState({
	            selectedRows: []
	          });
	          return;
	        }
	      }

	      this.setState({
	        selectedRows: this.getSelectedRows(nextProps)
	      });
	    }
	  }, {
	    key: 'createRows',
	    value: function createRows() {
	      var _this2 = this;

	      var numChildren = _react2.default.Children.count(this.props.children);
	      var rowNumber = 0;
	      var handlers = {
	        onCellClick: this.onCellClick,
	        onCellHover: this.onCellHover,
	        onCellHoverExit: this.onCellHoverExit,
	        onRowHover: this.onRowHover,
	        onRowHoverExit: this.onRowHoverExit,
	        onRowClick: this.onRowClick
	      };

	      return _react2.default.Children.map(this.props.children, function (child) {
	        if (_react2.default.isValidElement(child)) {
	          var props = {
	            hoverable: _this2.props.showRowHover,
	            selected: _this2.isRowSelected(rowNumber),
	            striped: _this2.props.stripedRows && rowNumber % 2 === 0,
	            rowNumber: rowNumber++
	          };

	          if (rowNumber === numChildren) {
	            props.displayBorder = false;
	          }

	          var children = [_this2.createRowCheckboxColumn(props)];

	          _react2.default.Children.forEach(child.props.children, function (child) {
	            children.push(child);
	          });

	          return _react2.default.cloneElement(child, (0, _extends3.default)({}, props, handlers), children);
	        }
	      });
	    }
	  }, {
	    key: 'createRowCheckboxColumn',
	    value: function createRowCheckboxColumn(rowProps) {
	      if (!this.props.displayRowCheckbox) {
	        return null;
	      }

	      var name = rowProps.rowNumber + '-cb';
	      var disabled = !this.props.selectable;

	      return _react2.default.createElement(
	        _TableRowColumn2.default,
	        {
	          key: name,
	          columnNumber: 0,
	          style: {
	            width: 24,
	            cursor: disabled ? 'default' : 'inherit'
	          }
	        },
	        _react2.default.createElement(_Checkbox2.default, {
	          name: name,
	          value: 'selected',
	          disabled: disabled,
	          checked: rowProps.selected
	        })
	      );
	    }
	  }, {
	    key: 'getSelectedRows',
	    value: function getSelectedRows(props) {
	      var _this3 = this;

	      var selectedRows = [];

	      if (props.selectable) {
	        var index = 0;
	        _react2.default.Children.forEach(props.children, function (child) {
	          if (_react2.default.isValidElement(child)) {
	            if (child.props.selected !== undefined) {
	              _this3.isControlled = true;
	            }

	            if (child.props.selected && (selectedRows.length === 0 || props.multiSelectable)) {
	              selectedRows.push(index);
	            }

	            index++;
	          }
	        });
	      }

	      return selectedRows;
	    }
	  }, {
	    key: 'isRowSelected',
	    value: function isRowSelected(rowNumber) {
	      var _this4 = this;

	      if (this.props.allRowsSelected) {
	        return true;
	      }

	      return this.state.selectedRows.some(function (row) {
	        if ((typeof row === 'undefined' ? 'undefined' : (0, _typeof3.default)(row)) === 'object') {
	          if (_this4.isValueInRange(rowNumber, row)) {
	            return true;
	          }
	        } else {
	          if (row === rowNumber) {
	            return true;
	          }
	        }

	        return false;
	      });
	    }
	  }, {
	    key: 'isValueInRange',
	    value: function isValueInRange(value, range) {
	      if (!range) return false;

	      if (range.start <= value && value <= range.end || range.end <= value && value <= range.start) {
	        return true;
	      }

	      return false;
	    }
	  }, {
	    key: 'processRowSelection',
	    value: function processRowSelection(event, rowNumber) {
	      var selectedRows = [].concat((0, _toConsumableArray3.default)(this.state.selectedRows));

	      if (event.shiftKey && this.props.multiSelectable && selectedRows.length > 0) {
	        var lastIndex = selectedRows.length - 1;
	        var lastSelection = selectedRows[lastIndex];

	        if ((typeof lastSelection === 'undefined' ? 'undefined' : (0, _typeof3.default)(lastSelection)) === 'object') {
	          lastSelection.end = rowNumber;
	        } else {
	          selectedRows.splice(lastIndex, 1, {
	            start: lastSelection,
	            end: rowNumber
	          });
	        }
	      } else if ((event.ctrlKey && !event.metaKey || event.metaKey && !event.ctrlKey) && this.props.multiSelectable) {
	        var idx = selectedRows.indexOf(rowNumber);
	        if (idx < 0) {
	          var foundRange = false;
	          for (var i = 0; i < selectedRows.length; i++) {
	            var range = selectedRows[i];
	            if ((typeof range === 'undefined' ? 'undefined' : (0, _typeof3.default)(range)) !== 'object') continue;

	            if (this.isValueInRange(rowNumber, range)) {
	              var _selectedRows;

	              foundRange = true;
	              var values = this.splitRange(range, rowNumber);
	              (_selectedRows = selectedRows).splice.apply(_selectedRows, [i, 1].concat((0, _toConsumableArray3.default)(values)));
	            }
	          }

	          if (!foundRange) selectedRows.push(rowNumber);
	        } else {
	          selectedRows.splice(idx, 1);
	        }
	      } else {
	        if (selectedRows.length === 1 && selectedRows[0] === rowNumber) {
	          selectedRows = [];
	        } else {
	          selectedRows = [rowNumber];
	        }
	      }

	      if (!this.isControlled) {
	        this.setState({ selectedRows: selectedRows });
	      }

	      if (this.props.onRowSelection) {
	        this.props.onRowSelection(this.flattenRanges(selectedRows));
	      }
	    }
	  }, {
	    key: 'splitRange',
	    value: function splitRange(range, splitPoint) {
	      var splitValues = [];
	      var startOffset = range.start - splitPoint;
	      var endOffset = range.end - splitPoint;

	      // Process start half
	      splitValues.push.apply(splitValues, (0, _toConsumableArray3.default)(this.genRangeOfValues(splitPoint, startOffset)));

	      // Process end half
	      splitValues.push.apply(splitValues, (0, _toConsumableArray3.default)(this.genRangeOfValues(splitPoint, endOffset)));

	      return splitValues;
	    }
	  }, {
	    key: 'genRangeOfValues',
	    value: function genRangeOfValues(start, offset) {
	      var values = [];
	      var dir = offset > 0 ? -1 : 1; // This forces offset to approach 0 from either direction.
	      while (offset !== 0) {
	        values.push(start + offset);
	        offset += dir;
	      }

	      return values;
	    }
	  }, {
	    key: 'flattenRanges',
	    value: function flattenRanges(selectedRows) {
	      var _this5 = this;

	      return selectedRows.reduce(function (rows, row) {
	        if ((typeof row === 'undefined' ? 'undefined' : (0, _typeof3.default)(row)) === 'object') {
	          var values = _this5.genRangeOfValues(row.end, row.start - row.end);
	          rows.push.apply(rows, [row.end].concat((0, _toConsumableArray3.default)(values)));
	        } else {
	          rows.push(row);
	        }

	        return rows;
	      }, []).sort();
	    }
	  }, {
	    key: 'getColumnId',
	    value: function getColumnId(columnNumber) {
	      return columnNumber - 1;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          style = _props.style,
	          allRowsSelected = _props.allRowsSelected,
	          multiSelectable = _props.multiSelectable,
	          onCellClick = _props.onCellClick,
	          onCellHover = _props.onCellHover,
	          onCellHoverExit = _props.onCellHoverExit,
	          onRowHover = _props.onRowHover,
	          onRowHoverExit = _props.onRowHoverExit,
	          onRowSelection = _props.onRowSelection,
	          selectable = _props.selectable,
	          deselectOnClickaway = _props.deselectOnClickaway,
	          showRowHover = _props.showRowHover,
	          stripedRows = _props.stripedRows,
	          displayRowCheckbox = _props.displayRowCheckbox,
	          preScanRows = _props.preScanRows,
	          other = (0, _objectWithoutProperties3.default)(_props, ['style', 'allRowsSelected', 'multiSelectable', 'onCellClick', 'onCellHover', 'onCellHoverExit', 'onRowHover', 'onRowHoverExit', 'onRowSelection', 'selectable', 'deselectOnClickaway', 'showRowHover', 'stripedRows', 'displayRowCheckbox', 'preScanRows']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;


	      return _react2.default.createElement(
	        _ClickAwayListener2.default,
	        { onClickAway: this.handleClickAway },
	        _react2.default.createElement(
	          'tbody',
	          (0, _extends3.default)({ style: prepareStyles((0, _simpleAssign2.default)({}, style)) }, other),
	          this.createRows()
	        )
	      );
	    }
	  }]);
	  return TableBody;
	}(_react.Component);

	TableBody.muiName = 'TableBody';
	TableBody.defaultProps = {
	  allRowsSelected: false,
	  deselectOnClickaway: true,
	  displayRowCheckbox: true,
	  multiSelectable: false,
	  preScanRows: true,
	  selectable: true,
	  style: {}
	};
	TableBody.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableBody.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * @ignore
	   * Set to true to indicate that all rows should be selected.
	   */
	  allRowsSelected: _propTypes2.default.bool,
	  /**
	   * Children passed to table body.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Controls whether or not to deselect all selected
	   * rows after clicking outside the table.
	   */
	  deselectOnClickaway: _propTypes2.default.bool,
	  /**
	   * Controls the display of the row checkbox. The default value is true.
	   */
	  displayRowCheckbox: _propTypes2.default.bool,
	  /**
	   * @ignore
	   * If true, multiple table rows can be selected.
	   * CTRL/CMD+Click and SHIFT+Click are valid actions.
	   * The default value is false.
	   */
	  multiSelectable: _propTypes2.default.bool,
	  /**
	   * @ignore
	   * Callback function for when a cell is clicked.
	   */
	  onCellClick: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table cell is hovered. rowNumber
	   * is the row number of the hovered row and columnId
	   * is the column number or the column key of the cell.
	   */
	  onCellHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table cell is no longer hovered.
	   * rowNumber is the row number of the row and columnId
	   * is the column number or the column key of the cell.
	   */
	  onCellHoverExit: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table row is hovered.
	   * rowNumber is the row number of the hovered row.
	   */
	  onRowHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table row is no longer
	   * hovered. rowNumber is the row number of the row
	   * that is no longer hovered.
	   */
	  onRowHoverExit: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a row is selected. selectedRows is an
	   * array of all row selections. If all rows have been selected,
	   * the string "all" will be returned instead to indicate that
	   * all rows have been selected.
	   */
	  onRowSelection: _propTypes2.default.func,
	  /**
	   * Controls whether or not the rows are pre-scanned to determine
	   * initial state. If your table has a large number of rows and
	   * you are experiencing a delay in rendering, turn off this property.
	   */
	  preScanRows: _propTypes2.default.bool,
	  /**
	   * @ignore
	   * If true, table rows can be selected. If multiple
	   * row selection is desired, enable multiSelectable.
	   * The default value is true.
	   */
	  selectable: _propTypes2.default.bool,
	  /**
	   * If true, table rows will be highlighted when
	   * the cursor is hovering over the row. The default
	   * value is false.
	   */
	  showRowHover: _propTypes2.default.bool,
	  /**
	   * If true, every other table row starting
	   * with the first row will be striped. The default value is false.
	   */
	  stripedRows: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = TableBody;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Checkbox = __webpack_require__(616);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Checkbox2.default;

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _EnhancedSwitch = __webpack_require__(617);

	var _EnhancedSwitch2 = _interopRequireDefault(_EnhancedSwitch);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _checkBoxOutlineBlank = __webpack_require__(618);

	var _checkBoxOutlineBlank2 = _interopRequireDefault(_checkBoxOutlineBlank);

	var _checkBox = __webpack_require__(619);

	var _checkBox2 = _interopRequireDefault(_checkBox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var checkbox = context.muiTheme.checkbox;

	  var checkboxSize = 24;

	  return {
	    icon: {
	      height: checkboxSize,
	      width: checkboxSize
	    },
	    check: {
	      position: 'absolute',
	      opacity: 0,
	      transform: 'scale(0)',
	      transitionOrigin: '50% 50%',
	      transition: _transitions2.default.easeOut('450ms', 'opacity', '0ms') + ', ' + _transitions2.default.easeOut('0ms', 'transform', '450ms'),
	      fill: checkbox.checkedColor
	    },
	    checkWhenSwitched: {
	      opacity: 1,
	      transform: 'scale(1)',
	      transition: _transitions2.default.easeOut('0ms', 'opacity', '0ms') + ', ' + _transitions2.default.easeOut('800ms', 'transform', '0ms')
	    },
	    checkWhenDisabled: {
	      fill: checkbox.disabledColor
	    },
	    box: {
	      position: 'absolute',
	      opacity: 1,
	      fill: checkbox.boxColor,
	      transition: _transitions2.default.easeOut('1000ms', 'opacity', '200ms')
	    },
	    boxWhenSwitched: {
	      opacity: 0,
	      transition: _transitions2.default.easeOut('650ms', 'opacity', '150ms'),
	      fill: checkbox.checkedColor
	    },
	    boxWhenDisabled: {
	      fill: props.checked ? 'transparent' : checkbox.disabledColor
	    },
	    label: {
	      color: props.disabled ? checkbox.labelDisabledColor : checkbox.labelColor
	    }
	  };
	}

	var Checkbox = function (_Component) {
	  (0, _inherits3.default)(Checkbox, _Component);

	  function Checkbox() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Checkbox);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Checkbox.__proto__ || (0, _getPrototypeOf2.default)(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      switched: false
	    }, _this.handleStateChange = function (newSwitched) {
	      _this.setState({
	        switched: newSwitched
	      });
	    }, _this.handleCheck = function (event, isInputChecked) {
	      if (_this.props.onCheck) {
	        _this.props.onCheck(event, isInputChecked);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Checkbox, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _props = this.props,
	          checked = _props.checked,
	          defaultChecked = _props.defaultChecked,
	          valueLink = _props.valueLink;


	      if (checked || defaultChecked || valueLink && valueLink.value) {
	        this.setState({
	          switched: true
	        });
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (this.props.checked !== nextProps.checked) {
	        this.setState({
	          switched: nextProps.checked
	        });
	      }
	    }
	  }, {
	    key: 'isChecked',
	    value: function isChecked() {
	      return this.refs.enhancedSwitch.isSwitched();
	    }
	  }, {
	    key: 'setChecked',
	    value: function setChecked(newCheckedValue) {
	      this.refs.enhancedSwitch.setSwitched(newCheckedValue);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          iconStyle = _props2.iconStyle,
	          onCheck = _props2.onCheck,
	          checkedIcon = _props2.checkedIcon,
	          uncheckedIcon = _props2.uncheckedIcon,
	          other = (0, _objectWithoutProperties3.default)(_props2, ['iconStyle', 'onCheck', 'checkedIcon', 'uncheckedIcon']);

	      var styles = getStyles(this.props, this.context);
	      var boxStyles = (0, _simpleAssign2.default)(styles.box, this.state.switched && styles.boxWhenSwitched, iconStyle, this.props.disabled && styles.boxWhenDisabled);
	      var checkStyles = (0, _simpleAssign2.default)(styles.check, this.state.switched && styles.checkWhenSwitched, iconStyle, this.props.disabled && styles.checkWhenDisabled);

	      var checkedElement = checkedIcon ? _react2.default.cloneElement(checkedIcon, {
	        style: (0, _simpleAssign2.default)(checkStyles, checkedIcon.props.style)
	      }) : _react2.default.createElement(_checkBox2.default, {
	        style: checkStyles
	      });

	      var unCheckedElement = uncheckedIcon ? _react2.default.cloneElement(uncheckedIcon, {
	        style: (0, _simpleAssign2.default)(boxStyles, uncheckedIcon.props.style)
	      }) : _react2.default.createElement(_checkBoxOutlineBlank2.default, {
	        style: boxStyles
	      });

	      var checkboxElement = _react2.default.createElement(
	        'div',
	        null,
	        unCheckedElement,
	        checkedElement
	      );

	      var rippleColor = this.state.switched ? checkStyles.fill : boxStyles.fill;
	      var mergedIconStyle = (0, _simpleAssign2.default)(styles.icon, iconStyle);

	      var labelStyle = (0, _simpleAssign2.default)(styles.label, this.props.labelStyle);

	      var enhancedSwitchProps = {
	        ref: 'enhancedSwitch',
	        inputType: 'checkbox',
	        switched: this.state.switched,
	        switchElement: checkboxElement,
	        rippleColor: rippleColor,
	        iconStyle: mergedIconStyle,
	        onSwitch: this.handleCheck,
	        labelStyle: labelStyle,
	        onParentShouldUpdate: this.handleStateChange,
	        labelPosition: this.props.labelPosition
	      };

	      return _react2.default.createElement(_EnhancedSwitch2.default, (0, _extends3.default)({}, other, enhancedSwitchProps));
	    }
	  }]);
	  return Checkbox;
	}(_react.Component);

	Checkbox.defaultProps = {
	  labelPosition: 'right',
	  disabled: false
	};
	Checkbox.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	Checkbox.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Checkbox is checked if true.
	   */
	  checked: _propTypes2.default.bool,
	  /**
	   * The SvgIcon to use for the checked state.
	   * This is useful to create icon toggles.
	   */
	  checkedIcon: _propTypes2.default.element,
	  /**
	   * The default state of our checkbox component.
	   * **Warning:** This cannot be used in conjunction with `checked`.
	   * Decide between using a controlled or uncontrolled input element and remove one of these props.
	   * More info: https://fb.me/react-controlled-components
	   */
	  defaultChecked: _propTypes2.default.bool,
	  /**
	   * Disabled if true.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Overrides the inline-styles of the icon element.
	   */
	  iconStyle: _propTypes2.default.object,
	  /**
	   * Overrides the inline-styles of the input element.
	   */
	  inputStyle: _propTypes2.default.object,
	  /**
	   * Where the label will be placed next to the checkbox.
	   */
	  labelPosition: _propTypes2.default.oneOf(['left', 'right']),
	  /**
	   * Overrides the inline-styles of the Checkbox element label.
	   */
	  labelStyle: _propTypes2.default.object,
	  /**
	   * Callback function that is fired when the checkbox is checked.
	   *
	   * @param {object} event `change` event targeting the underlying checkbox `input`.
	   * @param {boolean} isInputChecked The `checked` value of the underlying checkbox `input`.
	   */
	  onCheck: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The SvgIcon to use for the unchecked state.
	   * This is useful to create icon toggles.
	   */
	  uncheckedIcon: _propTypes2.default.element,
	  /**
	   * ValueLink for when using controlled checkbox.
	   */
	  valueLink: _propTypes2.default.object
	} : {};
	exports.default = Checkbox;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _reactEventListener = __webpack_require__(495);

	var _reactEventListener2 = _interopRequireDefault(_reactEventListener);

	var _keycode = __webpack_require__(521);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _FocusRipple = __webpack_require__(522);

	var _FocusRipple2 = _interopRequireDefault(_FocusRipple);

	var _TouchRipple = __webpack_require__(529);

	var _TouchRipple2 = _interopRequireDefault(_TouchRipple);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var baseTheme = context.muiTheme.baseTheme;


	  return {
	    root: {
	      cursor: props.disabled ? 'not-allowed' : 'pointer',
	      position: 'relative',
	      overflow: 'visible',
	      display: 'table',
	      height: 'auto',
	      width: '100%'
	    },
	    input: {
	      position: 'absolute',
	      cursor: 'inherit',
	      pointerEvents: 'all',
	      opacity: 0,
	      width: '100%',
	      height: '100%',
	      zIndex: 2,
	      left: 0,
	      boxSizing: 'border-box',
	      padding: 0,
	      margin: 0
	    },
	    controls: {
	      display: 'flex',
	      width: '100%',
	      height: '100%'
	    },
	    label: {
	      float: 'left',
	      position: 'relative',
	      display: 'block',
	      width: 'calc(100% - 60px)',
	      lineHeight: '24px',
	      color: baseTheme.palette.textColor,
	      fontFamily: baseTheme.fontFamily
	    },
	    wrap: {
	      transition: _transitions2.default.easeOut(),
	      float: 'left',
	      position: 'relative',
	      display: 'block',
	      flexShrink: 0,
	      width: 60 - baseTheme.spacing.desktopGutterLess,
	      marginRight: props.labelPosition === 'right' ? baseTheme.spacing.desktopGutterLess : 0,
	      marginLeft: props.labelPosition === 'left' ? baseTheme.spacing.desktopGutterLess : 0
	    },
	    ripple: {
	      color: props.rippleColor || baseTheme.palette.primary1Color,
	      height: '200%',
	      width: '200%',
	      top: -12,
	      left: -12
	    }
	  };
	}

	var EnhancedSwitch = function (_Component) {
	  (0, _inherits3.default)(EnhancedSwitch, _Component);

	  function EnhancedSwitch() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, EnhancedSwitch);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = EnhancedSwitch.__proto__ || (0, _getPrototypeOf2.default)(EnhancedSwitch)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      isKeyboardFocused: false
	    }, _this.handleChange = function (event) {
	      _this.tabPressed = false;
	      _this.setState({
	        isKeyboardFocused: false
	      });

	      var isInputChecked = _this.refs.checkbox.checked;

	      if (!_this.props.hasOwnProperty('checked') && _this.props.onParentShouldUpdate) {
	        _this.props.onParentShouldUpdate(isInputChecked);
	      }

	      if (_this.props.onSwitch) {
	        _this.props.onSwitch(event, isInputChecked);
	      }
	    }, _this.handleKeyDown = function (event) {
	      var code = (0, _keycode2.default)(event);

	      if (code === 'tab') {
	        _this.tabPressed = true;
	      }
	      if (_this.state.isKeyboardFocused && code === 'space') {
	        _this.handleChange(event);
	      }
	    }, _this.handleKeyUp = function (event) {
	      if (_this.state.isKeyboardFocused && (0, _keycode2.default)(event) === 'space') {
	        _this.handleChange(event);
	      }
	    }, _this.handleMouseDown = function (event) {
	      // only listen to left clicks
	      if (event.button === 0) {
	        _this.refs.touchRipple.start(event);
	      }
	    }, _this.handleMouseUp = function () {
	      _this.refs.touchRipple.end();
	    }, _this.handleMouseLeave = function () {
	      _this.refs.touchRipple.end();
	    }, _this.handleTouchStart = function (event) {
	      _this.refs.touchRipple.start(event);
	    }, _this.handleTouchEnd = function () {
	      _this.refs.touchRipple.end();
	    }, _this.handleBlur = function (event) {
	      _this.setState({
	        isKeyboardFocused: false
	      });

	      if (_this.props.onBlur) {
	        _this.props.onBlur(event);
	      }
	    }, _this.handleFocus = function (event) {
	      // setTimeout is needed becuase the focus event fires first
	      // Wait so that we can capture if this was a keyboard focus
	      // or touch focus
	      setTimeout(function () {
	        if (_this.tabPressed) {
	          _this.setState({
	            isKeyboardFocused: true
	          });
	        }
	      }, 150);

	      if (_this.props.onFocus) {
	        _this.props.onFocus(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(EnhancedSwitch, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      this.componentWillReceiveProps(this.props);
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var inputNode = this.refs.checkbox;
	      if ((!this.props.switched || inputNode.checked !== this.props.switched) && this.props.onParentShouldUpdate) {
	        this.props.onParentShouldUpdate(inputNode.checked);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var hasCheckedProp = nextProps.hasOwnProperty('checked');
	      var hasNewDefaultProp = nextProps.hasOwnProperty('defaultChecked') && nextProps.defaultChecked !== this.props.defaultChecked;

	      if (hasCheckedProp || hasNewDefaultProp) {
	        var switched = nextProps.checked || nextProps.defaultChecked || false;

	        this.setState({
	          switched: switched
	        });

	        if (this.props.onParentShouldUpdate && switched !== this.props.switched) {
	          this.props.onParentShouldUpdate(switched);
	        }
	      }
	    }
	  }, {
	    key: 'isSwitched',
	    value: function isSwitched() {
	      return this.refs.checkbox.checked;
	    }

	    // no callback here because there is no event

	  }, {
	    key: 'setSwitched',
	    value: function setSwitched(newSwitchedValue) {
	      if (!this.props.hasOwnProperty('checked') || this.props.checked === false) {
	        if (this.props.onParentShouldUpdate) {
	          this.props.onParentShouldUpdate(newSwitchedValue);
	        }
	        this.refs.checkbox.checked = newSwitchedValue;
	      } else {
	        process.env.NODE_ENV !== "production" ? (0, _warning2.default)(false, 'Material-UI: Cannot call set method while checked is defined as a property.') : void 0;
	      }
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      return this.refs.checkbox.value;
	    }

	    // Checkbox inputs only use SPACE to change their state. Using ENTER will
	    // update the ui but not the input.


	    /**
	     * Because both the ripples and the checkbox input cannot share pointer
	     * events, the checkbox input takes control of pointer events and calls
	     * ripple animations manually.
	     */

	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          name = _props.name,
	          value = _props.value,
	          checked = _props.checked,
	          iconStyle = _props.iconStyle,
	          inputStyle = _props.inputStyle,
	          inputType = _props.inputType,
	          label = _props.label,
	          labelStyle = _props.labelStyle,
	          labelPosition = _props.labelPosition,
	          onSwitch = _props.onSwitch,
	          onBlur = _props.onBlur,
	          onFocus = _props.onFocus,
	          onMouseUp = _props.onMouseUp,
	          onMouseDown = _props.onMouseDown,
	          onMouseLeave = _props.onMouseLeave,
	          onTouchStart = _props.onTouchStart,
	          onTouchEnd = _props.onTouchEnd,
	          onParentShouldUpdate = _props.onParentShouldUpdate,
	          disabled = _props.disabled,
	          disableTouchRipple = _props.disableTouchRipple,
	          disableFocusRipple = _props.disableFocusRipple,
	          className = _props.className,
	          rippleColor = _props.rippleColor,
	          rippleStyle = _props.rippleStyle,
	          style = _props.style,
	          switched = _props.switched,
	          switchElement = _props.switchElement,
	          thumbStyle = _props.thumbStyle,
	          trackStyle = _props.trackStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['name', 'value', 'checked', 'iconStyle', 'inputStyle', 'inputType', 'label', 'labelStyle', 'labelPosition', 'onSwitch', 'onBlur', 'onFocus', 'onMouseUp', 'onMouseDown', 'onMouseLeave', 'onTouchStart', 'onTouchEnd', 'onParentShouldUpdate', 'disabled', 'disableTouchRipple', 'disableFocusRipple', 'className', 'rippleColor', 'rippleStyle', 'style', 'switched', 'switchElement', 'thumbStyle', 'trackStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var wrapStyles = (0, _simpleAssign2.default)(styles.wrap, iconStyle);
	      var mergedRippleStyle = (0, _simpleAssign2.default)(styles.ripple, rippleStyle);

	      if (thumbStyle) {
	        wrapStyles.marginLeft /= 2;
	        wrapStyles.marginRight /= 2;
	      }

	      var labelElement = label && _react2.default.createElement(
	        'label',
	        { style: prepareStyles((0, _simpleAssign2.default)(styles.label, labelStyle)) },
	        label
	      );

	      var showTouchRipple = !disabled && !disableTouchRipple;
	      var showFocusRipple = !disabled && !disableFocusRipple;

	      var touchRipple = _react2.default.createElement(_TouchRipple2.default, {
	        ref: 'touchRipple',
	        key: 'touchRipple',
	        style: mergedRippleStyle,
	        color: mergedRippleStyle.color,
	        muiTheme: this.context.muiTheme,
	        centerRipple: true
	      });

	      var focusRipple = _react2.default.createElement(_FocusRipple2.default, {
	        key: 'focusRipple',
	        innerStyle: mergedRippleStyle,
	        color: mergedRippleStyle.color,
	        muiTheme: this.context.muiTheme,
	        show: this.state.isKeyboardFocused
	      });

	      var ripples = [showTouchRipple ? touchRipple : null, showFocusRipple ? focusRipple : null];

	      var touchHandlers = showTouchRipple ? {
	        onMouseUp: this.handleMouseUp,
	        onMouseDown: this.handleMouseDown,
	        onMouseLeave: this.handleMouseLeave,
	        onTouchStart: this.handleTouchStart,
	        onTouchEnd: this.handleTouchEnd
	      } : {};

	      var inputElement = _react2.default.createElement('input', (0, _extends3.default)({}, other, {
	        ref: 'checkbox',
	        type: inputType,
	        style: prepareStyles((0, _simpleAssign2.default)(styles.input, inputStyle)),
	        name: name,
	        value: value,
	        checked: this.state.switched,
	        disabled: disabled,
	        onBlur: this.handleBlur,
	        onFocus: this.handleFocus,
	        onChange: this.handleChange
	      }, touchHandlers));

	      // If toggle component (indicated by whether the style includes thumb) manually lay out
	      // elements in order to nest ripple elements
	      var switchOrThumbElement = !thumbStyle ? _react2.default.createElement(
	        'div',
	        { style: prepareStyles(wrapStyles) },
	        switchElement,
	        ripples
	      ) : _react2.default.createElement(
	        'div',
	        { style: prepareStyles(wrapStyles) },
	        _react2.default.createElement('div', { style: prepareStyles((0, _simpleAssign2.default)({}, trackStyle)) }),
	        _react2.default.createElement(
	          _Paper2.default,
	          { style: thumbStyle, zDepth: 1, circle: true },
	          ' ',
	          ripples,
	          ' '
	        )
	      );

	      var elementsInOrder = labelPosition === 'right' ? _react2.default.createElement(
	        'div',
	        { style: styles.controls },
	        switchOrThumbElement,
	        labelElement
	      ) : _react2.default.createElement(
	        'div',
	        { style: styles.controls },
	        labelElement,
	        switchOrThumbElement
	      );

	      return _react2.default.createElement(
	        'div',
	        { ref: 'root', className: className, style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) },
	        _react2.default.createElement(_reactEventListener2.default, {
	          target: 'window',
	          onKeyDown: this.handleKeyDown,
	          onKeyUp: this.handleKeyUp
	        }),
	        inputElement,
	        elementsInOrder
	      );
	    }
	  }]);
	  return EnhancedSwitch;
	}(_react.Component);

	EnhancedSwitch.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	EnhancedSwitch.propTypes = process.env.NODE_ENV !== "production" ? {
	  checked: _propTypes2.default.bool,
	  className: _propTypes2.default.string,
	  defaultChecked: _propTypes2.default.bool,
	  disableFocusRipple: _propTypes2.default.bool,
	  disableTouchRipple: _propTypes2.default.bool,
	  disabled: _propTypes2.default.bool,
	  iconStyle: _propTypes2.default.object,
	  inputStyle: _propTypes2.default.object,
	  inputType: _propTypes2.default.string.isRequired,
	  label: _propTypes2.default.node,
	  labelPosition: _propTypes2.default.oneOf(['left', 'right']),
	  labelStyle: _propTypes2.default.object,
	  name: _propTypes2.default.string,
	  onBlur: _propTypes2.default.func,
	  onFocus: _propTypes2.default.func,
	  onMouseDown: _propTypes2.default.func,
	  onMouseLeave: _propTypes2.default.func,
	  onMouseUp: _propTypes2.default.func,
	  onParentShouldUpdate: _propTypes2.default.func,
	  onSwitch: _propTypes2.default.func,
	  onTouchEnd: _propTypes2.default.func,
	  onTouchStart: _propTypes2.default.func,
	  rippleColor: _propTypes2.default.string,
	  rippleStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  switchElement: _propTypes2.default.element.isRequired,
	  switched: _propTypes2.default.bool.isRequired,
	  thumbStyle: _propTypes2.default.object,
	  trackStyle: _propTypes2.default.object,
	  value: _propTypes2.default.any
	} : {};
	exports.default = EnhancedSwitch;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ToggleCheckBoxOutlineBlank = function ToggleCheckBoxOutlineBlank(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z' })
	  );
	};
	ToggleCheckBoxOutlineBlank = (0, _pure2.default)(ToggleCheckBoxOutlineBlank);
	ToggleCheckBoxOutlineBlank.displayName = 'ToggleCheckBoxOutlineBlank';
	ToggleCheckBoxOutlineBlank.muiName = 'SvgIcon';

	exports.default = ToggleCheckBoxOutlineBlank;

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ToggleCheckBox = function ToggleCheckBox(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z' })
	  );
	};
	ToggleCheckBox = (0, _pure2.default)(ToggleCheckBox);
	ToggleCheckBox.displayName = 'ToggleCheckBox';
	ToggleCheckBox.muiName = 'SvgIcon';

	exports.default = ToggleCheckBox;

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tableRowColumn = context.muiTheme.tableRowColumn;


	  var styles = {
	    root: {
	      paddingLeft: tableRowColumn.spacing,
	      paddingRight: tableRowColumn.spacing,
	      height: tableRowColumn.height,
	      textAlign: 'left',
	      fontSize: 13,
	      overflow: 'hidden',
	      whiteSpace: 'nowrap',
	      textOverflow: 'ellipsis'
	    }
	  };

	  if (_react2.default.Children.count(props.children) === 1 && !isNaN(props.children)) {
	    styles.textAlign = 'right';
	  }

	  return styles;
	}

	var TableRowColumn = function (_Component) {
	  (0, _inherits3.default)(TableRowColumn, _Component);

	  function TableRowColumn() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TableRowColumn);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableRowColumn.__proto__ || (0, _getPrototypeOf2.default)(TableRowColumn)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false
	    }, _this.onClick = function (event) {
	      if (_this.props.onClick) {
	        _this.props.onClick(event, _this.props.columnNumber);
	      }
	    }, _this.onMouseEnter = function (event) {
	      if (_this.props.hoverable) {
	        _this.setState({ hovered: true });
	        if (_this.props.onHover) {
	          _this.props.onHover(event, _this.props.columnNumber);
	        }
	      }
	    }, _this.onMouseLeave = function (event) {
	      if (_this.props.hoverable) {
	        _this.setState({ hovered: false });
	        if (_this.props.onHoverExit) {
	          _this.props.onHoverExit(event, _this.props.columnNumber);
	        }
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TableRowColumn, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          columnNumber = _props.columnNumber,
	          hoverable = _props.hoverable,
	          onClick = _props.onClick,
	          onHover = _props.onHover,
	          onHoverExit = _props.onHoverExit,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'columnNumber', 'hoverable', 'onClick', 'onHover', 'onHoverExit', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var handlers = {
	        onClick: this.onClick,
	        onMouseEnter: this.onMouseEnter,
	        onMouseLeave: this.onMouseLeave
	      };

	      return _react2.default.createElement(
	        'td',
	        (0, _extends3.default)({
	          className: className,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	        }, handlers, other),
	        children
	      );
	    }
	  }]);
	  return TableRowColumn;
	}(_react.Component);

	TableRowColumn.defaultProps = {
	  hoverable: false
	};
	TableRowColumn.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableRowColumn.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * @ignore
	   * Number to identify the header row. This property
	   * is automatically populated when used with TableHeader.
	   */
	  columnNumber: _propTypes2.default.number,
	  /**
	   * @ignore
	   * If true, this column responds to hover events.
	   */
	  hoverable: _propTypes2.default.bool,
	  /** @ignore */
	  onClick: _propTypes2.default.func,
	  /** @ignore */
	  onHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Callback function for hover exit event.
	   */
	  onHoverExit: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = TableRowColumn;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _toConsumableArray2 = __webpack_require__(279);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _TableRowColumn = __webpack_require__(620);

	var _TableRowColumn2 = _interopRequireDefault(_TableRowColumn);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tableFooter = context.muiTheme.tableFooter;


	  return {
	    cell: {
	      borderTop: '1px solid ' + tableFooter.borderColor,
	      verticalAlign: 'bottom',
	      padding: 20,
	      textAlign: 'left',
	      whiteSpace: 'nowrap'
	    }
	  };
	}

	var TableFooter = function (_Component) {
	  (0, _inherits3.default)(TableFooter, _Component);

	  function TableFooter() {
	    (0, _classCallCheck3.default)(this, TableFooter);
	    return (0, _possibleConstructorReturn3.default)(this, (TableFooter.__proto__ || (0, _getPrototypeOf2.default)(TableFooter)).apply(this, arguments));
	  }

	  (0, _createClass3.default)(TableFooter, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          adjustForCheckbox = _props.adjustForCheckbox,
	          children = _props.children,
	          className = _props.className,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['adjustForCheckbox', 'children', 'className', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var footerRows = _react2.default.Children.map(children, function (child, rowNumber) {
	        var newChildProps = {
	          displayBorder: false,
	          key: 'f-' + rowNumber,
	          rowNumber: rowNumber,
	          style: (0, _simpleAssign2.default)({}, styles.cell, child.props.style)
	        };

	        var newDescendants = void 0;

	        if (adjustForCheckbox) {
	          newDescendants = [_react2.default.createElement(_TableRowColumn2.default, { key: 'fpcb' + rowNumber, style: { width: 24 } })].concat((0, _toConsumableArray3.default)(_react2.default.Children.toArray(child.props.children)));
	        } else {
	          newDescendants = child.props.children;
	        }

	        return _react2.default.cloneElement(child, newChildProps, newDescendants);
	      });

	      return _react2.default.createElement(
	        'tfoot',
	        (0, _extends3.default)({ className: className, style: prepareStyles((0, _simpleAssign2.default)({}, style)) }, other),
	        footerRows
	      );
	    }
	  }]);
	  return TableFooter;
	}(_react.Component);

	TableFooter.muiName = 'TableFooter';
	TableFooter.defaultProps = {
	  adjustForCheckbox: true,
	  style: {}
	};
	TableFooter.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableFooter.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * @ignore
	   * Controls whether or not header rows should be adjusted
	   * for a checkbox column. If the select all checkbox is true,
	   * this property will not influence the number of columns.
	   * This is mainly useful for "super header" rows so that
	   * the checkbox column does not create an offset that needs
	   * to be accounted for manually.
	   */
	  adjustForCheckbox: _propTypes2.default.bool,
	  /**
	   * Children passed to table footer.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = TableFooter;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Checkbox = __webpack_require__(615);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _TableHeaderColumn = __webpack_require__(623);

	var _TableHeaderColumn2 = _interopRequireDefault(_TableHeaderColumn);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tableHeader = context.muiTheme.tableHeader;


	  return {
	    root: {
	      borderBottom: '1px solid ' + tableHeader.borderColor
	    }
	  };
	}

	var TableHeader = function (_Component) {
	  (0, _inherits3.default)(TableHeader, _Component);

	  function TableHeader() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TableHeader);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableHeader.__proto__ || (0, _getPrototypeOf2.default)(TableHeader)).call.apply(_ref, [this].concat(args))), _this), _this.handleCheckAll = function (event, checked) {
	      if (_this.props.onSelectAll) {
	        _this.props.onSelectAll(checked);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TableHeader, [{
	    key: 'createSuperHeaderRows',
	    value: function createSuperHeaderRows() {
	      var numChildren = _react2.default.Children.count(this.props.children);
	      if (numChildren === 1) return undefined;

	      var superHeaders = [];
	      for (var index = 0; index < numChildren - 1; index++) {
	        var child = this.props.children[index];

	        if (!_react2.default.isValidElement(child)) continue;

	        var props = {
	          key: 'sh' + index,
	          rowNumber: index
	        };
	        superHeaders.push(this.createSuperHeaderRow(child, props));
	      }

	      if (superHeaders.length) return superHeaders;
	    }
	  }, {
	    key: 'createSuperHeaderRow',
	    value: function createSuperHeaderRow(child, props) {
	      var children = [];
	      if (this.props.adjustForCheckbox) {
	        children.push(this.getCheckboxPlaceholder(props));
	      }
	      _react2.default.Children.forEach(child.props.children, function (child) {
	        children.push(child);
	      });

	      return _react2.default.cloneElement(child, props, children);
	    }
	  }, {
	    key: 'createBaseHeaderRow',
	    value: function createBaseHeaderRow() {
	      var childrenArray = _react2.default.Children.toArray(this.props.children);
	      var numChildren = childrenArray.length;
	      if (numChildren < 1) {
	        return null;
	      }

	      var child = childrenArray[numChildren - 1];

	      var props = {
	        key: 'h' + numChildren,
	        rowNumber: numChildren
	      };

	      var children = [this.getSelectAllCheckboxColumn(props)];
	      _react2.default.Children.forEach(child.props.children, function (child) {
	        children.push(child);
	      });

	      return _react2.default.cloneElement(child, props, children);
	    }
	  }, {
	    key: 'getCheckboxPlaceholder',
	    value: function getCheckboxPlaceholder(props) {
	      if (!this.props.adjustForCheckbox) return null;

	      var disabled = !this.props.enableSelectAll;
	      var key = 'hpcb' + props.rowNumber;
	      return _react2.default.createElement(_TableHeaderColumn2.default, {
	        key: key,
	        style: {
	          width: 24,
	          cursor: disabled ? 'default' : 'inherit'
	        }
	      });
	    }
	  }, {
	    key: 'getSelectAllCheckboxColumn',
	    value: function getSelectAllCheckboxColumn(props) {
	      if (!this.props.displaySelectAll) return this.getCheckboxPlaceholder(props);

	      var disabled = !this.props.enableSelectAll;
	      var checkbox = _react2.default.createElement(_Checkbox2.default, {
	        key: 'selectallcb',
	        name: 'selectallcb',
	        value: 'selected',
	        disabled: disabled,
	        checked: this.props.selectAllSelected,
	        onCheck: this.handleCheckAll
	      });

	      var key = 'hpcb' + props.rowNumber;
	      return _react2.default.createElement(
	        _TableHeaderColumn2.default,
	        {
	          key: key,
	          style: {
	            width: 24,
	            cursor: disabled ? 'not-allowed' : 'inherit'
	          }
	        },
	        checkbox
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          style = _props.style;
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);
	      var superHeaderRows = this.createSuperHeaderRows();
	      var baseHeaderRow = this.createBaseHeaderRow();

	      return _react2.default.createElement(
	        'thead',
	        { className: className, style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) },
	        superHeaderRows,
	        baseHeaderRow
	      );
	    }
	  }]);
	  return TableHeader;
	}(_react.Component);

	TableHeader.muiName = 'TableHeader';
	TableHeader.defaultProps = {
	  adjustForCheckbox: true,
	  displaySelectAll: true,
	  enableSelectAll: true,
	  selectAllSelected: false
	};
	TableHeader.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableHeader.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Controls whether or not header rows should be
	   * adjusted for a checkbox column. If the select all
	   * checkbox is true, this property will not influence
	   * the number of columns. This is mainly useful for
	   * "super header" rows so that the checkbox column
	   * does not create an offset that needs to be accounted
	   * for manually.
	   */
	  adjustForCheckbox: _propTypes2.default.bool,
	  /**
	   * Children passed to table header.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Controls whether or not the select all checkbox is displayed.
	   */
	  displaySelectAll: _propTypes2.default.bool,
	  /**
	   * If set to true, the select all button will be interactable.
	   * If set to false, the button will not be interactable.
	   * To hide the checkbox, set displaySelectAll to false.
	   */
	  enableSelectAll: _propTypes2.default.bool,
	  /**
	   * @ignore
	   * Callback when select all has been checked.
	   */
	  onSelectAll: _propTypes2.default.func,
	  /**
	   * @ignore
	   * True when select all has been checked.
	   */
	  selectAllSelected: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = TableHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Tooltip = __webpack_require__(535);

	var _Tooltip2 = _interopRequireDefault(_Tooltip);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context) {
	  var tableHeaderColumn = context.muiTheme.tableHeaderColumn;


	  return {
	    root: {
	      fontWeight: 'normal',
	      fontSize: 12,
	      paddingLeft: tableHeaderColumn.spacing,
	      paddingRight: tableHeaderColumn.spacing,
	      height: tableHeaderColumn.height,
	      textAlign: 'left',
	      whiteSpace: 'nowrap',
	      textOverflow: 'ellipsis',
	      color: tableHeaderColumn.textColor,
	      position: 'relative'
	    },
	    tooltip: {
	      boxSizing: 'border-box',
	      marginTop: tableHeaderColumn.height / 2
	    }
	  };
	}

	var TableHeaderColumn = function (_Component) {
	  (0, _inherits3.default)(TableHeaderColumn, _Component);

	  function TableHeaderColumn() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TableHeaderColumn);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableHeaderColumn.__proto__ || (0, _getPrototypeOf2.default)(TableHeaderColumn)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false
	    }, _this.onMouseEnter = function () {
	      if (_this.props.tooltip !== undefined) {
	        _this.setState({ hovered: true });
	      }
	    }, _this.onMouseLeave = function () {
	      if (_this.props.tooltip !== undefined) {
	        _this.setState({ hovered: false });
	      }
	    }, _this.onClick = function (event) {
	      if (_this.props.onClick) {
	        _this.props.onClick(event, _this.props.columnNumber);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TableHeaderColumn, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          children = _props.children,
	          className = _props.className,
	          columnNumber = _props.columnNumber,
	          hoverable = _props.hoverable,
	          onClick = _props.onClick,
	          onHover = _props.onHover,
	          onHoverExit = _props.onHoverExit,
	          style = _props.style,
	          tooltip = _props.tooltip,
	          tooltipStyle = _props.tooltipStyle,
	          other = (0, _objectWithoutProperties3.default)(_props, ['children', 'className', 'columnNumber', 'hoverable', 'onClick', 'onHover', 'onHoverExit', 'style', 'tooltip', 'tooltipStyle']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context);

	      var handlers = {
	        onMouseEnter: this.onMouseEnter,
	        onMouseLeave: this.onMouseLeave,
	        onClick: this.onClick
	      };

	      var tooltipNode = void 0;

	      if (tooltip !== undefined) {
	        tooltipNode = _react2.default.createElement(_Tooltip2.default, {
	          label: tooltip,
	          show: this.state.hovered,
	          style: (0, _simpleAssign2.default)(styles.tooltip, tooltipStyle)
	        });
	      }

	      return _react2.default.createElement(
	        'th',
	        (0, _extends3.default)({
	          className: className,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	        }, handlers, other),
	        tooltipNode,
	        children
	      );
	    }
	  }]);
	  return TableHeaderColumn;
	}(_react.Component);

	TableHeaderColumn.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableHeaderColumn.propTypes = process.env.NODE_ENV !== "production" ? {
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * Number to identify the header row. This property
	   * is automatically populated when used with TableHeader.
	   */
	  columnNumber: _propTypes2.default.number,
	  /**
	   * @ignore
	   * Not used here but we need to remove it from the root element.
	   */
	  hoverable: _propTypes2.default.bool,
	  /** @ignore */
	  onClick: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Not used here but we need to remove it from the root element.
	   */
	  onHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Not used here but we need to remove it from the root element.
	   */
	  onHoverExit: _propTypes2.default.func,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object,
	  /**
	   * The string to supply to the tooltip. If not
	   * string is supplied no tooltip will be shown.
	   */
	  tooltip: _propTypes2.default.string,
	  /**
	   * Additional styling that can be applied to the tooltip.
	   */
	  tooltipStyle: _propTypes2.default.object
	} : {};
	exports.default = TableHeaderColumn;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getStyles(props, context, state) {
	  var tableRow = context.muiTheme.tableRow;


	  var cellBgColor = 'inherit';
	  if (props.hovered || state.hovered) {
	    cellBgColor = tableRow.hoverColor;
	  } else if (props.selected) {
	    cellBgColor = tableRow.selectedColor;
	  } else if (props.striped) {
	    cellBgColor = tableRow.stripeColor;
	  }

	  return {
	    root: {
	      borderBottom: props.displayBorder && '1px solid ' + tableRow.borderColor,
	      color: tableRow.textColor,
	      height: tableRow.height
	    },
	    cell: {
	      backgroundColor: cellBgColor
	    }
	  };
	}

	var TableRow = function (_Component) {
	  (0, _inherits3.default)(TableRow, _Component);

	  function TableRow() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TableRow);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TableRow.__proto__ || (0, _getPrototypeOf2.default)(TableRow)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false
	    }, _this.onCellClick = function (event, columnIndex) {
	      if (_this.props.selectable && _this.props.onCellClick) {
	        _this.props.onCellClick(event, _this.props.rowNumber, columnIndex);
	      }
	      event.ctrlKey = true;
	      _this.onRowClick(event);
	    }, _this.onCellHover = function (event, columnIndex) {
	      if (_this.props.hoverable) {
	        _this.setState({ hovered: true });
	        if (_this.props.onCellHover) _this.props.onCellHover(event, _this.props.rowNumber, columnIndex);
	        _this.onRowHover(event);
	      }
	    }, _this.onCellHoverExit = function (event, columnIndex) {
	      if (_this.props.hoverable) {
	        _this.setState({ hovered: false });
	        if (_this.props.onCellHoverExit) _this.props.onCellHoverExit(event, _this.props.rowNumber, columnIndex);
	        _this.onRowHoverExit(event);
	      }
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TableRow, [{
	    key: 'onRowClick',
	    value: function onRowClick(event) {
	      if (this.props.selectable && this.props.onRowClick) {
	        this.props.onRowClick(event, this.props.rowNumber);
	      }
	    }
	  }, {
	    key: 'onRowHover',
	    value: function onRowHover(event) {
	      if (this.props.onRowHover) {
	        this.props.onRowHover(event, this.props.rowNumber);
	      }
	    }
	  }, {
	    key: 'onRowHoverExit',
	    value: function onRowHoverExit(event) {
	      if (this.props.onRowHoverExit) {
	        this.props.onRowHoverExit(event, this.props.rowNumber);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          className = _props.className,
	          displayBorder = _props.displayBorder,
	          hoverable = _props.hoverable,
	          hovered = _props.hovered,
	          onCellClick = _props.onCellClick,
	          onCellHover = _props.onCellHover,
	          onCellHoverExit = _props.onCellHoverExit,
	          onRowClick = _props.onRowClick,
	          onRowHover = _props.onRowHover,
	          onRowHoverExit = _props.onRowHoverExit,
	          rowNumber = _props.rowNumber,
	          selectable = _props.selectable,
	          selected = _props.selected,
	          striped = _props.striped,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['className', 'displayBorder', 'hoverable', 'hovered', 'onCellClick', 'onCellHover', 'onCellHoverExit', 'onRowClick', 'onRowHover', 'onRowHoverExit', 'rowNumber', 'selectable', 'selected', 'striped', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);

	      var rowColumns = _react2.default.Children.map(this.props.children, function (child, columnNumber) {
	        if (_react2.default.isValidElement(child)) {
	          return _react2.default.cloneElement(child, {
	            columnNumber: columnNumber,
	            hoverable: _this2.props.hoverable,
	            key: _this2.props.rowNumber + '-' + columnNumber,
	            onClick: _this2.onCellClick,
	            onHover: _this2.onCellHover,
	            onHoverExit: _this2.onCellHoverExit,
	            style: (0, _simpleAssign2.default)({}, styles.cell, child.props.style)
	          });
	        }
	      });

	      return _react2.default.createElement(
	        'tr',
	        (0, _extends3.default)({
	          className: className,
	          style: prepareStyles((0, _simpleAssign2.default)(styles.root, style))
	        }, other),
	        rowColumns
	      );
	    }
	  }]);
	  return TableRow;
	}(_react.Component);

	TableRow.defaultProps = {
	  displayBorder: true,
	  hoverable: false,
	  hovered: false,
	  selectable: true,
	  striped: false
	};
	TableRow.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	TableRow.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Children passed to table row.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The css class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	   * If true, row border will be displayed for the row.
	   * If false, no border will be drawn.
	   */
	  displayBorder: _propTypes2.default.bool,
	  /**
	   * Controls whether or not the row responds to hover events.
	   */
	  hoverable: _propTypes2.default.bool,
	  /**
	   * Controls whether or not the row should be rendered as being
	   * hovered. This property is evaluated in addition to this.state.hovered
	   * and can be used to synchronize the hovered state with some other
	   * external events.
	   */
	  hovered: _propTypes2.default.bool,
	  /**
	   * @ignore
	   * Called when a row cell is clicked.
	   * rowNumber is the row number and columnId is
	   * the column number or the column key.
	   */
	  onCellClick: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table cell is hovered.
	   * rowNumber is the row number of the hovered row
	   * and columnId is the column number or the column key of the cell.
	   */
	  onCellHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table cell is no longer hovered.
	   * rowNumber is the row number of the row and columnId
	   * is the column number or the column key of the cell.
	   */
	  onCellHoverExit: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when row is clicked.
	   */
	  onRowClick: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table row is hovered.
	   * rowNumber is the row number of the hovered row.
	   */
	  onRowHover: _propTypes2.default.func,
	  /**
	   * @ignore
	   * Called when a table row is no longer hovered.
	   * rowNumber is the row number of the row that is no longer hovered.
	   */
	  onRowHoverExit: _propTypes2.default.func,
	  /**
	   * Number to identify the row. This property is
	   * automatically populated when used with the TableBody component.
	   */
	  rowNumber: _propTypes2.default.number,
	  /**
	   * If true, table rows can be selected. If multiple row
	   * selection is desired, enable multiSelectable.
	   * The default value is true.
	   */
	  selectable: _propTypes2.default.bool,
	  /**
	   * Indicates that a particular row is selected.
	   * This property can be used to programmatically select rows.
	   */
	  selected: _propTypes2.default.bool,
	  /**
	   * Indicates whether or not the row is striped.
	   */
	  striped: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = TableRow;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Pagina Formatos para la creacion de formatos*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiSelectField = __webpack_require__(577);

	var _materialUiSelectField2 = _interopRequireDefault(_materialUiSelectField);

	var _SubComponentsArraydocumentJsx = __webpack_require__(626);

	var _SubComponentsArraydocumentJsx2 = _interopRequireDefault(_SubComponentsArraydocumentJsx);

	var _SubComponentsTablaformatoJsx = __webpack_require__(634);

	var _SubComponentsTablaformatoJsx2 = _interopRequireDefault(_SubComponentsTablaformatoJsx);

	var _materialUiDialog = __webpack_require__(565);

	var _materialUiDialog2 = _interopRequireDefault(_materialUiDialog);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiRaisedButton = __webpack_require__(630);

	var _materialUiRaisedButton2 = _interopRequireDefault(_materialUiRaisedButton);

	var _materialUiDropDownMenu = __webpack_require__(579);

	var _materialUiDropDownMenu2 = _interopRequireDefault(_materialUiDropDownMenu);

	var _materialUiMenuItem = __webpack_require__(599);

	var _materialUiMenuItem2 = _interopRequireDefault(_materialUiMenuItem);

	var _materialUiIconMenu = __webpack_require__(610);

	var _materialUiIconMenu2 = _interopRequireDefault(_materialUiIconMenu);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsNavigationArrowDropDownCircle = __webpack_require__(609);

	var _materialUiSvgIconsNavigationArrowDropDownCircle2 = _interopRequireDefault(_materialUiSvgIconsNavigationArrowDropDownCircle);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTable = __webpack_require__(612);

	/*global location*/

	var React = __webpack_require__(241);

	var Navlog = __webpack_require__(559);
	var botones = {
	    margin: '5% 0% 3% 5%'
	};

	var overflow = {
	    overflow: 'scroll'
	};

	var Formatos = (function (_React$Component) {
	    _inherits(Formatos, _React$Component);

	    function Formatos(props) {
	        _classCallCheck(this, Formatos);

	        _get(Object.getPrototypeOf(Formatos.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            opcionselector: 1,
	            seccion: 0,
	            dialog: false,
	            dialogsalir: false,
	            name: '',
	            showdoc: false,
	            showtable: false,
	            showboton: false,
	            menu: 1,
	            showcrear: true,
	            admin: false
	        };
	        this.handleChange = this.handleChange.bind(this);
	        this.handleSubmit = this.handleSubmit.bind(this);
	        this.handleOpen = this.handleOpen.bind(this);
	        this.handleClose = this.handleClose.bind(this);
	        this.modificarformato = this.modificarformato.bind(this);
	        this.eliminardocumento = this.eliminardocumento.bind(this);
	        this.eliminartabla = this.eliminartabla.bind(this);
	    }

	    _createClass(Formatos, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var padre = this;
	            firebase.auth().onAuthStateChanged(function (user) {

	                if (user) {

	                    firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	                        var messages = snapshot.val();

	                        if (messages.admin == 'true') {

	                            padre.setState({
	                                admin: messages.admin
	                            });
	                        } else {
	                            padre.props.history.push({ pathname: '/login' });
	                        }
	                    });
	                } else {
	                    padre.props.history.push({ pathname: '/login' });
	                }
	            });

	            var messageRef = firebase.database().ref().child('formatos/documentos');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message,
	                        nombre: message
	                    });
	                }

	                window.listadocumentos = newState;
	            });

	            var ref = firebase.database().ref().child('formatos/tablas');
	            ref.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message,
	                        nombre: message
	                    });
	                }

	                window.listatablas = newState;
	            });
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {

	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'handleShowAgain',
	        value: function handleShowAgain() {

	            this.setState({ dialogsalir: false, showdoc: false, showcrear: true, showboton: false, showtable: false });
	        }
	    }, {
	        key: 'handleOpen',
	        value: function handleOpen() {
	            this.setState({ dialog: true, showboton: false });
	        }
	    }, {
	        key: 'handleOpenSalir',
	        value: function handleOpenSalir() {
	            this.setState({ dialogsalir: true });
	        }
	    }, {
	        key: 'handleClose',
	        value: function handleClose() {
	            this.setState({
	                dialog: false,
	                dialogsalir: false

	            });
	        }
	    }, {
	        key: 'handleSubmit',
	        value: function handleSubmit() {

	            if (this.state.opcionselector == 1) {
	                var nombre = this.state.name;
	                this.setState({ dialog: false, showdoc: true, showboton: true, showtable: false, showcrear: false });
	                (0, _configJsx.saveFormato)(nombre);
	            }
	            if (this.state.opcionselector == 2) {
	                var nombre = this.state.name;
	                this.setState({ dialog: false, showtable: true, showboton: true, showdoc: false, showcrear: false });
	                (0, _configJsx.saveTabla)(nombre);
	            }
	        }
	    }, {
	        key: 'modificarformato',
	        value: function modificarformato(id, tipo) {
	            console.log(id + " " + tipo);
	            if (tipo == 'documento') {
	                this.setState({ dialog: false, showdoc: true, showboton: true, showtable: false, showcrear: false, name: id });
	            }
	            if (tipo == 'tabla') {
	                this.setState({ dialog: false, showtable: true, showboton: true, showdoc: false, showcrear: false, name: id });
	            }
	        }
	    }, {
	        key: 'eliminardocumento',
	        value: function eliminardocumento(id) {
	            console.log(id);
	            firebase.database().ref().child("formatos/documentos/" + id).remove();
	            location.reload();
	        }
	    }, {
	        key: 'eliminartabla',
	        value: function eliminartabla(id) {
	            console.log(id);
	            firebase.database().ref().child("formatos/tablas/" + id).remove();
	            location.reload();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this = this;

	            if (this.state.admin == 'true') {
	                return React.createElement(
	                    'div',
	                    null,
	                    React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	                    React.createElement(
	                        _materialUiStylesMuiThemeProvider2['default'],
	                        null,
	                        React.createElement(
	                            'div',
	                            null,
	                            React.createElement(
	                                'div',
	                                { className: 'botonesformato' },
	                                this.state.showcrear == true ? React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(_materialUiRaisedButton2['default'], { label: 'Crear Formato', primary: true, onClick: function () {
	                                            return _this.handleOpen();
	                                        }, style: botones }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'tabla' },
	                                        React.createElement(
	                                            _materialUiTable.Table,
	                                            { style: overflow },
	                                            React.createElement(
	                                                _materialUiTable.TableHeader,
	                                                { adjustForCheckbox: false, displaySelectAll: false },
	                                                React.createElement(
	                                                    _materialUiTable.TableRow,
	                                                    null,
	                                                    React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        { colSpan: '3', tooltip: 'Lista de Formatos Creados', style: { textAlign: 'center' } },
	                                                        'Lista de Formatos'
	                                                    )
	                                                ),
	                                                React.createElement(
	                                                    _materialUiTable.TableRow,
	                                                    null,
	                                                    React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        null,
	                                                        'Nombre'
	                                                    ),
	                                                    React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        null,
	                                                        'Tipo'
	                                                    ),
	                                                    React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        null,
	                                                        'Opciones'
	                                                    )
	                                                )
	                                            ),
	                                            React.createElement(
	                                                _materialUiTable.TableBody,
	                                                { displayRowCheckbox: false, stripedRows: true, showRowHover: true },
	                                                window.listadocumentos.map(function (item) {
	                                                    return React.createElement(
	                                                        _materialUiTable.TableRow,
	                                                        { key: item.id },
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            item.nombre
	                                                        ),
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            'Documento'
	                                                        ),
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            React.createElement(
	                                                                _materialUiIconMenu2['default'],
	                                                                {
	                                                                    iconButtonElement: React.createElement(
	                                                                        _materialUiIconButton2['default'],
	                                                                        null,
	                                                                        React.createElement(_materialUiSvgIconsNavigationArrowDropDownCircle2['default'], null)
	                                                                    ),
	                                                                    onChange: _this.menu,
	                                                                    value: _this.state.menu
	                                                                },
	                                                                React.createElement(_materialUiMenuItem2['default'], { value: 2, primaryText: 'Modificar', onClick: function () {
	                                                                        return _this.modificarformato(item.nombre, 'documento');
	                                                                    } }),
	                                                                _this.state.admin == "true" ? React.createElement(_materialUiMenuItem2['default'], { value: 3, primaryText: 'Eliminar', onClick: function () {
	                                                                        return _this.eliminardocumento(item.nombre);
	                                                                    } }) : null
	                                                            )
	                                                        )
	                                                    );
	                                                }),
	                                                window.listatablas.map(function (item) {
	                                                    return React.createElement(
	                                                        _materialUiTable.TableRow,
	                                                        { key: item.id },
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            item.nombre
	                                                        ),
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            'Tabla'
	                                                        ),
	                                                        React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            null,
	                                                            React.createElement(
	                                                                _materialUiIconMenu2['default'],
	                                                                {
	                                                                    iconButtonElement: React.createElement(
	                                                                        _materialUiIconButton2['default'],
	                                                                        null,
	                                                                        React.createElement(_materialUiSvgIconsNavigationArrowDropDownCircle2['default'], null)
	                                                                    ),
	                                                                    onChange: _this.menu,
	                                                                    value: _this.state.menu
	                                                                },
	                                                                React.createElement(_materialUiMenuItem2['default'], { value: 2, primaryText: 'Modificar', onClick: function () {
	                                                                        return _this.modificarformato(item.nombre, 'tabla');
	                                                                    } }),
	                                                                _this.state.admin == "true" ? React.createElement(_materialUiMenuItem2['default'], { value: 3, primaryText: 'Eliminar', onClick: function () {
	                                                                        return _this.eliminartabla(item.nombre);
	                                                                    } }) : null
	                                                            )
	                                                        )
	                                                    );
	                                                })
	                                            )
	                                        )
	                                    )
	                                ) : React.createElement(_materialUiRaisedButton2['default'], { label: 'Cancelar', primary: true, onClick: function () {
	                                        return _this.handleOpenSalir();
	                                    }, style: botones }),
	                                this.state.showboton == true ? React.createElement(_materialUiRaisedButton2['default'], { label: 'Guardar', primary: true, onClick: function () {
	                                        return location.reload();
	                                    }, style: botones }) : null
	                            ),
	                            React.createElement(
	                                _materialUiDialog2['default'],
	                                {
	                                    title: 'Crear Formato',

	                                    modal: true,
	                                    open: this.state.dialog
	                                },
	                                React.createElement(_materialUiTextField2['default'], {
	                                    value: this.state.name, onChange: this.handleChange, name: 'name', type: 'text',
	                                    floatingLabelText: 'Nombre del Formato'
	                                }),
	                                React.createElement('br', null),
	                                React.createElement(
	                                    'h4',
	                                    { className: 'tituloselect' },
	                                    'Tipo de Formato'
	                                ),
	                                React.createElement(
	                                    'select',
	                                    { className: 'selectfieldformato', value: this.state.opcionselector, onChange: this.handleChange, name: 'opcionselector', required: true },
	                                    React.createElement(
	                                        'option',
	                                        { value: 1 },
	                                        'Documento'
	                                    ),
	                                    React.createElement(
	                                        'option',
	                                        { value: 2 },
	                                        'Tabla'
	                                    )
	                                ),
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Cancel',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this.handleClose();
	                                    }
	                                }),
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Aceptar',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this.handleSubmit();
	                                    }
	                                })
	                            ),
	                            React.createElement(
	                                _materialUiDialog2['default'],
	                                {
	                                    title: 'Desea Deshacer el Formato?',

	                                    modal: true,
	                                    open: this.state.dialogsalir
	                                },
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Cancel',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this.handleClose();
	                                    }
	                                }),
	                                React.createElement(_materialUiFlatButton2['default'], {
	                                    label: 'Aceptar',
	                                    primary: true,
	                                    onClick: function () {
	                                        return _this.handleShowAgain();
	                                    }
	                                })
	                            ),
	                            this.state.showdoc == true ? React.createElement(
	                                'div',
	                                null,
	                                React.createElement(_SubComponentsArraydocumentJsx2['default'], { nombreformato: this.state.name })
	                            ) : null,
	                            this.state.showtable == true ? React.createElement(_SubComponentsTablaformatoJsx2['default'], { nombreformato: this.state.name }) : null
	                        )
	                    )
	                );
	            } else {

	                return React.createElement('div', null);
	            }
	        }
	    }]);

	    return Formatos;
	})(React.Component);

	exports['default'] = Formatos;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "formatos.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Componente para crear formatos documentos */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiDivider = __webpack_require__(627);

	var _materialUiDivider2 = _interopRequireDefault(_materialUiDivider);

	var _materialUiPaper = __webpack_require__(503);

	var _materialUiPaper2 = _interopRequireDefault(_materialUiPaper);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _configJsx = __webpack_require__(2);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiSvgIconsContentDeleteSweep = __webpack_require__(629);

	var _materialUiSvgIconsContentDeleteSweep2 = _interopRequireDefault(_materialUiSvgIconsContentDeleteSweep);

	var _materialUiRaisedButton = __webpack_require__(630);

	var _materialUiRaisedButton2 = _interopRequireDefault(_materialUiRaisedButton);

	var React = __webpack_require__(241);

	var Nodos = __webpack_require__(632);

	var paper = {
	    width: "100%"
	};
	var iconbutton = {
	    padding: 0
	};
	var botones = {
	    margin: '0% 0% 0% 5%',
	    height: '15%'
	};

	var styles = {
	    mediumIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var ArrayDocument = (function (_React$Component) {
	    _inherits(ArrayDocument, _React$Component);

	    function ArrayDocument(props) {
	        _classCallCheck(this, ArrayDocument);

	        _get(Object.getPrototypeOf(ArrayDocument.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            componente: [],
	            numero: 0

	        };
	        this.agregarcomponente = this.agregarcomponente.bind(this);
	        this.handleChange = this.handleChange.bind(this);
	        this.borrarcomp = this.borrarcomp.bind(this);
	        this.crearnodo = this.crearnodo.bind(this);
	    }

	    _createClass(ArrayDocument, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this = this;

	            var messageRef = firebase.database().ref().child('formatos/documentos/' + this.props.nombreformato + '/componente');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message
	                    });
	                }

	                _this.setState({
	                    componente: newState
	                });
	            });
	        }
	    }, {
	        key: 'borrarcomp',
	        value: function borrarcomp(id) {
	            firebase.database().ref().child('formatos/documentos/' + this.props.nombreformato + '/componente/' + id).remove();
	        }
	    }, {
	        key: 'crearnodo',
	        value: function crearnodo(id) {

	            (0, _configJsx.agregarnodo)(this.props.nombreformato, id);
	        }
	    }, {
	        key: 'agregarcomponente',
	        value: function agregarcomponente() {

	            (0, _configJsx.CompAdd)(this.props.nombreformato);
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {

	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return React.createElement(
	                _materialUiStylesMuiThemeProvider2['default'],
	                null,
	                React.createElement(
	                    'div',
	                    null,
	                    React.createElement(
	                        'div',
	                        { className: 'paper' },
	                        React.createElement(
	                            _materialUiPaper2['default'],
	                            { zDepth: 2, style: paper },
	                            React.createElement(
	                                'h4',
	                                null,
	                                'Título del Documento'
	                            ),
	                            React.createElement(_materialUiTextField2['default'], { fullWidth: true, disabled: true }),
	                            React.createElement(_materialUiDivider2['default'], null)
	                        ),
	                        React.createElement(_materialUiRaisedButton2['default'], { label: 'Agregar Seccion', primary: true, onClick: function () {
	                                return _this2.agregarcomponente();
	                            }, style: botones })
	                    ),
	                    this.state.componente.map(function (item) {
	                        return React.createElement(
	                            'div',
	                            { className: 'paper', key: item.id },
	                            React.createElement(
	                                _materialUiPaper2['default'],
	                                { zDepth: 2, style: paper },
	                                React.createElement(
	                                    _materialUiIconButton2['default'],
	                                    { style: iconbutton, onClick: function () {
	                                            return _this2.borrarcomp(item.id);
	                                        }, iconStyle: styles.mediumIcon, tooltip: 'Borrar Seccion' },
	                                    React.createElement(_materialUiSvgIconsContentDeleteSweep2['default'], null)
	                                ),
	                                React.createElement(_materialUiTextField2['default'], { hintText: 'Titulo', fullWidth: true, multiLine: true, disabled: true }),
	                                React.createElement(_materialUiTextField2['default'], { hintText: 'Texto', fullWidth: true, multiLine: true, disabled: true }),
	                                React.createElement(Nodos, { idcomponente: item.id, nombreformato: _this2.props.nombreformato }),
	                                React.createElement(
	                                    _materialUiIconButton2['default'],
	                                    { style: iconbutton, onClick: function () {
	                                            return _this2.crearnodo(item.id);
	                                        }, iconStyle: styles.mediumIcon, tooltip: 'Crear Campo' },
	                                    React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                                ),
	                                React.createElement(_materialUiDivider2['default'], null)
	                            )
	                        );
	                    })
	                )
	            );
	        }
	    }]);

	    return ArrayDocument;
	})(React.Component);

	exports['default'] = ArrayDocument;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "arraydocument.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Divider = __webpack_require__(628);

	var _Divider2 = _interopRequireDefault(_Divider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Divider2.default;

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Divider = function Divider(props, context) {
	  var inset = props.inset,
	      style = props.style,
	      other = (0, _objectWithoutProperties3.default)(props, ['inset', 'style']);
	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      prepareStyles = _context$muiTheme.prepareStyles;


	  var styles = {
	    root: {
	      margin: 0,
	      marginTop: -1,
	      marginLeft: inset ? 72 : 0,
	      height: 1,
	      border: 'none',
	      backgroundColor: baseTheme.palette.borderColor
	    }
	  };

	  return _react2.default.createElement('hr', (0, _extends3.default)({}, other, { style: prepareStyles((0, _simpleAssign2.default)(styles.root, style)) }));
	};

	Divider.muiName = 'Divider';

	Divider.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * If true, the `Divider` will be indented.
	   */
	  inset: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};

	Divider.defaultProps = {
	  inset: false
	};

	Divider.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};

	exports.default = Divider;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ContentDeleteSweep = function ContentDeleteSweep(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M15 16h4v2h-4zm0-8h7v2h-7zm0 4h6v2h-6zM3 18c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V8H3v10zM14 5h-3l-1-1H6L5 5H2v2h12z' })
	  );
	};
	ContentDeleteSweep = (0, _pure2.default)(ContentDeleteSweep);
	ContentDeleteSweep.displayName = 'ContentDeleteSweep';
	ContentDeleteSweep.muiName = 'SvgIcon';

	exports.default = ContentDeleteSweep;

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _RaisedButton = __webpack_require__(631);

	var _RaisedButton2 = _interopRequireDefault(_RaisedButton);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _RaisedButton2.default;

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(338);

	var _extends3 = _interopRequireDefault(_extends2);

	var _objectWithoutProperties2 = __webpack_require__(343);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _getPrototypeOf = __webpack_require__(156);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _classCallCheck2 = __webpack_require__(182);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(183);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(187);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(233);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _simpleAssign = __webpack_require__(344);

	var _simpleAssign2 = _interopRequireDefault(_simpleAssign);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _transitions = __webpack_require__(493);

	var _transitions2 = _interopRequireDefault(_transitions);

	var _colorManipulator = __webpack_require__(291);

	var _EnhancedButton = __webpack_require__(519);

	var _EnhancedButton2 = _interopRequireDefault(_EnhancedButton);

	var _Paper = __webpack_require__(503);

	var _Paper2 = _interopRequireDefault(_Paper);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function validateLabel(props, propName, componentName) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (!props.children && props.label !== 0 && !props.label && !props.icon) {
	      return new Error('Required prop label or children or icon was not specified in ' + componentName + '.');
	    }
	  }
	}

	function getStyles(props, context, state) {
	  var _context$muiTheme = context.muiTheme,
	      baseTheme = _context$muiTheme.baseTheme,
	      button = _context$muiTheme.button,
	      raisedButton = _context$muiTheme.raisedButton,
	      borderRadius = _context$muiTheme.borderRadius;
	  var disabled = props.disabled,
	      disabledBackgroundColor = props.disabledBackgroundColor,
	      disabledLabelColor = props.disabledLabelColor,
	      fullWidth = props.fullWidth,
	      icon = props.icon,
	      label = props.label,
	      labelPosition = props.labelPosition,
	      primary = props.primary,
	      secondary = props.secondary,
	      style = props.style;


	  var amount = primary || secondary ? 0.4 : 0.08;

	  var backgroundColor = raisedButton.color;
	  var labelColor = raisedButton.textColor;

	  if (disabled) {
	    backgroundColor = disabledBackgroundColor || raisedButton.disabledColor;
	    labelColor = disabledLabelColor || raisedButton.disabledTextColor;
	  } else if (primary) {
	    backgroundColor = raisedButton.primaryColor;
	    labelColor = raisedButton.primaryTextColor;
	  } else if (secondary) {
	    backgroundColor = raisedButton.secondaryColor;
	    labelColor = raisedButton.secondaryTextColor;
	  } else {
	    if (props.backgroundColor) {
	      backgroundColor = props.backgroundColor;
	    }
	    if (props.labelColor) {
	      labelColor = props.labelColor;
	    }
	  }

	  var buttonHeight = style && style.height || button.height;

	  return {
	    root: {
	      display: 'inline-block',
	      transition: _transitions2.default.easeOut(),
	      minWidth: fullWidth ? '100%' : button.minWidth
	    },
	    button: {
	      height: buttonHeight,
	      lineHeight: buttonHeight + 'px',
	      width: '100%',
	      padding: 0,
	      borderRadius: borderRadius,
	      transition: _transitions2.default.easeOut(),
	      backgroundColor: backgroundColor,
	      // That's the default value for a button but not a link
	      textAlign: 'center'
	    },
	    label: {
	      position: 'relative',
	      opacity: 1,
	      fontSize: raisedButton.fontSize,
	      letterSpacing: 0,
	      textTransform: raisedButton.textTransform || button.textTransform || 'uppercase',
	      fontWeight: raisedButton.fontWeight,
	      margin: 0,
	      userSelect: 'none',
	      paddingLeft: icon && labelPosition !== 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
	      paddingRight: icon && labelPosition === 'before' ? 8 : baseTheme.spacing.desktopGutterLess,
	      color: labelColor
	    },
	    icon: {
	      verticalAlign: 'middle',
	      marginLeft: label && labelPosition !== 'before' ? 12 : 0,
	      marginRight: label && labelPosition === 'before' ? 12 : 0
	    },
	    overlay: {
	      height: buttonHeight,
	      borderRadius: borderRadius,
	      backgroundColor: (state.keyboardFocused || state.hovered) && !disabled && (0, _colorManipulator.fade)(labelColor, amount),
	      transition: _transitions2.default.easeOut(),
	      top: 0
	    },
	    ripple: {
	      color: labelColor,
	      opacity: !(primary || secondary) ? 0.1 : 0.16
	    }
	  };
	}

	var RaisedButton = function (_Component) {
	  (0, _inherits3.default)(RaisedButton, _Component);

	  function RaisedButton() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, RaisedButton);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RaisedButton.__proto__ || (0, _getPrototypeOf2.default)(RaisedButton)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
	      hovered: false,
	      keyboardFocused: false,
	      touched: false,
	      initialZDepth: 0,
	      zDepth: 0
	    }, _this.handleMouseDown = function (event) {
	      // only listen to left clicks
	      if (event.button === 0) {
	        _this.setState({
	          zDepth: _this.state.initialZDepth + 1
	        });
	      }
	      if (_this.props.onMouseDown) {
	        _this.props.onMouseDown(event);
	      }
	    }, _this.handleMouseUp = function (event) {
	      _this.setState({
	        zDepth: _this.state.initialZDepth
	      });
	      if (_this.props.onMouseUp) {
	        _this.props.onMouseUp(event);
	      }
	    }, _this.handleMouseLeave = function (event) {
	      if (!_this.state.keyboardFocused) {
	        _this.setState({
	          zDepth: _this.state.initialZDepth,
	          hovered: false
	        });
	      }
	      if (_this.props.onMouseLeave) {
	        _this.props.onMouseLeave(event);
	      }
	    }, _this.handleMouseEnter = function (event) {
	      if (!_this.state.keyboardFocused && !_this.state.touched) {
	        _this.setState({
	          hovered: true
	        });
	      }
	      if (_this.props.onMouseEnter) {
	        _this.props.onMouseEnter(event);
	      }
	    }, _this.handleTouchStart = function (event) {
	      _this.setState({
	        touched: true,
	        zDepth: _this.state.initialZDepth + 1
	      });

	      if (_this.props.onTouchStart) {
	        _this.props.onTouchStart(event);
	      }
	    }, _this.handleTouchEnd = function (event) {
	      _this.setState({
	        touched: true,
	        zDepth: _this.state.initialZDepth
	      });

	      if (_this.props.onTouchEnd) {
	        _this.props.onTouchEnd(event);
	      }
	    }, _this.handleKeyboardFocus = function (event, keyboardFocused) {
	      var zDepth = keyboardFocused && !_this.props.disabled ? _this.state.initialZDepth + 1 : _this.state.initialZDepth;

	      _this.setState({
	        zDepth: zDepth,
	        keyboardFocused: keyboardFocused
	      });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(RaisedButton, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var zDepth = this.props.disabled ? 0 : 1;
	      this.setState({
	        zDepth: zDepth,
	        initialZDepth: zDepth
	      });
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var zDepth = nextProps.disabled ? 0 : 1;
	      var nextState = {
	        zDepth: zDepth,
	        initialZDepth: zDepth
	      };

	      if (nextProps.disabled) {
	        nextState.hovered = false;
	      }

	      this.setState(nextState);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          backgroundColor = _props.backgroundColor,
	          buttonStyle = _props.buttonStyle,
	          children = _props.children,
	          className = _props.className,
	          disabled = _props.disabled,
	          disabledBackgroundColor = _props.disabledBackgroundColor,
	          disabledLabelColor = _props.disabledLabelColor,
	          fullWidth = _props.fullWidth,
	          icon = _props.icon,
	          label = _props.label,
	          labelColor = _props.labelColor,
	          labelPosition = _props.labelPosition,
	          labelStyle = _props.labelStyle,
	          overlayStyle = _props.overlayStyle,
	          primary = _props.primary,
	          rippleStyle = _props.rippleStyle,
	          secondary = _props.secondary,
	          style = _props.style,
	          other = (0, _objectWithoutProperties3.default)(_props, ['backgroundColor', 'buttonStyle', 'children', 'className', 'disabled', 'disabledBackgroundColor', 'disabledLabelColor', 'fullWidth', 'icon', 'label', 'labelColor', 'labelPosition', 'labelStyle', 'overlayStyle', 'primary', 'rippleStyle', 'secondary', 'style']);
	      var prepareStyles = this.context.muiTheme.prepareStyles;

	      var styles = getStyles(this.props, this.context, this.state);
	      var mergedRippleStyles = (0, _simpleAssign2.default)({}, styles.ripple, rippleStyle);

	      var buttonEventHandlers = disabled ? {} : {
	        onMouseDown: this.handleMouseDown,
	        onMouseUp: this.handleMouseUp,
	        onMouseLeave: this.handleMouseLeave,
	        onMouseEnter: this.handleMouseEnter,
	        onTouchStart: this.handleTouchStart,
	        onTouchEnd: this.handleTouchEnd,
	        onKeyboardFocus: this.handleKeyboardFocus
	      };

	      var labelElement = label && _react2.default.createElement(
	        'span',
	        { style: prepareStyles((0, _simpleAssign2.default)(styles.label, labelStyle)), key: 'labelElement' },
	        label
	      );

	      var iconCloned = icon && (0, _react.cloneElement)(icon, {
	        color: icon.props.color || styles.label.color,
	        style: (0, _simpleAssign2.default)(styles.icon, icon.props.style),
	        key: 'iconCloned'
	      });

	      // Place label before or after children.
	      var enhancedButtonChildren = labelPosition === 'before' ? [labelElement, iconCloned, children] : [children, iconCloned, labelElement];

	      return _react2.default.createElement(
	        _Paper2.default,
	        {
	          className: className,
	          style: (0, _simpleAssign2.default)(styles.root, style),
	          zDepth: this.state.zDepth
	        },
	        _react2.default.createElement(
	          _EnhancedButton2.default,
	          (0, _extends3.default)({}, other, buttonEventHandlers, {
	            ref: 'container',
	            disabled: disabled,
	            style: (0, _simpleAssign2.default)(styles.button, buttonStyle),
	            focusRippleColor: mergedRippleStyles.color,
	            touchRippleColor: mergedRippleStyles.color,
	            focusRippleOpacity: mergedRippleStyles.opacity,
	            touchRippleOpacity: mergedRippleStyles.opacity
	          }),
	          _react2.default.createElement(
	            'div',
	            {
	              ref: 'overlay',
	              style: prepareStyles((0, _simpleAssign2.default)(styles.overlay, overlayStyle))
	            },
	            enhancedButtonChildren
	          )
	        )
	      );
	    }
	  }]);
	  return RaisedButton;
	}(_react.Component);

	RaisedButton.muiName = 'RaisedButton';
	RaisedButton.defaultProps = {
	  disabled: false,
	  labelPosition: 'after',
	  fullWidth: false,
	  primary: false,
	  secondary: false
	};
	RaisedButton.contextTypes = {
	  muiTheme: _propTypes2.default.object.isRequired
	};
	RaisedButton.propTypes = process.env.NODE_ENV !== "production" ? {
	  /**
	   * Override the default background color for the button,
	   * but not the default disabled background color
	   * (use `disabledBackgroundColor` for this).
	   */
	  backgroundColor: _propTypes2.default.string,
	  /**
	   * Override the inline-styles of the button element.
	   */
	  buttonStyle: _propTypes2.default.object,
	  /**
	   * The content of the button.
	   * If a label is provided via the `label` prop, the text within the label
	   * will be displayed in addition to the content provided here.
	   */
	  children: _propTypes2.default.node,
	  /**
	   * The CSS class name of the root element.
	   */
	  className: _propTypes2.default.string,
	  /**
	    * The element to use as the container for the RaisedButton. Either a string to
	    * use a DOM element or a ReactElement. This is useful for wrapping the
	    * RaisedButton in a custom Link component. If a ReactElement is given, ensure
	    * that it passes all of its given props through to the underlying DOM
	    * element and renders its children prop for proper integration.
	    */
	  containerElement: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
	  /**
	   * If true, the element's ripple effect will be disabled.
	   */
	  disableTouchRipple: _propTypes2.default.bool,
	  /**
	   * If true, the button will be disabled.
	   */
	  disabled: _propTypes2.default.bool,
	  /**
	   * Override the default background color for the button
	   * when it is disabled.
	   */
	  disabledBackgroundColor: _propTypes2.default.string,
	  /**
	   * The color of the button's label when the button is disabled.
	   */
	  disabledLabelColor: _propTypes2.default.string,
	  /**
	   * If true, the button will take up the full width of its container.
	   */
	  fullWidth: _propTypes2.default.bool,
	  /**
	   * The URL to link to when the button is clicked.
	   */
	  href: _propTypes2.default.string,
	  /**
	   * An icon to be displayed within the button.
	   */
	  icon: _propTypes2.default.node,
	  /**
	   * The label to be displayed within the button.
	   * If content is provided via the `children` prop, that content will be
	   * displayed in addition to the label provided here.
	   */
	  label: validateLabel,
	  /**
	   * The color of the button's label.
	   */
	  labelColor: _propTypes2.default.string,
	  /**
	   * The position of the button's label relative to the button's `children`.
	   */
	  labelPosition: _propTypes2.default.oneOf(['before', 'after']),
	  /**
	   * Override the inline-styles of the button's label element.
	   */
	  labelStyle: _propTypes2.default.object,
	  /**
	   * Callback function fired when the button is touch-tapped.
	   *
	   * @param {object} event TouchTap event targeting the button.
	   */
	  onClick: _propTypes2.default.func,
	  /** @ignore */
	  onMouseDown: _propTypes2.default.func,
	  /** @ignore */
	  onMouseEnter: _propTypes2.default.func,
	  /** @ignore */
	  onMouseLeave: _propTypes2.default.func,
	  /** @ignore */
	  onMouseUp: _propTypes2.default.func,
	  /** @ignore */
	  onTouchEnd: _propTypes2.default.func,
	  /** @ignore */
	  onTouchStart: _propTypes2.default.func,
	  /**
	   * Override the inline style of the button overlay.
	   */
	  overlayStyle: _propTypes2.default.object,
	  /**
	   * If true, the button will use the theme's primary color.
	   */
	  primary: _propTypes2.default.bool,
	  /**
	   * Override the inline style of the ripple element.
	   */
	  rippleStyle: _propTypes2.default.object,
	  /**
	   * If true, the button will use the theme's secondary color.
	   * If both `secondary` and `primary` are true, the button will use
	   * the theme's primary color.
	   */
	  secondary: _propTypes2.default.bool,
	  /**
	   * Override the inline-styles of the root element.
	   */
	  style: _propTypes2.default.object
	} : {};
	exports.default = RaisedButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*MOSTRAR Y BORRAR NODOS AL MOMENTO DE CREAR FORMATOS*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiSvgIconsActionDelete = __webpack_require__(633);

	var _materialUiSvgIconsActionDelete2 = _interopRequireDefault(_materialUiSvgIconsActionDelete);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var React = __webpack_require__(241);

	var iconbutton = {
	    padding: 0
	};
	var styles = {
	    mediumIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var nodos = {
	    width: '80%'
	};

	var Nodos = (function (_React$Component) {
	    _inherits(Nodos, _React$Component);

	    function Nodos(props) {
	        _classCallCheck(this, Nodos);

	        _get(Object.getPrototypeOf(Nodos.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            nodos: []
	        };
	        this.borrarnodo = this.borrarnodo.bind(this);
	    }

	    _createClass(Nodos, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this = this;

	            var messageRef = firebase.database().ref().child('formatos/documentos/' + this.props.nombreformato + '/componente/' + this.props.idcomponente + '/nodo');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message
	                    });
	                }

	                _this.setState({
	                    nodos: newState
	                });
	            });
	        }
	    }, {
	        key: 'borrarnodo',
	        value: function borrarnodo(id) {
	            firebase.database().ref().child('formatos/documentos/' + this.props.nombreformato + '/componente/' + this.props.idcomponente + '/nodo/' + id).remove();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        this.state.nodos.map(function (item) {
	                            return React.createElement(
	                                'div',
	                                { key: item.id, className: 'nodos' },
	                                React.createElement(_materialUiTextField2['default'], { hintText: 'Texto', fullWidth: true, multiLine: true, disabled: true }),
	                                React.createElement(
	                                    _materialUiIconButton2['default'],
	                                    { style: iconbutton, onClick: function () {
	                                            return _this2.borrarnodo(item.id);
	                                        }, iconStyle: styles.mediumIcon, tooltip: 'Borrar Campo' },
	                                    React.createElement(_materialUiSvgIconsActionDelete2['default'], null)
	                                )
	                            );
	                        })
	                    )
	                )
	            );
	        }
	    }]);

	    return Nodos;
	})(React.Component);

	exports['default'] = Nodos;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "nodos.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _pure = __webpack_require__(508);

	var _pure2 = _interopRequireDefault(_pure);

	var _SvgIcon = __webpack_require__(514);

	var _SvgIcon2 = _interopRequireDefault(_SvgIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ActionDelete = function ActionDelete(props) {
	  return _react2.default.createElement(
	    _SvgIcon2.default,
	    props,
	    _react2.default.createElement('path', { d: 'M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' })
	  );
	};
	ActionDelete = (0, _pure2.default)(ActionDelete);
	ActionDelete.displayName = 'ActionDelete';
	ActionDelete.muiName = 'SvgIcon';

	exports.default = ActionDelete;

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {


	/*CREACION DE FORMATOS TIPO TABLA */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiDivider = __webpack_require__(627);

	var _materialUiDivider2 = _interopRequireDefault(_materialUiDivider);

	var _configJsx = __webpack_require__(2);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTable = __webpack_require__(612);

	var React = __webpack_require__(241);

	var overflow = {
	    overflow: 'scroll'
	};

	var iconbutton = {
	    padding: 0
	};

	var styles = {
	    smallIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var Tabla = (function (_React$Component) {
	    _inherits(Tabla, _React$Component);

	    function Tabla(props) {
	        _classCallCheck(this, Tabla);

	        _get(Object.getPrototypeOf(Tabla.prototype), 'constructor', this).call(this, props);
	        this.state = {
	            numfil: 0,
	            numcol: 2,
	            filas: [],
	            columnas: []
	        };
	        this.agregarcolumna = this.agregarcolumna.bind(this);
	        this.agregarfila = this.agregarfila.bind(this);
	    }

	    _createClass(Tabla, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {}
	    }, {
	        key: 'agregarcolumna',
	        value: function agregarcolumna() {
	            var _this = this;

	            this.state.columnas.push({
	                id: this.state.columnas.length
	            });

	            this.setState({
	                numcol: this.state.numcol + 1
	            }, function () {
	                (0, _configJsx.formatotabla)(_this.state.numcol, _this.state.numfil, _this.props.nombreformato);
	            });
	        }
	    }, {
	        key: 'agregarfila',
	        value: function agregarfila() {
	            var _this2 = this;

	            this.state.filas.push({
	                id: this.state.filas.length
	            });

	            this.setState({
	                numfil: this.state.numfil + 1
	            }, function () {
	                (0, _configJsx.formatotabla)(_this2.state.numcol, _this2.state.numfil, _this2.props.nombreformato);
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(
	                            'h1',
	                            { className: 'documentotitulo' },
	                            this.props.nombreformato
	                        ),
	                        React.createElement(
	                            'div',
	                            { className: 'tabla' },
	                            React.createElement(
	                                _materialUiTable.Table,
	                                { style: overflow },
	                                React.createElement(
	                                    _materialUiTable.TableHeader,
	                                    { adjustForCheckbox: false, displaySelectAll: false },
	                                    React.createElement(
	                                        _materialUiTable.TableRow,
	                                        null,
	                                        React.createElement(
	                                            _materialUiTable.TableHeaderColumn,
	                                            null,
	                                            'Columna'
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableHeaderColumn,
	                                            null,
	                                            'Columna'
	                                        ),
	                                        this.state.columnas.map(function (item) {
	                                            return React.createElement(
	                                                _materialUiTable.TableHeaderColumn,
	                                                { key: item.id },
	                                                'Columna'
	                                            );
	                                        }),
	                                        React.createElement(
	                                            _materialUiTable.TableHeaderColumn,
	                                            null,
	                                            ' ',
	                                            React.createElement(
	                                                _materialUiIconButton2['default'],
	                                                { style: iconbutton, iconStyle: styles.smallIcon, onClick: this.agregarcolumna },
	                                                React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                                            ),
	                                            '    '
	                                        )
	                                    )
	                                ),
	                                React.createElement(
	                                    _materialUiTable.TableBody,
	                                    { displayRowCheckbox: false },
	                                    this.state.filas.map(function (item) {
	                                        return React.createElement(
	                                            'div',
	                                            { key: item.id },
	                                            React.createElement(_materialUiTable.TableRow, null),
	                                            React.createElement(_materialUiDivider2['default'], null)
	                                        );
	                                    })
	                                )
	                            ),
	                            React.createElement(
	                                _materialUiIconButton2['default'],
	                                { style: iconbutton, iconStyle: styles.smallIcon, onClick: this.agregarfila },
	                                React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return Tabla;
	})(React.Component);

	exports['default'] = Tabla;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "tablaformato.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/* PAGINA PARA EDITAR LOS DOCUMENTOS TIPO DOCUMENTO */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _configJsx = __webpack_require__(2);

	var _materialUiRaisedButton = __webpack_require__(630);

	var _materialUiRaisedButton2 = _interopRequireDefault(_materialUiRaisedButton);

	var _materialUiTabs = __webpack_require__(603);

	var _materialUiDivider = __webpack_require__(627);

	var _materialUiDivider2 = _interopRequireDefault(_materialUiDivider);

	var _materialUiPaper = __webpack_require__(503);

	var _materialUiPaper2 = _interopRequireDefault(_materialUiPaper);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var _materialUiSvgIconsContentAdd = __webpack_require__(563);

	var _materialUiSvgIconsContentAdd2 = _interopRequireDefault(_materialUiSvgIconsContentAdd);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiTable = __webpack_require__(612);

	/*global localStorage */

	var React = __webpack_require__(241);

	var Navlog = __webpack_require__(559);
	var MostrarNodos = __webpack_require__(636);
	var VerDocumento = __webpack_require__(677);
	var MostrarExtras = __webpack_require__(637);
	var paper = {
	    width: "100%"
	};

	var iconbutton = {
	    padding: 0
	};

	var styles = {
	    mediumIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var botonguardar = {
	    margin: '3% 0 0% 3%'
	};

	var EditarDoc = (function (_React$Component) {
	    _inherits(EditarDoc, _React$Component);

	    function EditarDoc() {
	        _classCallCheck(this, EditarDoc);

	        _get(Object.getPrototypeOf(EditarDoc.prototype), 'constructor', this).call(this);

	        this.state = {
	            admin: false,
	            titulodocumento: localStorage.getItem('doctitulo'),
	            ruta: [],
	            nombreformato: localStorage.getItem('nombreformato'),
	            titulo: "titulo",
	            componente: [],
	            iddocumento: localStorage.getItem('iddocumento')
	        };
	        this.handleChange = this.handleChange.bind(this);
	        this.crearextra = this.crearextra.bind(this);
	    }

	    _createClass(EditarDoc, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {

	            var padre = this;
	            firebase.auth().onAuthStateChanged(function (user) {

	                if (user) {

	                    firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	                        var messages = snapshot.val();

	                        if (messages.admin == 'true') {

	                            padre.setState({
	                                admin: 'true'
	                            });
	                        }
	                    });
	                } else {
	                    padre.props.history.push({ pathname: '/login' });
	                }
	            });

	            var messageRef = firebase.database().ref().child('documentos/' + this.state.iddocumento + '/componente');
	            messageRef.on('value', function (snapshot) {
	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {
	                    newState.push({
	                        id: message
	                    });
	                }

	                padre.setState({
	                    componente: newState
	                });
	            });
	        }
	    }, {
	        key: 'crearextra',
	        value: function crearextra(idcomponente) {

	            (0, _configJsx.nodospropios)(idcomponente, this.state.iddocumento);
	        }
	    }, {
	        key: 'handleChange',
	        value: function handleChange(e) {

	            this.setState(_defineProperty({}, e.target.name, e.target.value));
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this = this;

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	                        React.createElement(
	                            _materialUiTabs.Tabs,
	                            null,
	                            React.createElement(
	                                _materialUiTabs.Tab,
	                                { label: 'Ver Documento' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'documentotitulover' },
	                                    React.createElement(
	                                        'h1',
	                                        null,
	                                        'Titulo: ',
	                                        this.state.titulodocumento
	                                    ),
	                                    React.createElement(
	                                        'h4',
	                                        null,
	                                        'Formato: ',
	                                        this.state.nombreformato,
	                                        ' - Documento'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(VerDocumento, { iddocumento: this.state.iddocumento })
	                                )
	                            ),
	                            React.createElement(
	                                _materialUiTabs.Tab,
	                                { label: 'Editar Documento' },
	                                React.createElement(
	                                    'div',
	                                    null,
	                                    React.createElement(_materialUiRaisedButton2['default'], { label: 'Guardar', secondary: true, style: botonguardar }),
	                                    React.createElement(
	                                        'div',
	                                        { className: 'documentotitulo' },
	                                        React.createElement(
	                                            'h1',
	                                            null,
	                                            'Titulo: ',
	                                            this.state.titulodocumento
	                                        ),
	                                        React.createElement(
	                                            'h4',
	                                            null,
	                                            'Formato: ',
	                                            this.state.nombreformato,
	                                            ' - Documento'
	                                        )
	                                    ),
	                                    this.state.componente.map(function (item) {
	                                        return React.createElement(
	                                            'div',
	                                            { className: 'papereditar', key: item.id },
	                                            React.createElement(
	                                                _materialUiPaper2['default'],
	                                                { zDepth: 2, style: paper },
	                                                React.createElement(_materialUiTextField2['default'], { hintText: 'Titulo', fullWidth: true, multiLine: true, id: item.id }),
	                                                React.createElement(_materialUiTextField2['default'], { hintText: 'Texto', fullWidth: true, multiLine: true, id: _this.state.titulo + item.id }),
	                                                React.createElement(MostrarNodos, { idcomponente: item.id, docid: _this.state.iddocumento }),
	                                                React.createElement(MostrarExtras, { idcomponente: item.id, docid: _this.state.iddocumento }),
	                                                React.createElement(
	                                                    _materialUiIconButton2['default'],
	                                                    { style: iconbutton, onClick: function () {
	                                                            return _this.crearextra(item.id);
	                                                        }, iconStyle: styles.mediumIcon, tooltip: 'Agregar Campo' },
	                                                    React.createElement(_materialUiSvgIconsContentAdd2['default'], null)
	                                                ),
	                                                React.createElement(_materialUiDivider2['default'], null)
	                                            )
	                                        );
	                                    })
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return EditarDoc;
	})(React.Component);

	exports['default'] = EditarDoc;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "editardocumento.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Se muestran los nodos al momento de editar el documento selecionado*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _configJsx = __webpack_require__(2);

	var React = __webpack_require__(241);

	var iconbutton = {
	    padding: 0
	};
	var styles = {
	    mediumIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var nodos = {
	    width: '80%'
	};

	var MostrarNodos = (function (_React$Component) {
	    _inherits(MostrarNodos, _React$Component);

	    function MostrarNodos(props) {
	        _classCallCheck(this, MostrarNodos);

	        _get(Object.getPrototypeOf(MostrarNodos.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            nodos: []
	        };
	    }

	    _createClass(MostrarNodos, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this = this;

	            var messageRef = firebase.database().ref().child('/documentos/' + this.props.docid + '/componente/' + this.props.idcomponente + '/nodo');
	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message
	                    });
	                }

	                _this.setState({
	                    nodos: newState
	                });
	            });
	        }
	    }, {
	        key: 'render',
	        value: function render() {

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        this.state.nodos.map(function (item) {
	                            return React.createElement(
	                                'div',
	                                { className: 'nodos', key: item.id },
	                                React.createElement(_materialUiTextField2['default'], { hintText: 'Texto', fullWidth: true, multiLine: true })
	                            );
	                        })
	                    )
	                )
	            );
	        }
	    }]);

	    return MostrarNodos;
	})(React.Component);

	exports['default'] = MostrarNodos;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "mostrarnodos.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Se muestran los campos extras agregados a los formatos, al momento de editar el documento*/

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiSvgIconsActionDelete = __webpack_require__(633);

	var _materialUiSvgIconsActionDelete2 = _interopRequireDefault(_materialUiSvgIconsActionDelete);

	var _materialUiIconButton = __webpack_require__(517);

	var _materialUiIconButton2 = _interopRequireDefault(_materialUiIconButton);

	var React = __webpack_require__(241);

	var iconbutton = {
	    padding: 0
	};
	var styles = {
	    mediumIcon: {
	        width: 36,
	        height: 36
	    }
	};

	var nodos = {
	    width: '80%'
	};

	var MostrarExtras = (function (_React$Component) {
	    _inherits(MostrarExtras, _React$Component);

	    function MostrarExtras(props) {
	        _classCallCheck(this, MostrarExtras);

	        _get(Object.getPrototypeOf(MostrarExtras.prototype), 'constructor', this).call(this, props);

	        this.state = {
	            nodos: []
	        };
	        this.borrarnodo = this.borrarnodo.bind(this);
	    }

	    _createClass(MostrarExtras, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var _this = this;

	            var messageRef = firebase.database().ref().child('documentos/' + this.props.docid + "/componente/" + this.props.idcomponente + "/extras/");

	            messageRef.on('value', function (snapshot) {

	                var messages = snapshot.val();

	                var newState = [];
	                for (var message in messages) {

	                    newState.push({
	                        id: message
	                    });
	                }

	                _this.setState({
	                    nodos: newState
	                });
	            });
	        }
	    }, {
	        key: 'borrarnodo',
	        value: function borrarnodo(id) {

	            firebase.database().ref().child('documentos/' + this.props.docid + "/componente/" + this.props.idcomponente + "/extras/" + id).remove();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        this.state.nodos.map(function (item) {
	                            return React.createElement(
	                                'div',
	                                { key: item.id, className: 'nodos' },
	                                React.createElement(_materialUiTextField2['default'], { hintText: 'Texto', fullWidth: true, multiLine: true }),
	                                React.createElement(
	                                    _materialUiIconButton2['default'],
	                                    { style: iconbutton, onClick: function () {
	                                            return _this2.borrarnodo(item.id);
	                                        }, iconStyle: styles.mediumIcon, tooltip: 'Borrar Campo' },
	                                    React.createElement(_materialUiSvgIconsActionDelete2['default'], null)
	                                )
	                            );
	                        })
	                    )
	                )
	            );
	        }
	    }]);

	    return MostrarExtras;
	})(React.Component);

	exports['default'] = MostrarExtras;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "mostrarextras.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/* PAGINA PARA EDITAR LOS DOCUMENTOS TIPO TABLA */
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var _materialUiFlatButton = __webpack_require__(549);

	var _materialUiFlatButton2 = _interopRequireDefault(_materialUiFlatButton);

	var _materialUiRaisedButton = __webpack_require__(630);

	var _materialUiRaisedButton2 = _interopRequireDefault(_materialUiRaisedButton);

	var _configJsx = __webpack_require__(2);

	var _materialUiTabs = __webpack_require__(603);

	var _materialUiTable = __webpack_require__(612);

	/*global  localStorage */

	var React = __webpack_require__(241);

	var Navlog = __webpack_require__(559);
	var texttablas = {
	    width: '100%'
	};

	var botonguardar = {
	    margin: '3% 0 0% 3%'

	};

	var overflow = {
	    overflow: 'scroll'
	};

	var EditarTab = (function (_React$Component) {
	    _inherits(EditarTab, _React$Component);

	    function EditarTab() {
	        _classCallCheck(this, EditarTab);

	        _get(Object.getPrototypeOf(EditarTab.prototype), 'constructor', this).call(this);
	        this.state = {
	            admin: false,
	            numfilas: "",
	            numcolumnas: "",
	            matriz: [],
	            fila: [],
	            columna: [],
	            datos: [],
	            col: [],
	            rutatemp: localStorage.getItem('ruta'),
	            titulodocumento: localStorage.getItem('doctitulo'),
	            iddocumento: localStorage.getItem('iddocumento'),
	            nombreformato: localStorage.getItem('nombreformato'),
	            titulo: "titulo"
	        };
	        this.guardartabla = this.guardartabla.bind(this);
	    }

	    _createClass(EditarTab, [{
	        key: 'componentWillMount',
	        value: function componentWillMount() {
	            var padre = this;
	            firebase.auth().onAuthStateChanged(function (user) {

	                if (user) {

	                    firebase.database().ref().child('usuarios/' + user.uid).on('value', function (snapshot) {
	                        var messages = snapshot.val();

	                        if (messages.admin == 'true') {
	                            padre.setState({
	                                admin: 'true'
	                            });
	                        }
	                    });
	                } else {
	                    padre.props.history.push({ pathname: '/login' });
	                }
	            });

	            var messageRef = firebase.database().ref().child('documentos/' + padre.state.iddocumento);
	            messageRef.on('value', function (snapshot) {
	                var filas = snapshot.val().filas;
	                var columnas = snapshot.val().columnas;
	                var data = snapshot.val().datos;
	                var nuevamatriz = data.slice(1);
	                var filatemporal = [];
	                var columnatemporal = [];
	                console.log(nuevamatriz);
	                for (var i = 0; i < filas; i++) {
	                    filatemporal.push({
	                        id: i
	                    });
	                }

	                for (var j = 0; j < columnas; j++) {
	                    columnatemporal.push({
	                        id: j
	                    });
	                }

	                padre.setState({
	                    numfilas: filas,
	                    numcolumnas: columnas,
	                    fila: filatemporal,
	                    columna: columnatemporal,
	                    col: data[0],
	                    datos: nuevamatriz

	                });
	            });
	        }
	    }, {
	        key: 'guardartabla',
	        value: function guardartabla() {

	            var matriz = new Array();

	            for (var j = 0; j < this.state.numcolumnas; j++) {
	                matriz[j] = new Array();
	                var texto = document.getElementById("titulo" + j).value;
	                matriz[0][j] = texto;
	            }

	            for (var i = 0; i < this.state.numfilas; i++) {

	                for (var j = 0; j < this.state.numcolumnas; j++) {

	                    var texto = document.getElementById(i + ',' + j).value;
	                    matriz[i + 1][j] = texto;
	                }
	            }

	            (0, _configJsx.guardarmatrizdatos)(matriz, this.state.iddocumento);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this = this;

	            return React.createElement(
	                'div',
	                null,
	                React.createElement(
	                    _materialUiStylesMuiThemeProvider2['default'],
	                    null,
	                    React.createElement(
	                        'div',
	                        null,
	                        React.createElement(Navlog, { history: this.props.history, admin: this.state.admin }),
	                        React.createElement(
	                            _materialUiTabs.Tabs,
	                            null,
	                            React.createElement(
	                                _materialUiTabs.Tab,
	                                { label: 'Ver Documento' },
	                                React.createElement(
	                                    'div',
	                                    { className: 'documentotitulover' },
	                                    React.createElement(
	                                        'h1',
	                                        null,
	                                        'Titulo: ',
	                                        this.state.titulodocumento
	                                    ),
	                                    React.createElement(
	                                        'h4',
	                                        null,
	                                        'Formato: ',
	                                        this.state.nombreformato,
	                                        ' - Tabla'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'tabla' },
	                                    React.createElement(
	                                        _materialUiTable.Table,
	                                        { style: overflow },
	                                        React.createElement(
	                                            _materialUiTable.TableHeader,
	                                            { adjustForCheckbox: false, displaySelectAll: false },
	                                            React.createElement(
	                                                _materialUiTable.TableRow,
	                                                null,
	                                                React.createElement(
	                                                    _materialUiTable.TableHeaderColumn,
	                                                    { colSpan: '3', tooltip: 'Usuarios', style: { textAlign: 'center' } },
	                                                    this.state.titulodocumento
	                                                )
	                                            ),
	                                            React.createElement(
	                                                _materialUiTable.TableRow,
	                                                null,
	                                                this.state.col.map(function (item, index, objeto) {
	                                                    console.log(item);
	                                                    return React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        { key: item.id },
	                                                        ' ',
	                                                        item,
	                                                        '  '
	                                                    );
	                                                })
	                                            )
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableBody,
	                                            { displayRowCheckbox: false, stripedRows: true, showRowHover: true },
	                                            this.state.datos.map(function (item, i, objeto) {
	                                                console.log(item);
	                                                return React.createElement(
	                                                    _materialUiTable.TableRow,
	                                                    { key: item.id },
	                                                    item.map(function (col, j, objeto) {
	                                                        console.log(col);
	                                                        return React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            { key: col.id },
	                                                            ' ',
	                                                            col,
	                                                            ' '
	                                                        );
	                                                    })
	                                                );
	                                            })
	                                        )
	                                    )
	                                )
	                            ),
	                            React.createElement(
	                                _materialUiTabs.Tab,
	                                { label: 'Editar Documento' },
	                                React.createElement(_materialUiRaisedButton2['default'], { label: 'Guardar', secondary: true, style: botonguardar, onClick: this.guardartabla }),
	                                React.createElement(
	                                    'div',
	                                    { className: 'documentotitulo' },
	                                    React.createElement(
	                                        'h1',
	                                        null,
	                                        'Titulo: ',
	                                        this.state.titulodocumento
	                                    ),
	                                    React.createElement(
	                                        'h4',
	                                        null,
	                                        'Formato: ',
	                                        this.state.nombreformato,
	                                        ' - Tabla'
	                                    )
	                                ),
	                                React.createElement(
	                                    'div',
	                                    { className: 'tabla' },
	                                    React.createElement(
	                                        _materialUiTable.Table,
	                                        { style: overflow },
	                                        React.createElement(
	                                            _materialUiTable.TableHeader,
	                                            { adjustForCheckbox: false, displaySelectAll: false },
	                                            React.createElement(
	                                                _materialUiTable.TableRow,
	                                                null,
	                                                this.state.columna.map(function (item) {
	                                                    return React.createElement(
	                                                        _materialUiTable.TableHeaderColumn,
	                                                        { key: item.id },
	                                                        ' ',
	                                                        React.createElement(_materialUiTextField2['default'], { underlineShow: false, hintText: 'Titulo', id: "titulo" + item.id }),
	                                                        ' '
	                                                    );
	                                                })
	                                            )
	                                        ),
	                                        React.createElement(
	                                            _materialUiTable.TableBody,
	                                            { displayRowCheckbox: false },
	                                            this.state.fila.map(function (item, index, objeto) {

	                                                return React.createElement(
	                                                    _materialUiTable.TableRow,
	                                                    { key: item.id },
	                                                    _this.state.columna.map(function (col) {
	                                                        return React.createElement(
	                                                            _materialUiTable.TableRowColumn,
	                                                            { key: col.id },
	                                                            ' ',
	                                                            React.createElement(_materialUiTextField2['default'], { underlineShow: false, hintText: 'Texto', id: item.id + "," + col.id, style: texttablas }),
	                                                            ' '
	                                                        );
	                                                    })
	                                                );
	                                            })
	                                        )
	                                    )
	                                )
	                            )
	                        )
	                    )
	                )
	            );
	        }
	    }]);

	    return EditarTab;
	})(React.Component);

	exports['default'] = EditarTab;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "editartabla.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.withRouter = exports.matchPath = exports.Switch = exports.StaticRouter = exports.Router = exports.Route = exports.Redirect = exports.Prompt = exports.NavLink = exports.MemoryRouter = exports.Link = exports.HashRouter = exports.BrowserRouter = undefined;

	var _BrowserRouter2 = __webpack_require__(640);

	var _BrowserRouter3 = _interopRequireDefault(_BrowserRouter2);

	var _HashRouter2 = __webpack_require__(651);

	var _HashRouter3 = _interopRequireDefault(_HashRouter2);

	var _Link2 = __webpack_require__(653);

	var _Link3 = _interopRequireDefault(_Link2);

	var _MemoryRouter2 = __webpack_require__(654);

	var _MemoryRouter3 = _interopRequireDefault(_MemoryRouter2);

	var _NavLink2 = __webpack_require__(657);

	var _NavLink3 = _interopRequireDefault(_NavLink2);

	var _Prompt2 = __webpack_require__(663);

	var _Prompt3 = _interopRequireDefault(_Prompt2);

	var _Redirect2 = __webpack_require__(665);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(658);

	var _Route3 = _interopRequireDefault(_Route2);

	var _Router2 = __webpack_require__(649);

	var _Router3 = _interopRequireDefault(_Router2);

	var _StaticRouter2 = __webpack_require__(668);

	var _StaticRouter3 = _interopRequireDefault(_StaticRouter2);

	var _Switch2 = __webpack_require__(670);

	var _Switch3 = _interopRequireDefault(_Switch2);

	var _matchPath2 = __webpack_require__(672);

	var _matchPath3 = _interopRequireDefault(_matchPath2);

	var _withRouter2 = __webpack_require__(673);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.BrowserRouter = _BrowserRouter3.default;
	exports.HashRouter = _HashRouter3.default;
	exports.Link = _Link3.default;
	exports.MemoryRouter = _MemoryRouter3.default;
	exports.NavLink = _NavLink3.default;
	exports.Prompt = _Prompt3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;
	exports.Router = _Router3.default;
	exports.StaticRouter = _StaticRouter3.default;
	exports.Switch = _Switch3.default;
	exports.matchPath = _matchPath3.default;
	exports.withRouter = _withRouter3.default;

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createBrowserHistory = __webpack_require__(641);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	var _Router = __webpack_require__(649);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses HTML5 history.
	 */
	var BrowserRouter = function (_React$Component) {
	  _inherits(BrowserRouter, _React$Component);

	  function BrowserRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, BrowserRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createBrowserHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  BrowserRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<BrowserRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { BrowserRouter as Router }`.');
	  };

	  BrowserRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return BrowserRouter;
	}(_react2.default.Component);

	BrowserRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  forceRefresh: _propTypes2.default.bool,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = BrowserRouter;

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(643);

	var _PathUtils = __webpack_require__(646);

	var _createTransitionManager = __webpack_require__(647);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(648);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var PopStateEvent = 'popstate';
	var HashChangeEvent = 'hashchange';

	var getHistoryState = function getHistoryState() {
	  try {
	    return window.history.state || {};
	  } catch (e) {
	    // IE 11 sometimes throws when accessing window.history.state
	    // See https://github.com/ReactTraining/history/pull/289
	    return {};
	  }
	};

	/**
	 * Creates a history object that uses the HTML5 history API including
	 * pushState, replaceState, and the popstate event.
	 */
	var createBrowserHistory = function createBrowserHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Browser history needs a DOM');

	  var globalHistory = window.history;
	  var canUseHistory = (0, _DOMUtils.supportsHistory)();
	  var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();

	  var _props$forceRefresh = props.forceRefresh,
	      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,
	      _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var getDOMLocation = function getDOMLocation(historyState) {
	    var _ref = historyState || {},
	        key = _ref.key,
	        state = _ref.state;

	    var _window$location = window.location,
	        pathname = _window$location.pathname,
	        search = _window$location.search,
	        hash = _window$location.hash;


	    var path = pathname + search + hash;

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path, state, key);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var handlePopState = function handlePopState(event) {
	    // Ignore extraneous popstate events in WebKit.
	    if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;

	    handlePop(getDOMLocation(event.state));
	  };

	  var handleHashChange = function handleHashChange() {
	    handlePop(getDOMLocation(getHistoryState()));
	  };

	  var forceNextPop = false;

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of keys we've seen in sessionStorage.
	    // Instead, we just default to 0 for keys we don't know.

	    var toIndex = allKeys.indexOf(toLocation.key);

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allKeys.indexOf(fromLocation.key);

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  var initialLocation = getDOMLocation(getHistoryState());
	  var allKeys = [initialLocation.key];

	  // Public interface

	  var createHref = function createHref(location) {
	    return basename + (0, _PathUtils.createPath)(location);
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.pushState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.href = href;
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);
	          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	          nextKeys.push(location.key);
	          allKeys = nextKeys;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');

	        window.location.href = href;
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var href = createHref(location);
	      var key = location.key,
	          state = location.state;


	      if (canUseHistory) {
	        globalHistory.replaceState({ key: key, state: state }, null, href);

	        if (forceRefresh) {
	          window.location.replace(href);
	        } else {
	          var prevIndex = allKeys.indexOf(history.location.key);

	          if (prevIndex !== -1) allKeys[prevIndex] = location.key;

	          setState({ action: action, location: location });
	        }
	      } else {
	        (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');

	        window.location.replace(href);
	      }
	    });
	  };

	  var go = function go(n) {
	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);

	      if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createBrowserHistory;

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.locationsAreEqual = exports.createLocation = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _resolvePathname = __webpack_require__(644);

	var _resolvePathname2 = _interopRequireDefault(_resolvePathname);

	var _valueEqual = __webpack_require__(645);

	var _valueEqual2 = _interopRequireDefault(_valueEqual);

	var _PathUtils = __webpack_require__(646);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
	  var location = void 0;
	  if (typeof path === 'string') {
	    // Two-arg form: push(path, state)
	    location = (0, _PathUtils.parsePath)(path);
	    location.state = state;
	  } else {
	    // One-arg form: push(location)
	    location = _extends({}, path);

	    if (location.pathname === undefined) location.pathname = '';

	    if (location.search) {
	      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
	    } else {
	      location.search = '';
	    }

	    if (location.hash) {
	      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
	    } else {
	      location.hash = '';
	    }

	    if (state !== undefined && location.state === undefined) location.state = state;
	  }

	  try {
	    location.pathname = decodeURI(location.pathname);
	  } catch (e) {
	    if (e instanceof URIError) {
	      throw new URIError('Pathname "' + location.pathname + '" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');
	    } else {
	      throw e;
	    }
	  }

	  if (key) location.key = key;

	  if (currentLocation) {
	    // Resolve incomplete/relative pathname relative to current location.
	    if (!location.pathname) {
	      location.pathname = currentLocation.pathname;
	    } else if (location.pathname.charAt(0) !== '/') {
	      location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
	    }
	  } else {
	    // When there is no prior location and pathname is empty, set it to /
	    if (!location.pathname) {
	      location.pathname = '/';
	    }
	  }

	  return location;
	};

	var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
	};

/***/ }),
/* 644 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	function isAbsolute(pathname) {
	  return pathname.charAt(0) === '/';
	}

	// About 1.5x faster than the two-arg version of Array#splice()
	function spliceOne(list, index) {
	  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
	    list[i] = list[k];
	  }

	  list.pop();
	}

	// This implementation is based heavily on node's url.parse
	function resolvePathname(to) {
	  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

	  var toParts = to && to.split('/') || [];
	  var fromParts = from && from.split('/') || [];

	  var isToAbs = to && isAbsolute(to);
	  var isFromAbs = from && isAbsolute(from);
	  var mustEndAbs = isToAbs || isFromAbs;

	  if (to && isAbsolute(to)) {
	    // to is absolute
	    fromParts = toParts;
	  } else if (toParts.length) {
	    // to is relative, drop the filename
	    fromParts.pop();
	    fromParts = fromParts.concat(toParts);
	  }

	  if (!fromParts.length) return '/';

	  var hasTrailingSlash = void 0;
	  if (fromParts.length) {
	    var last = fromParts[fromParts.length - 1];
	    hasTrailingSlash = last === '.' || last === '..' || last === '';
	  } else {
	    hasTrailingSlash = false;
	  }

	  var up = 0;
	  for (var i = fromParts.length; i >= 0; i--) {
	    var part = fromParts[i];

	    if (part === '.') {
	      spliceOne(fromParts, i);
	    } else if (part === '..') {
	      spliceOne(fromParts, i);
	      up++;
	    } else if (up) {
	      spliceOne(fromParts, i);
	      up--;
	    }
	  }

	  if (!mustEndAbs) for (; up--; up) {
	    fromParts.unshift('..');
	  }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

	  var result = fromParts.join('/');

	  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

	  return result;
	}

	exports.default = resolvePathname;
	module.exports = exports['default'];

/***/ }),
/* 645 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function valueEqual(a, b) {
	  if (a === b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return valueEqual(item, b[index]);
	    });
	  }

	  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
	  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

	  if (aType !== bType) return false;

	  if (aType === 'object') {
	    var aValue = a.valueOf();
	    var bValue = b.valueOf();

	    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

	    var aKeys = Object.keys(a);
	    var bKeys = Object.keys(b);

	    if (aKeys.length !== bKeys.length) return false;

	    return aKeys.every(function (key) {
	      return valueEqual(a[key], b[key]);
	    });
	  }

	  return false;
	}

	exports.default = valueEqual;
	module.exports = exports['default'];

/***/ }),
/* 646 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path : '/' + path;
	};

	var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
	  return path.charAt(0) === '/' ? path.substr(1) : path;
	};

	var hasBasename = exports.hasBasename = function hasBasename(path, prefix) {
	  return new RegExp('^' + prefix + '(\\/|\\?|#|$)', 'i').test(path);
	};

	var stripBasename = exports.stripBasename = function stripBasename(path, prefix) {
	  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;
	};

	var stripTrailingSlash = exports.stripTrailingSlash = function stripTrailingSlash(path) {
	  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;
	};

	var parsePath = exports.parsePath = function parsePath(path) {
	  var pathname = path || '/';
	  var search = '';
	  var hash = '';

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substr(hashIndex);
	    pathname = pathname.substr(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substr(searchIndex);
	    pathname = pathname.substr(0, searchIndex);
	  }

	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var createPath = exports.createPath = function createPath(location) {
	  var pathname = location.pathname,
	      search = location.search,
	      hash = location.hash;


	  var path = pathname || '/';

	  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;

	  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;

	  return path;
	};

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createTransitionManager = function createTransitionManager() {
	  var prompt = null;

	  var setPrompt = function setPrompt(nextPrompt) {
	    (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time');

	    prompt = nextPrompt;

	    return function () {
	      if (prompt === nextPrompt) prompt = null;
	    };
	  };

	  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
	    // TODO: If another transition starts while we're still confirming
	    // the previous one, we may end up in a weird state. Figure out the
	    // best way to handle this.
	    if (prompt != null) {
	      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

	      if (typeof result === 'string') {
	        if (typeof getUserConfirmation === 'function') {
	          getUserConfirmation(result, callback);
	        } else {
	          (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message');

	          callback(true);
	        }
	      } else {
	        // Return false from a transition hook to cancel the transition.
	        callback(result !== false);
	      }
	    } else {
	      callback(true);
	    }
	  };

	  var listeners = [];

	  var appendListener = function appendListener(fn) {
	    var isActive = true;

	    var listener = function listener() {
	      if (isActive) fn.apply(undefined, arguments);
	    };

	    listeners.push(listener);

	    return function () {
	      isActive = false;
	      listeners = listeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  };

	  var notifyListeners = function notifyListeners() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    listeners.forEach(function (listener) {
	      return listener.apply(undefined, args);
	    });
	  };

	  return {
	    setPrompt: setPrompt,
	    confirmTransitionTo: confirmTransitionTo,
	    appendListener: appendListener,
	    notifyListeners: notifyListeners
	  };
	};

	exports.default = createTransitionManager;

/***/ }),
/* 648 */
/***/ (function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
	  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
	};

	var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
	  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
	};

	var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
	  return callback(window.confirm(message));
	}; // eslint-disable-line no-alert

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
	 */
	var supportsHistory = exports.supportsHistory = function supportsHistory() {
	  var ua = window.navigator.userAgent;

	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

	  return window.history && 'pushState' in window.history;
	};

	/**
	 * Returns true if browser fires popstate on hash change.
	 * IE10 and IE11 do not.
	 */
	var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
	  return window.navigator.userAgent.indexOf('Trident') === -1;
	};

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */
	var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
	  return window.navigator.userAgent.indexOf('Firefox') === -1;
	};

	/**
	 * Returns true if a given popstate event is an extraneous WebKit event.
	 * Accounts for the fact that Chrome on iOS fires real popstate events
	 * containing undefined state when pressing the back button.
	 */
	var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
	  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
	};

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Router = __webpack_require__(650);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Router2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for putting history on context.
	 */
	var Router = function (_React$Component) {
	  _inherits(Router, _React$Component);

	  function Router() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Router);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props.history.location.pathname)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Router.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        history: this.props.history,
	        route: {
	          location: this.props.history.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Router.prototype.computeMatch = function computeMatch(pathname) {
	    return {
	      path: '/',
	      url: '/',
	      params: {},
	      isExact: pathname === '/'
	    };
	  };

	  Router.prototype.componentWillMount = function componentWillMount() {
	    var _this2 = this;

	    var _props = this.props,
	        children = _props.children,
	        history = _props.history;


	    (0, _invariant2.default)(children == null || _react2.default.Children.count(children) === 1, 'A <Router> may have only one child element');

	    // Do this here so we can setState when a <Redirect> changes the
	    // location in componentWillMount. This happens e.g. when doing
	    // server rendering using a <StaticRouter>.
	    this.unlisten = history.listen(function () {
	      _this2.setState({
	        match: _this2.computeMatch(history.location.pathname)
	      });
	    });
	  };

	  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(this.props.history === nextProps.history, 'You cannot change <Router history>');
	  };

	  Router.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.unlisten();
	  };

	  Router.prototype.render = function render() {
	    var children = this.props.children;

	    return children ? _react2.default.Children.only(children) : null;
	  };

	  return Router;
	}(_react2.default.Component);

	Router.propTypes = {
	  history: _propTypes2.default.object.isRequired,
	  children: _propTypes2.default.node
	};
	Router.contextTypes = {
	  router: _propTypes2.default.object
	};
	Router.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Router;

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createHashHistory = __webpack_require__(652);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _Router = __webpack_require__(649);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that uses window.location.hash.
	 */
	var HashRouter = function (_React$Component) {
	  _inherits(HashRouter, _React$Component);

	  function HashRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, HashRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createHashHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  HashRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<HashRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { HashRouter as Router }`.');
	  };

	  HashRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return HashRouter;
	}(_react2.default.Component);

	HashRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  getUserConfirmation: _propTypes2.default.func,
	  hashType: _propTypes2.default.oneOf(['hashbang', 'noslash', 'slash']),
	  children: _propTypes2.default.node
	};
	exports.default = HashRouter;

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _LocationUtils = __webpack_require__(643);

	var _PathUtils = __webpack_require__(646);

	var _createTransitionManager = __webpack_require__(647);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _DOMUtils = __webpack_require__(648);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var HashChangeEvent = 'hashchange';

	var HashPathCoders = {
	  hashbang: {
	    encodePath: function encodePath(path) {
	      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);
	    },
	    decodePath: function decodePath(path) {
	      return path.charAt(0) === '!' ? path.substr(1) : path;
	    }
	  },
	  noslash: {
	    encodePath: _PathUtils.stripLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  },
	  slash: {
	    encodePath: _PathUtils.addLeadingSlash,
	    decodePath: _PathUtils.addLeadingSlash
	  }
	};

	var getHashPath = function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  var href = window.location.href;
	  var hashIndex = href.indexOf('#');
	  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);
	};

	var pushHashPath = function pushHashPath(path) {
	  return window.location.hash = path;
	};

	var replaceHashPath = function replaceHashPath(path) {
	  var hashIndex = window.location.href.indexOf('#');

	  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);
	};

	var createHashHistory = function createHashHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

	  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');

	  var globalHistory = window.history;
	  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();

	  var _props$getUserConfirm = props.getUserConfirmation,
	      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,
	      _props$hashType = props.hashType,
	      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;

	  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';

	  var _HashPathCoders$hashT = HashPathCoders[hashType],
	      encodePath = _HashPathCoders$hashT.encodePath,
	      decodePath = _HashPathCoders$hashT.decodePath;


	  var getDOMLocation = function getDOMLocation() {
	    var path = decodePath(getHashPath());

	    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path "' + path + '" to begin with "' + basename + '".');

	    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);

	    return (0, _LocationUtils.createLocation)(path);
	  };

	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = globalHistory.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var forceNextPop = false;
	  var ignorePath = null;

	  var handleHashChange = function handleHashChange() {
	    var path = getHashPath();
	    var encodedPath = encodePath(path);

	    if (path !== encodedPath) {
	      // Ensure we always have a properly-encoded hash.
	      replaceHashPath(encodedPath);
	    } else {
	      var location = getDOMLocation();
	      var prevLocation = history.location;

	      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.

	      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.

	      ignorePath = null;

	      handlePop(location);
	    }
	  };

	  var handlePop = function handlePop(location) {
	    if (forceNextPop) {
	      forceNextPop = false;
	      setState();
	    } else {
	      var action = 'POP';

	      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	        if (ok) {
	          setState({ action: action, location: location });
	        } else {
	          revertPop(location);
	        }
	      });
	    }
	  };

	  var revertPop = function revertPop(fromLocation) {
	    var toLocation = history.location;

	    // TODO: We could probably make this more reliable by
	    // keeping a list of paths we've seen in sessionStorage.
	    // Instead, we just default to 0 for paths we don't know.

	    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));

	    if (toIndex === -1) toIndex = 0;

	    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));

	    if (fromIndex === -1) fromIndex = 0;

	    var delta = toIndex - fromIndex;

	    if (delta) {
	      forceNextPop = true;
	      go(delta);
	    }
	  };

	  // Ensure the hash is encoded properly before doing anything else.
	  var path = getHashPath();
	  var encodedPath = encodePath(path);

	  if (path !== encodedPath) replaceHashPath(encodedPath);

	  var initialLocation = getDOMLocation();
	  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];

	  // Public interface

	  var createHref = function createHref(location) {
	    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));
	  };

	  var push = function push(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a PUSH, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        pushHashPath(encodedPath);

	        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));
	        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

	        nextPaths.push(path);
	        allPaths = nextPaths;

	        setState({ action: action, location: location });
	      } else {
	        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');

	        setState();
	      }
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var path = (0, _PathUtils.createPath)(location);
	      var encodedPath = encodePath(basename + path);
	      var hashChanged = getHashPath() !== encodedPath;

	      if (hashChanged) {
	        // We cannot tell if a hashchange was caused by a REPLACE, so we'd
	        // rather setState here and ignore the hashchange. The caveat here
	        // is that other hash histories in the page will consider it a POP.
	        ignorePath = path;
	        replaceHashPath(encodedPath);
	      }

	      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));

	      if (prevIndex !== -1) allPaths[prevIndex] = path;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');

	    globalHistory.go(n);
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var listenerCount = 0;

	  var checkDOMListeners = function checkDOMListeners(delta) {
	    listenerCount += delta;

	    if (listenerCount === 1) {
	      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
	    } else if (listenerCount === 0) {
	      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
	    }
	  };

	  var isBlocked = false;

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

	    var unblock = transitionManager.setPrompt(prompt);

	    if (!isBlocked) {
	      checkDOMListeners(1);
	      isBlocked = true;
	    }

	    return function () {
	      if (isBlocked) {
	        isBlocked = false;
	        checkDOMListeners(-1);
	      }

	      return unblock();
	    };
	  };

	  var listen = function listen(listener) {
	    var unlisten = transitionManager.appendListener(listener);
	    checkDOMListeners(1);

	    return function () {
	      checkDOMListeners(-1);
	      unlisten();
	    };
	  };

	  var history = {
	    length: globalHistory.length,
	    action: 'POP',
	    location: initialLocation,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createHashHistory;

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isModifiedEvent = function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	};

	/**
	 * The public API for rendering a history-aware <a>.
	 */

	var Link = function (_React$Component) {
	  _inherits(Link, _React$Component);

	  function Link() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Link);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {
	      if (_this.props.onClick) _this.props.onClick(event);

	      if (!event.defaultPrevented && // onClick prevented default
	      event.button === 0 && // ignore right clicks
	      !_this.props.target && // let browser handle "target=_blank" etc.
	      !isModifiedEvent(event) // ignore clicks with modifier keys
	      ) {
	          event.preventDefault();

	          var history = _this.context.router.history;
	          var _this$props = _this.props,
	              replace = _this$props.replace,
	              to = _this$props.to;


	          if (replace) {
	            history.replace(to);
	          } else {
	            history.push(to);
	          }
	        }
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Link.prototype.render = function render() {
	    var _props = this.props,
	        replace = _props.replace,
	        to = _props.to,
	        innerRef = _props.innerRef,
	        props = _objectWithoutProperties(_props, ['replace', 'to', 'innerRef']); // eslint-disable-line no-unused-vars

	    (0, _invariant2.default)(this.context.router, 'You should not use <Link> outside a <Router>');

	    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);

	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));
	  };

	  return Link;
	}(_react2.default.Component);

	Link.propTypes = {
	  onClick: _propTypes2.default.func,
	  target: _propTypes2.default.string,
	  replace: _propTypes2.default.bool,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,
	  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func])
	};
	Link.defaultProps = {
	  replace: false
	};
	Link.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired,
	      createHref: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Link;

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _MemoryRouter = __webpack_require__(655);

	var _MemoryRouter2 = _interopRequireDefault(_MemoryRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _MemoryRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _createMemoryHistory = __webpack_require__(656);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _Router = __webpack_require__(650);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for a <Router> that stores location in memory.
	 */
	var MemoryRouter = function (_React$Component) {
	  _inherits(MemoryRouter, _React$Component);

	  function MemoryRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, MemoryRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = (0, _createMemoryHistory2.default)(_this.props), _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  MemoryRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<MemoryRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { MemoryRouter as Router }`.');
	  };

	  MemoryRouter.prototype.render = function render() {
	    return _react2.default.createElement(_Router2.default, { history: this.history, children: this.props.children });
	  };

	  return MemoryRouter;
	}(_react2.default.Component);

	MemoryRouter.propTypes = {
	  initialEntries: _propTypes2.default.array,
	  initialIndex: _propTypes2.default.number,
	  getUserConfirmation: _propTypes2.default.func,
	  keyLength: _propTypes2.default.number,
	  children: _propTypes2.default.node
	};
	exports.default = MemoryRouter;

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _PathUtils = __webpack_require__(646);

	var _LocationUtils = __webpack_require__(643);

	var _createTransitionManager = __webpack_require__(647);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var clamp = function clamp(n, lowerBound, upperBound) {
	  return Math.min(Math.max(n, lowerBound), upperBound);
	};

	/**
	 * Creates a history object that stores locations in memory.
	 */
	var createMemoryHistory = function createMemoryHistory() {
	  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	  var getUserConfirmation = props.getUserConfirmation,
	      _props$initialEntries = props.initialEntries,
	      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,
	      _props$initialIndex = props.initialIndex,
	      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,
	      _props$keyLength = props.keyLength,
	      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;


	  var transitionManager = (0, _createTransitionManager2.default)();

	  var setState = function setState(nextState) {
	    _extends(history, nextState);

	    history.length = history.entries.length;

	    transitionManager.notifyListeners(history.location, history.action);
	  };

	  var createKey = function createKey() {
	    return Math.random().toString(36).substr(2, keyLength);
	  };

	  var index = clamp(initialIndex, 0, initialEntries.length - 1);
	  var entries = initialEntries.map(function (entry) {
	    return typeof entry === 'string' ? (0, _LocationUtils.createLocation)(entry, undefined, createKey()) : (0, _LocationUtils.createLocation)(entry, undefined, entry.key || createKey());
	  });

	  // Public interface

	  var createHref = _PathUtils.createPath;

	  var push = function push(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'PUSH';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      var prevIndex = history.index;
	      var nextIndex = prevIndex + 1;

	      var nextEntries = history.entries.slice(0);
	      if (nextEntries.length > nextIndex) {
	        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);
	      } else {
	        nextEntries.push(location);
	      }

	      setState({
	        action: action,
	        location: location,
	        index: nextIndex,
	        entries: nextEntries
	      });
	    });
	  };

	  var replace = function replace(path, state) {
	    (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');

	    var action = 'REPLACE';
	    var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (!ok) return;

	      history.entries[history.index] = location;

	      setState({ action: action, location: location });
	    });
	  };

	  var go = function go(n) {
	    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);

	    var action = 'POP';
	    var location = history.entries[nextIndex];

	    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
	      if (ok) {
	        setState({
	          action: action,
	          location: location,
	          index: nextIndex
	        });
	      } else {
	        // Mimic the behavior of DOM histories by
	        // causing a render after a cancelled POP.
	        setState();
	      }
	    });
	  };

	  var goBack = function goBack() {
	    return go(-1);
	  };

	  var goForward = function goForward() {
	    return go(1);
	  };

	  var canGo = function canGo(n) {
	    var nextIndex = history.index + n;
	    return nextIndex >= 0 && nextIndex < history.entries.length;
	  };

	  var block = function block() {
	    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
	    return transitionManager.setPrompt(prompt);
	  };

	  var listen = function listen(listener) {
	    return transitionManager.appendListener(listener);
	  };

	  var history = {
	    length: entries.length,
	    action: 'POP',
	    location: entries[index],
	    index: index,
	    entries: entries,
	    createHref: createHref,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    canGo: canGo,
	    block: block,
	    listen: listen
	  };

	  return history;
	};

	exports.default = createMemoryHistory;

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _Route = __webpack_require__(658);

	var _Route2 = _interopRequireDefault(_Route);

	var _Link = __webpack_require__(653);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A <Link> wrapper that knows if it's "active" or not.
	 */
	var NavLink = function NavLink(_ref) {
	  var to = _ref.to,
	      exact = _ref.exact,
	      strict = _ref.strict,
	      location = _ref.location,
	      activeClassName = _ref.activeClassName,
	      className = _ref.className,
	      activeStyle = _ref.activeStyle,
	      style = _ref.style,
	      getIsActive = _ref.isActive,
	      ariaCurrent = _ref.ariaCurrent,
	      rest = _objectWithoutProperties(_ref, ['to', 'exact', 'strict', 'location', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive', 'ariaCurrent']);

	  return _react2.default.createElement(_Route2.default, {
	    path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,
	    exact: exact,
	    strict: strict,
	    location: location,
	    children: function children(_ref2) {
	      var location = _ref2.location,
	          match = _ref2.match;

	      var isActive = !!(getIsActive ? getIsActive(match, location) : match);

	      return _react2.default.createElement(_Link2.default, _extends({
	        to: to,
	        className: isActive ? [className, activeClassName].filter(function (i) {
	          return i;
	        }).join(' ') : className,
	        style: isActive ? _extends({}, style, activeStyle) : style,
	        'aria-current': isActive && ariaCurrent
	      }, rest));
	    }
	  });
	};

	NavLink.propTypes = {
	  to: _Link2.default.propTypes.to,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  location: _propTypes2.default.object,
	  activeClassName: _propTypes2.default.string,
	  className: _propTypes2.default.string,
	  activeStyle: _propTypes2.default.object,
	  style: _propTypes2.default.object,
	  isActive: _propTypes2.default.func,
	  ariaCurrent: _propTypes2.default.oneOf(['page', 'step', 'location', 'true'])
	};

	NavLink.defaultProps = {
	  activeClassName: 'active',
	  ariaCurrent: 'true'
	};

	exports.default = NavLink;

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Route = __webpack_require__(659);

	var _Route2 = _interopRequireDefault(_Route);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Route2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _matchPath = __webpack_require__(660);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var isEmptyChildren = function isEmptyChildren(children) {
	  return _react2.default.Children.count(children) === 0;
	};

	/**
	 * The public API for matching a single path and rendering.
	 */

	var Route = function (_React$Component) {
	  _inherits(Route, _React$Component);

	  function Route() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, Route);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {
	      match: _this.computeMatch(_this.props, _this.context.router)
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  Route.prototype.getChildContext = function getChildContext() {
	    return {
	      router: _extends({}, this.context.router, {
	        route: {
	          location: this.props.location || this.context.router.route.location,
	          match: this.state.match
	        }
	      })
	    };
	  };

	  Route.prototype.computeMatch = function computeMatch(_ref, router) {
	    var computedMatch = _ref.computedMatch,
	        location = _ref.location,
	        path = _ref.path,
	        strict = _ref.strict,
	        exact = _ref.exact,
	        sensitive = _ref.sensitive;

	    if (computedMatch) return computedMatch; // <Switch> already computed the match for us

	    (0, _invariant2.default)(router, 'You should not use <Route> or withRouter() outside a <Router>');

	    var route = router.route;

	    var pathname = (location || route.location).pathname;

	    return path ? (0, _matchPath2.default)(pathname, { path: path, strict: strict, exact: exact, sensitive: sensitive }) : route.match;
	  };

	  Route.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!(this.props.component && this.props.render), 'You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored');

	    (0, _warning2.default)(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored');

	    (0, _warning2.default)(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), 'You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored');
	  };

	  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');

	    this.setState({
	      match: this.computeMatch(nextProps, nextContext.router)
	    });
	  };

	  Route.prototype.render = function render() {
	    var match = this.state.match;
	    var _props = this.props,
	        children = _props.children,
	        component = _props.component,
	        render = _props.render;
	    var _context$router = this.context.router,
	        history = _context$router.history,
	        route = _context$router.route,
	        staticContext = _context$router.staticContext;

	    var location = this.props.location || route.location;
	    var props = { match: match, location: location, history: history, staticContext: staticContext };

	    return component ? // component prop gets first priority, only called if there's a match
	    match ? _react2.default.createElement(component, props) : null : render ? // render prop is next, only called if there's a match
	    match ? render(props) : null : children ? // children come last, always called
	    typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? _react2.default.Children.only(children) : null : null;
	  };

	  return Route;
	}(_react2.default.Component);

	Route.propTypes = {
	  computedMatch: _propTypes2.default.object, // private, from <Switch>
	  path: _propTypes2.default.string,
	  exact: _propTypes2.default.bool,
	  strict: _propTypes2.default.bool,
	  sensitive: _propTypes2.default.bool,
	  component: _propTypes2.default.func,
	  render: _propTypes2.default.func,
	  children: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.node]),
	  location: _propTypes2.default.object
	};
	Route.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.object.isRequired,
	    route: _propTypes2.default.object.isRequired,
	    staticContext: _propTypes2.default.object
	  })
	};
	Route.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = Route;

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _pathToRegexp = __webpack_require__(661);

	var _pathToRegexp2 = _interopRequireDefault(_pathToRegexp);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var patternCache = {};
	var cacheLimit = 10000;
	var cacheCount = 0;

	var compilePath = function compilePath(pattern, options) {
	  var cacheKey = '' + options.end + options.strict + options.sensitive;
	  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});

	  if (cache[pattern]) return cache[pattern];

	  var keys = [];
	  var re = (0, _pathToRegexp2.default)(pattern, keys, options);
	  var compiledPattern = { re: re, keys: keys };

	  if (cacheCount < cacheLimit) {
	    cache[pattern] = compiledPattern;
	    cacheCount++;
	  }

	  return compiledPattern;
	};

	/**
	 * Public API for matching a URL pathname to a path pattern.
	 */
	var matchPath = function matchPath(pathname) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

	  if (typeof options === 'string') options = { path: options };

	  var _options = options,
	      _options$path = _options.path,
	      path = _options$path === undefined ? '/' : _options$path,
	      _options$exact = _options.exact,
	      exact = _options$exact === undefined ? false : _options$exact,
	      _options$strict = _options.strict,
	      strict = _options$strict === undefined ? false : _options$strict,
	      _options$sensitive = _options.sensitive,
	      sensitive = _options$sensitive === undefined ? false : _options$sensitive;

	  var _compilePath = compilePath(path, { end: exact, strict: strict, sensitive: sensitive }),
	      re = _compilePath.re,
	      keys = _compilePath.keys;

	  var match = re.exec(pathname);

	  if (!match) return null;

	  var url = match[0],
	      values = match.slice(1);

	  var isExact = pathname === url;

	  if (exact && !isExact) return null;

	  return {
	    path: path, // the path pattern used to match
	    url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL
	    isExact: isExact, // whether or not we matched exactly
	    params: keys.reduce(function (memo, key, index) {
	      memo[key.name] = values[index];
	      return memo;
	    }, {})
	  };
	};

	exports.default = matchPath;

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(662)

	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp

	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')

	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {string}  str
	 * @param  {Object=} options
	 * @return {!Array}
	 */
	function parse (str, options) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var defaultDelimiter = options && options.delimiter || '/'
	  var res

	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length

	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }

	    var next = str[index]
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var modifier = res[6]
	    var asterisk = res[7]

	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }

	    var partial = prefix != null && next != null && next !== prefix
	    var repeat = modifier === '+' || modifier === '*'
	    var optional = modifier === '?' || modifier === '*'
	    var delimiter = res[2] || defaultDelimiter
	    var pattern = capture || group

	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      partial: partial,
	      asterisk: !!asterisk,
	      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
	    })
	  }

	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }

	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }

	  return tokens
	}

	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {string}             str
	 * @param  {Object=}            options
	 * @return {!function(Object=, Object=)}
	 */
	function compile (str, options) {
	  return tokensToFunction(parse(str, options))
	}

	/**
	 * Prettier encoding of URI path segments.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeURIComponentPretty (str) {
	  return encodeURI(str).replace(/[\/?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
	 *
	 * @param  {string}
	 * @return {string}
	 */
	function encodeAsterisk (str) {
	  return encodeURI(str).replace(/[?#]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)

	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
	    }
	  }

	  return function (obj, opts) {
	    var path = ''
	    var data = obj || {}
	    var options = opts || {}
	    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]

	      if (typeof token === 'string') {
	        path += token

	        continue
	      }

	      var value = data[token.name]
	      var segment

	      if (value == null) {
	        if (token.optional) {
	          // Prepend partial segment prefixes.
	          if (token.partial) {
	            path += token.prefix
	          }

	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }

	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
	        }

	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }

	        for (var j = 0; j < value.length; j++) {
	          segment = encode(value[j])

	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
	          }

	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }

	        continue
	      }

	      segment = token.asterisk ? encodeAsterisk(value) : encode(value)

	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }

	      path += token.prefix + segment
	    }

	    return path
	  }
	}

	/**
	 * Escape a regular expression string.
	 *
	 * @param  {string} str
	 * @return {string}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
	}

	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {string} group
	 * @return {string}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}

	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {!RegExp} re
	 * @param  {Array}   keys
	 * @return {!RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}

	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {string}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}

	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {!RegExp} path
	 * @param  {!Array}  keys
	 * @return {!RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)

	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        partial: false,
	        asterisk: false,
	        pattern: null
	      })
	    }
	  }

	  return attachKeys(path, keys)
	}

	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {!Array}  path
	 * @param  {Array}   keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []

	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }

	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

	  return attachKeys(regexp, keys)
	}

	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {string}  path
	 * @param  {!Array}  keys
	 * @param  {!Object} options
	 * @return {!RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  return tokensToRegExp(parse(path, options), keys, options)
	}

	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {!Array}          tokens
	 * @param  {(Array|Object)=} keys
	 * @param  {Object=}         options
	 * @return {!RegExp}
	 */
	function tokensToRegExp (tokens, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''

	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]

	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = '(?:' + token.pattern + ')'

	      keys.push(token)

	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }

	      if (token.optional) {
	        if (!token.partial) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = prefix + '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }

	      route += capture
	    }
	  }

	  var delimiter = escapeString(options.delimiter || '/')
	  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
	  }

	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
	  }

	  return attachKeys(new RegExp('^' + route, flags(options)), keys)
	}

	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(string|RegExp|Array)} path
	 * @param  {(Array|Object)=}       keys
	 * @param  {Object=}               options
	 * @return {!RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  if (!isarray(keys)) {
	    options = /** @type {!Object} */ (keys || options)
	    keys = []
	  }

	  options = options || {}

	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, /** @type {!Array} */ (keys))
	  }

	  if (isarray(path)) {
	    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
	  }

	  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
	}


/***/ }),
/* 662 */
/***/ (function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Prompt = __webpack_require__(664);

	var _Prompt2 = _interopRequireDefault(_Prompt);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Prompt2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for prompting the user before navigating away
	 * from a screen with a component.
	 */
	var Prompt = function (_React$Component) {
	  _inherits(Prompt, _React$Component);

	  function Prompt() {
	    _classCallCheck(this, Prompt);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Prompt.prototype.enable = function enable(message) {
	    if (this.unblock) this.unblock();

	    this.unblock = this.context.router.history.block(message);
	  };

	  Prompt.prototype.disable = function disable() {
	    if (this.unblock) {
	      this.unblock();
	      this.unblock = null;
	    }
	  };

	  Prompt.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Prompt> outside a <Router>');

	    if (this.props.when) this.enable(this.props.message);
	  };

	  Prompt.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (nextProps.when) {
	      if (!this.props.when || this.props.message !== nextProps.message) this.enable(nextProps.message);
	    } else {
	      this.disable();
	    }
	  };

	  Prompt.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.disable();
	  };

	  Prompt.prototype.render = function render() {
	    return null;
	  };

	  return Prompt;
	}(_react2.default.Component);

	Prompt.propTypes = {
	  when: _propTypes2.default.bool,
	  message: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired
	};
	Prompt.defaultProps = {
	  when: true
	};
	Prompt.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      block: _propTypes2.default.func.isRequired
	    }).isRequired
	  }).isRequired
	};
	exports.default = Prompt;

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Redirect = __webpack_require__(666);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Redirect2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _history = __webpack_require__(667);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for updating the location programmatically
	 * with a component.
	 */
	var Redirect = function (_React$Component) {
	  _inherits(Redirect, _React$Component);

	  function Redirect() {
	    _classCallCheck(this, Redirect);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Redirect.prototype.isStatic = function isStatic() {
	    return this.context.router && this.context.router.staticContext;
	  };

	  Redirect.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Redirect> outside a <Router>');

	    if (this.isStatic()) this.perform();
	  };

	  Redirect.prototype.componentDidMount = function componentDidMount() {
	    if (!this.isStatic()) this.perform();
	  };

	  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var prevTo = (0, _history.createLocation)(prevProps.to);
	    var nextTo = (0, _history.createLocation)(this.props.to);

	    if ((0, _history.locationsAreEqual)(prevTo, nextTo)) {
	      (0, _warning2.default)(false, 'You tried to redirect to the same route you\'re currently on: ' + ('"' + nextTo.pathname + nextTo.search + '"'));
	      return;
	    }

	    this.perform();
	  };

	  Redirect.prototype.perform = function perform() {
	    var history = this.context.router.history;
	    var _props = this.props,
	        push = _props.push,
	        to = _props.to;


	    if (push) {
	      history.push(to);
	    } else {
	      history.replace(to);
	    }
	  };

	  Redirect.prototype.render = function render() {
	    return null;
	  };

	  return Redirect;
	}(_react2.default.Component);

	Redirect.propTypes = {
	  push: _propTypes2.default.bool,
	  from: _propTypes2.default.string,
	  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired
	};
	Redirect.defaultProps = {
	  push: false
	};
	Redirect.contextTypes = {
	  router: _propTypes2.default.shape({
	    history: _propTypes2.default.shape({
	      push: _propTypes2.default.func.isRequired,
	      replace: _propTypes2.default.func.isRequired
	    }).isRequired,
	    staticContext: _propTypes2.default.object
	  }).isRequired
	};
	exports.default = Redirect;

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createPath = exports.parsePath = exports.locationsAreEqual = exports.createLocation = exports.createMemoryHistory = exports.createHashHistory = exports.createBrowserHistory = undefined;

	var _LocationUtils = __webpack_require__(643);

	Object.defineProperty(exports, 'createLocation', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.createLocation;
	  }
	});
	Object.defineProperty(exports, 'locationsAreEqual', {
	  enumerable: true,
	  get: function get() {
	    return _LocationUtils.locationsAreEqual;
	  }
	});

	var _PathUtils = __webpack_require__(646);

	Object.defineProperty(exports, 'parsePath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.parsePath;
	  }
	});
	Object.defineProperty(exports, 'createPath', {
	  enumerable: true,
	  get: function get() {
	    return _PathUtils.createPath;
	  }
	});

	var _createBrowserHistory2 = __webpack_require__(641);

	var _createBrowserHistory3 = _interopRequireDefault(_createBrowserHistory2);

	var _createHashHistory2 = __webpack_require__(652);

	var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);

	var _createMemoryHistory2 = __webpack_require__(656);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.createBrowserHistory = _createBrowserHistory3.default;
	exports.createHashHistory = _createHashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _StaticRouter = __webpack_require__(669);

	var _StaticRouter2 = _interopRequireDefault(_StaticRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _StaticRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _PathUtils = __webpack_require__(646);

	var _Router = __webpack_require__(650);

	var _Router2 = _interopRequireDefault(_Router);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var normalizeLocation = function normalizeLocation(object) {
	  var _object$pathname = object.pathname,
	      pathname = _object$pathname === undefined ? '/' : _object$pathname,
	      _object$search = object.search,
	      search = _object$search === undefined ? '' : _object$search,
	      _object$hash = object.hash,
	      hash = _object$hash === undefined ? '' : _object$hash;


	  return {
	    pathname: pathname,
	    search: search === '?' ? '' : search,
	    hash: hash === '#' ? '' : hash
	  };
	};

	var addBasename = function addBasename(basename, location) {
	  if (!basename) return location;

	  return _extends({}, location, {
	    pathname: (0, _PathUtils.addLeadingSlash)(basename) + location.pathname
	  });
	};

	var stripBasename = function stripBasename(basename, location) {
	  if (!basename) return location;

	  var base = (0, _PathUtils.addLeadingSlash)(basename);

	  if (location.pathname.indexOf(base) !== 0) return location;

	  return _extends({}, location, {
	    pathname: location.pathname.substr(base.length)
	  });
	};

	var createLocation = function createLocation(location) {
	  return typeof location === 'string' ? (0, _PathUtils.parsePath)(location) : normalizeLocation(location);
	};

	var createURL = function createURL(location) {
	  return typeof location === 'string' ? location : (0, _PathUtils.createPath)(location);
	};

	var staticHandler = function staticHandler(methodName) {
	  return function () {
	    (0, _invariant2.default)(false, 'You cannot %s with <StaticRouter>', methodName);
	  };
	};

	var noop = function noop() {};

	/**
	 * The public top-level API for a "static" <Router>, so-called because it
	 * can't actually change the current location. Instead, it just records
	 * location changes in a context object. Useful mainly in testing and
	 * server-rendering scenarios.
	 */

	var StaticRouter = function (_React$Component) {
	  _inherits(StaticRouter, _React$Component);

	  function StaticRouter() {
	    var _temp, _this, _ret;

	    _classCallCheck(this, StaticRouter);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createHref = function (path) {
	      return (0, _PathUtils.addLeadingSlash)(_this.props.basename + createURL(path));
	    }, _this.handlePush = function (location) {
	      var _this$props = _this.props,
	          basename = _this$props.basename,
	          context = _this$props.context;

	      context.action = 'PUSH';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleReplace = function (location) {
	      var _this$props2 = _this.props,
	          basename = _this$props2.basename,
	          context = _this$props2.context;

	      context.action = 'REPLACE';
	      context.location = addBasename(basename, createLocation(location));
	      context.url = createURL(context.location);
	    }, _this.handleListen = function () {
	      return noop;
	    }, _this.handleBlock = function () {
	      return noop;
	    }, _temp), _possibleConstructorReturn(_this, _ret);
	  }

	  StaticRouter.prototype.getChildContext = function getChildContext() {
	    return {
	      router: {
	        staticContext: this.props.context
	      }
	    };
	  };

	  StaticRouter.prototype.componentWillMount = function componentWillMount() {
	    (0, _warning2.default)(!this.props.history, '<StaticRouter> ignores the history prop. To use a custom history, ' + 'use `import { Router }` instead of `import { StaticRouter as Router }`.');
	  };

	  StaticRouter.prototype.render = function render() {
	    var _props = this.props,
	        basename = _props.basename,
	        context = _props.context,
	        location = _props.location,
	        props = _objectWithoutProperties(_props, ['basename', 'context', 'location']);

	    var history = {
	      createHref: this.createHref,
	      action: 'POP',
	      location: stripBasename(basename, createLocation(location)),
	      push: this.handlePush,
	      replace: this.handleReplace,
	      go: staticHandler('go'),
	      goBack: staticHandler('goBack'),
	      goForward: staticHandler('goForward'),
	      listen: this.handleListen,
	      block: this.handleBlock
	    };

	    return _react2.default.createElement(_Router2.default, _extends({}, props, { history: history }));
	  };

	  return StaticRouter;
	}(_react2.default.Component);

	StaticRouter.propTypes = {
	  basename: _propTypes2.default.string,
	  context: _propTypes2.default.object.isRequired,
	  location: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object])
	};
	StaticRouter.defaultProps = {
	  basename: '',
	  location: '/'
	};
	StaticRouter.childContextTypes = {
	  router: _propTypes2.default.object.isRequired
	};
	exports.default = StaticRouter;

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _Switch = __webpack_require__(671);

	var _Switch2 = _interopRequireDefault(_Switch);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Switch2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _warning = __webpack_require__(292);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(642);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _matchPath = __webpack_require__(660);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The public API for rendering the first <Route> that matches.
	 */
	var Switch = function (_React$Component) {
	  _inherits(Switch, _React$Component);

	  function Switch() {
	    _classCallCheck(this, Switch);

	    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
	  }

	  Switch.prototype.componentWillMount = function componentWillMount() {
	    (0, _invariant2.default)(this.context.router, 'You should not use <Switch> outside a <Router>');
	  };

	  Switch.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    (0, _warning2.default)(!(nextProps.location && !this.props.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no "location" prop and then provided one on a subsequent render.');

	    (0, _warning2.default)(!(!nextProps.location && this.props.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a "location" prop initially but omitted it on a subsequent render.');
	  };

	  Switch.prototype.render = function render() {
	    var route = this.context.router.route;
	    var children = this.props.children;

	    var location = this.props.location || route.location;

	    var match = void 0,
	        child = void 0;
	    _react2.default.Children.forEach(children, function (element) {
	      if (!_react2.default.isValidElement(element)) return;

	      var _element$props = element.props,
	          pathProp = _element$props.path,
	          exact = _element$props.exact,
	          strict = _element$props.strict,
	          sensitive = _element$props.sensitive,
	          from = _element$props.from;

	      var path = pathProp || from;

	      if (match == null) {
	        child = element;
	        match = path ? (0, _matchPath2.default)(location.pathname, { path: path, exact: exact, strict: strict, sensitive: sensitive }) : route.match;
	      }
	    });

	    return match ? _react2.default.cloneElement(child, { location: location, computedMatch: match }) : null;
	  };

	  return Switch;
	}(_react2.default.Component);

	Switch.contextTypes = {
	  router: _propTypes2.default.shape({
	    route: _propTypes2.default.object.isRequired
	  }).isRequired
	};
	Switch.propTypes = {
	  children: _propTypes2.default.node,
	  location: _propTypes2.default.object
	};
	exports.default = Switch;

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _matchPath = __webpack_require__(660);

	var _matchPath2 = _interopRequireDefault(_matchPath);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _matchPath2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _withRouter = __webpack_require__(674);

	var _withRouter2 = _interopRequireDefault(_withRouter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _withRouter2.default; // Written in this round about way for babel-transform-imports

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(241);

	var _react2 = _interopRequireDefault(_react);

	var _propTypes = __webpack_require__(276);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _hoistNonReactStatics = __webpack_require__(675);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _Route = __webpack_require__(659);

	var _Route2 = _interopRequireDefault(_Route);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A public higher-order component to access the imperative API
	 */
	var withRouter = function withRouter(Component) {
	  var C = function C(props) {
	    var wrappedComponentRef = props.wrappedComponentRef,
	        remainingProps = _objectWithoutProperties(props, ['wrappedComponentRef']);

	    return _react2.default.createElement(_Route2.default, { render: function render(routeComponentProps) {
	        return _react2.default.createElement(Component, _extends({}, remainingProps, routeComponentProps, { ref: wrappedComponentRef }));
	      } });
	  };

	  C.displayName = 'withRouter(' + (Component.displayName || Component.name) + ')';
	  C.WrappedComponent = Component;
	  C.propTypes = {
	    wrappedComponentRef: _propTypes2.default.func
	  };

	  return (0, _hoistNonReactStatics2.default)(C, Component);
	};

	exports.default = withRouter;

/***/ }),
/* 675 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	  name: true,
	  length: true,
	  prototype: true,
	  caller: true,
	  callee: true,
	  arguments: true,
	  arity: true
	};

	var defineProperty = Object.defineProperty;
	var getOwnPropertyNames = Object.getOwnPropertyNames;
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
	var getPrototypeOf = Object.getPrototypeOf;
	var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components

	        if (objectPrototype) {
	            var inheritedComponent = getPrototypeOf(sourceComponent);
	            if (inheritedComponent && inheritedComponent !== objectPrototype) {
	                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
	            }
	        }

	        var keys = getOwnPropertyNames(sourceComponent);

	        if (getOwnPropertySymbols) {
	            keys = keys.concat(getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            var key = keys[i];
	            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
	                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
	                try { // Avoid failures from read-only properties
	                    defineProperty(targetComponent, key, descriptor);
	                } catch (e) {}
	            }
	        }

	        return targetComponent;
	    }

	    return targetComponent;
	};


/***/ }),
/* 676 */
/***/ (function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	/* REACT HOT LOADER */ if (false) { (function () { var ReactHotAPI = require("/home/ubuntu/workspace/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/home/ubuntu/workspace/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

	/*Componente para ver documento  seleccionado tipo documento*/
	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _materialUiStylesMuiThemeProvider = __webpack_require__(155);

	var _materialUiStylesMuiThemeProvider2 = _interopRequireDefault(_materialUiStylesMuiThemeProvider);

	var _firebase = __webpack_require__(3);

	var firebase = _interopRequireWildcard(_firebase);

	var _materialUiDivider = __webpack_require__(627);

	var _materialUiDivider2 = _interopRequireDefault(_materialUiDivider);

	var _materialUiPaper = __webpack_require__(503);

	var _materialUiPaper2 = _interopRequireDefault(_materialUiPaper);

	var _materialUiTextField = __webpack_require__(336);

	var _materialUiTextField2 = _interopRequireDefault(_materialUiTextField);

	var React = __webpack_require__(241);

	var paper = {
	  width: "100%"
	};

	var iconbutton = {
	  padding: 0
	};

	var styles = {
	  mediumIcon: {
	    width: 36,
	    height: 36
	  }
	};

	var VerDocumento = (function (_React$Component) {
	  _inherits(VerDocumento, _React$Component);

	  function VerDocumento(props) {
	    _classCallCheck(this, VerDocumento);

	    _get(Object.getPrototypeOf(VerDocumento.prototype), 'constructor', this).call(this, props);
	    this.state = {
	      listanodos: [],
	      listacomponentes: [],
	      listaextras: []
	    };
	  }

	  _createClass(VerDocumento, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this = this;

	      var padre = this;
	      var messageRef = firebase.database().ref().child('documentos/' + this.props.iddocumento + '/componente');
	      messageRef.on('value', function (snapshot) {
	        var messages = snapshot.val();

	        var _loop = function (message) {

	          padre.state.listacomponentes.push({
	            id: message,
	            dato: messages[message].dato,
	            dato1: messages[message].dato1
	          });
	          var pad = padre;
	          var ref = firebase.database().ref().child('documentos/' + _this.props.iddocumento + '/componente/' + message + '/nodo/');
	          ref.on('value', function (snapshot) {
	            var nodos = snapshot.val();
	            for (var cadanodo in nodos) {

	              pad.state.listanodos.push({
	                componente: message,
	                id: cadanodo,
	                dato: nodos[cadanodo].dato
	              });
	            }
	          });

	          var ref2 = firebase.database().ref().child('documentos/' + _this.props.iddocumento + '/componente/' + message + '/extras/');
	          ref2.on('value', function (snapshot) {
	            var extras = snapshot.val();
	            for (var cadaextra in extras) {

	              pad.state.listaextras.push({
	                componente: message,
	                id: cadaextra,
	                dato: extras[cadaextra].dato
	              });
	            }
	          });
	        };

	        for (var message in messages) {
	          _loop(message);
	        }
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      console.log(this.state.listacomponentes);
	      console.log(this.state.listanodos);
	      console.log(this.state.listaextras);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      return React.createElement(
	        'div',
	        null,
	        React.createElement(
	          _materialUiStylesMuiThemeProvider2['default'],
	          null,
	          React.createElement(
	            'div',
	            null,
	            this.state.listacomponentes.map(function (item) {
	              return React.createElement(
	                'div',
	                { className: 'papereditar', key: item.id },
	                React.createElement(
	                  _materialUiPaper2['default'],
	                  { zDepth: 2, style: paper },
	                  React.createElement(_materialUiTextField2['default'], { fullWidth: true, value: item.dato, inputStyle: { textAlign: 'center' }, id: 'titulo' + item.id }),
	                  React.createElement(_materialUiTextField2['default'], { fullWidth: true, value: item.dato1, id: item.id }),
	                  _this2.state.listanodos.map(function (nodos) {

	                    {
	                      if (item.id == nodos.componente) {
	                        return React.createElement(
	                          'div',
	                          { key: nodos.id },
	                          React.createElement(_materialUiTextField2['default'], { fullWidth: true, value: nodos.dato, id: nodos.id })
	                        );
	                      }
	                    }
	                  }),
	                  _this2.state.listaextras.map(function (extras) {

	                    {
	                      if (item.id == extras.componente) {
	                        return React.createElement(
	                          'div',
	                          { key: extras.id },
	                          React.createElement(_materialUiTextField2['default'], { fullWidth: true, value: extras.dato, id: extras.id })
	                        );
	                      }
	                    }
	                  }),
	                  React.createElement(_materialUiDivider2['default'], null)
	                )
	              );
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return VerDocumento;
	})(React.Component);

	exports['default'] = VerDocumento;
	module.exports = exports['default'];

	/* REACT HOT LOADER */ }).call(this); } finally { if (false) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/home/ubuntu/workspace/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "verdocumento.jsx" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }

/***/ })
/******/ ]);